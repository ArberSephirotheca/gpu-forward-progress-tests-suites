#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0))) : _GLF_FUZZED(-3.6)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.z = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))) && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true)))))))))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))) || false), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), ! (! ((! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))) || false), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false)), _GLF_IDENTITY(false, (false) && true) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(71.84), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), clamp(vec2(_GLF_FUZZED(71.84), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(71.84), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(mat4x3(vec2(_GLF_FUZZED(71.84), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))]) / 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_FUZZED(71.84), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], ((injectionSwitch)[1]) / 1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))) / 1)], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[0], 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0))), 1.0, 0.0, 1.0)), (float(mat4x2((injectionSwitch)[0], 0.0, 1.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), _GLF_IDENTITY(vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), _GLF_IDENTITY((vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)) * mat3(1.0), min((vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)) * mat3(1.0), (vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)) * mat3(1.0))))), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))) + tan(0.0))) / 1.0), 1.0, 0.0, 1.0))) * 1.0)), _GLF_FUZZED(-0.6)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3038.4263) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-791.327))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-71.38), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4166.5913)), bvec2(true, false))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(7.3, 18.65)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(7.3, 18.65)), vec2(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(vec2(7.3, 18.65)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3x4(mat3x4(mat3x4(_GLF_FUZZED(vec2(7.3, 18.65)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_FUZZED(vec2(7.3, 18.65)))) : injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) || false), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), tan(sin(vec2(0.0, 0.0))) + (_GLF_FUZZED(injectionSwitch))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))), 0, (0 << _GLF_IDENTITY(int(4), int(4)))), clamp(ivec3(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))), 0, (0 << _GLF_IDENTITY(int(4), int(4)))), ivec3(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, _GLF_IDENTITY((2) | 0, ((2) | 0) | ((2) | 0))))), _GLF_IDENTITY(0, 0 ^ (0)), (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(0, (0) ^ 0), (0 << _GLF_IDENTITY(int(4), int(4)))), (ivec3(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))), 0, (0 << _GLF_IDENTITY(int(4), int(4))))) << ivec3(0, 0, 0))))))])).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(133343u) : gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(133343u) : gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(133343u) : gl_WorkGroupID.x) / 1u))), 1u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(133343u) : gl_WorkGroupID.x)), 1u))), ((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(133343u) : gl_WorkGroupID.x)), 1u)))) / 1u) - 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 uint subgroup_base = GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.w;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) >> 0u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), int(ivec3((_GLF_IDENTITY(64, (64) | (64))), 0, 1)))) << 0, (((_GLF_IDENTITY(64, (64) | (64)))) << 0) ^ 0)))) << 0, ~ (~ ((_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), ((_GLF_IDENTITY(64, (64) | (64)))) << 0))) << 0)))), 2), max(atomicLoad(write_val, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) | (64)))), (true ? _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | (64)))) : _GLF_FUZZED(90709)))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | (64)))), (true ? _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | (64)))) : _GLF_FUZZED(90709)))))) << 0), 2), atomicLoad(write_val, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), min((64), (64))))))) << _GLF_IDENTITY(0, (0) - 0)), 2)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val) << 0u, ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val) << 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val), ~ (~ ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val), ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val)) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), ~ _GLF_IDENTITY((~ ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val))), 1u * (_GLF_IDENTITY((~ ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val))), ((~ ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val)))) - 0u)))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.p))) << 0u) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (0u | 0u) ^ (uint(2u))), uint(2u)), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), uint(uint(uint(_GLF_IDENTITY(uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))))) ^ (uint(2u))), uint(2u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), uint(uint(uint(_GLF_IDENTITY(uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))))) ^ (uint(2u))), uint(2u))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), uint(uint(uint(_GLF_IDENTITY(uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))))) ^ (uint(2u))), uint(2u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (0u | 0u) ^ (uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2u))))), uint(2u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((0u | 0u) ^ (uint(2u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((0u | 0u) ^ (uint(2u))))), uint(2u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (0u | 0u) ^ (uint(2u))), uint(2u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(_GLF_IDENTITY(~ (0u), (~ (0u)) + 0u), ~ (0u))))) | 0u) ^ (uint(2u))), uint(2u)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (0u | 0u) ^ (uint(2u))), uint(2u)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (0u | 0u) ^ (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) | (0u & 113561u)))), uint(2u))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(91.86))))))))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(91.86)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-343.908) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))))), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-343.908) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-343.908) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-343.908) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-343.908) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))))))))) : _GLF_FUZZED(3.5))), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.1, 90.47)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-484.014)))) + 0.0), 0.0)), tan(0.0)))), 0.0)).y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-122.346), _GLF_FUZZED(9.1)), bvec2(false, false))).y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec4(197.848, 8.3, 65.01, 7.4), min(vec4(197.848, 8.3, 65.01, 7.4), vec4(197.848, 8.3, 65.01, 7.4))) * mat2x4(7015.8104, 1163.6309, -7.6, 721.384, 486.163, -4.5, -3428.3198, 4.6), (false ? _GLF_FUZZED(vec2(22.44, -39.41)) : vec4(197.848, 8.3, 65.01, 7.4) * mat2x4(7015.8104, 1163.6309, -7.6, 721.384, 486.163, -4.5, -3428.3198, 4.6))))) : injectionSwitch)), sqrt(1.0), determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, max(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0)), (0.0) - 0.0))))), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED((4870.1160))), bool(false)))), (float(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-764.169))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-764.169))))), (float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-764.169)))))) - 0.0), 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), cos(0.0), sin(0.0))), mix(float(_GLF_FUZZED(7700.6335)), float(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-764.169))))), (float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-764.169)))))) - 0.0), 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), cos(0.0), sin(0.0)))), bool(true)))), float(_GLF_FUZZED((4870.1160))), bool(false))))) - _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0))))))), 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0))))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), injectionSwitch.y, injectionSwitch.y)) / 1.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9552.1890)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9552.1890)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9552.1890)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9552.1890)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9552.1890)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9552.1890)), float(injectionSwitch.y), bool(true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(refract(vec2(325.410, 6600.1320), vec2(0.2, 922.546), 5909.5116)))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), max(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), abs(0.0) + ((injectionSwitch.y))))) - 0.0, (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(862.386))))), injectionSwitch.y)) / 1.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) || false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-3.1)), bvec2(true, false))).y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)) || false) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), ! (! (true)))) && true))), false || (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))), true, false, true)))) && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) - vec2(0.0, 0.0))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1], 0.0 + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]))), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.0), 1.0 * (_GLF_FUZZED(7.0))), _GLF_IDENTITY(_GLF_FUZZED(-1.1), mix(float(_GLF_FUZZED(-1.1)), float(_GLF_FUZZED(-3779.9336)), bool(false)))), bvec2(false, false))).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))), clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(4.6, -6191.6499, -868.576)) : 1.0))))) / cos(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) - 0.0)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y))) - 0.0))), (false ? _GLF_FUZZED(198.242) : (clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(87.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(87.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(87.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y))), mix(float(_GLF_FUZZED(-2.6)), float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(87.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))), bool(true)))))), (clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))))) / 1.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), (! (((injectionSwitch.x > injectionSwitch.y)))) || false))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))) || false))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((918.828 + -271.081))), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-1041.8153, -3271.5377, -9.9, 9248.1735, 5175.0847, -357.623, 9.2, -6.6, 22.95, 0.6, 26.98, -253.553)))))).y, injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-122.346), _GLF_FUZZED(9.1)), bvec2(false, false))).y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(197.848, 8.3, 65.01, 7.4) * mat2x4(7015.8104, 1163.6309, -7.6, 721.384, 486.163, -4.5, -3428.3198, 4.6))) : injectionSwitch)), sqrt(1.0), determinant(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.4) : 1.0)))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED((4870.1160))), bool(false)))), (float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED((4870.1160))), bool(false))))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-315.606) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0))))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat2x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), sqrt(1.0), 1.0, cos(0.0), 1.0)))), injectionSwitch)).y)), injectionSwitch.y, injectionSwitch.y)) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(trunc(vec2(-624.812, -19.09))), mix(vec2((_GLF_FUZZED(trunc(vec2(-624.812, -19.09))))[0], _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(-1331.6228), (_GLF_FUZZED(trunc(vec2(-624.812, -19.09))))[1]), bvec2(false, true))))).y)))))), (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(84.04)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y), max(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))) - 0.0)) * 1.0), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-980.134) : (injectionSwitch)[0])), _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), bvec2(false, true))).y)))), injectionSwitch.y, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false)) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, false, false))))), (injectionSwitch.x > injectionSwitch.y) || false)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, false, false))))), (injectionSwitch.x > injectionSwitch.y) || false)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), false || (bool(bvec3(true, true, true)))), true, false, true)))) && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1], 0.0 + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]))), vec2(vec3(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0])), _GLF_FUZZED(((- 74.87) + -2.6))), vec2(_GLF_FUZZED(539.167), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), bvec2(false, true))))[1], 0.0 + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0)))[1]))), (false ? _GLF_FUZZED(smoothstep(vec2(-139.428, -2.6), vec2(-7475.4715, -794.130), injectionSwitch)) : vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(609.661) : 0.0)), 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0])), _GLF_FUZZED(((- 74.87) + -2.6))), vec2(_GLF_FUZZED(539.167), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), bvec2(false, true))))[1], 0.0 + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))[1]))))), length(vec3(0.0, 0.0, 0.0))))), vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(-1.1)), bvec2(false, false))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))), clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), false)), true, true, false)))) ? _GLF_FUZZED(8.7) : injectionSwitch.y)))), (false ? _GLF_FUZZED(198.242) : (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.20), _GLF_FUZZED(42.68)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x2(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0))), vec2(0.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.20), _GLF_FUZZED(42.68)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.20), _GLF_FUZZED(42.68)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - sqrt(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(-25.20), _GLF_FUZZED(42.68)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)))))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.20), _GLF_FUZZED(42.68)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y)))), ((clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec4(2.0, 848.397, 532.971, 4797.5195), reflect(vec4(-4.9, 59.65, 7.8, 4.1), vec4(-913.673, -9840.9762, 3749.5589, -6.1))))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))) * 1.0)) + 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.2)), bool(false))))))))) / _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-577.160)))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), true && ((_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), false, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), bool(bvec3(true, false, false))))), false, false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), bool(bvec3(true, false, false))))), false, false))))))))))))), false, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), false))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), false)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), false)))) || false)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false, false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false, false)), true)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false, false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false, false)), true)), true))))), true))))), false))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
