#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) - 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) ^ 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u)) / _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(uvec3(136285u, 18207u, 46616u)) : uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(147869u) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, clamp((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u)))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) - 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) ^ 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u)) / _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(uvec3(136285u, 18207u, 46616u)) : uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(147869u) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, clamp((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) - 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) ^ 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u)) / _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(uvec3(136285u, 18207u, 46616u)) : uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(147869u) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, clamp((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) - 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) ^ 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u)) / _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(uvec3(136285u, 18207u, 46616u)) : uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(147869u) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, clamp((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u)))))))), uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) - 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) ^ 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u)) / _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(uvec3(136285u, 18207u, 46616u)) : uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(147869u) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, clamp((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u)))))))), 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)) - 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) ^ 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), 1u, 0u)) / _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(uvec3(136285u, 18207u, 46616u)) : uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(147869u) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, clamp((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u, (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(136509u) : gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))) | 0u))))))))))))), 0u ^ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) | 0u)))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) | (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u) ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(100611u, 115363u, 9967u)))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))))), bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))))))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x)))) << 0u), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(89669u))), 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) ^ 0u))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) >> 0u), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) << uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))))), (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))))) ^ 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x) / 1u))), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) << uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), 0u | (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 1u * (0u))))))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY(min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), (_GLF_IDENTITY(min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), clamp(min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))))))) ^ 0u)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x) / 1u))), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) << uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), 0u | (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 1u * (0u))))))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), _GLF_IDENTITY(min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), (_GLF_IDENTITY(min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), clamp(min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))))))) ^ 0u))))))) >> (0u & 158218u)) ^ 0u), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), 0u | (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), 0u | (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), min(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u))))))))) >> ((182359u >> 33432u) & 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)) ^ uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u))), ~ (~ ((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u)))))), ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))), max(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))))), 0u, 0u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u), 0u ^ (_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(write_val) : (workgroup_id))))))) >> 0u), 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))) | (workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? subgroup_id : _GLF_FUZZED(workgroup_size))), 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, (true) || false)))))))))) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) ^ uvec2(0u, 0u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(0u, 0u)), clamp((uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(0u, 0u)), ~ (~ ((uvec2(0u, 0u))))), (uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)) * (uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec2(1u, 1u) * (uvec2(0u, 0u)), uvec2(uvec4(uvec2(1u, 1u) * (uvec2(0u, 0u)), 1u, 0u)))) / uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u))))) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec4(uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), 0u, 1u), (uvec4(uvec2(1u, 1u), 0u, 1u)) - uvec4(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u)), 0u, 0u, 0u)))) * (uvec2(0u, 0u))) << (uvec2(21030u, 114174u) & uvec2(0u, 0u))))), uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) ^ uvec2(0u, 0u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(0u, 0u)), clamp((uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(0u, 0u)), ~ (~ ((uvec2(0u, 0u))))), (uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)) * (uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec2(1u, 1u) * (uvec2(0u, 0u)), uvec2(uvec4(uvec2(1u, 1u) * (uvec2(0u, 0u)), 1u, 0u)))) / uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u))))) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec4(uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), 0u, 1u), (uvec4(uvec2(1u, 1u), 0u, 1u)) - uvec4(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u)), 0u, 0u, 0u)))) * (uvec2(0u, 0u))) << (uvec2(21030u, 114174u) & uvec2(0u, 0u))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u))) | (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) ^ uvec2(0u, 0u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(0u, 0u)), clamp((uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(0u, 0u)), ~ (~ ((uvec2(0u, 0u))))), (uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)) * (uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec2(1u, 1u) * (uvec2(0u, 0u)), uvec2(uvec4(uvec2(1u, 1u) * (uvec2(0u, 0u)), 1u, 0u)))) / uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u))))) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec4(uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), 0u, 1u), (uvec4(uvec2(1u, 1u), 0u, 1u)) - uvec4(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u)), 0u, 0u, 0u)))) * (uvec2(0u, 0u))) << (uvec2(21030u, 114174u) & uvec2(0u, 0u))))))))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), clamp(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) ^ uvec2(0u, 0u)), uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u)))), uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) / 1u)) | (min(subgroup_size, subgroup_size)))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))))), 0u))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) / 1u)) | (min(subgroup_size, subgroup_size)))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), max(_GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), _GLF_IDENTITY(max(subgroup_size, subgroup_size), clamp(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))))), max(subgroup_size, subgroup_size)))))), 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) / 1u)) | (min(subgroup_size, subgroup_size)))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))))), 0u)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), true, false)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY((vec2(injectionSwitch.x, 0.0)) * mat2(1.0), ((vec2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)))) * mat2(1.0)) - sin(vec2(0.0, 0.0))))) * vec2(1.0, 1.0)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bool(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || false)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true)), true)), (bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, cos(0.0), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat4x2(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0, abs(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0)), min(float(mat4x2(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0, abs(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x2(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0, abs(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0)))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, cos(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), cos(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), min(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0))).x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), min(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0))).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))), true))) || false))) || false)), ! (! (false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true)))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)), (false ? _GLF_FUZZED(reflect(-9571.6565, mod(558.861, _GLF_IDENTITY(-4.5, 0.0 + (-4.5))))) : min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)) + abs(0.0)), float(vec2(abs(1.0), abs(1.0))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, log(1.0))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, log(1.0))))), 1.0, exp(0.0), 1.0, 1.0, 0.0, exp(0.0)))) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)) + abs(0.0)), float(vec2(abs(1.0), abs(1.0))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, log(1.0))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, log(1.0))))), 1.0, exp(0.0), 1.0, 1.0, 0.0, exp(0.0)))) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)) + abs(0.0)), float(vec2(abs(1.0), abs(1.0))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, log(1.0))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, log(1.0))))), 1.0, exp(0.0), 1.0, 1.0, 0.0, exp(0.0)))) > injectionSwitch.y)))))))))) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), false || (! (_GLF_DEAD(false))))) || false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), ! (! (_GLF_DEAD(false)))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true, true, false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), float(_GLF_FUZZED(-293.112)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(64, 0 | (64))))) | (64)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))) && (false)), true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true))))))), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true)))))))))), false))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true))))))), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && true)), true)))))))))), false))), true, true)), false, true)))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false), bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false), false))))), bvec2(bvec2(bvec2(! (false), true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((true), ! (! ((true)))))))))))), bvec2(bvec2(bvec2(! (false), true)))))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((true), true && ((true)))), false, true)))))))))), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true))))), false || ((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true)))))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true))))), false || ((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((true), false || ((true)))), false, true))))))))))))), true))))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8549.1841), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true))))), false || ((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true)))))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! (true)), false, true)))))))))), true))))), false || ((! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || ((true))), false, false)), false || (bool(bvec3(_GLF_IDENTITY((true), false || ((true))), false, false)))))), false, true)))))))))), true)))))))))))))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), ! (! (true))))))))), bvec2(bvec2(bvec2(! (false), true))))))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -55.28))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -55.28))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -55.28))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -55.28))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / round(length(normalize(vec2(1.0, 1.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))), false, true, true))), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 0.0, 1.0, 1.0, 1.0, exp(0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0)))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0)))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0)))))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false))))))), (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true) && true), false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true) && true), false))), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, sqrt(0.0), 0.0, 0.0))).y) - 0.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || false)) && true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-869.983 - injectionSwitch)) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-869.983 - injectionSwitch)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-869.983 - injectionSwitch)) : injectionSwitch)))).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), ! (! (bool(bvec4((false), true, true, false)))))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)), false))))))) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8612.0439 * 5.5))), bool(false)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true), false)), false))))))) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8612.0439 * 5.5))), bool(false)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)), false))))))) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8612.0439 * 5.5))), bool(false)))))))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.3))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   return;
  }
}
