#version 460
struct _GLF_struct_9 {
 uint _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat3 _f1;
} ;

struct _GLF_struct_5 {
 float _f0;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 ivec3 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 bvec3 _f1;
 _GLF_struct_7 _f2;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat2x3 _f1;
 uint _f2;
 mat2 _f3;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat2x4 _f1;
 vec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 float _f1;
 _GLF_struct_1 _f2;
 uint subgroup_id;
 uvec3 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_8 _GLF_struct_replacement_8;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(mat3x4(1.0), mat2x4(1.0), vec4(1.0), 1u), 1.0, _GLF_struct_1(vec2(1.0), mat2x3(1.0), 1u, mat2(1.0)), gl_SubgroupID, uvec3(1u)));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(1u, gl_SubgroupInvocationID);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat2x4(1.0), gl_NumWorkGroups.x);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_replacement_8.GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_8.GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y;
 uint subgroup_base = _GLF_struct_replacement_3._f0.subgroup_id * subgroup_size;
 _GLF_struct_replacement_8.GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x = subgroup_base;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_8.GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + _GLF_struct_replacement_9.subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
