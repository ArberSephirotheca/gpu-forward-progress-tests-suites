#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, sqrt(1.0)))))))))) && _GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (-47784 & 0) | (_injected_loop_counter ++)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5958.3799)), vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1]), bvec2(false, true))))).y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) && true)))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true))) || false)))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) >> 0u)))) | (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))), 0u, 0u))) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(uvec2(115614u, 113906u), subgroup_id)) : gl_WorkGroupSize))[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (0 & -33934) | (_GLF_IDENTITY(2, (2) - 0)))])) * (_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, 0 ^ (0)))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (0) ^ 0)), max(0 ^ (_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ (_GLF_IDENTITY(0, (0) ^ 0)))))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(uvec2(115614u, 113906u), subgroup_id)) : gl_WorkGroupSize))[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, 0 ^ (0)))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) ^ 0)))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(uvec2(115614u, 113906u), subgroup_id)) : gl_WorkGroupSize))[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, 0 ^ (0)))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) ^ 0)))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(uvec2(115614u, 113906u), subgroup_id)) : gl_WorkGroupSize))[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, 0 ^ (0)))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) ^ 0)))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) ^ uvec3(0u, 0u, 0u)).x))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))), 0 ^ _GLF_IDENTITY((0), int(ivec3((0), 0, 1))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), uvec3(1u, 1u, 1u) * (uvec3(3u))))) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[_GLF_IDENTITY(1, (1) << 0)], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))), int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | 0u))), gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))), 0 ^ _GLF_IDENTITY((0), int(ivec3((0), 0, 1))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))), 0 ^ _GLF_IDENTITY((0), int(ivec3((0), 0, 1))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), uvec3(1u, 1u, 1u) * (uvec3(3u))))) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))))))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[_GLF_IDENTITY(1, (1) << 0)], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) & uvec3(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), 0 + (_GLF_IDENTITY(1, (1) << 0)))], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) & uvec3(1u, 1u, 1u))))))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) : _GLF_FUZZED(uvec3(180079u, 70030u, 165634u)))) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))) : _GLF_FUZZED(uvec3(176237u, 109095u, 125639u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))])), gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[1], 0u)), 0u | (uint(uvec2(gl_WorkGroupSize[1], 0u))))), gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) >> 0u)))), 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(136937u) : uint(5u))), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u)))))), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))))))), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(176237u, 109095u, 125639u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(176237u, 109095u, 125639u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(uvec3(176237u, 109095u, 125639u))), (~ (_GLF_FUZZED(uvec3(176237u, 109095u, 125639u)))) | uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) / uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))))[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 0u, 1u), (uvec3(5u, 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), 5u))), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), (uint(5u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(5u))))), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)))), 1u), uvec3(1u, 1u, 1u) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)))), 1u))) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), min(uint(5u), uint(5u))))), 0u, 0u)))))) : _GLF_FUZZED(uvec3(176237u, 109095u, 125639u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) << 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u)))), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), min(uint(5u), uint(5u))))), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), _GLF_IDENTITY((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), ((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) + uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(1u)), max(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | 0u), uint(uint(1u)))), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, uint(uvec3(5u, 1u, 0u)))))), min(uint(5u), uint(5u))))), 0u, 0u)))))) : _GLF_FUZZED(uvec3(176237u, _GLF_IDENTITY(109095u, (109095u) | (0u | 0u)), 125639u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), _GLF_IDENTITY((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))), uvec3(0u, 0u, 0u) + ((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))))), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(_GLF_IDENTITY(1u, (1u) * 1u)))))), 1u) & uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(32418u) : _GLF_IDENTITY(1u, 0u | (1u)))), 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), (_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))) * 1u)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(uvec3(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))))))), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (true ? uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(45648u, 143362u, 17124u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u)))))), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0), 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) / 1u), uint(uvec4(1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))), 1u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))), 1u, 0u, 1u)))))), 0u, 0u)))))) : _GLF_FUZZED(uvec3(176237u, 109095u, 125639u))))))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(88719u, min(88719u, 88719u)), 123629u, 132864u)))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, 0 ^ (1))))], gl_WorkGroupSize[2]), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))]))), (1u & 1u)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 1u * (1u))))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - _GLF_IDENTITY(0u, (0u) - 0u)), 1u * (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - _GLF_IDENTITY(0u, (0u) - 0u))))))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))]))), (1u & 1u)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 1u * (1u))))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - _GLF_IDENTITY(0u, (0u) - 0u)), 1u * (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - _GLF_IDENTITY(0u, (0u) - 0u)))))))))), (false ? _GLF_FUZZED(uvec3(55413u, _GLF_IDENTITY(111511u, ~ (~ (111511u))), 177202u)) : uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))]))), (1u & 1u)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - _GLF_IDENTITY(0u, (0u) - 0u))))))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY(max(_GLF_IDENTITY(2, (2) ^ 0), 2), (_GLF_IDENTITY(max(_GLF_IDENTITY(2, (2) ^ 0), 2), (max(_GLF_IDENTITY(2, (2) ^ 0), 2)) >> 0)) | 0))])) * (uvec3(1u, 1u, 1u) & uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))), _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 ^ _GLF_IDENTITY((0), clamp((0), (0), (0)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))), int(ivec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))), (~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))) | 0), (0 << _GLF_IDENTITY(int(0), int(0)))))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(gl_WorkGroupSize[1], 1u))), ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u))) << 0u))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((84988 ^ -78481)) : 1)), 1, 1))) ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(12512u, 85420u, 122280u)), max(_GLF_FUZZED(uvec3(12512u, 85420u, 122280u)), _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))))) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) * 1))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), ~ (~ (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))))) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))) | (uint(uint(1u))))), _GLF_IDENTITY(1u, uint(uint(1u)))) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ((0)) | ((0)))), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ((0)) | ((0)))), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ((0)) | ((0)))), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u))) | uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) * 1)], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, max(1u, 1u)))), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(_GLF_IDENTITY(5u, (5u) - 0u)))))), 0u, 0u))))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (uvec3(0u, 0u, 0u)))))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u ^ (gl_WorkGroupSize[2])))) * _GLF_IDENTITY((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) & uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) & uvec3(1u, 1u, 1u))) | ((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) & uvec3(1u, 1u, 1u)))))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))) ^ (0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u)))))) - 0u), 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), min(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))))), 0u, 0u))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), 0)) ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u)))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) << uvec3(0u, 0u, 0u))) * _GLF_IDENTITY((uvec3(1u, 1u, 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), uint(uvec3(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), 1u, 0u))))))), ((uvec3(1u, 1u, 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), uint(uvec3(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), 1u, 0u)))))))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)))).x)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (1))], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) << 0)) ^ 0)], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(uint(1u))))), 1u) & _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(packHalf2x16(vec2(-6.9, 285.423))) : 5u))), uint(5u))))), 0u, 0u)))), clamp(uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) - 0u)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(packHalf2x16(vec2(-6.9, 285.423))) : 5u))), uint(5u))))), 0u, 0u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(packHalf2x16(vec2(-6.9, 285.423))) : 5u))), uint(5u)))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u ^ (5u))), min(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(packHalf2x16(vec2(-6.9, _GLF_IDENTITY(285.423, mix(float(_GLF_FUZZED(-5.7)), float(285.423), bool(true)))))) : 5u))), uint(5u))))) / 1u)), _GLF_IDENTITY(0u, (0u) / 1u), 0u)))), uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) ^ (_GLF_IDENTITY(0u, (0u) + 0u))), max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(packHalf2x16(vec2(-6.9, _GLF_IDENTITY(285.423, (false ? _GLF_FUZZED(-9.2) : 285.423))))) : 5u))), uint(5u))))), 0u, 0u))))))))) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | (_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), (gl_WorkGroupSize[2]) - 0u)))), _GLF_IDENTITY((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) + ((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))[1]) ^ 0u), _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[2])) * (uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) >> 0u, ((~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) >> 0u) | ((~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) >> 0u))))))))) & uvec3(1u, 1u, 1u)))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), 0u)))) : _GLF_FUZZED(uvec3(12512u, 85420u, 122280u)))) ^ uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u | 0u) & 1u)) * workgroup_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) - 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) - 0u))), 0u + ((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) - 0u)))))) / 1u)) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-984.846)), bool(false))))), injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(false, (false) && true), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, tan(sqrt(0.0)), 1.0), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (mat2(injectionSwitch, tan(sqrt(0.0)), 1.0))))), injectionSwitch, injectionSwitch)), 0.0, 0.0))).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(4576.7679)))), vec2(_GLF_FUZZED(556.307), _GLF_FUZZED(-33.59)), bvec2(false, false))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, false || (false)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && _GLF_IDENTITY(true, false || (true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0)))))))), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0)), max(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) / 1.0)))))))))) * mat2(1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(true && (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), false, false, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < 1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3046.4697)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = ((1 ^ 0) & (_GLF_IDENTITY(0 | 1, (0 | 1) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5705.1456) : injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       buf[virtual_gid] = uint(subgroupAllEqual(read_val));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3(_GLF_IDENTITY((false) && true, ((false) && true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true)))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch)))).y))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(412.547) : 0.0))), (mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(412.547) : 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(357.878)), bool(false)))))))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch)))).y) + 0.0))))))))))) || false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
