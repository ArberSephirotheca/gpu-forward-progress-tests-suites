#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.3)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, true)))))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false)))))) || false)) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))) && true)))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(vec2(4114.4016, -9327.3489).x)), bvec2(false, false))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : injectionSwitch.x)), (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : injectionSwitch.x))) * 1.0)))) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), clamp(vec4(1.0, 0.0, 1.0, 1.0), vec4(1.0, 0.0, 1.0, 1.0), vec4(1.0, 0.0, 1.0, 1.0)))) / cos(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), float(vec4(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0))) + 0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 0.0))))), tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, log(1.0), 0.0, 0.0, 0.0))).y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY((-2.2 / vec2(222.584, -863.944)), max(_GLF_IDENTITY((-2.2 / vec2(222.584, -863.944)), max((-2.2 / vec2(222.584, -863.944)), (-2.2 / vec2(222.584, -863.944)))), (-2.2 / vec2(_GLF_IDENTITY(222.584, clamp(_GLF_IDENTITY(222.584, max(_GLF_IDENTITY(_GLF_IDENTITY(222.584, cos(0.0) * (222.584)), float(mat3x4(222.584, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 222.584)), 222.584, _GLF_IDENTITY(222.584, max(222.584, 222.584)))), -863.944))))) : min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(6.5), (vec4(0.0, 1.0, 0.0, 0.0))[1], (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))[2], _GLF_FUZZED(99.69)), vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(8.2), _GLF_FUZZED(814.523), (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec4(bool(bool(true)), false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8559.8111, -0.7)) : injectionSwitch)).y)) && (_GLF_IDENTITY(bool(bvec4(bool(bool(true)), false, true, true)), true && (bool(bvec4(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), _GLF_IDENTITY(false, (false) && true), true, true)))))))))))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(182.230)), bool(false))), 1.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.8)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.3)), float(0.0), bool(true))), 0.0, 0.0, 0.0)), min(float(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.3)), float(0.0), bool(true))), 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.3)), float(0.0), bool(true))), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + sqrt(0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5712.0884) : 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0, (false ? _GLF_FUZZED(-3538.6184) : (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-7452.0617), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(73.25), (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(-1385.7423), (vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(-4.9)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) / 1.0))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), max(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true))), 1.0, 0.0)))), max(_GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), max(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true))), 1.0, 0.0)))), _GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), max(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true))), 1.0, 0.0))))))), tan(0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0))).y)))), (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0), (mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0), (mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(dot(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0)), (mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, abs(0.0), abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0), (mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0), (mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0)) * mat4(1.0))))), float(_GLF_IDENTITY(mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0), (mat4x3(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.1) : 0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0)) * mat4(1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), clamp(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) + vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-74.97, (-74.97) + 0.0)))), 0.0, 0.0)) : _GLF_FUZZED(96.84))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, abs(1.0), 1.0)), min(float(mat4x2(1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, abs(1.0), 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED(3.2)), float(float(mat4x2(1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, abs(1.0), 1.0))), bool(true)))))), mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6694.9342)), bool(false)))))))), tan(0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0))).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-172.887) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1203.0484) : 1.0)))), 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : vec2(injectionSwitch.x, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), 0.0 + (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, 1.0)))), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.97))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.4), (_GLF_FUZZED(-9.4)) / round(_GLF_IDENTITY(length(normalize(1.0)), clamp(length(normalize(1.0)), length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) * 1.0)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 0.0))))), tan(0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0))).y)), true, true)))))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)), true && ((true && (false)))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), false || (! (! (_GLF_IDENTITY(true, (true) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), false || (! (! (_GLF_IDENTITY(true, (true) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), false || (! (! (_GLF_IDENTITY(true, (true) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false, false))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false)))), true)))))), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), true)), false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-1115.4466)), vec2((_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))[0], (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) >> 0)], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.3, -1.6)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.3, -1.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.3, -1.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.3, -1.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[1])) * mat2(1.0)))))) / vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2647.2853))), 1.0)), 1.0)).y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.0, clamp(_GLF_IDENTITY(8.0, min(8.0, _GLF_IDENTITY(8.0, min(8.0, 8.0)))), 8.0, 8.0))), _GLF_FUZZED(-42.43)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(_GLF_IDENTITY(-42.43, clamp(-42.43, -42.43, -42.43)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.0, (8.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_FUZZED(-42.43)), mix(vec2(_GLF_FUZZED(6971.5587), _GLF_FUZZED(900.862)), vec2((vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[0], (vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.0, (8.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_FUZZED(-42.43)), mix(vec2(_GLF_FUZZED(6971.5587), _GLF_FUZZED(900.862)), vec2((vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[0], (vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.0, (8.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_FUZZED(-42.43)), mix(vec2(_GLF_FUZZED(6971.5587), _GLF_FUZZED(900.862)), vec2((vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[0], (vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.0, (8.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_FUZZED(-42.43)), mix(vec2(_GLF_FUZZED(6971.5587), _GLF_FUZZED(900.862)), vec2((vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[0], (vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-42.43)))[1]), bvec2(true, true))))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), 0u ^ (_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) / 1u)))))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, int(ivec2(0, 1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(2093.8446)), bool(false))), exp(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(2093.8446)), bool(false))), exp(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), true), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), true), false))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bool(bool(_GLF_IDENTITY(true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (! (true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))) && true))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
