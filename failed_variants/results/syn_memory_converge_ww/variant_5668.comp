#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (! (_GLF_IDENTITY(false, (false) || false))))) || false)))), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true, false), false))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-3.6))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true)), false || (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true)), false || (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(bool(bvec3(true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3((_GLF_DEAD(false)), false, false)))), true && (bool(bool(bool(bvec3((_GLF_DEAD(false)), false, false))))))))))), ((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, false)), bool(bool(bool(bvec3((_GLF_DEAD(false)), false, false)))))))))) && true), true, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_DEAD(false))), true, false)))), false || ((! (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_DEAD(false))), true, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), ! (! (false || ((_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) || false) || ((_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true))))) && true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))), (bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))) && true))), (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))), (bool(_GLF_IDENTITY(bool((false)), ! (! _GLF_IDENTITY((bool((false))), (_GLF_IDENTITY((bool((false))), false || ((bool((false)))))) || false))))) && true)))) && true)))), false || (! (_GLF_DEAD(false)))))))))) && true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bool((_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))) || false)) || false)), false || (bool((_GLF_DEAD(false))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true, _GLF_IDENTITY(false, (false) || false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true, _GLF_IDENTITY(false, (false) || false), true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true, _GLF_IDENTITY(false, (false) || false), true))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool((_GLF_DEAD(false)))), false || _GLF_IDENTITY((! (bool((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((! (bool((_GLF_DEAD(false))))), ! (! ((! (bool((_GLF_DEAD(false)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (bool((_GLF_DEAD(false)))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))), (bool((_GLF_DEAD(false)))) && true)))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, true, false)))))))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && _GLF_IDENTITY(true, ! (! (true))))))), false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))))))) && true)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, true, false)))))))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(bvec3(! (! ((_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(! ((_GLF_DEAD(false)))))))))))), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))) || false))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(bvec3(! (! ((_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(! ((_GLF_DEAD(false)))))))))))), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(bvec3(! (! ((_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(! ((_GLF_DEAD(false)))))))))))), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)), _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), bool(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))))))))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), bool(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), bool(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))))))))))))) && true))) || false))), true))) || false, false || ((bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), false || (bool((_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool((bool((_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))))))), true, true), bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool((bool((_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))))))), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false)))))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))))))))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bvec4(bool((_GLF_DEAD(false))), true, true, false))), false || (bool((_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), true && ((bool((_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec2(bvec2(bool(bool(false)), false))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), bvec3(bvec4(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || _GLF_IDENTITY(false, true && (false))))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))), true, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false))))))))) && true)) || false))))), false, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true, true, false)))))))))), false, true))))) && true)))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bvec4((bool((_GLF_DEAD(false)))), false, true, false)))) || false))))))), bool(_GLF_IDENTITY(bvec3(false || _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false)))) && true)))))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || _GLF_IDENTITY((bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY((bool((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((bool((_GLF_DEAD(false)))), ((bool((_GLF_DEAD(false))))) || false))))))), true, true))))))))))))) && true))) || false))), true))) || false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false)) && (! (_GLF_DEAD(false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false) ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), max(_GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), max(float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), _GLF_IDENTITY(float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), min(float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))))))), _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat2x3((injectionSwitch.x) / 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), sqrt(1.0), 0.0))))) : _GLF_FUZZED(4626.2764)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0)), float(float(determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0))))), determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0)), determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0)))))), (false ? _GLF_FUZZED(cos(-26.42)) : float(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-3.3))) : _GLF_FUZZED(-5.9))), (injectionSwitch.x))) / 1.0, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) / 1.0))), determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.75), _GLF_FUZZED(-1.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x), 0.0, log(1.0), 0.0, 0.0)))))))) > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2((injectionSwitch.x) / 1.0, 0.0, 1.0, 1.0)), (float(mat2((injectionSwitch.x) / 1.0, 0.0, 1.0, 1.0))) + 0.0), mix(float(_GLF_FUZZED(2.1)), float(_GLF_IDENTITY(float(mat2((injectionSwitch.x) / 1.0, 0.0, 1.0, 1.0)), (float(mat2((injectionSwitch.x) / 1.0, 0.0, 1.0, 1.0))) + 0.0)), bool(true))))) > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false, true), false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false, true), false)))))))))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8729.2337)), bool(false))) : _GLF_FUZZED(cos(-8.7)))) : _GLF_FUZZED(4.9))), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), (true ? float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(-6.0)))), mix(float(_GLF_FUZZED(-5.6)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), (true ? float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(-6.0))))), bool(true)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) + _GLF_ZERO(0.0, injectionSwitch.x))) > injectionSwitch.y, false, true), false))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), (true ? float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(-6.0)))), mix(float(_GLF_FUZZED(-5.6)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), (true ? float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(-6.0))))), bool(true)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) + _GLF_ZERO(0.0, injectionSwitch.x))) > injectionSwitch.y, false, true), false))))))))))))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2.3, 3671.3575)))))))), log(1.0))), mix(float(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.3))), 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0)))), float(_GLF_FUZZED(8.6)), bool(false)))), (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))) + vec2(0.0, 0.0))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0))), mix(float(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0)))), float(_GLF_FUZZED(8.6)), bool(false))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0))), mix(float(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0)))), float(_GLF_FUZZED(8.6)), bool(false))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0))), mix(float(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), log(1.0)))), float(_GLF_FUZZED(8.6)), bool(false)))))), (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))), mix(float(_GLF_FUZZED((5.3 * _GLF_IDENTITY(5.9, 1.0 * (_GLF_IDENTITY(5.9, 1.0 * (5.9))))))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(24.74)), bool(false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(1.8))) > injectionSwitch.y, false, true), false)))))))))) && true), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(float(1.0)))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(271.261), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[0], _GLF_FUZZED(15.05)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED(271.261), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[0], _GLF_FUZZED(15.05)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(271.261), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[0], _GLF_FUZZED(15.05)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(271.261), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))))[0], _GLF_FUZZED(15.05)), bvec2(true, false)))))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(_GLF_IDENTITY(vec3((injectionSwitch.x) / 1.0, 1.0, 0.0), (vec3((injectionSwitch.x) / 1.0, 1.0, 0.0)) * vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(278.303) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0))) > injectionSwitch.y)) && true), false), false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(4638.8777), _GLF_FUZZED(-6.5)), bvec2(false, false))), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-4.5)), bvec2(false, false))).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-4.5)), bvec2(false, false))).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-4.5)), bvec2(false, false))).y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8299.2634)), bvec2(true, false))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, abs(1.0)), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8299.2634)), bvec2(true, false))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, abs(1.0))))))).x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0))))), injectionSwitch.y)))), bool(bvec3((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0))))), injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (injectionSwitch.x < injectionSwitch.y)), false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / exp(0.0)) < injectionSwitch.y)), false))), true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (true)), false, true))), (injectionSwitch.x < injectionSwitch.y)), false))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), true, false, true))), (injectionSwitch.x < injectionSwitch.y)), false))), true), true), false))))))))), true && _GLF_IDENTITY((bool(bvec2(false, true))), false || ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), false))))), true))), _GLF_IDENTITY(true, (true) || false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))), true)))))))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))), true))))), true, false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(775.241, 7.9)) : injectionSwitch)), 1.0, 1.0))))[0], clamp((_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(775.241, 7.9)) : injectionSwitch)), 1.0, 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(775.241, 7.9)) : injectionSwitch)), 1.0, 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(775.241, 7.9)) : injectionSwitch)), 1.0, 1.0))))[0])), _GLF_FUZZED(float((_GLF_IDENTITY(ivec4(-53727, -12325, 14933, 96875) != ivec4(4072, -59, 82508, 92083), (ivec4(-53727, -12325, 14933, 96875) != ivec4(4072, -59, 82508, 92083)) && true))))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true, false), true, true)), false))), true, false)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))), true, false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(true, (true) && true) && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))))))) || false)) || false), _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false)))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), false, true), true))), true))))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(57.49, 2.3)) : injectionSwitch)).x, 0.0, 0.0, 0.0)))) / 1.0))) > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) / 1u), workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), ~ (~ (0u ^ (subgroup_id * subgroup_size)))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, ((1u | 1u) & 1u), 1u))) ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * subgroup_size : _GLF_FUZZED(write_val))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), max(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED((++ workgroup_id)) : 0u ^ (subgroup_id * subgroup_size))), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) ^ (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u)))))) / uvec2(1u, 1u)))))))), max(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (0u ^ (subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), clamp(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(~ (0u ^ (subgroup_id * subgroup_size)), 0u + (~ (0u ^ (subgroup_id * subgroup_size)))))))))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))) ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), ~ (~ (0u ^ (subgroup_id * subgroup_size))))) << 0u))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 0u)), clamp(uint(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 0u))))), uint(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 0u))))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u)))))))), _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (0u ^ (subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), clamp(0u ^ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) | (0u ^ (subgroup_id * subgroup_size))), 0u ^ (subgroup_id * subgroup_size))), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), 0u ^ (subgroup_id * subgroup_size))), 1u), (uvec2(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 1u)) / uvec2(1u, 1u))) / uvec2(1u, 1u)))))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) + 0u) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) : _GLF_FUZZED(workgroup_base))) >> 0u);
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true))))))))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) && true))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) && true))), true, true, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) && true))), true, true, true)))))))), false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, false, true))) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (_GLF_IDENTITY(true, (true) && true)), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, false, true))) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (_GLF_IDENTITY(true, (true) && true)), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, false, true))) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (_GLF_IDENTITY(true, (true) && true)), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, false, true))) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (_GLF_IDENTITY(true, (true) && true)), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), true), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), (bool(bvec2(! (true), false))) && true)))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))))))))))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(_GLF_IDENTITY(bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))) && true)), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY(0u | (uint(virtual_gid)), max(_GLF_IDENTITY(0u | (uint(virtual_gid)), (0u | (uint(virtual_gid))) / 1u), 0u | (uint(virtual_gid)))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), max(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))) / 1u, ((_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) / 1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(7798, (7798) ^ 0)) : 4))) | (_GLF_IDENTITY(4, (4) - 0))), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) - 0, 0 + (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (0) | 0))), (~ ((_GLF_IDENTITY(0, (0) | 0)))) << 0))) - 0)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0))))), (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 + ((0))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0)))))) | _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | (0)))))) | 0), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) | 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 0)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 0)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 0))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 0)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 0)))))))))) - 0, 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) | 0)) - 0)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, clamp((0) | 0, _GLF_IDENTITY((0) | 0, min((0) | 0, (0) | 0)), _GLF_IDENTITY((0) | 0, max((0) | 0, (0) | 0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-9708) : (0))) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), 1, 1, 0)))))), int(ivec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-9708) : (0))) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), 1, 1, 0)))))), 0))))) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0)))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), 1, 1, 0)))))))) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), 1, 1, 0)))))))) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0) | 0 : _GLF_FUZZED(60239))))), int(ivec4(~ (_GLF_IDENTITY(0, (0) | 0)), 1, 1, 0)))))))) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0))))))))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), clamp((0), (0), (0))), _GLF_IDENTITY(int(ivec4((0), 1, _GLF_IDENTITY(0, (0) >> 0), 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), clamp((0), (0), (0))), _GLF_IDENTITY(int(ivec4((0), 1, _GLF_IDENTITY(0, (0) >> 0), 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), (int(ivec4((0), 1, 0, 0))) * 1), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), (int(ivec4((0), 1, 0, 0))) * 1), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), (int(ivec4((0), 1, 0, 0))) * 1), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), 1, 0, 1)))) | 0), int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | ((0))), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-42641, ~ (~ (-42641)))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), _GLF_IDENTITY(min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))), ~ (~ (min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0)))))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), int(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))) - (0 ^ 0)), (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y))))), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (0 | 0) ^ ((0) | 0)))) - 0))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0)))), int(int((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((_GLF_IDENTITY(0, (0) | (0))), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) + 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0)))))), (int(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) + 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0))))))) | (int(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) + 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, 0, 0)), min(int(ivec4((0), 1, 0, 0)), int(ivec4((0), 1, 0, 0))))) | 0)) - 0, 0 + ((_GLF_IDENTITY(0, (0) | 0)) - 0))))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0))))))))))) | 0)) | 0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)), false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(acos(-4.3)) : _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y)))))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat3x2(-794.846, 1108.0385, -715.055, 0.6, -1.3, 1.4)[2]) : injectionSwitch)).y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true))) && true)), false || (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-9945.3663), _GLF_FUZZED(3721.2554)), bvec2(false, false)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1])) * mat2(1.0), ((vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1])) * mat2(1.0)) / vec2(1.0, 1.0))), vec2(_GLF_FUZZED(-9945.3663), _GLF_FUZZED(3721.2554)), bvec2(false, false)))))).x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
}
