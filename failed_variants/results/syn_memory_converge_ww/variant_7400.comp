#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat3 _f0;
 vec4 _f1;
 bvec3 _f2;
 bvec4 _f3;
 uvec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat2 _f1;
 mat3 _f2;
 uint workgroup_id;
 mat4x3 _f3;
 bvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) : _GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) / 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(injectionSwitch, injectionSwitch))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY((vec3(1.0))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) | (2))], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_FUZZED(549.252)))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY((mix(vec3((vec3(1.0))[0], _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0))))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.0)), bool(false)))))[2], _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0))), (false ? _GLF_FUZZED(asinh(-5864.0329)) : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), _GLF_IDENTITY(float(vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0))), (false ? _GLF_FUZZED(asinh(-5864.0329)) : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), 1.0)), mix(float(_GLF_IDENTITY(float(vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0))), (false ? _GLF_FUZZED(asinh(-5864.0329)) : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), 1.0)), (true ? float(vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0))), (false ? _GLF_FUZZED(asinh(-5864.0329)) : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), 1.0)) : _GLF_FUZZED(-232.474)))), float(_GLF_FUZZED(-5402.6316)), bool(false)))))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((mix(vec3((vec3(1.0))[0], _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0))))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.0)), bool(false)))))[2], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY((mix(vec3((vec3(1.0))[0], _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0))))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.0)), bool(false)))))[2], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mat3(1.0) * ((mix(vec3((vec3(1.0))[0], _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0))))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.0)), bool(false)))))[2], (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0))))) ? (vec3(1.0))[2] : _GLF_FUZZED(_GLF_IDENTITY(549.252, (549.252) - log(1.0)))))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) * vec3(1.0, 1.0, 1.0)), max(mat3(1.0) * (mix(vec3((vec3(1.0))[0], (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[1], _GLF_IDENTITY((vec3(1.0))[2], (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ((! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && true) && true))), (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_FUZZED(549.252)))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mat3(1.0) * (mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY((vec3(1.0))[2], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(1.0))[2] : _GLF_IDENTITY(_GLF_FUZZED(549.252), max(_GLF_IDENTITY(_GLF_FUZZED(549.252), mix(float(_GLF_FUZZED(549.252)), float(_GLF_FUZZED(2774.2454)), bool(false))), _GLF_FUZZED(549.252)))))), vec3(_GLF_FUZZED(float(96036)), _GLF_FUZZED(-7403.1854), _GLF_FUZZED(-2960.3393)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), vec3(vec4(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + log(vec3(1.0, 1.0, 1.0))), exp(0.0)))), uvec4(1u)), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-2938.9033, 6.2, 0.7, 91.90).p)), bool(false)))), mat2x4(1.0), uvec4(1u), _GLF_struct_1(uvec2(1u), mat2(1.0), mat3(1.0), gl_WorkGroupID.x, mat4x3(1.0), bvec2(true), ivec2(1))), _GLF_struct_4(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0))), vec2(1.0))), _GLF_struct_3(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(1.0))), vec4(1.0), bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), bvec4(true), uvec4(1u), mat4(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5._f0._f4.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))))) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))))) >> 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & (1u & 1u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), clamp(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) | (subgroup_size)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), (((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | (subgroup_size))) | (subgroup_size))) | (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)))))) >> 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.0)), float(injectionSwitch.y), bool(true)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.0)), float(injectionSwitch.y), bool(true)))))))), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(_GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(length(normalize(1.0))))), round(length(normalize(1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(vec4(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], _GLF_FUZZED(0.2), _GLF_FUZZED(-412.449), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))[3]), vec4(_GLF_FUZZED(7.5), (vec4(0.0, 0.0, 0.0, 0.0))[1], (vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(13.67)), bvec4(false, true, true, false)))))))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 0.0)), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(-89.02) : normalize(1.0))))), sqrt(0.0))))))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(_GLF_IDENTITY(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0))), (mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.0)), float(0.0), bool(true))), 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(743.758) : 0.0)), 0.0)))), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(_GLF_IDENTITY(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))))), sqrt(0.0))), (mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))) / mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-178.415)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.5))), 1.0, 1.0))), 0.0), _GLF_IDENTITY(mat3(mat4x3(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0))), (false ? _GLF_FUZZED(mat3(8785.0647, -40.04, -4781.3180, -6.2, 2592.8733, 1.7, -1.6, 0.0, -49.17)) : mat3(mat4x3(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(870.805)), bool(false))), 1.0, 1.0))), 0.0))))))), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(743.758), min(_GLF_FUZZED(743.758), _GLF_IDENTITY(_GLF_FUZZED(743.758), clamp(_GLF_IDENTITY(_GLF_FUZZED(743.758), clamp(_GLF_FUZZED(743.758), _GLF_IDENTITY(_GLF_FUZZED(743.758), min(_GLF_FUZZED(743.758), _GLF_FUZZED(743.758))), _GLF_FUZZED(743.758))), _GLF_FUZZED(_GLF_IDENTITY(743.758, (743.758) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(743.758, max(743.758, 743.758))))))) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) + sin(0.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), clamp(length(normalize(1.0)), length(normalize(1.0)), length(normalize(1.0))))) / 1.0)), sqrt(0.0))))))))))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(57487))), bool(false))), max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(234.621)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(7.0, 83.77, 5612.4258).b)), bool(false)))), bool(true)))) / 1.0) - 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-47.61) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-5986.4545)), bool(false)))))) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0))))))), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(1.1, (1.1) / 1.0))), bool(false))), round(length(_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), normalize(1.0), normalize(1.0))), _GLF_IDENTITY(normalize(1.0), mix(float(normalize(1.0)), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), normalize(1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-4349.1063)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), float(_GLF_IDENTITY(mat4x3(round(length(normalize(1.0))), determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), (true ? dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))) : _GLF_FUZZED(1908.1986))))))), 0.0, abs(1.0), 0.0, abs(0.0), 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(round(length(normalize(1.0))), determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, abs(0.0), 1.0, 1.0, 1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0)))) - determinant(mat2(0.0, 0.0, sin(0.0), 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), max(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) - sin(0.0)))))) * 1.0), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))))), 1.0, 1.0, 1.0, cos(0.0), 1.0))))))), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(2.7)), bool(false))), 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(464.819) : 1.0)), 1.0))), clamp(normalize(1.0), normalize(1.0), normalize(1.0))), _GLF_IDENTITY(normalize(1.0), mix(float(normalize(1.0)), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), normalize(1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.484) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), vec2(mat2x3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), 1.0, 1.0, 1.0, 1.0)))))).x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), float(_GLF_IDENTITY(mat4x3(round(length(normalize(1.0))), _GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4x3(determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4x3(-3621.1506, 605.026, -4.2, -2.9, 445.870, -38.08, -203.295, 7.4, 2296.0554, -733.797, 8.4, -5.1)) : mat4x3(determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, abs(0.0), 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(round(length(normalize(1.0))), determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, abs(0.0), 1.0, 1.0, 1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), _GLF_IDENTITY(max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)))))))), mat3(mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), _GLF_IDENTITY(max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)))))))), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), _GLF_IDENTITY(max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))) + 0.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0))))))))))))))), 1.0, round(length(normalize(1.0))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, round(length(normalize(1.0))), sqrt(0.0)))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), normalize(1.0), normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(normalize(1.0), mix(float(normalize(1.0)), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), normalize(1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)) + (round(length(normalize(1.0))))), sqrt(0.0)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, cos(0.0), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), float(_GLF_IDENTITY(mat4x3(round(length(_GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? normalize(1.0) : _GLF_FUZZED(2.4))), normalize(1.0))))), determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.020) : 0.0)), 0.0, 0.0, abs(1.0), 0.0, abs(0.0), 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(round(length(normalize(1.0))), determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, abs(0.0), 1.0, 1.0, 1.0))))), sqrt(0.0)), mat3x2(mat3(mat3x2(injectionSwitch.x, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), sqrt(0.0))))))))))) > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), (virtual_gid) * 1u)) + 0u)))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, (64) >> 0), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(write_val) : buf[virtual_gid] = uint(subgroupAllEqual(read_val))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) && true)), true, true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) && true)), true, true)))))))), ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || ((! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, abs(0.0), 1.0, 1.0, tan(0.0), 0.0, 0.0)), mix(vec2((vec2(mat2x4(injectionSwitch, abs(0.0), 1.0, 1.0, tan(0.0), 0.0, 0.0)))[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED((-8.8)), (vec2(mat2x4(injectionSwitch, abs(0.0), 1.0, 1.0, tan(0.0), 0.0, 0.0)))[1]), bvec2(false, true)))).y)), true))))))))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
