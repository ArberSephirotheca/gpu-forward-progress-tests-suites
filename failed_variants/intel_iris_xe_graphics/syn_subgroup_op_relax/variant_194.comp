#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_38 {
 mat2x3 _f0;
} ;

struct _GLF_struct_36 {
 mat2 _f0;
 vec3 _f1;
 bvec4 _f2;
 float _f3;
} ;

struct _GLF_struct_35 {
 bvec4 _f0;
 float _f1;
 bool _f2;
 mat4 _f3;
 mat3 _f4;
 uvec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
 uvec2 _f1;
 uint next_virtual_gid;
 mat2x3 _f2;
 _GLF_struct_35 _f3;
 _GLF_struct_36 _f4;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
} ;

struct _GLF_struct_34 {
 vec4 _f0;
 mat4x2 _f1;
 _GLF_struct_33 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 int _f5;
} ;

struct _GLF_struct_31 {
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_30 {
 bvec3 _f0;
 ivec2 _f1;
 vec2 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 bvec4 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_28 _f0;
 _GLF_struct_32 _f1;
 bvec2 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_37 _f4;
 _GLF_struct_38 _f5;
} ;

struct _GLF_struct_25 {
 uvec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_24 {
 mat4x3 _f0;
 float _f1;
 vec4 _f2;
 bool _f3;
 int _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 vec4 _f1;
 uint _f2;
 vec4 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_23 {
 bvec4 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 vec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_20 {
 int _f0;
 bvec2 _f1;
 mat3 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_22 _f0;
 ivec2 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_26 _f3;
 uint virtual_gid;
 ivec4 _f4;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 uvec2 _f1;
 bvec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 vec2 _f1;
 ivec2 _f2;
 uvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 ivec3 _f1;
 _GLF_struct_16 _f2;
 int _f3;
 bool _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_13 {
 uint _f0;
 float _f1;
 mat3 _f2;
 bvec2 _f3;
 float _f4;
 bool _f5;
} ;

struct _GLF_struct_12 {
 bool _f0;
 vec4 _f1;
 int _f2;
 mat4x2 _f3;
 mat4x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 ivec3 _f1;
 uint _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 bvec2 _f3;
 bvec3 _f4;
 mat3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 mat2 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 mat2x4 _f4;
 float _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat2x4 _f1;
 bool _f2;
 ivec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 ivec2 _f3;
 mat2x4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 int _f1;
 uvec3 _f2;
 int _f3;
 mat3x2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat4x2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 vec4 _f1;
 uvec4 _f2;
 uint _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 bvec2 _f1;
 mat2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec2 _f2;
 _GLF_struct_2 _f3;
 mat4x2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_19 {
 uint workgroup_size;
 int _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_14 _f3;
 int _f4;
 mat3 _f5;
 _GLF_struct_18 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6)))), max(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6))))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) || false))))))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-6.2)), _GLF_FUZZED((+ 5.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! (_GLF_IDENTITY((false), ((false)) && true))) && true))) && true), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -6362.4000))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -6362.4000))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false))))))) && true)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? 7.3 : vec2(-8060.1928, _GLF_IDENTITY(227.799, 1.0 * (227.799))).t))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))) || false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(tan(injectionSwitch))) : injectionSwitch)).y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(gl_WorkGroupSize.x, 1, _GLF_struct_5(_GLF_struct_0(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), uvec3(1u), mat3(1.0)), _GLF_struct_1(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))), bvec3(bvec4(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))) && true), true && (_GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(! (! (bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(false, true, true)))), true && (! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) && true)))))))), bvec3(bvec4(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false))))), false)))), false)))))))))), bvec2(true), _GLF_struct_2(ivec3(1), bvec2(true), mat2(1.0), vec2(1.0)), mat4x2(1.0), _GLF_struct_3(mat2(1.0), vec4(1.0), uvec4(1u), 1u, true), _GLF_struct_4(ivec4(1), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-901.644)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(-901.644)), float(1.0), bool(true))) + 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (false ? _GLF_FUZZED(vec3(58.17, 1077.8691, 7.2)) : (vec3(1.0)) * mat3(1.0)))), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)))), _GLF_struct_9(mat3x4(1.0), _GLF_struct_6(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), 1, uvec3(1u), 1, mat3x2(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (1u) << 0u))))), _GLF_struct_7(_GLF_IDENTITY(ivec3(1), (ivec3(1)) >> ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(123586u)) : 1))])))))) - vec2(0.0, 0.0)).x))), bvec3(true), bvec4(true), ivec2(1), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, -95.31, -503.525))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true ? mat3(1.0) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, _GLF_IDENTITY(-95.31, (-95.31) - 0.0), _GLF_IDENTITY(-503.525, (true ? _GLF_IDENTITY(-503.525, clamp(-503.525, -503.525, -503.525)) : _GLF_FUZZED(round(55.60)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-928.352, -47.67, 463.072, -2.6, 8834.9110, -2.6, -23.48, -8.7, 3821.2280)))) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, _GLF_IDENTITY(-95.31, (-95.31) - 0.0), _GLF_IDENTITY(-503.525, (true ? _GLF_IDENTITY(-503.525, clamp(-503.525, _GLF_IDENTITY(-503.525, max(_GLF_IDENTITY(-503.525, mix(float(_GLF_FUZZED(2.6)), float(-503.525), bool(true))), -503.525)), -503.525)) : _GLF_FUZZED(round(55.60)))))), mat3(1.0) * (true ? mat3(1.0) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, _GLF_IDENTITY(-95.31, (-95.31) - 0.0), _GLF_IDENTITY(-503.525, (true ? _GLF_IDENTITY(-503.525, clamp(-503.525, -503.525, -503.525)) : _GLF_FUZZED(_GLF_IDENTITY(round(55.60), 1.0 * (_GLF_IDENTITY(round(55.60), float(_GLF_IDENTITY(mat4(round(55.60), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0), transpose(transpose(mat4(round(55.60), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))))))))))))))) / mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.7)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), mat4(1.0) * (mat4(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true ? mat3(1.0) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, _GLF_IDENTITY(-95.31, (-95.31) - 0.0), _GLF_IDENTITY(-503.525, (true ? _GLF_IDENTITY(-503.525, clamp(-503.525, -503.525, -503.525)) : _GLF_FUZZED(round(55.60)))))), (_GLF_IDENTITY(true ? mat3(1.0) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, _GLF_IDENTITY(-95.31, (-95.31) - 0.0), _GLF_IDENTITY(-503.525, (true ? _GLF_IDENTITY(-503.525, clamp(-503.525, -503.525, -503.525)) : _GLF_FUZZED(round(55.60)))))), mat3(1.0) * (true ? mat3(1.0) : _GLF_FUZZED(mat3(-8.1, -2.1, 45.39, -613.138, -3.7, -6.1, 6.2, _GLF_IDENTITY(-95.31, (-95.31) - 0.0), _GLF_IDENTITY(-503.525, (true ? _GLF_IDENTITY(-503.525, clamp(-503.525, -503.525, -503.525)) : _GLF_FUZZED(round(55.60))))))))) / mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.7)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - mat3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5908.4977)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_8(vec2(1.0), mat2x4(1.0), true, ivec3(1), uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, (1u) - 0u), 1u))))), _GLF_struct_14(_GLF_struct_10(ivec2(1), mat3x4(1.0), uvec2(1u), bvec2(true), bvec3(true), mat3(1.0), ivec3(1)), mat2(1.0), _GLF_struct_11(_GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-38.12, -399.801, 6133.5885, 659.088)) : mat2(1.0)))))), ivec3(1), 1u, mat4x3(1.0)), _GLF_struct_12(true, _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))), min(vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))), _GLF_IDENTITY(vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))), (_GLF_IDENTITY(vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))), mix(vec4(_GLF_FUZZED((false ? 1.5 : 4645.3313)), (vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))))[1], _GLF_FUZZED(0.9), (vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))))[3]), vec4((vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))))[0], _GLF_FUZZED(-2735.2160), (vec4(vec4(_GLF_IDENTITY((vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0), (true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.9, -5.4, -7.4, 2.6)))))))[2], _GLF_FUZZED((0.2))), bvec4(true, false, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(80070))), 1)))), mat4x2(1.0), mat4x2(1.0), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))), max(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))), uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))))))), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(8.4))), 1.0))) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_13(1u, 1.0, mat3(1.0), bvec2(true), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(clamp(8867.0467, 508.796, -2.4)) : 1.0)), true)), 1, mat3(1.0), _GLF_struct_18(_GLF_struct_15(vec4(1.0), _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp(_GLF_IDENTITY((vec2(1.0))[0], (true ? (vec2(1.0))[0] : _GLF_FUZZED(3.7))), (vec2(1.0))[0], (vec2(1.0))[0])), _GLF_FUZZED(-3.7)), vec2(_GLF_FUZZED(-205.541), (vec2(1.0))[1]), bvec2(false, true))), ivec2(_GLF_IDENTITY(1, (1) << 0)), uvec3(1u), bvec2(true)), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (5786 & 0)), (1) | (1))), _GLF_struct_16(1, bvec3(true), ivec3(1), mat4x2(1.0)), 1, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_struct_17(mat4x2(1.0), uvec2(1u), bvec4(true), mat2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || false), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_19.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (false), false))), bool(bool(! (bool(bvec2(! (false), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_22(_GLF_struct_20(1, bvec2(true), mat3(1.0), uvec3(1u), 1u), _GLF_struct_21(mat3x2(1.0), uvec2(1u), _GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1)))) * ivec4(1, 1, 1, 1)))), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(float(1.0)))), mix(vec2((vec2(_GLF_IDENTITY(1.0, float(float(1.0)))))[0], (vec2(_GLF_IDENTITY(1.0, float(float(1.0)))))[1]), vec2(_GLF_FUZZED(-86.44), _GLF_FUZZED(6.4)), bvec2(false, false))), (false ? _GLF_FUZZED((vec2(962.942, 59.27))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(float(1.0)))), (vec2(_GLF_IDENTITY(1.0, float(float(1.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), vec4(1.0)), vec2(1.0)), ivec2(1), _GLF_struct_23(bvec4(true), mat4x2(1.0), mat3x2(1.0)), _GLF_struct_26(_GLF_struct_24(mat4x3(1.0), 1.0, vec4(1.0), true, _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(int(4), int(ivec2(_GLF_IDENTITY(int(4), (int(4)) * 1), 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))), (min(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) | (min(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(14392))), 4, 4))), int(4))) >> 0))), ivec4(1)), vec4(1.0), 1u, _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], (vec4(1.0))[1], _GLF_FUZZED((false ? 477.174 : -964.213)), (vec4(1.0))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED((812.626)), _GLF_FUZZED(-4.9), (vec4(1.0))[2], _GLF_FUZZED(8.2)), min(vec4(_GLF_FUZZED((812.626)), _GLF_FUZZED(-4.9), (vec4(1.0))[2], _GLF_FUZZED(8.2)), vec4(_GLF_FUZZED((812.626)), _GLF_FUZZED(-4.9), (vec4(1.0))[2], _GLF_FUZZED(8.2)))), bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true, _GLF_IDENTITY(false, bool(bool(false)))))), _GLF_struct_25(uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), clamp((1u), (1u), (1u)))) / 1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << (198712u & 0u))) - 0u))))))), bvec4(true))), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uvec4(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))) << 0u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))), max(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))), ~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))))))) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), (subgroup_size) + 0u), 0u, (0u | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id, ivec4(1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-324.401), (true ? _GLF_FUZZED(-324.401) : _GLF_FUZZED(-5.2)))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8764.1720)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(761.526))))), false, true, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), true && (! (true && (false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_28(mat3x2(1.0)), _GLF_struct_32(_GLF_struct_29(mat2x3(1.0)), bvec4(true), _GLF_struct_30(bvec3(true), _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), 0, 1), _GLF_IDENTITY(min(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | _GLF_IDENTITY((ivec2(1)), max((ivec2(1)), (ivec2(1))))), 0, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), 0, 1)), (_GLF_IDENTITY(min(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | _GLF_IDENTITY((ivec2(1)), max((ivec2(1)), (ivec2(1))))), 0, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), 0, 1)), (_GLF_IDENTITY(min(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | _GLF_IDENTITY((ivec2(1)), max((ivec2(1)), (ivec2(1))))), 0, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), 0, 1)), max(min(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | _GLF_IDENTITY((ivec2(1)), max((ivec2(1)), (ivec2(1))))), 0, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), 0, 1)), min(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | _GLF_IDENTITY((ivec2(1)), max((ivec2(1)), (ivec2(1))))), 0, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), 0, 1))))) - ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec4(0, 0, 0, 0))))), vec2(1.0), mat2x3(1.0), mat4x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), (mat4(1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, log(1.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat3x4(1.0)), _GLF_struct_31(1.0, ivec2(1))), bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_struct_34(vec4(1.0), mat4x2(1.0), _GLF_struct_33(ivec3(1)), mat3x2(1.0), uvec2(1u), 1), _GLF_struct_37(uvec4(1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << (0u | 0u))) + 0u)), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << (0u | 0u))) + 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (true ? uvec4(subgroup_id, 0u, 0u, 0u) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(195842u, 92071u, 179573u, 76862u)), (_GLF_FUZZED(uvec4(195842u, 92071u, 179573u, 76862u))) - uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (true ? uvec4(subgroup_id, 0u, 0u, 0u) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(195842u, 92071u, 179573u, 76862u)), (_GLF_FUZZED(uvec4(195842u, 92071u, 179573u, 76862u))) - uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u)))))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) >> 0)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) >> 0)))))) % subgroup_size), mat2x3(1.0), _GLF_struct_35(bvec4(true), 1.0, true, mat4(1.0), mat3(1.0), uvec2(1u), uvec3(1u)), _GLF_struct_36(mat2(1.0), vec3(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_struct_38(mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[_GLF_struct_replacement_27.virtual_gid] = 1, (buf[_GLF_struct_replacement_27.virtual_gid] = 1) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_39._f4.next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13254))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false))))))))) && true))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1451.6303, -3.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(max(1.0, -1.1)))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_39._f4.next_virtual_gid, ~ (~ (_GLF_struct_replacement_39._f4.next_virtual_gid)))], uint(2), _GLF_IDENTITY(4, (4) << 0), 64, 0);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
}
