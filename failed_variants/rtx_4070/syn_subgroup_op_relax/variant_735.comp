#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), (bool(bvec2(! (false), true))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.1)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) > injectionSwitch.y))))) && true)), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (false), ! (! (_GLF_IDENTITY(false, (false) || false) || (false))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), clamp(exp(vec2(0.0, 0.0)) * (injectionSwitch), _GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (injectionSwitch), max(exp(vec2(0.0, 0.0)) * (injectionSwitch), exp(vec2(0.0, 0.0)) * (injectionSwitch))), exp(vec2(0.0, 0.0)) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))), true, false, true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))), true, false, true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), false, false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))) && true)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(870.540, 27.46)))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), clamp(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 1u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), ((6u) | (6u)) * 1u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), (true ? (6u) : _GLF_FUZZED(uint(-75330))))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (true ? _GLF_IDENTITY((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), clamp((uint(6u)), _GLF_IDENTITY((uint(6u)), ((uint(6u))) ^ 0u), (uint(6u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec3(6u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, 0u | (6u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u), min((6u), (6u))) / 1u))))))) | ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), ~ (_GLF_IDENTITY(~ ((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), max(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), uint(uvec3(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), 0u, 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), max(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), uint(uvec3(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), 0u, 0u))))))) / 1u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), clamp(uvec3(1u, 0u, 0u), uvec3(1u, 0u, 0u), uvec3(1u, 0u, 0u)))) << uvec3(0u, 0u, 0u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), clamp((uint(6u)), (uint(6u)), _GLF_IDENTITY((uint(6u)), min((uint(6u)), (uint(6u)))))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (~ _GLF_IDENTITY(((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6u, (6u) | (6u))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(6u, (6u) | (6u))), (~ (_GLF_IDENTITY(6u, (6u) | (6u)))) | (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), max(_GLF_IDENTITY((6u) | (6u), (_GLF_IDENTITY((6u) | (6u), uint(uvec3((6u) | (6u), 1u, 0u)))) << 0u), (6u) | (6u))))))), (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))) - 0u)), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))) >> 0u) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((6u), clamp((6u), (6u), (6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) - 0u))), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))) - _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), min(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, 0u ^ (6u)))), (6u) | (6u)))))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(uint(6u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, 0u ^ (6u))))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))) - 0u)), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), min(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) / 1u, max((uint(6u)) / 1u, (uint(6u)) / 1u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) - 0u)) >> 0u))) : _GLF_FUZZED((virtual_gid % num_workgroup)))), ~ (~ (_GLF_IDENTITY((uint(2)) / _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), clamp(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), clamp(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) | (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), clamp(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 1u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), ((6u) | (6u)) * 1u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), (false ? _GLF_FUZZED(virtual_gid) : (uint(6u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), (true ? (6u) : _GLF_FUZZED(uint(-75330))))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (true ? _GLF_IDENTITY((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), clamp((uint(6u)), _GLF_IDENTITY((uint(6u)), ((uint(6u))) ^ 0u), (uint(6u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec3(6u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) / 1u))))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) / 1u, 0u + ((uint(6u)) / 1u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), ~ (_GLF_IDENTITY(~ ((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), max(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), 0u, 0u)), max(uint(uvec3(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), 0u, 0u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(1u, (1u) + 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), clamp((uint(6u)), (uint(6u)), _GLF_IDENTITY((uint(6u)), min((uint(6u)), (uint(6u)))))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (~ _GLF_IDENTITY(((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), max(_GLF_IDENTITY((6u) | _GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))), (_GLF_IDENTITY((6u) | (6u), uint(uvec3((6u) | (6u), 1u, 0u)))) << 0u), (6u) | (6u))))))), (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))) - 0u)), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, 6u)), (6u) | (6u)))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), min(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), ~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))))))))) >> 0u, max((_GLF_IDENTITY(_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), min(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), ~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))))))))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), min(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), ~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))))))))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), min(~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u))))), ~ (_GLF_IDENTITY((uint(6u)), 0u ^ ((uint(6u)))))))))) >> 0u) | 0u)))) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, (6u) | 0u), 6u, _GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))))))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((6u), clamp((6u), (6u), (6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) - _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_size) : ~ (0u)))))))), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (((uint(2)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(6u, (6u) | (6u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))) - 0u)), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(6u, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(6u, 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(6u, 0u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)))))))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ((~ (_GLF_IDENTITY(6u, (6u) | (6u))))) | ((~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6u, (6u) | (6u)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ~ (~ ((~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))) - 0u), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))) - 0u)), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, subgroup_id)) : _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u), ~ (~ ((6u)))) | (6u)))), min(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) | (6u)), min(_GLF_IDENTITY(6u, (6u) | (6u)), _GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) | (6u)), min(_GLF_IDENTITY(6u, (6u) | (6u)), _GLF_IDENTITY(6u, (6u) | (6u)))))))))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u), ~ (~ ((6u)))) | (6u)))), min(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) | (6u)), min(_GLF_IDENTITY(6u, (6u) | (6u)), _GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) | (6u)), min(_GLF_IDENTITY(6u, (6u) | (6u)), _GLF_IDENTITY(6u, (6u) | (6u)))))))))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u), ~ (~ ((6u)))) | (6u)))), min(~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) | (6u)), min(_GLF_IDENTITY(6u, (6u) | (6u)), _GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) | (6u)), min(_GLF_IDENTITY(6u, (6u) | (6u)), _GLF_IDENTITY(6u, (6u) | (6u)))))))))), ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))))) | (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) - 0u)), (uint(6u)) / 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) - 0u)) >> 0u))) : _GLF_FUZZED((virtual_gid % num_workgroup)))))))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1]))) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(3404.1974, -0.8, -53.37)) : 1.0)), 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0) * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), sin(0.0), 0.0, 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(3404.1974, -0.8, -53.37)) : 1.0)), 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), sin(0.0), 0.0, 1.0))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(44.39))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(3404.1974, -0.8, -53.37)) : 1.0)), 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - sin(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), sin(0.0), 0.0, 1.0))) > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(3404.1974, -0.8, -53.37)) : 1.0)), 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0))))), sin(0.0), 0.0, 1.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
