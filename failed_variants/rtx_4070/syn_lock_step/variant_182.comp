#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true)))), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, clamp(_GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-0.5))), (0.0) / 1.0, _GLF_IDENTITY((0.0) / 1.0, float(mat3((0.0) / 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)))))), 0.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(7326.7251, (_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), (_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), min(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), _GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251))))) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), (float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), (_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), min(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), _GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251))))) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0)))) + 0.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), -5663.4839, 5.9, 13.47, 96.51, _GLF_IDENTITY(578.182, clamp(578.182, 578.182, 578.182))))))), mix(float(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true)))), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, clamp(_GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(-0.5))), (0.0) / 1.0, _GLF_IDENTITY((0.0) / 1.0, float(mat3((0.0) / 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)))))), 0.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(7326.7251, (_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), (_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), min(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), _GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251))))) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), (float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), (_GLF_IDENTITY(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), min(_GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251)), _GLF_IDENTITY(7326.7251, max(7326.7251, 7326.7251))))) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0)))) + 0.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), -5663.4839, 5.9, 13.47, 96.51, _GLF_IDENTITY(578.182, clamp(578.182, 578.182, 578.182)))))))), float(_GLF_FUZZED((true ? -804.220 : -9.4))), bool(false)))), 1.0, 0.0, 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3258.9504)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) + 0u)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(roundEven(6.6))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8484.6493) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), min(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false)))) : _GLF_FUZZED(intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false)))) : _GLF_FUZZED(intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))), (true ? vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false)))) : _GLF_FUZZED(intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.1, -6.2))))))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8484.6493) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-921.223))), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, abs(1.0), 0.0))) : _GLF_FUZZED(dot(vec3(-7818.1881, 94.95, 26.17), vec3(2026.0000, -8368.5555, -2.9))))), 0.0, 0.0, 1.0, 1.0))))))), min(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0), vec4(mat3x2(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0), 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(30.44)), bool(false)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))))) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false))), min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false))), 1.0 * ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false)))))))) : _GLF_FUZZED(intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), max((false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), ((false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * 1.0))))) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false)))) : _GLF_FUZZED(intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))), (true ? vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-758.855)), float(1.0), bool(true))), 1.0))))) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(false)))), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.5)))) : _GLF_FUZZED(4017.3371))))))), float(_GLF_FUZZED(float(86767u))), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))) + 0.0) : _GLF_FUZZED(intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.1, -6.2))))))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false)), true)))), true))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3063.9539))), min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.8)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)))))))))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))))))))))))), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * workgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec4(subgroup_id, 1u, 0u, 0u)), 1u, 0u), (true ? uvec3(uint(uvec4(subgroup_id, 1u, 0u, 0u)), 1u, 0u) : _GLF_FUZZED(uvec3(129909u, 98798u, 96197u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 0u, 0u)), _GLF_IDENTITY((uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, (1u) / 1u), 0u, 0u))), max((uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, (1u) / 1u), 0u, 0u))), (uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, (1u) / 1u), 0u, 0u))))) | (_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 0u, 0u)), (true ? uint(uvec4(subgroup_id, 1u, 0u, 0u)) : _GLF_FUZZED(subgroup_size))))))))))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u))) >> 0u) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) / 1u)), uint(5u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), max(0u | (subgroup_size), 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u))) >> 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) ^ 0u))) >> 0u)))) ^ 0u) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) / 1u)), uint(5u)))))))) * 1u), max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec3((subgroup_local_id), 1u, 1u)), uint(uvec2(uint(uvec3((subgroup_local_id), 1u, 1u)), 0u))))) | ((subgroup_local_id))) + _GLF_IDENTITY(0u, 0u ^ (0u))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> 0)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_size, subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)), true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 buf[virtual_gid] = 1;
 _GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ((! (injectionSwitch.x < injectionSwitch.y))) || false)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? _GLF_IDENTITY(2, (2) - 0) : _GLF_FUZZED((-23516 ^ -90114)))), (_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))) && true), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), int(ivec2(_GLF_IDENTITY(2, (2) - 0), 1))))), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), 0 ^ (_GLF_IDENTITY(2, (2) - 0))))) : _GLF_FUZZED((-23516 ^ -90114)))), (true ? buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(2), min(int(2), int(2)))), ~ (~ (int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))), false)), true)))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false) ? _GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, ((2) - 0) | ((2) - 0))) : _GLF_FUZZED((-23516 ^ -90114)))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    barrier();
  }
}
