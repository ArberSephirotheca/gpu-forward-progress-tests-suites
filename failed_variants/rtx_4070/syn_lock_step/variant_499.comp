#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9471.2048, -447.962), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(-9471.2048, -447.962)))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9471.2048, -447.962)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9471.2048, float(vec3(_GLF_IDENTITY(-9471.2048, (false ? _GLF_FUZZED(vec4(4770.3798, -113.250, 6.1, 1.8)[1]) : -9471.2048)), 0.0, 1.0))), -447.962)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9471.2048, -447.962), vec2(vec4(_GLF_IDENTITY(vec2(-9471.2048, -447.962), (vec2(-9471.2048, -447.962)) - vec2(0.0, 0.0)), 0.0, cos(0.0))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9471.2048, -447.962)))))[0], _GLF_FUZZED(34.69)), vec2(_GLF_FUZZED(1.9), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9471.2048, -447.962)))))[1], min((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9471.2048, -447.962)))))[1], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9471.2048, -447.962)))))[1]))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9471.2048, -447.962)))))).x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), false || (! (_GLF_IDENTITY(! (false), false || (! (false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), false || (! (_GLF_IDENTITY(! (false), false || (! (false)))))), false)))))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))), true), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(true, true && (true)))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec2(bool((false)), true)))))))))), true), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), false, true))), true)))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)))))) && true)), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true)))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), true))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), true))), true, true)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), false))), false))))))))))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), true), true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))))), true)))), false, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), (_GLF_IDENTITY(bool(bvec4((false), false, false, false)), false || (bool(bvec4((false), false, false, false))))) || false)), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))), false || (! (false)))))), true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))))))))))))), false, true)))))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec2(bool((false)), true)))))))))), true), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), false, true))), true)))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)))))) && true)), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true)))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), true))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), true))), true, true)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), false))), false))))))))))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), true), true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))))), true)))), false, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), (_GLF_IDENTITY(bool(bvec4((false), false, false, false)), false || (bool(bvec4((false), false, false, false))))) || false)), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))), false || (! (false)))))), true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))))))))))))), false, true)))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec2(bool((false)), true)))))))))), true), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), false, true))), true)))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false)))))) && true)), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true)))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), true))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))), true))), true, true)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true), false))), false))))))))))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), true), true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), true))))))))))), true)))), false, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), (_GLF_IDENTITY(bool(bvec4((false), false, false, false)), false || (bool(bvec4((false), false, false, false))))) || false)), false || (! (false)))))), true), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))), false || (! (false)))))), true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true), true))))))))))))))))))), false, true)))))), true)))))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2039.2923))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(min(-41.61, 3649.9199))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u & 33167u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) ^ (0u & 33167u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u & 33167u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) ^ (0u & 33167u))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u & 33167u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) ^ (0u & 33167u))))), ((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u & 33167u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) ^ (0u & 33167u)))))) | 0u) : _GLF_FUZZED(atomicXor(subgroup_local_id, 60835u)))) | 0u), 0u, 0u) ^ (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY((false) && true, ((false) && true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))), false, true, false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec4(-436.125, -2.2, 64.58, -26.69)) : _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec4(1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat4(1.0)))), vec4(0.0, 1.0, log(1.0), 1.0)), dot(vec4(1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, log(1.0), 1.0))) + (1.0)))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) || false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), (workgroup_size) << 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(73.58) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), ! (! (bool(bvec3((false), true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false))) || false, bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false))) || false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.1)), bool(false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u)) * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, min(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, max(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y) + 0u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, subgroup_id)) * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, max(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y)), GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y)) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).z);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.5), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-72.44)), bvec2(true, false))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(131.137)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.1)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), true, true, true)))) && true)), true, true)), _GLF_IDENTITY((bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true, true))), (_GLF_IDENTITY((bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, (true) || false), true))), true && ((bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, (true) || false), true)))))) && true) || false)), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, true, false)), ! (! (bool(bvec4(bool(bool(false)), true, true, false))))))))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, true, false)), ! (! (bool(bvec4(bool(bool(false)), true, true, false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(433.049))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(433.049), min(_GLF_IDENTITY(_GLF_FUZZED(433.049), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5152.1792)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-5152.1792)), mix(float(_GLF_FUZZED(94.32)), float(float(_GLF_FUZZED(-5152.1792))), bool(true))), (float(_GLF_FUZZED(-5152.1792))) * 1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-5152.1792, (-5152.1792) - 0.0))))), float(_GLF_FUZZED(433.049)), _GLF_IDENTITY(bool(true), false || (bool(true))))), _GLF_FUZZED(_GLF_IDENTITY(433.049, max(433.049, 433.049)))))))), float(_GLF_FUZZED(-1.2)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))) || false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x))) - tan(log(1.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y)))), false, true))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-67.74)))) / 1.0))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(false, (false) && true))), true && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false, false, false))), ((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false, false, false)))) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(94.11)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED((-9.7))), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat4(exp(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0, 0.0))))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42213) : 1)), (buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(42213, _GLF_IDENTITY((_GLF_IDENTITY(42213, _GLF_IDENTITY(_GLF_IDENTITY((42213), 0 ^ ((42213))), 0 | ((42213))) - 0)), ((_GLF_IDENTITY(42213, _GLF_IDENTITY((42213), 0 | ((42213))) - 0))) ^ 0) / 1)), (_GLF_FUZZED(42213)) | 0) : 1, clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0), _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0)), (0 | (_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(_GLF_IDENTITY(42213, (42213) / 1))) | 0))) | (0 | (_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(42213, ~ (~ (42213)))), (_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_IDENTITY(_GLF_FUZZED(42213), max(_GLF_FUZZED(42213), _GLF_FUZZED(42213)))) << 0)) | _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0), (false ? _GLF_FUZZED(61054) : _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0))))) : 1, false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(_GLF_IDENTITY(42213, ~ (~ (42213))))) | 0) : 1), int(int((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1)))) / 1)))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42213) : 1)), (buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(42213, (_GLF_IDENTITY(42213, (42213) - 0)) / _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (_GLF_FUZZED(42213)) | 0) : _GLF_IDENTITY(1, (1) | (1)), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(42213, (false ? _GLF_FUZZED(15928) : 42213))), (_GLF_FUZZED(42213)) | 0) : 1, false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1), int(int((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1)))) / 1)))))) - 0u), (_GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42213) : 1)), (buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(42213, (_GLF_IDENTITY(42213, (42213) - 0)) / 1)), (_GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_FUZZED(42213) : _GLF_FUZZED(8595)))) | 0) : 1, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1, false ? _GLF_IDENTITY(_GLF_FUZZED(42213), _GLF_IDENTITY((_GLF_FUZZED(42213)), ((_GLF_FUZZED(42213))) * 1) | 0) : 1, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1), int(int((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1)))), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1), int(int((false ? _GLF_IDENTITY(_GLF_FUZZED(42213), (_GLF_FUZZED(42213)) | 0) : 1))))) ^ (0 >> _GLF_IDENTITY(int(7), int(7)))) / 1)))))) - 0u)) * 1u)) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x] = 2, (true ? _GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x] = 2, (true ? buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x] = 2 : _GLF_FUZZED(next_virtual_gid))) : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, true && (true)) && ((false))))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), true && ((false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1842.8580)), float(_GLF_IDENTITY(injectionSwitch.y, length(0.0) + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.1)), bool(false)))))), bool(true))), injectionSwitch.y))))))), false, false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)), float(mat3(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-9.5)), bool(false)))))), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sqrt(1.0))))) < injectionSwitch.y))))))))))), true && ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)), float(mat3(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-9.5)), bool(false)))))), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sqrt(1.0))))) < injectionSwitch.y))))))))))))) || false))) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))), true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
