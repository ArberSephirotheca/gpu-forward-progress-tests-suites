#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) >> 0))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) >> (0 | 0))], gl_NumWorkGroups[2])).x, (gl_NumWorkGroups.x) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (gl_NumWorkGroups.x) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (gl_NumWorkGroups.x) | 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (gl_NumWorkGroups.x) | 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(int(2)))])).x, (gl_NumWorkGroups.x) | 0u)))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sqrt(vec2(0.0, 0.0))) * mat2(1.0))) / vec2(1.0, 1.0)).y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-54.56, -7013.3263, -7.9, -3589.4693)) : mat2(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false)))))))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], max((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[0])), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-7979.1940), _GLF_FUZZED(7.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-54.56, -7013.3263, -7.9, -3589.4693)) : mat2(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false)))))))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0)))).y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-54.56, -7013.3263, -7.9, -3589.4693)) : mat2(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false)))))))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-54.56, -7013.3263, -7.9, -3589.4693)) : mat2(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false)))))))))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-54.56, -7013.3263, -7.9, -3589.4693)) : mat2(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false)))))))))))))) / vec2(1.0, 1.0)).y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))), (min((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(-56.95, -49.45)))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) / cos(vec2(0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-54.56, -7013.3263, -7.9, -3589.4693)) : mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false))))))), max(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false))))))), (_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(216.160)), bool(false)))))))) - 0.0)))))))) / vec2(1.0, 1.0)).y))))), false, false), true))))))))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))).x) >> (0u ^ 0u));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, ~ (~ (1))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x) / cos(0.0)) < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x) / cos(0.0)) < injectionSwitch.y), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x) / cos(0.0)) < injectionSwitch.y)) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) + 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)) >> 0u), ~ (~ (subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_id * subgroup_size, 0u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_id * subgroup_size, 0u))), clamp(uvec2(uvec2(uvec2(subgroup_id * subgroup_size, 0u))), uvec2(uvec2(uvec2(subgroup_id * subgroup_size, 0u))), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_id * subgroup_size, 0u))), uvec2(1u, 1u) * (uvec2(uvec2(uvec2(subgroup_id * subgroup_size, 0u)))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false || (false)))))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false || (false)))))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true, true)))), true))), bvec3(bvec4(bvec3(! (false), true, true), false))))))), bool(bvec4(false, false, true, true))), false)))));
   do
    {
     for(int _injected_loop_counter = ((0 & -54512) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(atomicExchange(subgroup_local_id, packUnorm2x16(_GLF_IDENTITY(vec2(-1.8, 5.2), clamp(_GLF_IDENTITY(vec2(-1.8, 5.2), max(vec2(-1.8, 5.2), vec2(-1.8, 5.2))), vec2(-1.8, 5.2), vec2(-1.8, 5.2)))))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       buf[virtual_gid] = 1;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(bool(false), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(bool(false), false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(bool(false), false, false, false)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bvec2(((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), bool(bool((! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(((! (bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (bool(false)))))) || false)), bool(bvec4(bool(false), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(bool(false), _GLF_IDENTITY(false, (false) || false), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), bool(bvec2(((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, false))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), false, false, false)), true)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true)), true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))))))))))), (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))))))))))) || false)), (((_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))) && true)))))))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, true, true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-948.296, -418.121)))).y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, true, true))), true && (false))))))
        barrier();
       buf[next_virtual_gid] = _GLF_IDENTITY(2, _GLF_IDENTITY(max(2, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), 2))), clamp(_GLF_IDENTITY(max(2, 2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(2, 2) : _GLF_FUZZED(-28110))), max(2, 2), max(2, 2))));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (false)))), false || (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), false, true)))))))))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), true, false)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))))))), _GLF_IDENTITY(true, (true) || false), true)))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), false)))))))))), (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-45.00))) > injectionSwitch.y)))), false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! (bool(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))), (bool(_GLF_IDENTITY(bool(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! (bool(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(45.29)), bool(false))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(691.995)), vec2(_GLF_FUZZED((-32.44)), (injectionSwitch)[1]), bvec2(false, true))).y), float(_GLF_FUZZED(45.29)), bool(false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, log(1.0)))) > injectionSwitch.y)))))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))), bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             buf[next_virtual_gid] = _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) - 0)));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bvec2(bvec2(bvec2(bool(_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(bool(_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y)))))), true, true)))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false)))))), false || ((! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false)))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false || (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_WRAPPED_LOOP(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), true && (! (bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ((_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), true && (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-292.852), _GLF_FUZZED(-71.87)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < injectionSwitch.y)))))) || false))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (bool(_GLF_WRAPPED_LOOP(false)))))), (bool(bool((! (bool(_GLF_WRAPPED_LOOP(false))))))) || false), ! (! (_GLF_IDENTITY(bool(bool((! (bool(_GLF_WRAPPED_LOOP(false)))))), (bool(bool((! (bool(_GLF_WRAPPED_LOOP(false))))))) || false)))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! (bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))) && true)))), true && ((! (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! (bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)), true && (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))) && true))))))))))))));
        }
      }
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), ! (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec4(! (bool(bool(true))), true, true, true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((true), ((true)) && true)), (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, false)))) && true)));
    }
  }
 else
  {
  }
}
