#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

struct _GLF_struct_6 {
 bool _f0;
 mat2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat3x2 _f1;
 vec2 _f2;
 bvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 bvec2 _f1;
 float _f2;
 mat4 _f3;
 mat4x2 _f4;
 vec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 uvec2 _f1;
 uvec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 int _f0;
 bvec4 _f1;
 mat4 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 uint _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec3 _f1;
 uvec3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 float _f2;
 uint subgroup_local_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(false)
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y = subgroup_id;
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   (((~ (~ (((((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = (0u | (((subgroup_size) ^ 0u)))) * 1u)) - (((((((((((((min(((max(((max((clamp((max(21613u, ((21613u) / 1u))), (max(21613u, ((21613u) / 1u))), (max(21613u, ((21613u) / 1u))))), (clamp((max(21613u, ((21613u) / 1u))), (max(21613u, ((21613u) / 1u))), (max(21613u, ((21613u) / 1u)))))))) / 1u, ((clamp((max(21613u, ((21613u) / 1u))), (max(21613u, ((21613u) / 1u))), (max(21613u, ((21613u) / 1u)))))) / 1u))), ((uint(uint((max(~ ((((false ? (96738u) : ((false ? (173729u) : (((~ (21613u))) >> 0u))))) | (~ (21613u)))), ~ (((max((~ (21613u)), (~ (21613u)))) | (~ (21613u))))))))))))) | 0u) & 0u) >> (((uint(0u))) / 1u)) ^ ((0u) | (0u)))) * 1u)) << (0u << ((((~ (~ (((false ? (subgroup_id) : (max((clamp(uint(2u), uint(2u), uint(2u))), uint(2u))))))))) ^ 0u)))) | 0u)))))))) / 1u);
  }
 while(((false) && true));
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_5(_GLF_struct_0((abs(vec2(1.0, 1.0)) * (((((max(min(vec2(1.0), vec2((max(1.0, ((clamp(min(1.0, 1.0), (max(min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0)))))))), min(vec2(1.0), vec2((max(1.0, ((clamp(min(1.0, 1.0), (max(min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0)))))))))))) / vec2(1.0, 1.0)))), vec3(1.0), uvec3(1u), uvec3(1u)), _GLF_struct_1(((int((max(ivec4((((1)) | ((1))), 0, 1, 0), ivec4((((1)) | ((1))), 0, 1, 0))))) | (1)), bvec4(true), mat4(((false ? (- 7.0) : 1.0))), mat3x2(1.0), bvec2(true), 1u, ivec4(1)), _GLF_struct_2((clamp(ivec3(1), ivec3(1), ivec3(1))), uvec2(1u), uvec3(1u), mat3(1.0)), _GLF_struct_3(vec4(1.0), (bvec2(bvec4(bvec2(true), ((true) || false), true))), 1.0, (transpose(transpose(mat4((clamp(((false ? (8.6) : 1.0)), ((false ? (8.6) : 1.0)), ((false ? (8.6) : (float((transpose(transpose(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))))))))), mat4x2(1.0), vec3(1.0), vec3((float(((mat3x2((float(mat4x3(1.0, (min(((0.0) / 1.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_struct_4(vec4(1.0), mat3x2(1.0), vec2(1.0), bvec3(true), 1u), vec2(1.0)), _GLF_struct_6(true, mat2(1.0), uvec3(1u)), 1.0, gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(((injectionSwitch.x < (float(vec3(injectionSwitch.y, 0.0, log(abs(1.0))))))))
  {
   GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.z = workgroup_id;
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * (((false ? (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) : (((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) | ((uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id)))) << uvec3(0u, 0u, 0u))))).z;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + (((clamp((max(_GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id)), (max(_GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id)), (max(_GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id)))) ^ (~ (~ (0u)))));
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 uint next_virtual_gid = (((((((false ? (atomicAnd(workgroup_size, workgroup_id)) : clamp(workgroup_base + ((true ? (min(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(1u, 1u, 1u)), ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(1u, 1u, 1u)))) : (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id))).y * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, workgroup_base + (min(((((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(1u, 1u, 1u)).y) | (((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(1u, 1u, 1u)).y)), (min(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(1u, 1u, 1u)), ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(1u, 1u, 1u)))).y)) * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (0u + ((((uint(uvec3(workgroup_base + ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id) * uvec3(((1u) - (0u ^ (0u))), 1u, 1u)).y * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u, 0u)))) << (uint(uvec4(0u, 1u, 1u, 1u))))))))))) << 0u)) >> (0u ^ (0u))) + ((_GLF_struct_replacement_7.subgroup_local_id + 1) % (~ (~ ((clamp(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))))));
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   for(int _injected_loop_counter = ((1) | (1)); (false || ((bool(bvec2(_injected_loop_counter > (~ ((clamp(((min((clamp((~ (0)), (~ (0)), (~ (0)))), (clamp((~ (0)), (~ (0)), (~ (0)))))) + 0), ~ (0), ~ (0))))), true))))); _injected_loop_counter --)
    {
     ((((1u << (uint(7u))) >> (uint(7u))) ^ 1u) + ((((0u + (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x = ((next_virtual_gid) << 0u)))) / 1u)));
    }
  }
 else
  {
  }
 if(false)
  {
  }
 else
  {
   do
    {
     buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1;
    }
   while(false);
  }
 if((bool(bvec4(false, false, false, true))))
  {
  }
 else
  {
   do
    {
     if(_GLF_struct_replacement_7.subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)
      {
       int i = 0;
       if((bool(bvec2(((((((((false || (bool(bool((true && (injectionSwitch.x > ((false ? (4093.7702) : injectionSwitch.y)))))))))) || ((injectionSwitch.x > injectionSwitch.y)))))) && true), true))))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((1) | ((0 + ((0 ^ (1)))))); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((true && (((((injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))
            {
             if(false)
              {
              }
             else
              {
               atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x], uint(2), ((((true && ((bool((bvec2(bvec4((bvec2(bvec2(bvec2(false, true)))), false, true))))))) ? (- 9495) : (clamp((4), (4), (((((0 | (~ (((((injectionSwitch.x > injectionSwitch.y)) ? (- 47289) : ~ (((4))))))))) + 0)) / 1))) >> (((true ? (0 | 0) | 0 : (i))))))), ((((((64) | (64))) | (((64) | (64))))) >> 0), 0);
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
       for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > ((int(ivec4(min((0 | 0), (0 | 0)), 0, 1, 1)))); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = ((1 << (((max(0 | (int(3)), 0 | ((clamp(int(3), int(3), int(3))))))))) >> (int(3))); _injected_loop_counter > (- 18387 & 0); _injected_loop_counter --)
            {
             atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x], uint(2), 4, 64, 0);
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
    }
   while(false);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
