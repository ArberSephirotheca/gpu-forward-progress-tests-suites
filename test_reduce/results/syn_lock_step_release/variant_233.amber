#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (min((((uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, ((false ? (subgroup_id) : 0u)))), (((((((~ ((false ? (uvec3(106382u, 140322u, 95889u)) : (min((~ ((uvec3((clamp((~ (((~ (0u)) | (~ (0u))))), 0u, ((0u) >> 0u))), 0u, 0u) | ((~ ((uvec3(0u, 0u, 0u) + (~ ((true ? (gl_WorkGroupID) : (((((((uvec3(((((injectionSwitch.x < injectionSwitch.y)) ? (((true ? (max(min((~ (1u * ((~ ((uint(uvec4(0u, 0u, 1u, 1u)))))))), 0u), (max(min((~ (1u * ((~ ((uint(uvec4(0u, 0u, 1u, 1u)))))))), 0u), min((~ (1u * ((~ ((uint(uvec4(0u, 0u, 1u, 1u)))))))), 0u))))) : (subgroup_size)))) : (subgroup_size))), 0u, 0u)) | (uvec3((min((((((~ (1u * ((~ ((uint(uvec4(0u, 0u, 1u, 1u))))))))) ^ 0u)) | ((~ (1u * ((~ ((uint(uvec4(0u, 0u, 1u, 1u)))))))))), 0u)), 0u, 0u))) | (((((injectionSwitch.x > injectionSwitch.y)) ? (uvec3(88027u, 143836u, 3340u)) : uvec3(153540u, 109577u, 17899u))) ^ uvec3(65454u, ((false ? ((num_workgroup)) : 39099u)), 170836u))))) + uvec3(0u, 0u, 0u))))))))))))), (clamp((~ ((uvec3(0u, 0u, 0u) | ((true ? (gl_WorkGroupID) : (((uvec3((0u | (0u)), 0u, 0u) | (uvec3(153540u, 109577u, 17899u) ^ uvec3(65454u, 39099u, 170836u)))))))))), (~ ((uvec3(0u, 0u, 0u) | ((max((true ? (gl_WorkGroupID) : ((((((uvec3(0u, 0u, 0u) | (false ? (clamp((uvec3(53752u, 72209u, 125350u)), (uvec3(53752u, 72209u, 125350u)), (uvec3(53752u, 72209u, 125350u)))) : uvec3(0u, 0u, 0u))))) | (uvec3(153540u, 109577u, 17899u) ^ uvec3(65454u, 39099u, 170836u)))))), (true ? (gl_WorkGroupID) : (((((false ? (uvec3(53752u, 72209u, 125350u)) : uvec3((clamp((clamp(0u, (min(((0u) - 0u), 0u)), 0u)), 0u, 0u)), 0u, 0u))) | ((true ? (uvec3(153540u, 109577u, 17899u) ^ uvec3(65454u, 39099u, 170836u)) : (uvec3(177923u, 185928u, 145972u)))))))))))))), (~ ((uvec3(0u, 0u, 0u) | ((true ? (gl_WorkGroupID) : ((((uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, (0u | (0u))))) | (((~ (~ (uvec3(((uvec4(uvec3(153540u, 109577u, 17899u) ^ uvec3(65454u, 39099u, 170836u), 0u)) + uvec4(0u, (1u * (0u)), 0u, 0u))))))))))))))))))))))) - (uvec3(0u, 0u, 0u) | uvec3(((0u) - 0u), 0u, 0u))))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, (0u | ((max(0u, 0u)))))))).x;
 uint workgroup_base = (max(workgroup_size, workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((workgroup_base + subgroup_id * (uint((injectionSwitch.x)) ^ (subgroup_size)) + (max((uint(uvec3((((uint(uvec3((((~ (((false ? (workgroup_size) : ~ (subgroup_local_id))))) + 1) % subgroup_size), 1u, uint((injectionSwitch.y)))))) + 0u), 0u, 0u))), ((((~ (((~ ((0u | ((((((subgroup_local_id + 1)) - 0u)) + 0u) % subgroup_size)))) >> 0u))))) * 1u)))) | ((clamp(workgroup_base + (uint(((((uint(subgroup_id)) ^ 0u)) - 0u))) * subgroup_size, workgroup_base + (min((uint(((((uint(subgroup_id)) ^ 0u)) - 0u))) * subgroup_size, (uint(((((uint(subgroup_id)) ^ 0u)) - 0u))) * subgroup_size)), (clamp((uint(uvec4(((workgroup_base + (uint(((((uint(subgroup_id)) ^ 0u)) - 0u))) * subgroup_size) | 0u), 0u, 0u, 1u))), ((workgroup_base + (uint(((((((uint(subgroup_id)) ^ 0u)) + 0u)) - 0u))) * subgroup_size) | 0u), (clamp(((workgroup_base + (uint(((((~ (~ ((((uint(subgroup_id)) ^ (~ (((~ (0u)) | (~ (0u)))))))))) - 0u) - (0u << (uint(6u))))))) * subgroup_size) | 0u), ((workgroup_base + (uint(((((uint(subgroup_id)) ^ 0u)) - 0u))) * subgroup_size) | 0u), ((workgroup_base + (uint(((((clamp((((uint(subgroup_id)) ^ 0u)) - 0u, (((uint(subgroup_id)) ^ 0u)) - 0u, (((uint(subgroup_id)) ^ ((0u) | ((min(0u, 0u)))))) - 0u))) | 0u)))) * subgroup_size) | 0u))))))) + ((subgroup_local_id + (max(1, 1))) % ((subgroup_size) | 0u))));
 (0u | (buf[virtual_gid] = (int(ivec4(1, 1, 1, int((injectionSwitch.y)))))));
 atomicStore(buf[next_virtual_gid], (max((((((injectionSwitch.x < injectionSwitch.y)) ? (uint(2)) : (mix(workgroup_size, num_workgroup, false)))) | (uint(2))), (~ (~ (uint(2)))))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
