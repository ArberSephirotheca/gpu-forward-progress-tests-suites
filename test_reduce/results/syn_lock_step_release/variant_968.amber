#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((max(((false ? (workgroup_id) : uint(uvec4((clamp(workgroup_base + subgroup_id * ((subgroup_size) | uint((min((((mix(float((injectionSwitch.x)), float((float((((transpose(transpose(mat3x4(((((false ? (- 4.0) : (3.7)))) / 1.0), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, (min(0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, (mix(float((mix(float((- 1916.2427)), float((injectionSwitch.x)), bool(true)))), float((537.986)), bool(false))), 0.0, 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ((false ? (409.671) : 0.0)), 0.0, 0.0, 0.0))))), bool(false)))) / 1.0), (injectionSwitch.x))))), ((workgroup_base + subgroup_id * ((((0u ^ ((((subgroup_size) | uint((min((((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0), (injectionSwitch.x))))))))) >> 0u) << 0u)) | (workgroup_base + subgroup_id * ((subgroup_size) | uint((min((((mix(float((injectionSwitch.x)), float(((0.0 + ((mix(float((((false ? (- 4.0) : (3.7)))) / 1.0), float((- 2.9)), bool(false))))))), bool(false)))) / 1.0), (injectionSwitch.x))))))), workgroup_base + subgroup_id * ((subgroup_size) | uint(((clamp(min(((false ? (step(868.405, - 9.5)) : (((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0))), (injectionSwitch.x)), (min((float(mat2(min((((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0), (injectionSwitch.x)), 0.0, 0.0, 0.0))), min((0.0 + ((min((((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0), (((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0))))), (injectionSwitch.x)))), (clamp(min((((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0), (injectionSwitch.x)), min((((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0), (injectionSwitch.x)), min(((((max(mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)), mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))))) / 1.0), (injectionSwitch.x))))))))))), (0u << (uint(5u))), 0u, 1u)))), uint(uvec4((clamp(workgroup_base + subgroup_id * ((((subgroup_size) | uint((min((((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / (clamp((float(mat4x2(((1.0) * 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0))), 1.0, 1.0))), (injectionSwitch.x)))))) >> 0u), ((workgroup_base + (0u ^ (subgroup_id * ((subgroup_size) | uint((min((((mix(float((injectionSwitch.x)), ((float(((((false ? (- 4.0) : (3.7)))) / 1.0))) - tan(0.0)), bool(false)))) / 1.0), (injectionSwitch.x)))))))) | ((max(workgroup_base, workgroup_base)) + subgroup_id * ((subgroup_size) | uint((min((((mix(float(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), float(((((false ? (- 4.0) : (min((mix(float((3.7)), float((- 6.1)), bool(false))), (3.7)))))) / 1.0)), bool(false)))) / 1.0), (injectionSwitch.x))))))), workgroup_base + subgroup_id * ((subgroup_size) | uint((min(((clamp(((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0, ((mix(float((injectionSwitch.x)), float(((((false ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0, ((mix(float((injectionSwitch.x)), float((((((true && ((false || (false)))) ? (- 4.0) : (3.7)))) / 1.0)), bool(false)))) / 1.0))), (injectionSwitch.x))))))), (0u << (uint(5u))), 0u, 1u))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + ((((false ? (19741u) : subgroup_id * ((subgroup_size) + 0u)))) / (((1u & ((1u) | (1u))) << (uint(0u))) >> (uint(0u)))) + (0u ^ ((uint((uvec3(0u, 0u, 0u) | (uvec3(((((((((subgroup_local_id) | (subgroup_local_id))) << 0u) + (0 ^ (((1) / 1)))) % subgroup_size) / 1u)), 1u, 0u)))))));
 buf[virtual_gid] = 1;
 if(((injectionSwitch.x < (float(mat3(((clamp(vec2(vec4(injectionSwitch, 1.0, round(length(normalize(((min(((vec2(mat2x4(vec2((0.0 + (1.0)), 1.0), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))) / vec2(1.0, 1.0)), vec2(mat2x4(vec2((0.0 + (1.0)), 1.0), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))))))))), vec2(vec4(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, (((min((mix(float(1.0), float((286.612)), bool((bool(bvec3(false, true, false)))))), (mix(float(1.0), float((286.612)), bool((bool(bvec3(false, true, false))))))))) - 0.0))))))), vec2(vec4(injectionSwitch, 1.0, (mix(float(round(length((vec2(mat2x4(normalize(vec2(1.0, 1.0)), 0.0, 1.0, 0.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0)))))), float((- 5633.8553)), bool(false)))))))).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, ((1.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))))))
  {
   atomicStore(buf[next_virtual_gid], uint((clamp(2, 2, 2))), ((((4) >> 0)) | (4)), (int((((ivec2(ivec3(ivec2(64, (0 << (int(8)))), 0)))) >> ivec2(0, 0)))), 4);
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
