#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_9 {
 uvec2 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 ivec2 _f1;
 mat2 _f2;
 vec2 _f3;
 ivec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 mat3x4 _f1;
 mat4 _f2;
 bool _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat4x3 _f1;
 uvec4 _f2;
 vec4 _f3;
 ivec3 _f4;
 ivec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uint _f1;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_6 {
 uint _f0;
 _GLF_struct_2 _f1;
 ivec4 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 uvec4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 uvec2 _f1;
 int _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_1 {
 float _f0;
 _GLF_struct_0 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_1 _f0;
 ivec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_10 _f4;
 uvec3 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_1(1.0, _GLF_struct_0(uvec3(((1u) + 0u)), uvec2(1u), 1, mat2x3(1.0)), mat2x4(1.0)), ivec2(1), _GLF_struct_6(1u, _GLF_struct_2(bvec3((bool(bvec4(((((((true) || false)) && true)) && true), false, true, true)))), 1u, (clamp((((uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), ((mix(vec2((injectionSwitch)[0], (0.7)), vec2((- 6795.6615), (injectionSwitch)[1]), bvec2((false || (((false) || ((injectionSwitch.x > injectionSwitch.y))))), true))).x)) | (((uvec4(((1u) | (((~ (((false ? (subgroup_size) : ((max((~ ((1u))) >> 0u, (~ ((1u))) >> 0u))))))) ^ (clamp(0u, 0u, (0u | (1u * ((clamp((0u), (0u), (0u))))))))))), 1u, 1u, 1u) & ((uvec4(1u, 1u, 1u, (max((((uint(uvec3(1u, 0u, 0u)))) | 0u), 1u)))) + uvec4(0u, 0u, 0u, 0u))) * (uvec4(1u))))) | ((uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(((1u) | (max((((1u) ^ 0u)), (0u ^ ((((1u) ^ 0u))))))), 1u, 1u, ((true ? (uint(uvec3(1u, 1u, 0u))) : (packHalf2x16(max(injectionSwitch, - 6.0)))))) & uvec4(1u, 1u, 1u, 1u)) * (uvec4(1u))))))), (((((((clamp(uvec4(((1u) | ((((uint(((((! (! (bool(bvec2(false, false)))))) ? (write_val) : uint(((1u) | (1u)))))))) ^ (clamp(0u, 0u, (0u | (((0u) | (0u))))))))), 1u, 1u, 1u), uvec4(((1u) | ((((uint(((((! (! (! (((! ((! (! (! ((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec3(! (bool(bvec2(false, false))), false, true))))))))))))))))) ? (write_val) : uint((((((injectionSwitch.x < injectionSwitch.y)) ? (1u) | (1u) : (write_val)))))))))) ^ (clamp((~ (~ ((clamp(0u, 0u, (0u | (((0u) | (0u))))))))), (clamp(0u, 0u, (0u | (((0u) | (0u)))))), (clamp(0u, 0u, (0u | (((0u) | (0u))))))))))), 1u, 1u, 1u), (min(((true ? uvec4(((1u) | ((((uint((((1u << (uint(3u))) >> (uint(3u))) * (uint((uint(((((! (! (bool(bvec2(false, false)))))) ? (write_val) : uint(((1u) | (1u))))))))))))) ^ (clamp(0u, 0u, (0u | (((0u) | (0u))))))))), 1u, 1u, 1u) : (uvec4(152146u, 110125u, 67838u, 120838u)))), uvec4(((1u) | ((((uint(((((! (! (bool(bvec2(false, false)))))) ? (write_val) : uint((1u * (((1u) | (1u)))))))))) ^ (clamp(0u, 0u, (0u | (((0u) | (0u))))))))), 1u, 1u, 1u))))) & uvec4(1u, 1u, 1u, 1u))) + uvec4(0u, 0u, 0u, 0u)) * (uvec4(1u))) | (uvec4(0u, 0u, 0u, 0u) + ((((~ ((min(~ (((uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) ^ ((uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(((1u) | (min((((1u) ^ 0u)), (((((1u) ^ 0u))) | ((((1u) ^ 0u))))))), 1u, 1u, 1u) & uvec4(1u, 1u, ((1u) / 1u), 1u)) * (uvec4(1u)))))))), ~ (((uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(((1u) | (((((1u) ^ 0u))) + 0u)), 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)) * (uvec4(1u))))))))))) / (((uvec4(0u, 0u, 0u, 0u) ^ uvec4(1u, 1u, 1u, 1u))) | ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(1u, 1u, 1u, 1u))))))))), ((((uvec4(((1u) | (((1u) ^ (clamp(0u, (max(0u, 0u)), (((((0u) + (max(0u, 0u)))) - 0u) | (((0u) - 0u)))))))), (min(1u, 1u)), 1u, 1u) & uvec4(1u, 1u, 1u, 1u)) * (uvec4(1u))) | ((uvec4(0u, (((max(0u, 0u))) + 0u), 0u, 0u) ^ ((uvec4(((1u) | (((1u) ^ 0u))), 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)) * ((min(uvec4(1u), uvec4(1u))))))))))), ivec2(1)), ivec4(1), _GLF_struct_3(((false ? (uvec3(60842u, ((0u >> (uint(0u))) | (((139442u) | (139442u)))), 29762u).x) : ((1u) | (1u)))), mat4x3(1.0), ((((max((uvec4((min(((((((1u) ^ 0u)) + 0u)) << 0u), (((~ (~ ((((max(((1u) * 1u), ((1u) * 1u))))) | ((clamp((min(((max(((1u) * 1u), ((1u) * 1u)))), ((max(((1u) * 1u), ((1u) * 1u)))))), ((((max(((1u) * 1u), ((1u) * 1u))))) + 0u), ((max(((1u) * 1u), ((1u) * 1u))))))))))) >> 0u))))) | uvec4(0u, 0u, 0u, 0u), (uvec4((min(((((((1u) ^ 0u)) + 0u)) << 0u), (((~ (~ ((((max(((1u) * 1u), ((1u) * 1u))))) | ((clamp((min(((max(((1u) * 1u), ((1u) * 1u)))), ((max(((1u) * 1u), ((1u) * 1u)))))), ((((max(((1u) * 1u), ((1u) * 1u))))) + 0u), ((max(((1u) * 1u), ((1u) * 1u))))))))))) >> 0u))))) | uvec4(0u, 0u, 0u, 0u))))) | uvec4(0u, ((1u * ((uint(uvec3(((max(0u, 0u))) - 0u, 0u, 0u)))))), 0u, 0u)), vec4(((clamp((mix(float(clamp(1.0, 1.0, 1.0)), float((6098.0716)), bool(false))), (max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0))))), ivec3(1), ivec4(1), mat3x4((min(1.0, (0.0 + ((min((float(mat3x2(1.0, ((1.0) / 1.0), 0.0, (mix(float((- 414.637)), float((clamp(1.0, (float((mat2(1.0) * (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0))))), 1.0))), bool(((injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0))), (float(mat3x2((mix(float((min((clamp(1.0, 1.0, 1.0)), (clamp(1.0, 1.0, 1.0))))), float((5.1)), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0))))))))))), _GLF_struct_4(ivec3(((((~ ((max(~ (0 ^ (1)), ~ (0 ^ (1)))))))) >> 0)), mat3x4(1.0), mat4(((1.0) + ((log(1.0)) * (injectionSwitch.y)))), true, uvec4(1u)), uvec4(((true ? 1u : (((subgroup_id)) | ((subgroup_id)))))), _GLF_struct_5(vec2(1.0), ((vec4(1.0)) + vec4(0.0, (float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0))), 0.0, 0.0)), mat4x3(1.0))), _GLF_struct_8((clamp(uvec2(1u), (clamp(uvec2(1u), uvec2(1u), uvec2(1u))), uvec2(1u))), _GLF_struct_7(bvec2(true), ivec2(((false ? (32027) : 1))), mat2(1.0), vec2(1.0), (ivec3(0, 0, 0) + (~ (~ ((ivec3(0, 0, 0) | ((ivec3(1)))))))), uvec4((0u ^ ((((~ (~ (1u)))) - 0u)))))), _GLF_struct_10(_GLF_struct_9(((((clamp((uvec2(1u, 1u) ^ uvec2(1u, (max(1u, 1u)))), (uvec2(1u, 1u) ^ uvec2(1u, (max(1u, 1u)))), (uvec2(uvec2((uvec2(1u, 1u) ^ uvec2(1u, (max(1u, 1u)))))))))) | uvec2(0u, 0u)) + (uvec2(((((((1u) * 1u)) | (1u)) / 1u))))), gl_SubgroupInvocationID)), uvec3(1u));
 uint num_workgroup = ((((((false ? (uvec3(32364u, 40552u, 139461u)) : ((((min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))) - uvec3(0u, (min(0u, 0u)), 0u))))) >> uvec3(0u, 0u, ((false ? (packHalf2x16(vec2(9.1, - 68.05))) : 0u))))) - uvec3(0u, 0u, ((~ (((~ (~ (0u | (~ (clamp(0u, 0u, ((false ? (74081u) : 0u)))))))))))))).x;
 uint workgroup_size = (((clamp((clamp(((false ? (uvec3(20928u, 137469u, 49255u)) : gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), (clamp(gl_WorkGroupSize, (min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)), (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))) << uvec3(((0u) - 0u), 0u, 0u))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (min((clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id));
 uint virtual_gid = ((((((workgroup_base + subgroup_id * (min((((((((max(subgroup_size, subgroup_size)) >> 0u))) << 0u) - 0u)), (((((((((max(subgroup_size, subgroup_size)) / 1u)) >> 0u)) | 0u)) - 0u))))))) << 0u) << 0u) << (~ (~ (0u)))) + (((~ (~ ((((~ (~ ((uint((((false ? (((vec2(- 3.4, - 2.9)) * mat2(1.0))) : injectionSwitch)).x)) | (_GLF_struct_replacement_11._f4._f0.subgroup_local_id))))) | (~ (~ ((uint((((false ? (((vec2(- 3.4, - 2.9)) * mat2(1.0))) : injectionSwitch)).x)) | (_GLF_struct_replacement_11._f4._f0.subgroup_local_id))))))))))) * 1u);
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 buf[virtual_gid] = ((uint(subgroupAllEqual((((clamp((min((uint((injectionSwitch.x)) | (write_val)), write_val)), (min((uint((injectionSwitch.x)) | (write_val)), write_val)), (min((uint((injectionSwitch.x)) | (write_val)), write_val))))) | ((min((uint((injectionSwitch.x)) | (write_val)), write_val))))))) + 0u);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
