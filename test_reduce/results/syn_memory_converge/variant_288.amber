#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (max(workgroup_size, ((0u & 117413u) + (workgroup_size)))) * workgroup_id;
 uint virtual_gid = (min((((((injectionSwitch.x > injectionSwitch.y)) ? (num_workgroup) : (0u | (((min((uint(uvec4(((uint(uvec2(((((((true ? (workgroup_base) - 0u : (subgroup_size)))) | 0u)) - ((((0u) - 0u)) | 0u)), 0u)))), 0u, 0u, ((true ? (((~ (((~ (1u << (uint(4u)))) - 0u)))) >> (uint(uint((uint(4u)))))) : (workgroup_size)))))), (uint(uvec4(((max((workgroup_base) - 0u, (0u ^ ((workgroup_base) - 0u))))), 0u, 0u, ((1u << (uint(4u))) >> (uint(4u))))))))))))) >> (max(uint(((clamp(injectionSwitch.x, ((mix(float((min((0.0 + (float(vec4((mat2(1.0) * ((max(injectionSwitch, injectionSwitch)))).x, 0.0, 0.0, 0.0)))), (min(((0.0 + ((float(vec4((mat2(1.0) * (injectionSwitch)).x, ((true ? (clamp(0.0, (float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0)) : (3877.1180))), 0.0, 0.0))) - 0.0))), ((0.0 + ((float(vec4((((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x, ((true ? (clamp(0.0, (mix(float((97.92)), float((float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool((false || (true))))), 0.0)) : (3877.1180))), 0.0, 0.0))) - 0.0)))))))), float((- 7054.9265)), bool(false)))), (max(injectionSwitch.x, injectionSwitch.x)))))), ((uint(((clamp(injectionSwitch.x, (float(vec4((mat2(1.0) * ((vec2(injectionSwitch[(((! (! (false))) ? ((false ? - 93519 : 96475)) : (~ (~ (0)))))], injectionSwitch[1])))).x, 0.0, (mix((((0.0 + (float((5.3))))) + 0.0), float(0.0), bool(true))), 0.0))), (max(injectionSwitch.x, (max(injectionSwitch, injectionSwitch)).x))))))) ^ 0u)))) + subgroup_id * subgroup_size, (min((((min((((max((uint(uvec4(((workgroup_base) - 0u), 0u, 0u, ((1u << (uint(4u))) >> (0u | ((uint(uint((uint(4u))))))))))), (uint(uvec4(((workgroup_base) - 0u), 0u, 0u, ((1u << (uint(4u))) >> (0u | ((uint(uint((uint(4u)))))))))))))) / 1u), (uint(uvec4(((max((workgroup_base) - (((min(0u, 0u))) | 0u), (0u ^ (((true ? (workgroup_base) - 0u : (workgroup_base)))))))), 0u, 0u, ((1u << (uint(4u))) >> (uint(4u))))))))) >> (max(uint((((mix(float(clamp((min(injectionSwitch, injectionSwitch)).x, ((mix(float((min((0.0 + (float(vec4((mat2(1.0) * (injectionSwitch)).x, 0.0, 0.0, 0.0)))), ((float(vec4(((mat2(0.0, 0.0, 0.0, 0.0) + (mat2(((1.0) + log(1.0))))) * (injectionSwitch)).x, 0.0, 0.0, 0.0))) - 0.0)))), float((- 7054.9265)), bool(false)))), (max(injectionSwitch.x, injectionSwitch.x)))), float((81.19)), bool(false)))))), uint(((clamp(injectionSwitch.x, (float(vec4((mat2((mix(float((- 5.2)), float(((1.0) / 1.0)), bool(true)))) * (injectionSwitch)).x, 0.0, 0.0, 0.0))), (max(injectionSwitch.x, injectionSwitch.x))))))))) + subgroup_id * subgroup_size, (((min(((((injectionSwitch.x > injectionSwitch.y)) ? (workgroup_size) : (0u + ((clamp((uint(uvec4(((workgroup_base) - 0u), 0u, 0u, ((1u << (uint(4u))) >> (uint(uint((uint(4u))))))))), (uint(uvec4(((workgroup_base) - 0u), 0u, 0u, (((~ (~ (1u << (uint(4u)))))) >> (uint(uint((uint(4u))))))))), (uint(uvec4(((workgroup_base) - 0u), 0u, 0u, ((1u << (uint(4u))) >> (uint(uint((uint(4u))))))))))))))), (uint(uvec4(((max((workgroup_base) - 0u, (((0u ^ ((workgroup_base) - 0u)) * 1u))))), 0u, 0u, ((((0u << (uint(5u))) ^ ((max(((((true ? 1u << (uint(4u)) : (workgroup_base)))) ^ 0u), 1u << (uint(4u))))))) >> (uint(4u))))))))) >> (max(uint(((clamp((min(injectionSwitch, injectionSwitch)).x, ((((true ? ((min(((false ? (distance(vec3(3.3, - 6461.0462, 1.1), vec3(58.40, 2222.4585, 7.7))) : (mix(float((min((0.0 + (float(vec4((mat2(1.0) * (injectionSwitch)).x, 0.0, 0.0, 0.0)))), ((max((float(vec4((((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (clamp((injectionSwitch), ((max(vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0)), vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0))))), ((false ? (injectionSwitch) : (injectionSwitch)))))).x, 0.0, 0.0, 0.0))), (float(vec4((((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (clamp((injectionSwitch), ((max(vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0)), vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0))))), ((false ? (injectionSwitch) : (injectionSwitch)))))).x, 0.0, 0.0, 0.0))))) - 0.0)))), float((float(mat2x4((max((- 7054.9265), (- 7054.9265))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(false))))), ((false ? (distance(vec3(3.3, - 6461.0462, 1.1), vec3(58.40, 2222.4585, 7.7))) : (mix(float((min((0.0 + (float(vec4((mat2(1.0) * (injectionSwitch)).x, 0.0, 0.0, 0.0)))), ((max((float(vec4((((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (clamp((injectionSwitch), ((max(vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0)), vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0))))), ((false ? (injectionSwitch) : (injectionSwitch)))))).x, 0.0, 0.0, 0.0))), (float(vec4((((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (clamp((injectionSwitch), ((max(vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0)), vec2(mat2x3((injectionSwitch), 0.0, 0.0, 1.0, 0.0))))), ((false ? (injectionSwitch) : (injectionSwitch)))))).x, 0.0, 0.0, 0.0))))) - 0.0)))), float((float(mat2x4((max((- 7054.9265), (- 7054.9265))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(false)))))))) : (0.8)))) * 1.0), (max(injectionSwitch.x, injectionSwitch.x)))))), uint(((((((clamp(injectionSwitch.x, (float((min((max((clamp(vec4((mat2(1.0) * (injectionSwitch)).x, 0.0, 0.0, 0.0), vec4((mat2((max(1.0, 1.0))) * (injectionSwitch)).x, (min((clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0), vec4((min((mat2(1.0) * (max((injectionSwitch), (vec2(mat4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, (injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))).x, (mat2(1.0) * (max((injectionSwitch), (vec2(mat4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, (injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))).x)), 0.0, 0.0, ((0.0) / 1.0)))), vec4(((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, 0.0, 0.0, 0.0))), vec4((mat2(1.0) * (injectionSwitch)).x, 0.0, 0.0, 0.0))))), (max(injectionSwitch.x, injectionSwitch.x)))))) + 0.0)) / 1.0))))) + subgroup_id * subgroup_size)))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual((uint(uvec3(write_val, (0u >> (uint(1u))), 1u)))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
