#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_0 {
 mat3x2 _f0;
 bvec4 _f1;
 vec4 _f2;
 mat3x2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 _GLF_struct_0 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uvec2 _f1;
 mat4 _f2;
 uint subgroup_size;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(vec4(((round(((((true ? length(normalize(vec2(1.0, 1.0))) : (- 788.521)))) + 0.0)) * (float((mix(vec2((- 93.78), (vec2(1.0, (min(((false ? ((clamp(345.423, (min(345.423, 345.423)), 345.423))) : 1.0)), ((false ? ((clamp(345.423, (min(345.423, 345.423)), 345.423))) : 1.0))))))[1]), (clamp(vec2(((max(vec2(1.0, 1.0), vec2(1.0, 1.0))))[0], (- 8.7)), vec2((vec2(1.0, 1.0))[0], (- 8.7)), ((clamp(vec2(0.0, 0.0) + (vec2((vec2(1.0, 1.0))[0], (- 8.7))), vec2(0.0, 0.0) + (vec2((vec2(1.0, 1.0))[0], (- 8.7))), vec2(0.0, 0.0) + (min((min((vec2((vec2(1.0, 1.0))[((max(int(((int(((0) | (0)))) ^ 0)), int(((int(((0) | (0)))) ^ 0)))))], (- 8.7))), (vec2((vec2(1.0, 1.0))[((max(int(((int(((0) | (0)))) ^ 0)), int(((int(((0) | (0)))) ^ 0)))))], (- 8.7))))), (vec2((vec2(1.0, 1.0))[((max(int(((int(((0) | (0)))) ^ 0)), int(((int(((0) | (0)))) ^ 0)))))], (- 8.7)))))))))), bvec2((true && (true)), false)))))))), _GLF_struct_0(mat3x2(1.0), bvec4(true), vec4(((float(mat3(clamp(1.0, 1.0, ((max((((1.0) * 1.0) / 1.0), (1.0) * 1.0)))), 1.0, 0.0, (clamp((min(0.0, (mix(float((- 341.422)), float(0.0), bool(true))))), (min(0.0, (mix(float((- 341.422)), float(0.0), bool(true))))), (float(mat2x3((min((min(0.0, (mix(float((- 341.422)), float(0.0), bool(true))))), (min(0.0, (mix(float((- 341.422)), float(0.0), bool(true))))))), 1.0, 0.0, 1.0, (injectionSwitch.y), (injectionSwitch.x)))))), 1.0, 0.0, 0.0, 1.0, log(1.0)))))), mat3x2(1.0), ivec4(1)), mat2x3(1.0)), uvec2(((max(clamp(1u, (((false ? (subgroup_id) : (1u) >> 0u))), 1u), ((true ? clamp(1u, ((1u) >> 0u), 1u) : (subgroup_id))))))), mat4(1.0), gl_SubgroupSize);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (0u | (gl_NumWorkGroups.x));
 uint workgroup_size = (uint(uvec3(((gl_WorkGroupSize.x) >> 0u), ((1u) ^ 0u), 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((uint(uvec3((workgroup_size * workgroup_id) >> uint((injectionSwitch.x)), 0u, 0u))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_2.subgroup_size + (clamp((clamp((~ (~ (((subgroup_local_id) << uint((1.0 * ((float(mat2x3((injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, cos(0.0))))))))))), subgroup_local_id, subgroup_local_id)), ((subgroup_local_id) + 0u), subgroup_local_id));
 atomicStore(write_val, uint(((((virtual_gid) / 1u)) | (1u * ((((uint(uvec4((virtual_gid) / 1u, 0u, uint((injectionSwitch.x)), 0u))))))))), 4, 64, 0);
 ((((~ (~ (((((0u ^ ((~ (~ (buf[virtual_gid] = uint(subgroupAllEqual(write_val)))))))) ^ 0u))))) << 0u)) | 0u);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
