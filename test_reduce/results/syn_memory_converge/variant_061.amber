#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_0 {
 mat2x3 _f0;
 uint num_workgroup;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((((false) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > (((min(injectionSwitch.y, injectionSwitch.y))) / (min(1.0, ((1.0) / 1.0))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
       if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((bool((bvec3(bvec4(bvec3((true && (false)), false, ((injectionSwitch.x < injectionSwitch.y))), true))))) || (false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         barrier();
        }
      }
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((((true ? injectionSwitch.x : (- 5.7)))) + tan(determinant(mat2(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
        return;
       if((false))
        barrier();
       return;
      }
     if(((((! (! (injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          {
           if(((((bool(bvec4(false, true, false, true)))) || false)))
            return;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          return;
         return;
         if((false))
          return;
        }
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if((bool((bvec2(bvec4(bvec2((((injectionSwitch.x < (mix(vec2((0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 75.34)), bvec2(true, false))).y)) && ((false))), (false || (true))), true, true))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), true, false, true))))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if(((bool(bvec4((bool(bvec3(((((max((1.0 * (float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))) > (clamp((mix(float((4.4)), float((float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))), injectionSwitch.y, injectionSwitch.y)))), true, false))), false, true, false)))))
    return;
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      barrier();
    }
   if(((! (! ((! (! (((bool(bvec4((injectionSwitch.x > (((((clamp((vec2(0.0, 0.0) + ((vec2(((true ? mat4((max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, ((min(float(vec2(0.0, 1.0)), (0.0 + (float(vec2(0.0, 1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : (mat4(- 2482.4384, 147.370, 2895.9900, 373.072, 14.03, 51.96, - 595.265, 118.144, 307.503, - 29.90, - 8.5, - 9.3, - 868.330, (mix(float(- 3.8), float((- 212.991)), bool(((injectionSwitch.x > injectionSwitch.y))))), 12.64, - 755.656)))))))), (vec2((((clamp(((vec2((max(injectionSwitch, injectionSwitch))))) * mat2(1.0), ((vec2((max(injectionSwitch, injectionSwitch))))) * mat2(1.0), ((vec2((max(injectionSwitch, injectionSwitch))))) * mat2(1.0)))) * mat2(1.0)))), (max(injectionSwitch, injectionSwitch))))) * mat2(1.0)) / vec2((injectionSwitch.y), (injectionSwitch.y)))).y), true, false, false))))))))))))
    {
     if((false))
      {
       if((false))
        return;
       if((((false) || false)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         barrier();
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if(((! (! ((((clamp((vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2x3(1.0), gl_NumWorkGroups.x);
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((false || (false))))
      barrier();
     if((((((false)) && true)) && true))
      {
       if((((! ((true && (! (bool(bvec4((! (! ((! (! (false)))))), true, true, true))))))))))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((((min((mix(vec2((injectionSwitch)[0], (8.1)), vec2(((16.90 / 32.47)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     return;
    }
  }
 if((false))
  return;
 if((((! (! ((((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))) || false)))))) || (((! (! (false)))) && true)))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) && true)))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if(((true && (false))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   barrier();
  }
 if((false))
  {
   if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
  }
 if((bool(bvec4(((((true && (((! (! ((injectionSwitch.x > injectionSwitch.y) || (! (! (false)))))))))))), true, false, false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! ((! (! (false))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((! (! ((((false)) || false)))))
      barrier();
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((! (! ((! (! (false))))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((false) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(((! (! (false)))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((((((injectionSwitch.x < injectionSwitch.y)) || false)) && ((true && ((! (bool((! ((! (! (! (bool((! ((((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((bool(bvec4((false), false, false, true))))
  {
   if(((true && (false))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > (mix(float((7.5)), float(injectionSwitch.y), bool(true)))))))
        return;
       barrier();
      }
     if(((((mat2(1.0) * (injectionSwitch)).x > (mix(float((- 0.8)), float(injectionSwitch.y), bool(true)))))))
      return;
     barrier();
    }
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    return;
   if((false))
    barrier();
  }
 uint workgroup_size = (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && ((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true)))))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((! ((((injectionSwitch.x < injectionSwitch.y)) && (! ((! (! ((false))))))))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false || (((! (! (((false) && true))))))))
    {
     if(((false || (false))))
      {
       if((false))
        return;
       return;
      }
     if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && ((true && (((false) && true)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((true && (false))))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false)) && true))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((! (! (bool(bool(false))))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(((((min(((1.0 * ((min(((true ? float(mat4x2(((injectionSwitch) * vec2(1.0, 1.0)).x, 1.0, 0.0, (float((transpose(transpose(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, abs(1.0))) : (6.7))), float(mat4x2(((injectionSwitch) * vec2(1.0, 1.0)).x, 1.0, 0.0, (float((transpose(transpose(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, abs(1.0)))))))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((false || (((! (! ((false || (((false)) || false))))) || false))))))
        {
         if((false))
          barrier();
         if((((false) || false)))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if((false))
          return;
        }
       barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   if(((! (! (false)))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool((bvec2(bvec2(bvec2(false, true))))))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((! (! ((true && (false)))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * (max(workgroup_id, workgroup_id));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(((bool(bvec2(((injectionSwitch.x > ((false ? (- 667.580) : (min(injectionSwitch.y, injectionSwitch.y)))))), true)))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((((false) || false)))
      return;
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         barrier();
         if((false))
          {
           if((false))
            barrier();
           return;
          }
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        return;
      }
     barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec2(false, true)))))
        return;
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((bool(bvec2((false), true))))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > ((true ? injectionSwitch : (min(injectionSwitch, vec2(82.38, 9.4))))).y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           return;
          }
         if(((bool(bvec3(false, true, false)))))
          return;
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(((true && (false))))
    barrier();
   if(((! (((injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((bool(bool((false || ((((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, false)))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((false) || false)))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((bool((bvec2(bvec4((bvec2(bvec4(bvec2(false, true), false, true))), true, true)))))))
  {
   if((((injectionSwitch.x > (1.0 * (((injectionSwitch.y) - 0.0)))))))
    barrier();
   if((false))
    barrier();
   if(((true && ((true && ((((bool(bvec3(false, ((injectionSwitch.x < (max(injectionSwitch.y, injectionSwitch.y)))), ((injectionSwitch.x > (mix(vec2((- 78.20), (8006.3151)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, ((injectionSwitch.x < injectionSwitch.y))))).y)))))) && true)))))))
    return;
   return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! ((((true && (((bool(bvec2((! (! ((((false) && true))))), (! (((! ((bool(bvec4(false, true, ((injectionSwitch.x < injectionSwitch.y)), true))))) && ((injectionSwitch.x < injectionSwitch.y))))))))) && true)))) || false)))))
  {
   if((((false)) && true))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((bool(bvec4(((mix(vec2((injectionSwitch)[0], (6470.4609)), vec2((float(126704u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), false, true, false))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((((! (! (((((true && (injectionSwitch.x > injectionSwitch.y))) && true))))))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((((false) && true)))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((false) || false)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((true && (false))))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
     if((((! ((true && (! (true && (false)))))))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((((((false) || false)) && true)))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((clamp((vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, (mix(float(0.0), float((15.84)), bool(false))), cos(0.0)))).x, injectionSwitch.x, ((max((injectionSwitch.x), (injectionSwitch.x))) * 1.0))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > (clamp((min(((max(((true ? clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * abs((mix(float((536.181)), float(1.0), bool(true)))))) : (- 37.38))), (min((clamp(clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * abs((mix(float((536.181)), float(1.0), bool(true)))))), clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * abs((mix(float((536.181)), float(1.0), bool(true)))))), clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * abs((mix(float((536.181)), float(1.0), bool(true)))))))), clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * abs((mix(float((536.181)), float(1.0), bool(true))))))))))), (clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * abs((mix(float((536.181)), float(1.0), bool(true))))))))), injectionSwitch.y, ((injectionSwitch.y) + 0.0)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true)))))))
            return;
           return;
          }
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) && true))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         barrier();
        }
       if((((bool(bvec3((false), true, false))) || false)))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if(((! (! (false)))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       return;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
        }
      }
     if((((true && (bool(bool(((false || (false)) || (false)))))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > (float(mat2x3(((((injectionSwitch) + vec2((injectionSwitch.x), (injectionSwitch.x))).y) + 0.0), ((1.0) / 1.0), 0.0, 1.0, cos(0.0), 1.0)))))))
        {
         if(((! (! ((! ((true && (! (false))))))))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if(((bool(bvec3(((injectionSwitch.x > ((injectionSwitch.y) / (clamp(1.0, 1.0, 1.0))))), true, false)))))
      {
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
    }
   barrier();
   if(((((clamp(injectionSwitch, injectionSwitch, ((min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 if(((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 uint virtual_gid = (~ ((0u ^ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))));
 if((false))
  barrier();
 if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 474.099)), bool(false)))))))
  return;
 if((! ((bool(bvec4(! (((true && (false)))), false, false, true))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((true && (false))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(((! (! (false)))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     return;
    }
   return;
  }
 if((false))
  {
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(write_val, uint((uint(uvec2(virtual_gid, 0u)))), 4, 64, 0);
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((false || ((bool(bool((false)))))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
       if((false))
        barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((true && (((! (! ((! (! (bool(((bvec2(bvec2(bvec2(bvec2(bvec2((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false))))))))))))))))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if(((true && (false))))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((((false) || false)))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        return;
       return;
      }
     if((true && ((! (! ((false)))))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((bool(bvec2((! ((bool(bool(! (! ((bool(bvec2(! (false), true)))))))))), true))))))
        {
         if(((true && (false))))
          {
           if(((false || (false))))
            barrier();
           return;
          }
         barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((true && ((false))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if(((bool(bool(false)))))
            {
             if((false))
              return;
             barrier();
            }
           if((false))
            return;
           return;
          }
         return;
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
         if((! (! ((false)))))
          return;
        }
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > ((true ? (mix(vec2((2176.9031), (- 411.073)), vec2((max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))) : ((vec2(- 630.968, - 129.492) + vec2(1.0, 3.0))))).y))))
      {
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((true && ((bool(bvec4(false, false, (((injectionSwitch.x > injectionSwitch.y)) || (true)), true)))))))
  {
   if((false))
    {
     if(((false || (false))))
      {
       if((false))
        barrier();
       return;
      }
     return;
     if((false))
      barrier();
    }
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((((((true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x > injectionSwitch.y)), false, false)))))))))
          barrier();
         return;
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
       if((false))
        barrier();
      }
     if(((false || (((bool(bvec2(! (((! ((bool(bvec4(false, ((((injectionSwitch.x < injectionSwitch.y))) && true), false, true))))) || false)), ((injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((bool(bvec4(bool(bvec2(false, true)), true, false, false))))))
    barrier();
   if(((false || (((bool(bvec3(bool(bvec2((bool(bool(false))), false)), false, false))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   if(((((true && ((! (! (false))))))) && true))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    return;
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! (! ((false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       barrier();
       if((false))
        return;
      }
     return;
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if(((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((((((injectionSwitch.x > injectionSwitch.y)) ? (tan(injectionSwitch)) : injectionSwitch)).x > ((injectionSwitch.y) - 0.0)))))
  {
   if(((((bool(bvec4((! (! (false))), ((injectionSwitch.x < injectionSwitch.y)), false, true)))) && true)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 if((! (! (((! (! (false))))))))
  return;
 if((((((bool(bool((! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))
  {
   if((false))
    return;
   if((false))
    return;
   if(((((clamp(injectionSwitch.x, ((float(vec4((injectionSwitch.x) / (clamp(1.0, 1.0, 1.0)), 0.0, 0.0, (injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((((! (! ((! (! ((bool(bvec2(injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 215.186)), bool(false))), false)))))))))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
