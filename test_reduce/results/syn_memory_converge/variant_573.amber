#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((workgroup_base) << 0u) + (((0u | ((1u << (uint(1u))) >> (uint(1u))))) * ((max(subgroup_id, subgroup_id)) * subgroup_size)) + ((true ? subgroup_local_id : (subgroup_id)));
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 buf[virtual_gid] = ((uint(subgroupAllEqual((~ (((((clamp(0u << (uint(6u)), (clamp(0u << (uint(6u)), 0u << (uint(6u)), 0u << (uint(6u)))), ((0u << (uint(6u))) ^ 0u)))) + (min((((0u | ((~ (~ (((clamp(min(~ (((~ (~ ((clamp((write_val), (write_val), (write_val))) - 0u))))), (max(~ (((max((write_val), (write_val))) - 0u)), ~ ((((uint(uvec4(((((write_val) - 0u)) / 1u), 0u, 0u, (1u * ((uint((clamp(uvec2(((0u | (1u)) | 1u), 0u), uvec2(((0u | (1u)) | 1u), 0u), uvec2(((0u | (1u)) | 1u), 0u))))))))))) ^ 0u))))), min(~ (((~ (~ ((write_val) - 0u))))), (max(~ (((max((write_val), (write_val))) - 0u)), ~ (((((uint(uvec2((((write_val) - 0u) | ((write_val) - 0u)), 0u)))) | ((write_val) - 0u))))))), min(~ (((~ (~ ((((write_val)) ^ 0u) - 0u))))), (max(~ (((max((write_val), (write_val))) - 0u)), ((~ (((write_val) - 0u))) | ((max(~ (((write_val) - 0u)), ~ (clamp((uint(uint((((write_val) - 0u))))), (((write_val) - 0u)), (((write_val) - 0u)))))))))))))))))))) << 0u), ((clamp(min(~ (((~ (~ ((clamp((write_val), (write_val), (write_val))) - 0u))))), (max(~ (((max((write_val), (write_val))) - 0u)), ~ ((max((((uint(uvec4(((((write_val) - 0u)) / 1u), 0u, 0u, (1u * ((uint((clamp(uvec2(((0u | (1u)) | 1u), 0u), uvec2(((0u | (1u)) | 1u), 0u), uvec2(((0u | (1u)) | 1u), 0u))))))))))) ^ 0u), (((uint(uvec4(((((write_val) - 0u)) / 1u), 0u, 0u, (1u * ((uint((clamp(uvec2(((0u | (1u)) | 1u), 0u), uvec2(((0u | (1u)) | 1u), 0u), uvec2(((0u | (1u)) | 1u), 0u))))))))))) ^ 0u))))))), min(((~ (((~ (~ ((write_val) - 0u)))))) / 1u), (max(~ (((((false ? (152960u) : max((write_val), (write_val))))) - 0u)), ~ (((((uint(uvec2((((write_val) - 0u) | ((write_val) - 0u)), 0u)))) | ((write_val) - 0u))))))), min(~ (((~ (~ ((((write_val)) ^ 0u) - 0u))))), (max(~ (((max((write_val), (write_val))) - 0u)), ((~ (((write_val) - 0u))) | ((max(~ (((write_val) - 0u)), ~ (clamp((uint(uint((((write_val) - 0u))))), (((write_val) - 0u)), (((write_val) - 0u))))))))))))))))))))))) * 1u);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
