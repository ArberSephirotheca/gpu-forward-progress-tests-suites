#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.x = num_workgroup;
 uint workgroup_size = ((((~ (~ (uint(((uvec4(gl_WorkGroupSize.x, uint((injectionSwitch.x)), 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))) << 0u));
 uint workgroup_id = ((true ? gl_WorkGroupID.x : ((workgroup_size))));
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = ((workgroup_id) | (workgroup_id));
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z;
 uint virtual_gid = (((min(((((false ? (num_workgroup) : ((false ? (workgroup_size) : (((bool(bool(true))) ? ((((workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y) << 0u)) >> (1u ^ 1u)) : (subgroup_size)))) ^ 0u))))), (min(((max(((((min(workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size, workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y) << (clamp(0u, (max(0u, 0u)), 0u)))), ((((((min(workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size, workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y) << (clamp(0u, (max(0u, 0u)), 0u))))) + 0u))) >> (((1u) >> 0u) ^ 1u)), ((~ ((((uint((max((~ (((~ (uvec2((~ (~ (~ (((false ? (workgroup_size) : (max(((((false ? (subgroup_id) : (~ (~ ((workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * (max(subgroup_size, subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y)))))) << 0u)) >> (1u ^ 1u), ((((false ? (subgroup_id) : (~ (~ ((workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * (max(subgroup_size, subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y)))))) << 0u)) >> (1u ^ 1u))))))))), 1u))) << uvec2(0u, 0u)))), uvec2((~ (~ (~ (((false ? (workgroup_size) : (max(((((((false) && true) ? (subgroup_id) : (min((~ (~ ((workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * (max(subgroup_size, subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y)))), (~ (~ ((workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * (max(subgroup_size, subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y)))))))) << 0u)) >> (1u ^ 1u), ((((false ? (subgroup_id) : (~ (~ (((min(workgroup_base, workgroup_base)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * (max(subgroup_size, subgroup_size)) + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y)))))) << 0u)) >> (1u ^ 1u))))))))), 1u)))))) | 0u))))))))) ^ 0u);
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z = virtual_gid;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x;
 atomicStore(write_val, (clamp(((uint(uvec3(min((clamp(((true ? uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y) : (uint((injectionSwitch.x)) + ((34660u))))), (clamp(uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y), uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y), uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y))), (clamp(uint(((GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id) | uvec3(0u, 0u, 0u)).y), uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y), uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y))))), uint(((GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u)).y)), 0u, 1u)))), (((0u ^ (uint(((uint(uvec4(((~ (~ (((((GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y) | 0u)) | (((GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y)) | ((0u + ((GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y))))))))) - 0u), 0u, 0u, 0u))))))) >> 0u)), uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y))), 4, 64, 0);
 buf[GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y] = uint(subgroupAllEqual(write_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
