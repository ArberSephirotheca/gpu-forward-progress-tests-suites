#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_44 {
 mat2x3 _f0;
} ;

struct _GLF_struct_43 {
 uvec2 _f0;
 vec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_42 {
 uvec3 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 float _f3;
 ivec3 _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_41 {
 bvec4 _f0;
 mat3x2 _f1;
 uvec3 _f2;
 bvec4 _f3;
 bvec4 _f4;
 ivec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_45 {
 mat3x2 _f0;
 _GLF_struct_41 _f1;
 _GLF_struct_42 _f2;
 float _f3;
 _GLF_struct_43 _f4;
 mat3 _f5;
 _GLF_struct_44 _f6;
} ;

struct _GLF_struct_39 {
 uvec4 _f0;
 bvec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_38 {
 mat4x2 _f0;
 ivec2 _f1;
 vec2 _f2;
 bvec2 _f3;
 bvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_37 {
 mat4x3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_40 {
 uvec2 _f0;
 bvec4 _f1;
 _GLF_struct_37 _f2;
 int _injected_loop_counter;
 _GLF_struct_38 _f3;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_46 {
 bvec3 _f0;
 bvec4 _f1;
 _GLF_struct_40 _f2;
 _GLF_struct_45 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_36 {
 uint _f0;
 mat4 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 uint workgroup_size;
} ;

struct _GLF_struct_33 {
 vec2 _f0;
 mat2 _f1;
 ivec3 _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 vec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_34 {
 bool _f0;
 _GLF_struct_33 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_31 {
 bvec3 _f0;
 bvec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_30 {
 uint _f0;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 mat2x4 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
 float _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_28 {
 vec3 _f0;
 mat3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_27 {
 uvec3 _f0;
 bvec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
} ;

struct _GLF_struct_26 {
 ivec4 _f0;
 uvec3 _f1;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 vec2 _f1;
 uint _f2;
 mat2x3 _f3;
 mat2x4 _f4;
 ivec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_25 {
 bvec3 _f0;
 _GLF_struct_23 _f1;
 mat3x4 _f2;
 uint _f3;
 _GLF_struct_24 _f4;
 uint _f5;
} ;

struct _GLF_struct_35 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_29 _f2;
 mat2x3 _f3;
 _GLF_struct_32 _f4;
 _GLF_struct_34 _f5;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
 bvec4 _f1;
 ivec3 _f2;
 uvec2 _f3;
 uvec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 bvec4 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_17 {
 bool _f0;
 uvec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 vec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 ivec2 _f1;
 uvec3 _f2;
 float _f3;
 ivec2 _f4;
 ivec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_18 {
 bvec2 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_13 {
 bool _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_10 {
 float _f0;
 bool _f1;
 mat4x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 bvec4 _f1;
 vec2 _f2;
 _GLF_struct_11 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_22 {
 int _f0;
 _GLF_struct_12 _f1;
 float _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_18 _f4;
 int _injected_loop_counter;
 bool _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 mat2x3 _f1;
 vec2 _f2;
 mat3x4 _f3;
 ivec4 _f4;
 bvec3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_6 {
 int _f0;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 uint virtual_gid;
 int _f1;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat2x4 _f1;
 float _f2;
} ;

struct _GLF_struct_0 {
 uint _f0;
 int _f1;
 ivec2 _f2;
 float _f3;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat2x4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 int _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_8 _f3;
 vec3 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false)) && (true && (true))))
  {
   if((false))
    barrier();
   do
    {
     barrier();
    }
   while(false);
  }
 do
  {
   if((bool(bvec2((false), false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((! (! (false)))))
    barrier();
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! (! (false))))
  {
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = (((0 >> (int(3)))) | (((~ (~ (((0 >> (int(3))) - 0))))))); _injected_loop_counter != ((1 << ((~ (clamp((~ (int(2))), (~ (((int(2))) | (int(int(int(((false ? (step(- 1.6, distance(vec3(5.6, 6.7, - 5.4), vec3(- 379.771, 34.94, - 8.9)))) : (injectionSwitch.x))))))))), (0 + ((~ (int(2)))))))))) >> (int(2))); _injected_loop_counter ++)
      {
       if((((((false) && true) && true))))
        barrier();
       if(((((((false || (injectionSwitch.x > injectionSwitch.y)))))) || false))
        {
         if(((((((((false ? (- 92.09) : injectionSwitch.x))) - abs(0.0)) > injectionSwitch.y))) && (false || (true))))
          {
           if((bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), false, true, true))))
            {
             if((bool(bvec4(true, false, false, true))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              {
               if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               do
                {
                 if((false))
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               while(false);
               barrier();
               if((false))
                {
                 if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
                  barrier();
                 for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > (0 >> (int(4))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if((false))
              barrier();
            }
          }
         else
          {
           barrier();
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if(false)
        {
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
         barrier();
         if((false))
          barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
  }
 _GLF_struct_35 _GLF_struct_replacement_35;
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (((true ? ((min(1, 1)) << (int(4))) : (- 31190))) >> (int(4))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (((0) ^ 0) & 41265); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     _GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y = (((true ? (subgroup_id) : (175606u))) | (subgroup_id));
     if((((((((bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)), false, false))), true, false, true))) || false)) && true)))))
      barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(_GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(bvec3(true), bvec4(((true) && true)), _GLF_struct_40(uvec2(1u), bvec4((false || (((! (! ((true))))) || false))), _GLF_struct_37(mat4x3(1.0), mat4(1.0)), 1, _GLF_struct_38(mat4x2(1.0), ivec2(1), vec2(1.0), bvec2(true), bvec2(true), uvec4(((1u) - 0u))), _GLF_struct_39(uvec4(1u), bvec4((! (! (true)))), ivec3(1))), _GLF_struct_45(mat3x2(1.0), _GLF_struct_41(bvec4(true), mat3x2(1.0), uvec3(1u), bvec4(true), bvec4(true), ((((ivec4((0 | ((((0 + (1))) << 0))))) >> ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)), mat4(1.0)), _GLF_struct_42(uvec3(1u), uvec3(1u), mat2x4(1.0), 1.0, ivec3(1), ivec2(1), mat2((min(1.0, 1.0)))), 1.0, _GLF_struct_43(uvec2(1u), vec3(1.0), mat3(1.0)), mat3(1.0), _GLF_struct_44(mat2x3((min(1.0, 1.0))))), ivec3((((((int(((((injectionSwitch.x > injectionSwitch.y)) ? (((- 48116)) | 0) : int(((1) << (0 >> (int(7))))))))) << 0)) - 0)))); (! (! (_GLF_struct_replacement_46._f2._injected_loop_counter != (clamp(0, (~ (~ (0))), 0))))); _GLF_struct_replacement_46._f2._injected_loop_counter --)
  {
   if((false))
    barrier();
   if(true)
    {
     _GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z = (max(((uint(uvec2(max((((((((uint(((false ? (uvec3(63427u, 111915u, 4761u)) : uvec3(subgroup_local_id, 1u, 0u))))) | (93141u & 0u)))) - 0u)) | ((((uint(((false ? (uvec3(63427u, 111915u, 4761u)) : uvec3(subgroup_local_id, 1u, 0u))))) | (~ ((min(~ ((clamp((93141u & 0u), (93141u & 0u), (93141u & 0u)))), ~ ((clamp((93141u & 0u), (93141u & 0u), (93141u & 0u)))))))))))), subgroup_local_id), 0u)))), subgroup_local_id));
     if(((bool(((bool(false)) || false)))))
      barrier();
     if((false))
      barrier();
    }
   else
    {
     if((false))
      barrier();
     if((false))
      {
       if(((true && (false))))
        barrier();
       if((false))
        barrier();
       if(false)
        {
        }
       else
        {
         if((false || ((((((mat2(1.0) * (vec2(mat4((min(injectionSwitch, ((injectionSwitch) - vec2(0.0, 0.0)))), log(cos(0.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))).x > ((false ? (injectionSwitch) : ((false ? (vec2(- 333.095, - 8.6)) : injectionSwitch)))).y))))))
          barrier();
         if((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(false)
            {
             if((false))
              barrier();
            }
           else
            {
             if((bool(bvec2((false || (false)), false))))
              {
              }
             else
              {
               do
                {
                 if((true && (true && ((true)))))
                  {
                   do
                    {
                     barrier();
                     if((false))
                      barrier();
                    }
                   while(false);
                  }
                 else
                  {
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               do
                {
                 if((false))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   barrier();
                   if((false))
                    barrier();
                  }
                }
               while((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (false))))));
               barrier();
              }
             if((false))
              barrier();
            }
          }
         else
          {
          }
         if((false || ((((! (! ((((injectionSwitch.x > injectionSwitch.y))))))) && ((injectionSwitch.x < injectionSwitch.y))))))
          {
           if((false))
            barrier();
           do
            {
             do
              {
               if((false))
                barrier();
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
            }
           while((! (! (false))));
          }
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((((((false ? ((mix(float(((true ? ((true ? 4.7 : (- 2295.6757))) : (- 527.203)))), float(((((((mat4(483.002, 806.436, - 7.9, 3.0, 36.14, 863.387, - 731.787, 635.754, 9438.7723, 9846.3035, - 16.33, - 665.136, 94.39, 86.16, - 7.9, 7741.5426) * vec4(- 1230.3300, 2588.9093, - 15.52, 77.85))) * vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)).g)), bool((! (! (false))))))) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             barrier();
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((((! (! ((bool(bool((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))))))))
                barrier();
              }
             else
              {
               barrier();
              }
             if((false))
              barrier();
            }
           if((false))
            {
             if(true)
              {
               barrier();
               if(((bool(bvec2(((false) || false), ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
              }
             else
              {
               if((false))
                barrier();
              }
             if(((! (! (false)))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
           if((false))
            barrier();
          }
         while((bool(bool(false))));
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       if((((bool(bvec2(((! (! ((! ((! (! (! (false)))))))))), true))) || false)))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   do
    {
     if(false)
      {
      }
     else
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
        }
       else
        {
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
    }
   while(false);
  }
 uint num_workgroup = ((gl_NumWorkGroups.x) >> 0u);
 do
  {
   if((false))
    barrier();
   ((0u >> (uint(4u))) + (_GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x = num_workgroup));
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if(true)
  {
   if((false))
    {
     if((false))
      {
       if((((((bool(bvec4(bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false, false)), true, false, false))))))))
        barrier();
       barrier();
      }
     if(false)
      {
      }
     else
      {
       if(((true && (false))))
        barrier();
       if((((injectionSwitch.x > (vec2(injectionSwitch[0], (float(vec3(injectionSwitch[1], 0.0, 0.0))))).y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 do
  {
   if((bool(bvec3((! (! ((((false) && true))))), false, true))))
    barrier();
   do
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((injectionSwitch.x > ((injectionSwitch) * vec2(1.0, 1.0)).y)))
        {
        }
       else
        {
         barrier();
         if((false))
          barrier();
        }
       if((false))
        {
         do
          {
           barrier();
          }
         while((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), true, false))));
         if((false))
          barrier();
        }
      }
    }
   while(false);
  }
 while(false);
 if((((! (! (! (! (! ((((! (false))) && true))))))))))
  {
   do
    {
     if((false))
      barrier();
     barrier();
    }
   while(false);
  }
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36((max(1u, ((1u) - 0u))), mat4(1.0), (bvec2(bvec3((bvec2((bvec3(bvec3((bvec3(bvec3(bvec3((bvec2(bvec3(bvec2(true), false))), true))))))))), (! (! ((bool((! (! (bool((false || ((! (! (false))))))))))))))))), mat3x2(1.0), gl_WorkGroupSize.x);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(((! (((((injectionSwitch.x < injectionSwitch.y)) && ((! (((false || (((true && (false)))))) || false)))) || false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((! (! ((((true && (false))) && true))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true) || false))
  {
   if((! (! ((false)))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   for(int _injected_loop_counter = ((1 << ((min(((int(1)) | (int(1))), int(1))))) >> (int(1))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((((min(mix(vec2((- 5.3), ((- 6526.6129))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2((- 5.3), ((- 6526.6129))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if(((((bool(bvec3((bool(bvec4((((! (! (injectionSwitch.x > (clamp(((injectionSwitch.y) - 0.0), (float(float(injectionSwitch.y))), injectionSwitch.y))))) && true)), true, true, ((injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)), false)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(true)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((((max(((true ? (((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) : (- 9.6))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   else
    {
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
     if((false))
      barrier();
    }
   do
    {
     do
      {
       barrier();
      }
     while(false);
    }
   while(false);
   if((false))
    barrier();
  }
 uint workgroup_base = (0u + (max((_GLF_struct_replacement_36.workgroup_size), (_GLF_struct_replacement_36.workgroup_size)))) * workgroup_id;
 if((false))
  barrier();
 if((false))
  {
   do
    {
     barrier();
    }
   while(((bool((bool(bvec4(bool(false || ((bool(bool(false))))), false, false, true)))))));
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(true)
        {
         barrier();
         if((false))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      barrier();
     barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((! (! ((false || (! (((bool(bvec2((false || (! (((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       for(int _injected_loop_counter = ((1 & 1) & int((injectionSwitch.y))); _injected_loop_counter != ((0 << (int(8))) ^ 0); _injected_loop_counter --)
        {
         barrier();
        }
       if((false))
        barrier();
      }
    }
   if((true && ((false))))
    barrier();
  }
 if(((((false || (false))) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((! (! ((! (! (false))))))))
    barrier();
   if((! (! (((injectionSwitch.x < injectionSwitch.y))))))
    {
     if((false))
      barrier();
     barrier();
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(bvec2(true), (max(1, 1)), _GLF_struct_4(ivec2(1), mat2x4(1.0), _GLF_struct_0(1u, 1, (clamp(ivec2((0 | (1))), ivec2(1), (max(ivec2(1), ivec2(1))))), 1.0), _GLF_struct_1(ivec4(((1) >> 0)), mat2x4(1.0), 1.0), _GLF_struct_2(ivec2(((((0 & ((- 69278) / ((1 << ((int(ivec2(int(0), 1))))) >> (int(0))))) ^ ((~ (~ (((0 ^ (0)) ^ (1))))))) / 1))), workgroup_base + ((((max((_GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id), (_GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id))) << uvec3(0u, 0u, 0u)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (((true ? ((injectionSwitch) - vec2(0.0, 0.0)).y : (round(- 1808.8554)))))))).y * subgroup_size + ((max((_GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z) << 0u, (_GLF_struct_replacement_35._f1.GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z) << 0u))), 1), _GLF_struct_3(mat4(1.0), 1u), (ivec2((~ (~ (ivec3(ivec2(1), (((0 >> (int(2)))) | 0)))))))), _GLF_struct_8(_GLF_struct_5(mat4(1.0), mat4x3(((true ? 1.0 : (mod(5.4, 8.3)))))), _GLF_struct_6(1), _GLF_struct_7(mat2(1.0), mat2x3(1.0), vec2((mix((0.0 + ((mix(float((- 87.16)), float(((false ? (- 8.3) : float(((mix(float((1.5)), (min((float(mat2(float(- 51.75), ((((injectionSwitch.x < injectionSwitch.y)) ? tan(0.0) : (- 6.7))), 0.0, abs(0.0)))), (float(mat2(float(- 51.75), tan(0.0), 0.0, abs(0.0)))))), bool((! ((false || (! ((! (! (((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), bool(true))))), ((true ? float((((true ? ((1.0 * (1.0)) / 1.0) : (- 1.3))))) : (- 0.6))), (! (! (bool(true))))))), mat3x4(1.0), ivec4(1), ((((bvec3(bvec4(bvec3(bvec4(bvec3(((bvec3(bvec4(bvec3(bvec4(bvec3((bvec3((bvec3(bvec3(bvec3(bvec3((bvec3(bvec3(bvec3(bvec3(true))))))))))))), true)), true))))), true)), true)))))), mat4x3(1.0))), vec3(1.0));
 if((false))
  {
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if((! (! (true))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       barrier();
       if((! (! ((false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (0 ^ (clamp((min(0, 0)), 0, 0))); ((_injected_loop_counter) / 1) < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if(((! (! (! (! ((false))))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (0 ^ 1); _injected_loop_counter ++)
    {
     if((false))
      barrier();
    }
   if(true)
    {
     if((((((((clamp(vec2(mat3((vec2(injectionSwitch[(clamp(0, 0, 0))], (vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, 1.0, (mix(float((((injectionSwitch.y)) - 0.0)), float((- 5.6)), bool(false))), ((mix(float((46.74)), float(dot(vec4(0.0, 1.0, (mix(float((max((float(85386u)), ((clamp(float(85386u), ((false ? (- 23.90) : float(85386u))), float(85386u))))))), float(0.0), bool(true))), 1.0), vec4(1.0, 0.0, 1.0, 0.0))), bool(true)))), 1.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))))), (clamp(vec2(mat3((vec2(injectionSwitch[(clamp(0, 0, 0))], (vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, 1.0, (mix(float((((injectionSwitch.y)) - 0.0)), float((- 5.6)), bool(false))), ((mix(float((46.74)), float(dot(vec4(0.0, 1.0, (mix(float((max((float(85386u)), ((clamp(float(85386u), ((false ? (- 23.90) : float(85386u))), float(85386u))))))), float(0.0), bool(true))), 1.0), vec4(1.0, 0.0, 1.0, 0.0))), bool(true)))), 1.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))))), ((false ? (vec2(- 0.2, 823.386)) : vec2(mat3((vec2(injectionSwitch[(clamp(0, 0, 0))], (vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, 1.0, (mix(float((((injectionSwitch.y)) - 0.0)), float((- 5.6)), bool(false))), ((mix(float((46.74)), float(dot(vec4(0.0, 1.0, (mix(float((max((float(85386u)), ((clamp(float(85386u), ((false ? (- 23.90) : float(85386u))), float(85386u))))))), float(0.0), bool(true))), 1.0), vec4(1.0, 0.0, 1.0, 0.0))), bool(true)))), 1.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))))))), vec2(mat3((vec2(injectionSwitch[(clamp(0, 0, 0))], (vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, 1.0, (mix(float((((injectionSwitch.y)) - 0.0)), float((- 5.6)), bool(false))), ((mix(float((46.74)), float(dot(vec4(0.0, 1.0, (mix(float((max((float(85386u)), ((clamp(float(85386u), ((false ? (- 23.90) : float(85386u))), float(85386u))))))), float(0.0), bool(true))), 1.0), vec4(1.0, 0.0, 1.0, 0.0))), bool(true)))), 1.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))))))), vec2(mat3((vec2(injectionSwitch[(clamp(0, 0, 0))], (vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, 1.0, (mix(float((((injectionSwitch.y)) - 0.0)), float((- 5.6)), bool(false))), ((mix(float((46.74)), float(dot(vec4(0.0, 1.0, (mix(float((max((float(85386u)), ((clamp(float(85386u), ((false ? (- 23.90) : float(85386u))), float(85386u))))))), float(0.0), bool(true))), 1.0), vec4(1.0, 0.0, 1.0, 0.0))), bool(true)))), 1.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))))))))).x > injectionSwitch.y)) && (((vec2(injectionSwitch[0], ((true ? (mat2(1.0) * (injectionSwitch))[((false ? (findLSB(int(subgroup_id))) : 1))] : (843.127))))).x < injectionSwitch.y))))))
      {
       if((false))
        barrier();
       if((((((max(max(injectionSwitch.x, ((injectionSwitch.x) - 0.0)), max(injectionSwitch.x, ((injectionSwitch.x) - 0.0))))) > (max(((injectionSwitch.y) / 1.0), ((0.0 + ((clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))) / 1.0)))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   else
    {
     if(((! (! (false)))))
      barrier();
    }
   if(((bool(bvec4(false, true, true, (bool(bool(true))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if((false))
        barrier();
       if(true)
        {
         barrier();
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
    }
   if(true)
    {
     if((false))
      {
       if((! ((! (! (! (bool(bvec2((bool(bool(((false || (true)))))), ((injectionSwitch.x < injectionSwitch.y)))))))))))
        {
         if((false))
          {
           if((false))
            barrier();
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(false);
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((((((injectionSwitch.x > injectionSwitch.y))) || ((false) && true))))
      barrier();
     if((false))
      barrier();
     for(_GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22((max(1, 1)), _GLF_struct_12(_GLF_struct_10((0.0 + (((((false ? (- 8.2) : (! (! (false))) ? (- 68.20) : 1.0)))))), ((((true && (((! (! (true)))))) || ((! (! ((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y)))))) || false)), mat4x2(1.0), mat3((((((float(vec2(1.0, 0.0)))) - 0.0)) + 0.0))), bvec4(true), vec2(1.0), _GLF_struct_11(mat2((max((max(1.0, 1.0)), 1.0))), uvec2(1u)), true, mat4x2(1.0)), 1.0, _GLF_struct_14(_GLF_struct_13(true, mat2x4((min(1.0, (mix(float((vec4(- 314.825, - 4326.5953, 80.06, 9.2).w)), float((((1.0 * (1.0))) + 0.0)), bool(true))))))), mat4x3(1.0)), _GLF_struct_18(bvec2(true), _GLF_struct_15(ivec3(1), ivec2(((((injectionSwitch.x > injectionSwitch.y)) ? (- 94078) : 1))), uvec3(1u), 1.0, ivec2((int(((ivec3(1, 0, 0)) << ivec3(0, ((true ? 0 : (74804))), (((int(ivec3(((true ? 0 : (((14124) >> 0)))), 0, 0))) + 0))))))), ivec4(1), mat3x4(1.0)), _GLF_struct_16(mat2x3(1.0), vec4((float(vec2(1.0, 1.0)))), ivec2(1)), _GLF_struct_17(true, uvec4(1u), mat4x3(1.0)), ivec3(1)), (max(1, 1)), true, _GLF_struct_21(_GLF_struct_19(mat4(((clamp((min(0.0, 0.0)), 0.0, 0.0)) + (1.0))), bvec4(true), ivec3(((1) / 1)), (((((clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) | ((max(((clamp(uvec2(1u), uvec2(1u), uvec2(1u)))), ((clamp(uvec2(1u), uvec2(1u), uvec2(1u)))))))) >> uvec2(0u, 0u)), ((uvec3(1u)) << uvec3(0u, 0u, ((((0u) | 0u)) * 1u))), (min((uvec3(1u, 1u, 1u) * (uvec3(1u))), uvec3(1u)))), bvec4((false || (true))), _GLF_struct_20((((min((max((((uvec4(0u, 0u, 0u, 0u) | (((uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u))))) >> uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u) | (((uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), ((uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u))))) | ((~ (~ (((uvec4(1u)) ^ uvec4(0u, (clamp(0u, 0u, ((0u) | ((uint(uvec3(0u, 1u, 0u))))))), 0u, 0u))))))), uvec3(1u), mat4x3((((min(((1.0) + 0.0), 1.0)) / 1.0))), mat3x4((max(1.0, 1.0))), uvec2(1u)))); ((bool(bvec3(true, false, false))) && ((bool(bvec4(((((! (! ((! ((! (((! (! ((((clamp(int(int(_GLF_struct_replacement_22._injected_loop_counter)), int(int(_GLF_struct_replacement_22._injected_loop_counter)), int(int(_GLF_struct_replacement_22._injected_loop_counter))))) > int((((true ? injectionSwitch.x : (49.22)))))) && true))) || (((0.0 + (((injectionSwitch.x) - 0.0))) > injectionSwitch.y))))))))))) && ((injectionSwitch.x < injectionSwitch.y)))), true, false, ((injectionSwitch.x < (float(vec2(injectionSwitch.y, 0.0)))))))))); _GLF_struct_replacement_22._injected_loop_counter --)
      {
       if((((((injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > ((((false ? (9.4) : injectionSwitch.y))) - 0.0)))))
        {
         if(((bool(((bvec3(bvec3(bvec3(bvec4((((bvec3(bvec4(bvec3(bvec4(bvec3(bvec4((bvec3(bvec3(bvec3(false, true, true)))), false)), false)), false))))), true))))))))))
          barrier();
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if(true)
            {
             if((((! (! (false)))) && true))
              {
              }
             else
              {
               if((false))
                barrier();
               if((((! ((bool(bvec2(! ((bool(bvec2((false) || false, true)))), true))))))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if((((true && (bool(bvec4((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))), false, true, false)))))))
                barrier();
              }
            }
           else
            {
            }
          }
         do
          {
           atomicStore(write_val, uint(_GLF_struct_replacement_9._f2._f4.virtual_gid), ((((((4) ^ 0)) | 0)) | (((((4) ^ 0)) | 0))), 64, 0);
          }
         while(false);
         for(int _injected_loop_counter = (0 << ((0 ^ ((((((int(ivec3(int(3), 1, 1)))) * 1)) - 0))))); _injected_loop_counter < ((((1 << (int(3))) >> (int(3))) << ((int(ivec3(int(5), 0, 1))))) >> (int(5))); _injected_loop_counter ++)
          {
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 if(((((! ((! (! (! ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
               barrier();
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if((false))
              barrier();
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
              }
             if((false))
              {
               if((! (! (bool(bvec3((true && ((false))), false, (bool(bool(false)))))))))
                {
                 if((false))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
             if((! (((! (false)) && true))))
              {
              }
             else
              {
               do
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               while(false);
              }
            }
          }
         do
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
       if((((false)) || ((injectionSwitch.x > ((true ? ((injectionSwitch.y) + 0.0) : (- 20.14)))))))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     while(false);
    }
   else
    {
     if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))))
      {
       if(((((false || (((injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))))
        {
         if((false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if((((! (! ((! (! ((false) && true)))))))))
      barrier();
    }
   if(((bool(bvec4((((mix(vec2((- 963.430), (- 3.8)), vec2(((true ? (injectionSwitch) : (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2((true && ((((! (! (true)))) || false))), ((injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), true, true, true)))))
    {
     for(int _injected_loop_counter = ((1 << (int(6))) >> (((int(6)) >> 0))); _injected_loop_counter > (0 >> (int(7))); _injected_loop_counter --)
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       barrier();
      }
     if((false))
      barrier();
    }
   if(true)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((bool((bvec2(bvec2(bvec2(((bool(bvec2(bool(((bvec2(bvec3(bvec2(bvec3(bvec2((false || (true)), true), false)), true))))), ((injectionSwitch.x < injectionSwitch.y)))))), false)))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(((bool(((bool(false)) || false)))))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(((true && (false))))
    barrier();
   if((((false) && true)))
    barrier();
  }
 else
  {
   if((false))
    {
     if((bool(bvec3((bool(bvec4(((false) || false), false, true, ((injectionSwitch.x > injectionSwitch.y))))), false, false))))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if(((! (! (bool(bvec2((! (! ((false)))), false)))))))
      barrier();
     barrier();
    }
   if((((((bool((! (! (bool((! (bool(bvec2((false || ((! (((true && (false)) || (((bool(bvec3(false, true, (((! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))), false)))))))))) || false)) && true)))
    barrier();
   if((false))
    barrier();
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if((bool(bvec2((false), true))))
        {
         do
          {
           barrier();
          }
         while((((true) && true) && ((! (! (false))))));
         if((((bool((bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
          barrier();
        }
      }
     while(false);
     if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   if((false))
    barrier();
   if(((false || (false))))
    {
     if(((! (! (false)))))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
      }
     else
      {
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if((false))
        barrier();
       do
        {
         if((false))
          {
           if((bool(bool((false)))))
            barrier();
           barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     while(false);
     barrier();
    }
   if((false))
    barrier();
   if(true)
    {
     barrier();
    }
   else
    {
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 if(true)
  {
   if((true && (((! (((! (false)) || false)))))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
  }
 if(false)
  {
  }
 else
  {
   if((false))
    {
     for(int _injected_loop_counter = ((1 << (int(4))) >> ((int(ivec4(int(4), 1, 0, 0))))); ((_injected_loop_counter != int((injectionSwitch.x))) && true); _injected_loop_counter --)
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec4(((true && ((true && ((bool((bvec2(bvec4(bvec2((! (! (false))), false), false, true)))))))))), true, true, true))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false || ((! (! (! ((! (bool((bvec2(bvec3(bvec2((true), true), false)))))))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (min(1, 1)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
         barrier();
        }
       else
        {
         if((((injectionSwitch.x > (vec2(0.0, 0.0) + ((max(injectionSwitch, ((true ? injectionSwitch : (injectionSwitch))))))).y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           do
            {
             if(((true && ((bool(bvec4(false, false, true, true)))))))
              barrier();
             barrier();
            }
           while((false || (((injectionSwitch.x > injectionSwitch.y)))));
           if(((! (! (((injectionSwitch.x > (min((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((73.74), (- 2.5)), bvec2(false, false))), injectionSwitch)).y)))))))
            {
             do
              {
               if((false))
                barrier();
              }
             while(false);
             barrier();
            }
           for(int _injected_loop_counter = ((1) - (((0 >> (int(2))) * 1))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if(false)
              {
               if((false))
                barrier();
              }
             else
              {
               if((false))
                barrier();
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
            barrier();
           if((((((injectionSwitch.x < injectionSwitch.y)) && ((false))) || false)))
            barrier();
           barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
        }
      }
     if((false))
      barrier();
    }
   for(int _injected_loop_counter = ((min(0 << (int(6)), 0 << (int(6))))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       do
        {
         do
          {
           barrier();
          }
         while(false);
        }
       while((bool(bool((! (! (((injectionSwitch.x > injectionSwitch.y)))))))));
       if(((((((injectionSwitch.x < injectionSwitch.y)) && (false))) || false)))
        barrier();
       if((false))
        barrier();
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if(false)
    {
    }
   else
    {
     buf[_GLF_struct_replacement_9._f2._f4.virtual_gid] = uint(subgroupAllEqual(write_val));
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if(((! (! (false)))))
    barrier();
  }
 if(true)
  {
   if((((injectionSwitch.x > (float(mat4x2(injectionSwitch.y, 1.0, exp(((true ? 0.0 : (determinant(mat4(- 6.5, - 29.79, - 4.8, - 0.8, 5.1, 5.0, 59.05, 9.1, - 5.6, 6.8, 7349.9227, 447.680, - 8.2, - 0.6, - 3.5, - 708.130)))))), 0.0, 1.0, 1.0, 1.0, 0.0)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
