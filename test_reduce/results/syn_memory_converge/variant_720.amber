#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (min(((((uvec3(uvec3(((uvec3(0u, 0u, 0u) | ((((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))) / (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)))).x, ((((uvec3(uvec3(((uvec3(0u, 0u, 0u) | ((((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))) / (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)))).x));
 uint workgroup_size = (min(((gl_WorkGroupSize.x) ^ 0u), ((gl_WorkGroupSize.x) ^ 0u)));
 uint workgroup_id = (~ (~ (((gl_WorkGroupID.x) | ((min(gl_WorkGroupID.x, gl_WorkGroupID.x)))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (clamp((((uint(uint(min(clamp(((((~ (~ ((uint(uint(0u)))))) | ((0u + (((~ (~ ((uint(uint(0u)))))) | (~ (~ ((uint(uint((max(0u, 0u)))))))))))))) + (((((false ? (subgroup_size) : workgroup_base))) | (workgroup_base)) + subgroup_id * (((min((clamp(subgroup_size, (((clamp(((subgroup_size) >> 0u), (clamp(subgroup_size, (~ (~ (subgroup_size))), subgroup_size)), subgroup_size))) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size)))) + (min(subgroup_local_id, subgroup_local_id)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(((~ (~ ((uint(uint(0u)))))) + (uint(uvec2((workgroup_base + subgroup_id * (((min((((((0u ^ 0u) + (1u)) * ((clamp((uint(uvec2(subgroup_size, 0u))), ((clamp((((uint(uint((subgroup_size) - 0u)))) ^ 0u), (((subgroup_size) - 0u) - 0u), (subgroup_size) - 0u))), ((true ? subgroup_size : (109437u))))) ^ 0u)))), subgroup_size))) * 1u) + subgroup_local_id), 0u)))), workgroup_base + subgroup_id * subgroup_size + (~ (((uint((injectionSwitch.x)) | ((~ (subgroup_local_id)) | (~ (subgroup_local_id))))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))))), (((max(((uint(uvec4(uint(uint(min(clamp(((((0u ^ ((~ (~ ((uint(uint(0u)))))) | ((0u + (((~ (~ ((uint(uint(0u)))))) | (~ (~ (((min(uint(uint(0u)), uint(uint(0u)))))))))))))))) + ((max(workgroup_base + subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, (((~ (~ (((subgroup_size) - 0u))))) | (((subgroup_size) - 0u))), subgroup_size)), subgroup_size)))), ((workgroup_base + subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, (((~ (~ (((subgroup_size) - 0u))))) | (((subgroup_size) - 0u))), subgroup_size)), subgroup_size))))) ^ 0u))) + (min(subgroup_local_id, subgroup_local_id)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((((uint((injectionSwitch.x)) | (~ (~ ((((uint(uint(0u)))) | ((min((uint(uint(0u))), (uint(uint(0u)))))))))))) + (uint(uvec2((workgroup_base + subgroup_id * (min((clamp(subgroup_size, ((((subgroup_size) - 0u) - (1u ^ 1u))), subgroup_size)), subgroup_size)) + subgroup_local_id), 0u)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), (1u | 0u), 1u, 0u)))), (min(((uint(uvec4(uint(uint(min(clamp(((((0u ^ ((~ (~ ((uint(uint(0u)))))) | ((0u + (((~ (~ ((uint(uint(0u)))))) | (~ (~ (((min(uint(uint(0u)), uint(uint(0u)))))))))))))))) + ((max(workgroup_base + subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, (((~ (~ (((subgroup_size) - 0u))))) | (((subgroup_size) - 0u))), subgroup_size)), subgroup_size)))), ((workgroup_base + subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, (((~ (~ (((subgroup_size) - 0u))))) | (((subgroup_size) - 0u))), subgroup_size)), subgroup_size))))) ^ 0u))) + (min(subgroup_local_id, subgroup_local_id)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((((uint((injectionSwitch.x)) | (~ (~ ((((uint(uint(0u)))) | ((min((uint(uint(0u))), (uint(uint(0u)))))))))))) + (uint(uvec2((workgroup_base + subgroup_id * (min((clamp(subgroup_size, ((((subgroup_size) - 0u) - (1u ^ 1u))), subgroup_size)), subgroup_size)) + subgroup_local_id), 0u)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), (1u | 0u), 1u, 0u)))), ((uint(uvec4(uint(uint(min(clamp(((((0u ^ ((~ (~ ((uint(uint(0u)))))) | ((0u + (((~ (~ ((uint(uint(0u)))))) | (~ (~ (((min(uint(uint(0u)), uint(uint(0u)))))))))))))))) + ((max(workgroup_base + subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, (((~ (~ (((subgroup_size) - 0u))))) | (((subgroup_size) - 0u))), subgroup_size)), subgroup_size)))), ((workgroup_base + subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size))) | ((min((clamp(subgroup_size, (((~ (~ (((subgroup_size) - 0u))))) | (((subgroup_size) - 0u))), subgroup_size)), subgroup_size))))) ^ 0u))) + (min(subgroup_local_id, subgroup_local_id)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((((uint((injectionSwitch.x)) | (~ (~ ((((uint(uint(0u)))) | ((min((uint(uint(0u))), (uint(uint(0u)))))))))))) + (uint(uvec2((workgroup_base + subgroup_id * (min((clamp(subgroup_size, ((((subgroup_size) - 0u) - (1u ^ 1u))), subgroup_size)), subgroup_size)) + subgroup_local_id), 0u)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), (1u | 0u), 1u, 0u)))))))))), (((uint(uint(min(clamp(((((~ (~ ((uint(uint(0u)))))) | (~ (~ ((~ (~ (((0u + (((((~ (~ ((uint(((uint(((true ? ((0u) + 0u) : (subgroup_local_id))))) | (uint(0u)))))))) >> 0u)) | (~ (~ ((uint(uint(0u)))))))))))))))))) + (workgroup_base + ((subgroup_id * (((min((clamp(subgroup_size, ((subgroup_size) - (max(((((0u) << 0u) | 0u)), ((0u) << 0u)))), subgroup_size)), (0u | (subgroup_size))))) | ((min((clamp(subgroup_size, ((((subgroup_size)) | ((subgroup_size))) - 0u), subgroup_size)), subgroup_size))))) ^ 0u) + (((((min(subgroup_local_id, subgroup_local_id))) ^ 0u)) >> uint((injectionSwitch.x))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(((~ (~ ((uint(uint(0u)))))) + (uint(uvec2((workgroup_base + subgroup_id * (min((clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)), subgroup_size)) + subgroup_local_id), 0u)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + (clamp((~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size, ((true ? subgroup_id * subgroup_size : (subgroup_size))))) + subgroup_local_id)))))))));
 atomicStore(write_val, uint((((0u ^ (virtual_gid))) | 0u)), ((1 * ((0 | (((1 << (int(2))) >> (int(2))) * (((((clamp((((clamp((~ (((0 | 0) ^ (~ ((4)))))) << 0, (4) << 0, (4) << 0)))), (((4) << 0)), (((((((4) << (((1 << (int(7))) >> (int(7))) ^ 1))) << 0)) ^ 0)))))) << (0 << (int(2))))))))) | 0), 64, (clamp(0, 0, ((false ? (int(ivec2((- 95673), 0))) : 0)))));
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
