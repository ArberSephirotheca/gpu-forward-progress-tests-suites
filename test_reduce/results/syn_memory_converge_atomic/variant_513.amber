#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(((! (! ((! (! (false))))))))
  {
   if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
    {
     if(((! (! (((false) && true))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((((vec2(injectionSwitch[0], (max((max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((((! (! (((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((bool(bvec4(false, true, true, (true && (true)))))))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if(((bool(bvec3(false, false, true)))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((false) && true)))
    barrier();
   if((((((injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((((bool(bool((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false))))))) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((((! (! (false))) && true))))
    barrier();
   barrier();
   if(((((((float(float(injectionSwitch.x))) - 0.0)) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((3894.3012), (- 84.80)), bvec2(false, false))).y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((false)) || false))
      barrier();
     if(((false || (false))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, (mix(vec2((5.8), (clamp((mat2(1.0) * (((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((798.398), (- 80.94)), bvec2(false, false))))))[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((max((injectionSwitch)[0], (injectionSwitch)[0])), (9.3)), bvec2(true, false))))).y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((bool(bool((false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > ((((min(float(float(((injectionSwitch.y) + 0.0))), float(float(((injectionSwitch.y) + 0.0))))) + 0.0)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((! (((! ((false))) || false))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((! ((! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((! ((((false || (! (((bool((bvec3(bvec3(bvec3((bool(bvec4((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false, true))), false, true))))))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
      }
     if(((bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((! (! ((false)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((bool((bvec3(bvec3(bvec3((false), true, false)))))))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if(((((! ((bool(bvec4((false || (bool(bool((! (false)))))), true, false, false))))))) || false))
      barrier();
     if(((! (! ((! (! (false))))))))
      barrier();
    }
   if(((((bool(bool(((false) || false))))) || ((injectionSwitch.x > injectionSwitch.y)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
   if((! (! (! (! (((false))))))))
    barrier();
   if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (((float(mat2(float(mat2x3((min(exp(0.0), exp(0.0))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))) * ((float(((float(injectionSwitch.y)) - 0.0)))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec4(false, true, true, true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((bool(bvec3(false, true, true)))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((true && (false))))
    barrier();
   if((false))
    {
     if((((bool(bool(((! (! (false))) && true)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if(((! ((bool(bool(! (false))))))))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       barrier();
       if((false))
        barrier();
       if(((bool(bool(false)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((((determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 1.0, (injectionSwitch.y), (dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0)) * ((0.0 + (((false ? (- 37.02) : injectionSwitch.x)))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((bool(bvec2((((false || (injectionSwitch.x > injectionSwitch.y)))), true)))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && ((((! (((((((false ? (injectionSwitch) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))))))) || (false || (false))))))))
    {
     if(((true && ((true && (((injectionSwitch.x > ((false ? (9.5) : injectionSwitch.y))))))))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > ((injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((! (! ((false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((bool(bvec2(false, true)))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((bool((bvec2(bvec2(bvec2(false, true)))))) && true))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((true && ((false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((bool(bvec3(false, false, true)))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if(((bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x < ((injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if(((false || (false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((bool(bool((false)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((((((((! (! ((false || (! ((true && (! (false)))))))))))) && true)) && true)) || false))
      barrier();
     if(((false || (false))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((! ((bool(bvec3(! (false), true, false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((! (! (((false || ((false)))) || false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((((false) && true)) || false)))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(((! (((! (false)) && true)))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > (max(injectionSwitch, ((true ? (mat2(1.0) * (mix(vec2((- 7922.1612), (965.217)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))) : (vec2(- 29.69, - 6216.5549)))))).y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((bool(bvec4(false, false, false, true)))))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if(((((((! (! (false))) && true))) || ((injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if((((false)) || false))
        barrier();
       if(((((bool(bvec3(false, true, false))))) && true))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > ((false ? (vec2(- 815.954, - 5.6)) : injectionSwitch)).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((bool(bvec2((false || (((injectionSwitch.x > injectionSwitch.y)))), false)))))
          {
           if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        {
         if(((false || (false))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if(((((! (! (((((((injectionSwitch.x > injectionSwitch.y)) ? (((75.11)) - 0.0) : ((((false ? ((((false ? (vec2(- 8.3, - 3206.6120)) : vec2(- 2605.0978, - 7923.3152))))) : (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 3497.6364), (5293.1065)), bvec2(false, false))))).x) - 0.0))) > injectionSwitch.y)))))) && ((injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if(((! (! (false || ((((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((((false) && true)) && true)))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((false) || ((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((false) && true)))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if(((true && (false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if(((true && (((((((injectionSwitch.x > injectionSwitch.y))) && true)) && true)))))
  {
   if(((bool(bvec3(false, true, false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((! (! (false)))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) || false)))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec3((false), false, true))))
  {
   if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((false) && true)))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((float(((mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
  barrier();
 uint virtual_gid = (uint((max(uvec3(workgroup_base, 0u, ((((((false ? (workgroup_id) : 1u))) | 0u) | 1u) * (0u))), ((((((min((min(max(uvec3(workgroup_base, 0u, 0u), (max(uvec3(workgroup_base, 0u, 0u), uvec3(workgroup_base, 0u, 0u)))), max(uvec3(workgroup_base, 0u, 0u), (max(uvec3(workgroup_base, 0u, 0u), uvec3(workgroup_base, 0u, 0u)))))), max(uvec3(workgroup_base, 0u, 0u), (max(uvec3(workgroup_base, 0u, 0u), uvec3(workgroup_base, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, (clamp(0u, 0u, 0u)), (~ (~ (((~ (~ ((((((true ? min(((uint(uvec3(0u, ((((0u) - uint((injectionSwitch.x)))) | 0u), 0u)))), ((uint(uvec3(0u, ((((0u) - uint((injectionSwitch.x)))) | 0u), 0u))))) : (workgroup_id)))) / 1u)))))) | ((max(((((uint(uvec3(0u, 0u, 0u))))) - 0u), (((min((~ (~ (((uint(uvec3(0u, 0u, 0u))))))), ((uint(uvec3(0u, 0u, 0u))))))) - 0u))))))))))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  {
   if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((! ((! (bool((false || (((bool((! (! ((false)))))) && true)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (((false) || false))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, (max(0.0, ((true ? 0.0 : (step(- 6649.7617, (mix(float(0.6), float(((- 8597.6768 * 0.9))), bool(false))))))))), 1.0)))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if(((bool(bvec3(false, true, false)))))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     barrier();
     if((((false) && true)))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((((((! (! (! (! (((((injectionSwitch.x > injectionSwitch.y)) || ((! (! ((min((mix(vec2((278.892), (36.26)), vec2((injectionSwitch)[0], ((((injectionSwitch.x > injectionSwitch.y)) ? (- 201.067) : (injectionSwitch)[1]))), bvec2(true, true))), (mix(vec2((- 277.143), ((mix(vec2((278.892), (36.26)), vec2((injectionSwitch)[0], ((((injectionSwitch.x > injectionSwitch.y)) ? (- 201.067) : (injectionSwitch)[1]))), bvec2(true, true))))[1]), vec2(((mix(vec2((278.892), (36.26)), vec2((injectionSwitch)[0], ((((injectionSwitch.x > injectionSwitch.y)) ? (- 201.067) : (injectionSwitch)[1]))), bvec2(true, true))))[0], (2.7)), bvec2(true, false))))).x > injectionSwitch.y))))))))))))) && true))))
  {
   if(((false || (false))))
    barrier();
   if(((bool(bool(false)))))
    {
     if((false))
      {
       if(((bool(bvec2(false, false)))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((true && (false))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch, (vec2((mat2x3(mat4x3(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)))))), injectionSwitch)).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], (float(mat2x3(injectionSwitch[1], 0.0, 0.0, 0.0, 0.0, 1.0))))).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((((mix(float(((false ? (546.326) : injectionSwitch.x))), float((- 8071.2035)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(((bool(bvec3(false, false, false)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((((((mix(float((mix(float(injectionSwitch.x), float((1614.1138)), bool(false)))), (max(float(((((false ? ((((clamp(- 1.0, - 1.0, - 1.0))) - 0.0)) : (1067.1785)))) / (min((dot(vec2(0.0, (injectionSwitch.y)), vec2(0.0, 1.0))), (0.0 + ((dot(vec2(0.0, (injectionSwitch.y)), vec2(0.0, 1.0))))))))), float(((((false ? (- 1.0) : (1067.1785)))) / (dot(vec2(0.0, (injectionSwitch.y)), vec2(0.0, 1.0))))))), bool(false))) > ((injectionSwitch.y) * (((true ? (1.0) + 0.0 : (94.90)))))))) || false)))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if(((bool(bool(false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((false || (false))) || false)))
  {
   if((((false)) || false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (clamp(((false ? (772.665) : injectionSwitch.y)), ((max((1.0 * ((false ? (772.665) : injectionSwitch.y))), (false ? (772.665) : injectionSwitch.y)))), ((false ? (772.665) : injectionSwitch.y))))))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, (((min(0, 0))) | (max(0, (min(0, ((0) | (0))))))));
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((false) || false)))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bool(false)))))
  {
   if(((((((max(clamp((1.0 * (clamp((((vec2(mat2(injectionSwitch, tan(abs(0.0)), 1.0)))) / vec2(1.0, 1.0)).x, (((clamp((max(injectionSwitch, ((min(clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, ((injectionSwitch) / vec2(1.0, 1.0)).x))), (1.0 * (clamp((((vec2(mat2(injectionSwitch, tan(abs(0.0)), 1.0)))) / vec2(1.0, 1.0)).x, (((clamp((max(injectionSwitch, ((min(clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, ((injectionSwitch) / vec2(1.0, 1.0)).x))), (1.0 * (clamp((((vec2(mat2(injectionSwitch, tan(abs(0.0)), 1.0)))) / vec2(1.0, 1.0)).x, (((clamp((max(injectionSwitch, ((min(clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, ((injectionSwitch) / vec2(1.0, 1.0)).x)))), clamp((1.0 * (clamp((((vec2(mat2(injectionSwitch, tan(abs(0.0)), 1.0)))) / vec2(1.0, 1.0)).x, (((clamp((max(injectionSwitch, ((min(clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, ((injectionSwitch) / vec2(1.0, 1.0)).x))), (1.0 * (clamp((((vec2(mat2(injectionSwitch, tan(abs(0.0)), 1.0)))) / vec2(1.0, 1.0)).x, (((clamp((max(injectionSwitch, ((min(clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, ((injectionSwitch) / vec2(1.0, 1.0)).x))), (1.0 * (clamp((((vec2(mat2(injectionSwitch, tan(abs(0.0)), 1.0)))) / vec2(1.0, 1.0)).x, (((clamp((max(injectionSwitch, ((min(clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, ((injectionSwitch) / vec2(1.0, 1.0)).x)))))))) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, (((0) << 0) ^ (64)), (min((((max((clamp(0, 0, ((((((((0) * 1)) + 0))) | 0) | (0)))), (clamp(0, 0, ((((((0) * 1)) + 0)) | (0))))))) / 1), (clamp(0, 0, ((((((((0) * 1))) - 0) + 0)) | (0)))))));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((float(mat3x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual((((~ (~ (read_val)))) | (read_val))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((((injectionSwitch.x > (clamp(((false ? (injectionSwitch) : (mat2(1.0) * (((false ? (vec2(37.50, - 77.97)) : injectionSwitch)))))), (vec2(0.0, 0.0) + (((false ? (injectionSwitch) : ((false ? (vec2(37.50, - 77.97)) : injectionSwitch)))))), ((false ? (vec2(37.50, - 77.97)) : injectionSwitch)))).y)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((false)) || false))
      {
       if(((((float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((false) && true)))
      barrier();
     if((! (! ((false)))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((true && ((false))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false)) && true))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((bool(bvec4(false, false, true, false)))))
      barrier();
    }
   if((false))
    barrier();
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((! (! (((bool(bool(false))))))) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > (min((vec2(mat4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).y))))
    {
     if((((false) || false)))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
