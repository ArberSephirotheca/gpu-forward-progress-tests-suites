#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_6 {
 int _f0;
 mat2 _f1;
 vec2 _f2;
 uint subgroup_size;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 uvec4 _f1;
 ivec2 _f2;
 ivec3 _f3;
 mat3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 uint _f1;
 uint _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat3 _f3;
 ivec3 _f4;
 uint _f5;
 bool _f6;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat3x4 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 uint workgroup_size;
 uint _f1;
 _GLF_struct_4 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(_GLF_struct_6(((((~ (~ ((((1) << 0)) | (1)))))) | (((~ (~ ((1) | ((clamp(1, 1, (int(ivec2(1, 1)))))))))))), ((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (max(((vec2(1.0)) - vec2(0.0, 0.0)), (max(((vec2(1.0)) - vec2(0.0, 0.0)), ((vec2(1.0)) - vec2(0.0, 0.0)))))), gl_SubgroupSize)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(((vec4(vec4((vec4(1.0)) * mat4(1.0))))), mat3x4((((0.0 + ((clamp((true ? (((! (! (((true) && true)))) ? (1.0) : (13.34))) : (determinant(mat4(- 6.4, 8.2, - 3779.6739, 659.969, ((- 821.738) / 1.0), - 339.505, 743.097, 15.84, ((9.5) / ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (max(601.160, 601.160)), (clamp((max(((false ? (7.5) : - 2.9)), - 2.9)), - 2.9, (mix(float((3.3)), float(- 2.9), bool(true))))), - 15.81, (float(mat3x2(- 83.03, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))), 6189.6264, 0.9, (mix(float(78.67), float((1.7)), bool(false))))))), (true ? (((! (! (((true) && true)))) ? (1.0) : (13.34))) : (determinant(mat4(- 6.4, 8.2, - 3779.6739, 659.969, ((- 821.738) / 1.0), - 339.505, 743.097, 15.84, ((9.5) / (injectionSwitch.y)), (max(601.160, 601.160)), (clamp(((float(mat4x3((min(max(((false ? (7.5) : - 2.9)), - 2.9), max(((false ? (7.5) : - 2.9)), - 2.9))), 1.0, 1.0, 1.0, 1.0, (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, abs(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), - 2.9, (mix(float((3.3)), float(- 2.9), bool(true))))), - 15.81, (float(mat3x2(- 83.03, 0.0, (((max(1.0, 1.0))) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))), 6189.6264, 0.9, (mix(float(78.67), float((1.7)), bool(false))))))), (true ? (((! (! (((true) && true)))) ? (1.0) : (13.34))) : (determinant(mat4(- 6.4, 8.2, - 3779.6739, 659.969, ((- 821.738) / 1.0), - 339.505, 743.097, 15.84, (((exp(0.0) * (9.5))) / (injectionSwitch.y)), (max(601.160, 601.160)), (clamp((max(((false ? (7.5) : - 2.9)), - 2.9)), - 2.9, (mix(float((3.3)), float(- 2.9), bool(true))))), - 15.81, (float(mat3x2(- 83.03, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))), 6189.6264, 0.9, (mix(float(78.67), float((1.7)), bool(false)))))))))))) / cos(0.0))), _GLF_struct_0(bvec2(true), mat4(1.0), mat3x2(1.0), mat3(1.0), ivec3(1), (uint(uint((0u + ((max(1u, 1u))))))), true)), (clamp(gl_WorkGroupSize.x, (uvec3(0u, (uint(((false ? (uvec3(173275u, 100896u, 196496u)) : uvec3(0u, 1u, 1u))))), 0u) + (gl_WorkGroupSize)).x, gl_WorkGroupSize.x)), 1u, _GLF_struct_4(_GLF_struct_2(vec3(1.0), 1u, 1u, bvec4(true)), _GLF_struct_3(mat3x4(1.0), uvec4(1u), ivec2(1), ivec3(1), ((mat3(1.0)) * mat3((injectionSwitch.y))), mat3x4(1.0))));
 uint workgroup_id = (max((~ ((max(~ ((max((~ (~ (gl_WorkGroupID.x))), (~ (~ (gl_WorkGroupID.x)))))), ~ ((~ (~ (gl_WorkGroupID.x)))))))), ((((((((gl_WorkGroupID) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)).x) >> 0u)) ^ 0u)));
 uint workgroup_base = _GLF_struct_replacement_5.workgroup_size * workgroup_id;
 uint virtual_gid = (0u | (~ (~ ((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0._f0.subgroup_size))))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad((min(write_val, write_val)), (((~ (((~ (4)) ^ 0)))) | 0), 64, 0);
 (0u ^ (buf[virtual_gid] = uint(subgroupAllEqual((uint((max(((true ? uvec4(((((injectionSwitch.x > injectionSwitch.y)) ? (workgroup_base) : (((max((~ ((0u ^ (((false ? (write_val) : ((~ (read_val)) + 0u))))))), read_val))) | ((max(read_val, read_val)))))), 0u, 0u, uint((((false ? (63.12) : (mix(float((max(injectionSwitch, injectionSwitch)).x), float((- 5.9)), (! (((! (bool(false))) || false)))))))))) : ((uvec4(164506u, 35974u, 176417u, 123111u) + uvec4(173623u, 164502u, 183817u, 7051u))))), ((true ? uvec4(((((injectionSwitch.x > injectionSwitch.y)) ? (workgroup_base) : (((max((~ ((0u ^ (((((false ? (write_val) : ((~ (read_val)) + 0u)) * 1u))))))), read_val))) | ((max(read_val, read_val)))))), 0u, 0u, uint(((((((injectionSwitch.x > injectionSwitch.y)) || (false)) ? (min((63.12), (63.12))) : (mix(float((max(injectionSwitch, injectionSwitch)).x), float((- 5.9)), bool(false)))))))) : ((uvec4(164506u, 35974u, 176417u, 123111u) + uvec4(173623u, 164502u, 183817u, 7051u)))))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
