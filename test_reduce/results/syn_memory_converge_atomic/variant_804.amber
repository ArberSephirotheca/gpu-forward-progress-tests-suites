#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_6 {
 mat4x3 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 mat2 _f1;
 mat3x2 _f2;
 bvec3 _f3;
 vec3 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 ivec4 _f3;
 mat3 _f4;
 mat3x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_7 _f1;
 uvec2 _f2;
 mat4x2 _f3;
 float _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_5(_GLF_struct_0(ivec2(((1) << 0))), _GLF_struct_1(((mat2(1.0)) / mat2((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))), vec4(1.0)), _GLF_struct_2(ivec2(1)), vec4(1.0), _GLF_struct_3(vec3(1.0)), _GLF_struct_4(mat4x2(((1.0) - 0.0)), mat2x4(1.0), bvec2(true), ivec4(1), mat3(((1.0) / (max(1.0, 1.0)))), mat3x4(1.0), vec4(1.0)), vec2(1.0)), _GLF_struct_7(bvec2(true), mat2((min((clamp(((1.0) / cos(0.0)), 1.0, 1.0)), 1.0))), mat3x2(1.0), (bvec3((bvec3(bvec4((bvec3((bvec3(bvec3((bvec3(bvec4((bvec3(bvec4(bvec3((((bvec3(bvec4(bvec3(bvec3(bvec3(bvec4((bvec3(bvec3(((bvec3(bvec3(bvec3((bvec3(bvec4(bvec3((bvec3(bvec4((bvec3(bvec3(bvec3(((bvec3(bvec3(bvec3(bvec3((bvec3(bvec4(bvec3((! ((true && (! (((true) || false))))))), true))))))))))))), true)))), false))))))))))), (false || (true)))))), true)))))), (bool(bvec4(false, false, true, ((injectionSwitch.x < injectionSwitch.y)))))))), false)))))))), false))))), ((mix(vec3((- 801.721), (max(vec3(1.0), (clamp((vec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) + ((max(((((mix(vec3((mat3(1.0) * (vec3(1.0)))[0], (mat3(1.0) * (vec3(1.0)))[1], (mat3(1.0) * (vec3(1.0)))[2]), vec3((425.836), (- 7.7), (- 82.07)), bvec3(false, false, false)))) * vec3(1.0, 1.0, 1.0))), vec3(1.0))))), vec3(1.0), vec3(1.0)))))[1], (max(vec3(1.0), (clamp((vec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) + ((max((mat3(1.0) * (vec3(1.0))), vec3(1.0))))), vec3(1.0), vec3(1.0)))))[2]), vec3((max(vec3((float(((true ? mat4x3(1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0) : (mat4x3(- 677.596, - 68.11, 40.25, - 8444.6363, 2.1, - 58.20, 1901.8566, 873.464, 20.39, - 26.65, 435.711, 2.1))))))), (clamp((((vec3((injectionSwitch.x), (injectionSwitch.x), ((((mix(vec2((injectionSwitch)[0], (- 17.78)), vec2((155.614), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).x)) + ((max((mat3(1.0) * (vec3(1.0))), vec3(1.0))))) - vec3(0.0, 0.0, 0.0))), vec3(1.0), vec3(1.0)))))[0], (- 16.78), (945.980)), bvec3(true, false, false)))), _GLF_struct_6(mat4x3(1.0), gl_WorkGroupSize.x)), uvec2(1u), mat4x2((((true ? ((min(1.0, 1.0))) : (vec3(- 6.2, - 596.125, - 0.5)[1]))) - 0.0)), 1.0);
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((true && (injectionSwitch.x > injectionSwitch.y)))) || (false))))
  return;
 uint workgroup_base = _GLF_struct_replacement_8._f1._f5.workgroup_size * (clamp(workgroup_id, workgroup_id, ((((workgroup_id)) * 1u) | (uint(((((min(clamp(((uvec3((((((injectionSwitch.x > injectionSwitch.y)) ? ((subgroup_size * uvec3(116112u, 99506u, 145356u)).s) : 0u)) | (((clamp(workgroup_id, workgroup_id, workgroup_id))))), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uvec3((0u | (((~ (~ (((workgroup_id) * 1u))))))), 1u, 1u), uvec3((0u | ((workgroup_id))), 1u, 1u)), clamp(((uvec3((((((injectionSwitch.x > injectionSwitch.y)) ? ((subgroup_size * uvec3(116112u, 99506u, 145356u)).s) : 0u)) | (((clamp(workgroup_id, workgroup_id, workgroup_id))))), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uvec3((0u | (((~ (~ (((workgroup_id) * 1u))))))), 1u, 1u), uvec3((0u | ((workgroup_id))), 1u, 1u))))) >> uvec3(0u, 0u, 0u))))))));
 uint virtual_gid = workgroup_base + ((subgroup_id) | (subgroup_id)) * ((true ? subgroup_size : (subgroup_local_id))) + (((max((0u | ((min(subgroup_local_id, subgroup_local_id)))), (0u | ((min(subgroup_local_id, subgroup_local_id)))))) * 1u));
 atomicStore(write_val, uint((clamp(virtual_gid, virtual_gid, virtual_gid))), (((((((false ? (- 24499) : (4))) * 1)) << 0)) ^ 0), 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
