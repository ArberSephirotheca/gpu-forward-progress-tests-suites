#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_16 {
 uint _f0;
 uint _f1;
 mat3 _f2;
 bvec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 vec2 _f1;
 mat4x2 _f2;
 ivec3 _f3;
 uvec4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 float _f1;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 uvec3 _f1;
 bvec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 int _f1;
 vec2 _f2;
 _GLF_struct_14 _f3;
 vec2 _f4;
 _GLF_struct_15 _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 bvec2 _f1;
 bool _f2;
 vec3 _f3;
 mat2x4 _f4;
 bvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 bvec2 _f1;
 mat4 _f2;
 mat2 _f3;
 bvec4 _f4;
 mat3x2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 vec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 uint _f4;
 mat2x4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_12 {
 uint virtual_gid;
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 vec3 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 ivec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 bool _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 vec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 bvec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 mat4x3 _f2;
 _GLF_struct_3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat4x3 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 int _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
 mat3 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_17 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uint subgroup_local_id;
 bool _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false || ((false))))
  return;
 if(((((false || (false))) || false)))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((((false)) && true))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! ((! (! (false))))))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if(((bool(bvec2((bool(bvec3(false, false, true))), false)))))
      barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       barrier();
      }
     if(((((max((((float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, (injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (((injectionSwitch.x > injectionSwitch.y)) || ((false))))))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((false || ((true && (false))))))
      {
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         return;
         if((false))
          return;
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        return;
       if((((false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), (false || (true)), ((injectionSwitch.x > injectionSwitch.y)), true)))))))
        barrier();
       if((false))
        {
         if((false))
          {
           if(((! (! (false)))))
            return;
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
      }
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if(((! (! (false)))))
      return;
    }
   if((((injectionSwitch.x > (min(injectionSwitch, (((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / vec2(1.0, 1.0)))).y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
  }
 if((false))
  {
   if((false))
    {
     if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(((bool(bvec2(((((((((bool(bvec3(false, true, true))))) || false) && true)) && true) || (false)), true)))))
      return;
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if(((bool(bvec4(((injectionSwitch.x > (float(mat4x2(injectionSwitch.y, 1.0, 0.0, sin(0.0), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))), (! (! (true))), false, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && (false))))
    barrier();
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (vec2(5.7, 65.13).x)), vec2(((- 5984.5296 * 180.040)), (injectionSwitch)[1]), bvec2(false, true))).y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if(((bool(bvec3((false || (false)), ((injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if((false))
      return;
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     barrier();
    }
   if((bool(bvec4((false), false, false, false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(((bool(bvec3(false, (((injectionSwitch.x < injectionSwitch.y)) && (true)), false)))))
  barrier();
 if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((false)) && true))
  {
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((! (! ((true && (false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if(((bool(bvec2(false, false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(((! (! ((! (! (false))))))))
    barrier();
   if((false))
    {
     if(((! (! ((true && (false)))))))
      barrier();
     return;
    }
  }
 if(((! (! (false)))))
  return;
 if((bool(bvec2((false), true))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec3(true), gl_SubgroupInvocationID, true);
 if((! (! ((false || ((false)))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize) >> uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))).x;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((false) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  {
   if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > ((injectionSwitch.y) * 1.0)))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if(((((bool(bvec4(false, true, false, true))) || false))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (mix(float(((- 691.299 * 59.11))), float(injectionSwitch.y), bool(true)))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && (false))))
    return;
  }
 if((false))
  return;
 if(((((false || (((injectionSwitch.x > injectionSwitch.y) || false)))))))
  return;
 if(((! (! ((bool(bvec4(false, false, true, false))))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((false || (false))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((false) || false)))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if(((((((min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false) || false)))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((bool(bvec4((bool(bvec2((false), true))), false, true, false))))
      barrier();
     if((((((false) && true)) && true)))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((((! (! (bool(bvec3(false, true, true))))))) && ((injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false) || false)))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((! (((((! (((! (! ((! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true))))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false) && true)))
        return;
       barrier();
      }
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((((false) && true)))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false || ((((false)) && true)))))))
  barrier();
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_1(bvec3(true), mat4x3(1.0), ivec3(1), mat2x4(1.0), 1, mat4x2(1.0)), _GLF_struct_4(_GLF_struct_2(mat4x2(1.0), bvec4(true), mat3x2(1.0)), vec2(1.0), mat4x3(1.0), _GLF_struct_3(mat3x2(1.0), vec2(1.0), mat3x2((max(1.0, 1.0)))), mat4x2(1.0)), _GLF_struct_7(_GLF_struct_5(mat2x4(1.0), ivec2(1), mat2x3(1.0)), true, _GLF_struct_6(mat3x2(1.0))), mat3(1.0), _GLF_struct_12(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * (uint(uvec3(subgroup_size, 0u, 0u))) + (~ (~ (_GLF_struct_replacement_0.subgroup_local_id))), _GLF_struct_8(mat2(1.0), bvec3(true)), _GLF_struct_9(mat3(1.0), vec2(1.0), ivec4(1), ivec2(((1) * 1)), 1u, mat2x4(1.0), vec2(1.0)), vec3(1.0), _GLF_struct_10(ivec4(1), bvec2(true), mat4(1.0), mat2(1.0), bvec4(true), mat3x2(1.0), mat3x2(1.0)), _GLF_struct_11(mat3((mix(float(((+ 4444.8954))), float((max(1.0, 1.0))), bool(true)))), bvec2(true), true, vec3(1.0), mat2x4(1.0), bvec4(true), mat3(((1.0) - 0.0)))), _GLF_struct_17(_GLF_struct_13(mat3x2(1.0), uvec3(1u), bvec2(true), true), 1, vec2((((float(vec3(1.0, 1.0, 1.0))) / 1.0))), _GLF_struct_14(vec2(1.0), 1.0), vec2((max(1.0, 1.0))), _GLF_struct_15(bvec3(true), vec2(1.0), mat4x2(1.0), ivec3(1), uvec4(1u), bvec4(true)), _GLF_struct_16(((1u) | (1u)), 1u, mat3(1.0), bvec4(true), mat4((min((clamp(1.0, 1.0, 1.0)), ((1.0) + 0.0)))))), uvec2(1u));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((true && (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        return;
      }
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((false))
    {
     if(((bool(bvec2(false, false)))))
      barrier();
     if((((((true && ((false))) && true)) && true)))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((false))
        {
         if(((bool(bvec3(false, false, true)))))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(((bool(bvec4(false, false, true, true)))))
    return;
   if(((bool(bool(false)))))
    {
     if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > (float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       barrier();
      }
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if(((! (! (false)))))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((false))
      return;
     barrier();
    }
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((! ((! (! ((! (! (! (false)))))))))))
  return;
 if((false))
  return;
 do
  {
   if((false))
    break;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if(((! (! (false)))))
          break;
         barrier();
        }
       continue;
      }
     if((false))
      continue;
     if((((! (! ((((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      {
       if(((bool(bvec2(false, true)))))
        break;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      break;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        break;
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if((false))
    {
     if((false))
      break;
     return;
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = _GLF_struct_replacement_18._f4.virtual_gid;
   if((false))
    {
     if((false))
      return;
     break;
    }
   if((false))
    barrier();
   if((false))
    {
     if(((false || (false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     break;
     if((((injectionSwitch.x > ((injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      continue;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(false);
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((false || (false))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
     if(((bool(bool(false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if(((true && (false))))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(((((((false || (bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))))))))))
  {
   if((((injectionSwitch.x > ((injectionSwitch) / vec2((injectionSwitch.y), (injectionSwitch.y))).y))))
    {
     if((false))
      barrier();
     if(((((max(injectionSwitch.x, ((false ? (7.4) : injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 atomicStore(write_val, uint(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x), 4, 64, 0);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((((true && ((true && (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((((false) && true)))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if(((! (! ((true && ((! (! (false))))))))))
    barrier();
   if((((injectionSwitch.x > ((((((injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))) / vec2(1.0, 1.0)).y))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((false) || false)))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     if(((((((mix(float((- 731.120)), float(injectionSwitch.x), bool(true)))) - 0.0) > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         barrier();
        }
       if((((injectionSwitch.x > (vec2((mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, (injectionSwitch.x))))))).y))))
        return;
       return;
       if((false))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      barrier();
     if(((((bool(bvec3((! (! ((! (! ((false || (injectionSwitch.x > (min((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))), true, false)))))))
      {
       if(((true && (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if((false))
        return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
     if((((false || (bool(bvec4(false, true, false, false)))))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if(((bool(bvec4((bool(bvec3(((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false))), true, true, false)))))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((true && (false))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((false) || false)))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x] = uint(subgroupAllEqual(read_val));
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (false))))
        {
         if((false))
          return;
         return;
        }
       barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
