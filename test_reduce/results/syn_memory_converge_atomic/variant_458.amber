#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_5 {
 mat4 _f0;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 uvec2 _f1;
 ivec4 _f2;
 mat4x3 _f3;
 ivec3 _f4;
 mat3x2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 int _f1;
 uvec2 _f2;
 mat4 _f3;
 float _f4;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 float _f1;
 mat2x4 _f2;
 int _f3;
 bool _f4;
 mat4x3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat3 _f2;
 _GLF_struct_4 _f3;
 uint _f4;
 _GLF_struct_5 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat4x2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_1 {
 uint subgroup_size;
 bvec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 mat4x2 _f1;
 vec3 _f2;
 _GLF_struct_6 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(gl_SubgroupSize, bvec3((false || (true))), _GLF_struct_0(ivec3((((min(1, 1))) * 1)), mat4x2(1.0), mat2((mix(float((mix(float((836.492)), float(1.0), bool(true)))), float(((+ 560.243))), bool(((injectionSwitch.x > injectionSwitch.y)))))))), mat4x2(1.0), vec3(1.0), _GLF_struct_6(_GLF_struct_2(mat3((mix(((float(mat4x2((false ? (9.0) : float(((false ? (distance(vec4(6.2, 3888.9628, (clamp(1.3, 1.3, 1.3)), - 4.4), vec4(12.66, (min((max(60.91, 60.91)), 60.91)), (min(6.4, 6.4)), - 3.2))) : 1.0)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(((clamp(float(vec2((((((false ? (mat3(- 3408.3181, - 60.16, - 37.08, - 7.0, - 5551.2034, 445.623, - 94.30, - 9504.4524, - 307.394)) : mat3(55.17, 523.864, - 88.80, (((bool((bvec2(bvec4(bvec2(false, false), false, false))))) ? (- 6.7) : 1.9)), - 206.144, 8.5, 40.46, - 5.7, 5902.7680))) == mat3((clamp(((- 288.520) / 1.0), ((false ? (1.2) : (clamp(- 288.520, - 288.520, - 288.520)))), - 288.520)), - 22.65, 4.7, 50.07, - 6.6, 6.5, - 3986.1634, 603.325, 95.96)) ? (- 83.09) : - 6.8)), 0.0)), float(vec2(((false ? (2.2) : ((((false || (mat3(55.17, 523.864, - 88.80, 1.9, - 206.144, 8.5, 40.46, - 5.7, 5902.7680) == mat3(- 288.520, - 22.65, 4.7, 50.07, - 6.6, 6.5, ((- 3986.1634) - 0.0), 603.325, 95.96)))) ? (- 83.09) : - 6.8)))), 0.0)), float(vec2((((((((false) || false)) || false) ? (- 66.05) : ((mat3(55.17, 523.864, - 88.80, 1.9, - 206.144, 8.5, 40.46, - 5.7, (clamp(5902.7680, ((5902.7680) * (((((max((max((dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))) / 1.0) - 0.0)))), ((min(float(mat3(5902.7680, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0))), float(mat3(5902.7680, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0))))))))) == mat3(- 288.520, - 22.65, 4.7, 50.07, - 6.6, 6.5, - 3986.1634, 603.325, 95.96)) ? (max((0.0 + ((- (clamp(83.09, ((1.0 * (mix(float((- 815.937)), float(83.09), bool(true))))), 83.09))))), (max((- (clamp(83.09, (mix(float((- 815.937)), float(83.09), bool(true))), 83.09))), (1.0 * (min((mix(float((- 6.2)), float(((- (clamp(83.09, (mix(float((- 815.937)), float(83.09), bool(true))), 83.09))))), bool(true))), ((- (clamp(83.09, (mix(float((- 815.937)), float(83.09), bool(true))), 83.09))))))))))) : - 6.8)))), 0.0)))))), bool(false)))), (max(1.0, ((((injectionSwitch.x < injectionSwitch.y)) ? ((1.0) * 1.0) : (8311.2464))))), mat2x4(1.0), 1, true, mat4x3((0.0 + (1.0))), vec2(1.0)), _GLF_struct_3(mat3x2(1.0), 1, uvec2(1u), mat4(1.0), (mix(float(1.0), float((- 2.3)), bool(false)))), mat3(((1.0) * 1.0)), _GLF_struct_4(ivec4(1), uvec2(1u), ivec4(1), mat4x3(1.0), ivec3(1), mat3x2(1.0), mat3x2((max(1.0, 1.0)))), 1u, _GLF_struct_5((mat4(0.0, 0.0, 0.0, (clamp(0.0, 0.0, (1.0 * (0.0)))), 0.0, ((false ? (- 6842.3310) : 0.0)), (float(mat3x4(0.0, (injectionSwitch.x), 0.0, 1.0, 1.0, (injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0)))), bvec2(true)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > (clamp((clamp(((false ? (- 0.8) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, (max(injectionSwitch.y, ((true ? injectionSwitch.y : (129.933)))))))))))
    return;
   return;
  }
 if(((false || ((! (! (((! (! (((! ((bool(((bvec3(bvec4(bvec3(bvec4(bvec3(((! (injectionSwitch.x > (mix(float((clamp((vec2(mat3x4(injectionSwitch, length(0.0), 1.0, 1.0, ((1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).y, (vec2(mat3x4((mix(vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2((- 7.1), (- 3.2)), bvec2(false, false))), length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).y, (vec2(mat3x4(injectionSwitch, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).y))), float((- 254.969)), bool(false))))) || false), false, true), true)), true))))))))))))))))))))
  {
   if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && ((injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint virtual_gid = (min(workgroup_base + subgroup_id * _GLF_struct_replacement_7._f0.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * ((_GLF_struct_replacement_7._f0.subgroup_size) ^ 0u) + subgroup_local_id));
 if((((((false)) && true)) || false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, (min(((uint(virtual_gid)) / (1u ^ ((0u) >> 0u))), (0u | (((uint(virtual_gid)) / (1u ^ (max(0u, (clamp(0u, 0u, 0u)))))))))), 4, 64, ((0) ^ 0));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = (0u | (uint(subgroupAllEqual(read_val))));
 if(((bool((bvec2(bvec4(bvec2(false, false), true, false)))))))
  return;
 if((false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
