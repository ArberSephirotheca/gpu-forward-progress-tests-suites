#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_0 {
 uint virtual_gid;
 ivec2 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false) && true)))
  {
   if((! (! ((false)))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > ((false ? (vec2(1.0, 1.0) * ((mat3x2(4118.1766, - 9.2, 2.2, 8.9, (max(7374.4119, 7374.4119)), 28.98)[0]))) : injectionSwitch)).y))))
  {
   if((((injectionSwitch.x > ((true ? (vec2(injectionSwitch[0], injectionSwitch[1])) : (vec2(5535.2774, - 7178.7769)))).y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0)))))))
  {
   if((false))
    barrier();
   if(((((mix(float(injectionSwitch.x), float((354.508)), bool(false))) > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if((false))
  barrier();
 if(((((true && (! (! ((((false))) || ((injectionSwitch.x > injectionSwitch.y))))))) && true)))
  {
   if((((injectionSwitch.x > (min((min(injectionSwitch.y, injectionSwitch.y)), ((mix(float((- 1.5)), float((0.0 + (float(mat4x2(injectionSwitch.y, 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, exp(0.0)))))), bool(true))))))))))
    {
     if(((((mix(float((0.9)), float(((injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((false) && true)))
    {
     if(((! ((true && (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((false)) || false))
    {
     if(((true && (false))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if(((bool((bvec2(bvec4(bvec2((false || (((false) && true))), ((injectionSwitch.x < injectionSwitch.y))), true, true)))))))
  barrier();
 if((((! ((bool(bvec2(! (! (! ((true && (false))))), true))))))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(((((bool((! (! (bool(injectionSwitch.x > ((injectionSwitch.y) * ((max(dot(vec4(determinant(mat3(0.0, (min(1.0, (min(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, abs(0.0), 0.0, 1.0)), (max(dot(vec4(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, abs(0.0), 0.0, 1.0)), dot(vec4(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, abs(0.0), 0.0, 1.0))))))))))))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x = subgroup_size;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((bool(bvec2(((false || ((! (! (injectionSwitch.x > injectionSwitch.y)))))), true))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = (1u * (gl_NumWorkGroups.x));
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w = (((((uint(uvec3((min((min(workgroup_size, workgroup_size)), ((workgroup_size) / (min(1u, 1u))))), 1u, 1u)))) | ((uint(uvec3((min((min(workgroup_size, workgroup_size)), ((workgroup_size) / 1u))), 1u, 1u)))))) | ((((uint(uvec3((min((min(workgroup_size, workgroup_size)), ((workgroup_size) / (min(1u, 1u))))), 1u, 1u)))) | ((uint(uvec3((min((min(workgroup_size, workgroup_size)), ((workgroup_size) / 1u))), 1u, 1u)))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && ((((injectionSwitch.x > (max(injectionSwitch, (vec2(0.0, 0.0) + (injectionSwitch)))).y))))))
  {
   if(((bool(bool(false)))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (vec2(((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, length(0.0), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0)), (dot(vec3(sin(0.0), 0.0, 1.0), vec3(tan(0.0), 0.0, 1.0))))) / mat2((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))).y))))
  barrier();
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec2(false, true)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 (((~ (~ (GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y)))) / 1u);
 if(((true && (((((injectionSwitch.x > (((((max(injectionSwitch, (mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)) ? injectionSwitch.y : (uintBitsToFloat(num_workgroup))))))) && true)))))
  barrier();
 uint workgroup_base = (min(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z));
 if((false))
  {
   if(((((! (! ((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 (((((~ (~ (((~ (~ ((0u ^ 1u) * (((false ? (num_workgroup) : (((~ (~ (0u ^ ((GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y = (clamp(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x, ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x) | (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x)), GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x)))))))) * 1u))))))))))) / 1u)) + 0u));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false || ((false))))
  {
   if((false))
    barrier();
   if(((! ((bool(bvec3(! (((((false) || false)) && true)), true, false)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0((((((! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))))))) ? ((GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size) | ((~ (max((~ (GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size)), (~ (GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size))))))) : (((GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size) + uvec4(0u, 0u, 0u, 0u))))).y + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * (uint(uvec4(((((((((false ? (subgroup_size) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x))) ^ 0u)) >> ((false ? (workgroup_size) : (0u >> (uint(4u))))))) | ((((((((((((clamp(false ? (subgroup_size) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x, false ? (subgroup_size) : (((true && (false)) ? (uvec4(133224u, 84763u, 99817u, 154617u)) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size)).x, (uint(((((0u >> (uint(1u))) | ((uint(uvec3((((0u + (uint(false ? (subgroup_size) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x)))) >> 0u), 0u, 1u)))))) | ((((0u + (uint(false ? (subgroup_size) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x)))) << 0u)))))))))) ^ 0u)) >> (0u >> (uint(4u))))) * 1u)) | (((((((false ? (subgroup_size) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x))) ^ 0u)) >> (0u >> (uint(4u)))))))), 0u, 0u, 1u))) + subgroup_local_id, ivec2(1));
 if(((((((injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 ((GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y = _GLF_struct_replacement_0.virtual_gid) | 0u);
 if((false))
  barrier();
 atomicStore(write_val, uint((uint(uvec4((max((((((((((uvec2(1u, 1u) << (uvec2(7u))) >> (uvec2(7u)))) | uvec2(0u, 0u)) * ((max(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, (~ (~ ((((~ (~ (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)))) >> uvec2(0u, 0u)))))))))) | (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)) / uvec2(1u, 1u))), GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)).y, 1u, 1u, 1u)))), 4, 64, 0);
 if((false))
  barrier();
 uint read_val = atomicLoad(write_val, (int((max(ivec2(4, ((1) | 0)), ivec2(4, 1))))), 64, 0);
 if((false))
  barrier();
 if((false))
  {
   if((((false)) && true))
    barrier();
   barrier();
  }
 if(((false || ((true && (((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(((bool((bvec2(bvec2(bvec2(false, true))))))))
    barrier();
   if((((false)) || false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y] = uint(subgroupAllEqual(read_val));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((bool(bool((! (! ((false))))))))
  barrier();
 if(((true && (((bool(bvec2((bool(bvec4((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((9905.3414)), bool(false)))))), true, (((! (! (false)))) && true), false))), false))) && true)))))
  {
   if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
