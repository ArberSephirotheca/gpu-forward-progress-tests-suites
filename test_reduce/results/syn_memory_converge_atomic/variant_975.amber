#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_0 {
 float _f0;
 mat4x2 _f1;
 vec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 uint subgroup_local_id;
 ivec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((((false) || false)))
      return;
     return;
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((((false) || false)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (false)))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if(((((! (! (false)))) || false)))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  return;
 if(((true && (false))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(((bool(((bool(false)) || false)))))
    return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((false) || false)))
    barrier();
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec3(false, true, false)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec3(false, true, false)))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(((! (! (false)))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(1.0, mat4x2(1.0), vec4(1.0), bvec3(true)), mat2x4(1.0), ivec2(1), gl_SubgroupInvocationID, ivec4(1), vec3(1.0)), 1u);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      break;
     if((false))
      continue;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           break;
          }
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         continue;
        }
       break;
      }
     if((false))
      break;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        barrier();
       if((false))
        barrier();
       if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       return;
      }
     continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      continue;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if((false))
          barrier();
         return;
        }
       barrier();
       if((false))
        return;
      }
     if((false))
      continue;
     if((false))
      {
       if((false))
        break;
       return;
       if((false))
        return;
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      break;
     barrier();
     if((false))
      break;
    }
   if(((true && (false))))
    barrier();
  }
 if((false))
  return;
 if((((false) || false)))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
    }
   if(((bool(bool((bool(bvec3(false, true, true))))))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if(((bool(bvec2(false, false)))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((false) && true)))
          {
           if((false))
            return;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
     if(((false || (false))))
      {
       if((false))
        return;
       return;
      }
     barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       return;
      }
     barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((((! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((((false) || false)))
      barrier();
     if((false))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! ((bool(bvec2(false, false))))))))
    return;
  }
 if((false))
  {
   if(((bool(bvec4((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), true, false, false)))))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((bool(bvec3(false, true, true)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    barrier();
  }
 if((((true && (bool((bool(bvec2(bool(false), false)))))))))
  barrier();
 if(((false || (false))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((((false) || false)))
          {
           if((false))
            return;
           if(((! (((! (false)) && true)))))
            return;
           return;
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((false) || false)))
      return;
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    return;
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_2._f0.subgroup_local_id;
 if((false))
  return;
 if((false))
  return;
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bvec3(false, true, false)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if(((false || (false))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if(((false || ((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))))
  {
   if(((! (((! (false)) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  {
   if((false))
    return;
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((false) && true)))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
        return;
       barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     return;
    }
   if(((bool(bvec4(false, false, false, true)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((bool(bvec4(false, false, true, false)))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if((false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     if(((bool(bvec2(false, true)))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((false || (bool(bool(false)))))))
      return;
     return;
    }
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
