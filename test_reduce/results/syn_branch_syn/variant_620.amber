#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_42 {
 mat3x4 _f0;
 vec2 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_43 {
 bvec4 _f0;
 float _f1;
 _GLF_struct_42 _f2;
} ;

struct _GLF_struct_40 {
 mat2 _f0;
 vec4 _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_39 {
 bvec2 _f0;
 mat2x3 _f1;
 mat3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_41 {
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_38 {
 ivec4 _f0;
 uint workgroup_size;
 int _f1;
} ;

struct _GLF_struct_36 {
 bool _f0;
 mat4 _f1;
 ivec3 _f2;
 ivec2 _f3;
 ivec4 _f4;
 vec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_35 {
 mat2x4 _f0;
} ;

struct _GLF_struct_34 {
 ivec2 _f0;
} ;

struct _GLF_struct_37 {
 _GLF_struct_34 _f0;
 mat2 _f1;
 vec4 _f2;
 _GLF_struct_35 _f3;
 bool _f4;
 _GLF_struct_36 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_44 {
 _GLF_struct_37 _f0;
 uvec2 _f1;
 mat3 _f2;
 _GLF_struct_38 _f3;
 _GLF_struct_41 _f4;
 _GLF_struct_43 _f5;
} ;

struct _GLF_struct_31 {
 bvec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_30 {
 float _f0;
 bvec2 _f1;
 uvec4 _f2;
 mat4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_29 {
 bool _f0;
 mat3x4 _f1;
 int _f2;
 vec3 _f3;
 mat4 _f4;
 uvec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 uint workgroup_base;
 mat3x2 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
} ;

struct _GLF_struct_27 {
 bvec3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_26 {
 vec2 _f0;
 ivec3 _f1;
 vec3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_25 {
 float _f0;
 mat4x3 _f1;
 uvec2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_24 {
 mat3x2 _f0;
 ivec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_23 {
 mat4 _f0;
} ;

struct _GLF_struct_28 {
 mat4x3 _f0;
 _GLF_struct_23 _f1;
 uvec3 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_25 _f4;
 _GLF_struct_26 _f5;
 _GLF_struct_27 _f6;
} ;

struct _GLF_struct_33 {
 mat4x3 _f0;
 bool _f1;
 vec4 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_32 _f4;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 mat4 _f1;
 int _f2;
 mat3 _f3;
 float _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 _GLF_struct_18 _f1;
 uvec2 _f2;
 bvec2 _f3;
 _GLF_struct_19 _f4;
 mat2x3 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_22 {
 uint num_workgroup;
 _GLF_struct_21 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 uvec3 _f3;
 mat4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 uint _f1;
 ivec3 _f2;
 uvec3 _f3;
 bvec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 vec2 _f1;
 mat4x2 _f2;
 float _f3;
 uvec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_13 {
 int _f0;
 mat3x4 _f1;
 vec3 _f2;
 ivec4 _f3;
 mat2x3 _f4;
 ivec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_12 {
 uint _f0;
 bool _f1;
 mat3x2 _f2;
 bvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 mat3x4 _f1;
 bool _f2;
 ivec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 int _f0;
 bvec2 _f1;
 vec4 _f2;
 ivec2 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat3x2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 mat3 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_4 {
 bool _f0;
 uint virtual_gid;
 mat2x4 _f1;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3x4 _f1;
 bool _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat2x4 _f3;
 _GLF_struct_2 _f4;
 ivec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_10 _f2;
 vec2 _f3;
 _GLF_struct_16 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _injected_loop_counter != (int((~ (~ (int(1)))))); _injected_loop_counter ++)
  {
   if((! (! (true))))
    {
     if((bool((! (! (bool((((bool((bool(bvec2(bool((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, ((injectionSwitch.x < injectionSwitch.y))))) && true))), false))))))))))))))
      {
      }
     else
      {
       GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x = subgroup_id;
      }
    }
   else
    {
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(true)
  {
   do
    {
     if((false))
      {
       if(true)
        {
         if((false))
          barrier();
         barrier();
         if(((bool(bvec2(false, false)))))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((bool(bvec3((((! (! ((bool(bvec3(false, false, true))))))) && true), true, false))))
      {
      }
     else
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > (clamp(injectionSwitch, (mix(vec2((46.27), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 8058.2332)), bvec2(true, false))), (min(injectionSwitch, injectionSwitch)))).y)) || ((false))))
        barrier();
      }
     if((! (((! ((false)))) || ((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))
      barrier();
    }
   while(false);
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y) && true)), false, true, false))))))
  {
   if((false))
    {
     if(((bool(bvec4((! (! (false))), true, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   do
    {
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = ((((injectionSwitch.x < injectionSwitch.y)) ? 0 : (54759))); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((((1) ^ 0)) + 0); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while((! (! (false))));
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if((false || (((true && ((! ((! (! (! (false))))))))))))
      {
       if((true && (((! ((bool(bvec3((((injectionSwitch.x > injectionSwitch.y)) || ((false || (! ((true && (true && (true)))))))), (((min(injectionSwitch, injectionSwitch)).x < (vec2(injectionSwitch[0], (max(injectionSwitch[1], injectionSwitch[(~ (~ (1)))])))).y)), true)))))))))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       else
        {
         if((false))
          barrier();
        }
      }
     if(((bool(bvec2((! (! (false))), false)))))
      barrier();
    }
   if(((false || (false))))
    barrier();
   GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y = subgroup_size;
  }
 while((bool(bool((true && (((false) || false)))))));
 if((false))
  {
   if((bool(bvec4((false || (((injectionSwitch.x < injectionSwitch.y)))), false, true, (false || ((! (! ((! (! (true))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter > ((82528 & 0) << (int(5))); _injected_loop_counter --)
        {
         barrier();
         if((false))
          barrier();
        }
      }
    }
   else
    {
    }
   if((false))
    barrier();
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   while(false);
   if((false))
    barrier();
  }
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((true && (((false) || false)))))))
    {
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = (0 ^ int((injectionSwitch.x))); _injected_loop_counter != 1; ((_injected_loop_counter ++) << 0))
        {
         barrier();
        }
      }
    }
   else
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if(((true) || false))
    {
     if((((bool(bvec3(bool(bvec2(((((bool(bvec4(! (! (((injectionSwitch.x > injectionSwitch.y)))), true, ((injectionSwitch.x > injectionSwitch.y)), true)))) && true)), false)), true, false))))))
      barrier();
     if((false))
      barrier();
    }
   else
    {
     if((false))
      barrier();
    }
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = (((1 & 1) | (((true ? 1 & 1 : (- 77381)))))); _injected_loop_counter != (0 >> (((int(0)) + 0))); _injected_loop_counter --)
  {
   if((false))
    {
     if((((false) || false)))
      barrier();
     barrier();
    }
   if((((((mix(float((- 7.5)), ((float(float(mat2(((false ? (- 7.8) : ((injectionSwitch) + vec2(0.0, 0.0)).x)), 0.0, tan(0.0), 0.0)))) + 0.0), bool(true)))) > (min((min(injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
    barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22((((((((((uvec3(0u, 0u, 0u) ^ ((~ (~ ((~ (~ (((gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))))))) >> uvec3(((max(injectionSwitch, injectionSwitch)).x), (injectionSwitch.x), (injectionSwitch.x)))) / ((uvec3(1u, 1u, 1u) << (uvec3(2u))) >> (uvec3(2u)))) | ((((gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) >> uvec3(((max((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch)))).x), (injectionSwitch.x), (injectionSwitch.x)))))) | (max(((((uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u))), (uvec3(((uvec3(((((uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u))))) | (uvec3(((((uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u))))))))))).x, _GLF_struct_21(mat4(1.0), _GLF_struct_18(bvec4(true), mat4(1.0), 1, mat3(1.0), 1.0, mat2x3(1.0)), uvec2(1u), bvec2(true), _GLF_struct_19(mat4x3(1.0)), mat2x3(1.0), _GLF_struct_20(mat2(1.0))), mat3x4(1.0), (bvec3((bvec3(bvec4(bvec3(bvec3(true)), true))))), uvec3(1u), mat4(1.0), ((uvec2(1u)) ^ (max((uvec2(0u, 0u) >> (uvec2(4u))), (uvec2(0u, 0u) >> (uvec2(4u)))))));
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(_GLF_struct_37(_GLF_struct_34(ivec2(1)), mat2((mix(float(1.0), float((45.85)), bool(false)))), vec4(1.0), _GLF_struct_35(mat2x4(1.0)), true, _GLF_struct_36(true, mat4(1.0), ivec3(1), ivec2((((int(int(1)))) << 0)), ivec4(1), vec4(1.0), mat4((max(((((injectionSwitch.x < injectionSwitch.y)) ? (mix(float((- 2.0)), float(((1.0) / 1.0)), bool(true))) : (log(vec3(1.4, 93.12, - 2204.8920)[2])))), ((clamp(float(mat2x4(((((injectionSwitch.x < injectionSwitch.y)) ? (mix(float((- 2.0)), float(((1.0) / 1.0)), bool(true))) : ((false ? (length(injectionSwitch)) : (log(vec3(1.4, 93.12, - 2204.8920)[2])))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x4(((((injectionSwitch.x < injectionSwitch.y)) ? (mix(float((- 2.0)), float(((1.0) / 1.0)), bool(true))) : (log(vec3(1.4, 93.12, - 2204.8920)[2])))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x4(((((injectionSwitch.x < injectionSwitch.y)) ? (mix(float(((min(float(mat2((- 2.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)), float(mat2((- 2.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)))))), float(((1.0) / 1.0)), bool(true))) : (log(vec3(1.4, 93.12, - 2204.8920)[2])))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, ((false ? (8.5) : ((0.0) - 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0))))))))), uvec3(1u)), uvec2(1u), mat3(1.0), _GLF_struct_38(ivec4(1), (clamp(gl_WorkGroupSize.x, (max(gl_WorkGroupSize.x, (((! (! (true))) ? gl_WorkGroupSize.x : (42760u))))), gl_WorkGroupSize.x)), 1), _GLF_struct_41(_GLF_struct_39(bvec2(true), mat2x3(1.0), ((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec4(1u)), _GLF_struct_40(mat2(1.0), (min((mat4(1.0) * (vec4(1.0))), vec4(1.0))), ivec3(1), bvec4(true)), vec4(1.0)), _GLF_struct_43(bvec4(true), 1.0, _GLF_struct_42(mat3x4(1.0), vec2(1.0), mat3x4(1.0), mat2x3(1.0), ivec3(1))));
 if((false))
  barrier();
 for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > (0 + (((true ? 0 : (77581))))); _injected_loop_counter --)
  {
   if((((bool((bvec3((bvec3(bvec4(bvec3(bvec3(! (! ((((bool(bool(false)))) || false))), true, false)), false))))))))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_struct_replacement_44._f3.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((! (! ((((true ? (mix(float(injectionSwitch.x), float((9.1)), bool(false))) : (- 0.3))) > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(mat4x3(1.0), true, vec4(1.0), _GLF_struct_28(mat4x3(1.0), _GLF_struct_23(mat4(1.0)), (max(uvec3(1u), uvec3(1u))), _GLF_struct_24(mat3x2(1.0), ivec2(1), mat3x2(1.0)), _GLF_struct_25(1.0, mat4x3(1.0), uvec2(1u), mat3x4(((1.0) - 0.0))), _GLF_struct_26(vec2(1.0), (((clamp((~ (~ ((min(ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - ivec3(0, 0, 0)))), ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - (max(ivec3(0, 0, 0), ivec3(0, 0, 0))))))))))), (max((min(ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - ivec3(0, 0, 0)))), ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - (max(ivec3(0, 0, 0), ivec3(0, 0, 0)))))))), (min(ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - ivec3(0, 0, 0)))), ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - (max(ivec3(0, 0, 0), ivec3(0, 0, 0)))))))))), (min(ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - ivec3(0, 0, 0)))), ivec3(ivec3((((ivec3(1)) >> ivec3(0, 0, 0)) - (max(ivec3(0, 0, 0), ivec3(0, 0, 0)))))))))))), vec3(1.0), ivec2(1)), _GLF_struct_27(bvec3(true), ivec4(1))), _GLF_struct_32(_GLF_struct_29(true, mat3x4(((1.0) * 1.0)), 1, (min(vec3((mix(float((- 709.401)), float((mix(float(1.0), float((- 4.3)), ((! ((! (! (((! (bool(bvec4(bool(false), false, false, true))))) && true))))))))), ((((! (! ((bool(true)))))) && true) && true)))), vec3((mix(float((- 709.401)), float((mix(float(1.0), float((- 4.3)), ((! ((! (! (((! (bool(bvec4(bool(false), false, false, true))))) && true))))))))), ((((! (! ((bool(true)))))) && true) && true)))))), mat4(1.0), uvec4(1u), mat4(1.0)), ((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size) + ((((false ? (uvec4(58333u, 101407u, 160647u, 53954u)) : (min(((max((false ? (clamp((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size), ((max(((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)) >> uvec4(0u, 0u, 0u, 0u), ((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)) >> uvec4(0u, 0u, 0u, 0u)))))) : uvec4(0u, ((false ? (((subgroup_local_id)) - 0u) : 0u)), 0u, 0u)), (false ? (clamp((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size), ((max(((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)) >> uvec4(0u, 0u, 0u, 0u), ((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)) >> uvec4(0u, 0u, 0u, 0u)))))) : uvec4(0u, ((false ? (((subgroup_local_id)) - 0u) : 0u)), 0u, 0u))))), uvec4(0u, ((false ? (min((subgroup_local_id), (((subgroup_local_id)) / 1u))) : 0u)), 0u, 0u))))) ^ uvec4(0u, 0u, 0u, (clamp(0u, 0u, ((0u) / 1u))))))).w * workgroup_id, mat3x2(1.0), _GLF_struct_30((min(1.0, 1.0)), (bvec2((((bvec3(bvec3((bvec3(bvec3(bvec3(bvec4(bvec3((bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))), false)))))))))))), (min(uvec4(1u), uvec4(1u))), mat4((float((transpose(transpose(mat4(1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0, 0.0))))))), mat4x2((clamp(1.0, (((min(1.0, 1.0))) * 1.0), 1.0)))), _GLF_struct_31(bvec3(true), mat3((mix(float((2.2)), float(1.0), bool(true)))))));
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((! ((bool(bvec4(! ((false)), false, false, true))))))
      barrier();
     if((((bool(bvec3((bool(bool(false))), false, true)))) || false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(false);
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 while((bool(bvec4(false, false, false, true))));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_3(bvec3(true), _GLF_struct_0(1u, bvec2(((true) || false))), _GLF_struct_1((max(uvec2(1u), uvec2(((max(((((min(1u, (max(((1u) | 0u), 1u)))) | (min(1u, (max(((1u) | 0u), 1u)))))) << 0u), min(1u, (max(((1u) | 0u), 1u))))))))), mat3x2(1.0), mat2x3(1.0), 1), mat2x4(1.0), _GLF_struct_2(mat3x4((min(1.0, 1.0))), mat3x4(((((mix(float((((true ? 1.0 : (2.7)))) + log(1.0)), float((- 9.9)), bool(false)))) + 0.0))), true, ivec2(1), mat4x2(1.0)), ivec4(1), vec2(1.0)), _GLF_struct_5(((max(((((((~ (~ (~ (~ (clamp(ivec4(1), ivec4(1), ivec4(1))))))))))) | (((((~ (~ (~ (~ (clamp(ivec4(1), ivec4(1), ivec4(1)))))))))))), ((((~ (~ (~ (~ (clamp(ivec4(1), ivec4(1), ivec4(1)))))))))))) >> (((clamp(ivec4(((((injectionSwitch.x < injectionSwitch.y)) ? 0 : (81281))), 0, 0, 0), ivec4(((((injectionSwitch.x < injectionSwitch.y)) ? 0 : (81281))), 0, 0, 0), ivec4(((((injectionSwitch.x < injectionSwitch.y)) ? 0 : (81281))), 0, 0, 0)))) | (ivec4(0, 0, 0, 0) << ((~ (~ (ivec4(0)))))))), _GLF_struct_4(true, _GLF_struct_replacement_33._f4.workgroup_base + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * (~ (0u | ((~ ((0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y))))))) + subgroup_local_id, mat2x4((min(((float(mat4(((false ? (4504.5266) : (1.0) * 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, sqrt(0.0), (min(1.0, 1.0)), 0.0, (mix(float(((true ? 1.0 : (- 7201.6863)))), float(((91.89 + vec4(- 66.53, - 4963.6505, - 9.4, 178.890).b))), bool(false))), 1.0)))), (float(float((mix(float(1.0), float((((- 7.9) * - 28.88))), bool(false))))))))))), _GLF_struct_10(_GLF_struct_6(1.0, mat3x2(1.0), ivec2(1)), mat2x4(1.0), uvec2(((max(((false ? (usubBorrow(173276u, 177909u, subgroup_size)) : (((0u | ((1u)))) ^ 0u))), (((0u | ((1u)))) ^ 0u))) << 0u)), _GLF_struct_7(1, bvec2((bool((true && ((false || ((true && ((true && ((((bool(bool((! (! (bool(true)))))))) || false)))))))))))), vec4(1.0), ivec2(1), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_8(mat4(1.0)), mat3(1.0), _GLF_struct_9(1u)), vec2(1.0), _GLF_struct_16(_GLF_struct_11(ivec2((~ (~ (1)))), mat3x4(1.0), true, ivec4(1), mat4x3(1.0)), _GLF_struct_12(1u, (true && ((! (((! ((false || ((! (! ((true && (true))))))))) || false))))), mat3x2(1.0), bvec4(true), true), _GLF_struct_13(1, mat3x4((((float(((mat2x4(clamp(((((min((mat2(1.0) * (injectionSwitch)), (min(injectionSwitch, injectionSwitch)))).x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? (57.79) : 1.0), (((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? (57.79) : 1.0), (clamp(((true && (((bool(bvec2(((log(vec2(1.0, 1.0)) + (injectionSwitch)).x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false)))))) ? ((clamp(57.79, 57.79, 57.79))) : 1.0), (clamp((((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? (57.79) : 1.0)) + 0.0), (((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? (57.79) : 1.0)) + 0.0), (((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? (57.79) : 1.0)) + 0.0))), (((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? (57.79) : 1.0)))), (injectionSwitch.y), 1.0, 0.0, (injectionSwitch.x), round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, sqrt(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), vec3(1.0), ivec4((min(1, ((1) | (1))))), mat2x3(1.0), ((max((((((((~ (~ (true ? (false ? (ivec4(71461, - 92756, - 87152, 77371)) : ivec4(1)) : (ivec4(42672, - 62632, 41962, - 38109)))))))) * ivec4(1, 1, 1, 1)))), (((false ? (ivec4(71461, - 92756, - 87152, 77371)) : ivec4(((1) / int((injectionSwitch.y))))))))) >> (((bool(bvec4(false, false, false, true))) ? (ivec4(3967, - 86277, 81395, - 9188)) : ivec4((((max(0, (~ (~ (0))))) - 0)), 0, 0, 0)))), vec3(1.0)), _GLF_struct_14(mat2(1.0), vec2(1.0), mat4x2(1.0), 1.0, (uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), mat3(1.0)), _GLF_struct_15(mat2x3(((false ? (8481.4767) : (clamp(1.0, 1.0, 1.0))))), 1u, ivec3(1), uvec3(((false ? (subgroup_size) : 1u))), ((bvec2(bvec2(bvec2(((bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(true)), false))))))))))), mat4x3((mix(float((- 25.64)), float(((max((1.0), (1.0))) / 1.0)), bool(true)))))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! ((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))))
  {
  }
 else
  {
   if(((((((injectionSwitch.x < injectionSwitch.y)) && ((true && (false))))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       do
        {
         barrier();
         if((false))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if(((! (! (false)))))
      barrier();
    }
   GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z = (0u ^ ((((clamp(_GLF_struct_replacement_17._f1._f1.virtual_gid, _GLF_struct_replacement_17._f1._f1.virtual_gid, _GLF_struct_replacement_17._f1._f1.virtual_gid)) * 1u))));
   if((false))
    barrier();
   if(((true && (false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if(((((((((! ((false || (! (injectionSwitch.x < injectionSwitch.y)))))) || false))) && (bool(bvec4(false, true, (! (! (true))), false)))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     do
      {
       barrier();
      }
     while(false);
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((((float((transpose(transpose(mat4x2(injectionSwitch.x, exp(sin(0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) < injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = (uint(((false ? (uvec3(78413u, 158048u, 117507u)) : ((uvec3(_GLF_struct_replacement_33._f4.workgroup_base + (max(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y, (min(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x, ((false ? (100204u) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x)))) * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y)), 1u, 0u)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))) + ((((clamp((subgroup_local_id + 1) + 0u, (((subgroup_local_id + 1) + 0u) - 0u), (((subgroup_local_id + 1) + 0u) | ((subgroup_local_id + 1) + 0u)))))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y);
 do
  {
   for(int _injected_loop_counter = (0 | 0); (false || ((bool(bool(_injected_loop_counter < 1))))); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(true)
      {
       if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
      }
     else
      {
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         for(int _injected_loop_counter = (max(0, 0)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
           do
            {
             if((false))
              barrier();
             if((false))
              barrier();
             do
              {
               if((false))
                barrier();
               if((((bool(bvec4((((bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false), ((injectionSwitch.x < injectionSwitch.y)), false, false))))))
                barrier();
               if((false))
                barrier();
               barrier();
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           while(false);
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > (mat2((injectionSwitch.y)) * (injectionSwitch)).y))))
      barrier();
    }
   while(false);
   if(true)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         ((buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z] = 1) / ((0u | ((1u))) + (0u ^ uint((injectionSwitch.x)))));
        }
       while(false);
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         do
          {
           if(((! ((((true && (! ((true && ((bool(bvec2(false, (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))))
            {
             if((false))
              barrier();
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > ((mix(float(((clamp((min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) / 1.0), float((- 6.6)), bool(false))))))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               if(((bool(bvec3(bool(bvec4((! (! (false))), ((injectionSwitch.x > injectionSwitch.y)), false, false)), true, true)))))
                {
                }
               else
                {
                 barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if((false))
              {
               if(((true && ((! (! (false)))))))
                barrier();
               barrier();
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if(((bool(bvec4(false, true, true, true)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((! (((! ((false))) || false))))
        {
         for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
          {
           do
            {
             if((false))
              barrier();
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
      }
    }
   else
    {
    }
  }
 while((true && ((! (! (((bool((bvec2(bvec3(bvec2((bool(bvec2(! (! (((bool((bvec2(bvec3((bvec2(bvec2(bvec2(bool(bvec4((((! (! (false)))) && true), false, false, true)), true)))), false)))))))), true))), false), false))))))))))));
 if((false))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if(subgroup_local_id + 1 < GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y)
    {
     if((((! ((false || (! ((false))))))) && true))
      barrier();
     int i = (min((0 | (0)), 0));
     if((false))
      {
       if((((injectionSwitch.x > (min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
       do
        {
         barrier();
        }
       while(false);
      }
     if(((((vec2(mat4x3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, abs(1.0), 0.0, 1.0, (((! (! (false))) ? (- 47.56) : 1.0)), sin(0.0), (injectionSwitch.x), (injectionSwitch.x), 1.0, 0.0))).x > (min(injectionSwitch.y, ((injectionSwitch.y) * 1.0)))))))
      {
       if(true)
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       else
        {
         if(((false || (false))))
          barrier();
        }
      }
     ((buf[next_virtual_gid] = 2) + 0u);
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     buf[next_virtual_gid] = 2;
     do
      {
       if((false))
        barrier();
      }
     while((! (! (false))));
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
