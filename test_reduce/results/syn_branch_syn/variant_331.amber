#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > (((mix(vec2((injectionSwitch)[0], (76.15)), vec2(((((1252.6783 - - 9589.0261))) / 1.0), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(((1.0) - 0.0), 1.0)).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  barrier();
 if(((bool(((bvec3(bvec4((bvec3((bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))), false))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec2(false, true)))))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
       if((((false) || false)))
        return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((! (! ((bool(bvec4(injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y, true, true, false))))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((true && ((true && (true && ((((bool(bvec4(false, false, ((injectionSwitch.x < injectionSwitch.y)), false)))) && (bool(bvec3(true, false, true))))))))))))
    {
     if(((false || (false))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if(((bool(bvec2(false, true)))))
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
  }
 if(((bool(bool(false)))))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((false) && true)) && true)))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((true && ((false))))
    barrier();
   return;
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! (false)))))
    {
     if(((((bool(bool(false)))) || false)))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  {
   if(((bool(bool(false)))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    return;
  }
 if(((true && (false))))
  return;
 if(((! (! (false)))))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   barrier();
  }
 if((((false) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((((false) && true)))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((((false) || false)) && true)))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((bool(bvec3(((false) || false), true, true))) || false))))
    {
     if(((((bool(bvec4(false, false, false, true)))) && true)))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((((false) || false)))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > (((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((! (! ((false || (false)))))))
  {
   if((false))
    barrier();
   if(((((! (true && ((true && ((! (false)))))))) && true)))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if(((! ((bool(bvec2(! ((bool((bvec2(bvec3((bvec2(bvec4((bvec2(bvec2(bvec2(bool(bvec4((false), true, true, false)), false)))), true, true))), false)))))), true)))))))
  return;
 if((false))
  barrier();
 uint num_workgroup = (min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if((false))
  barrier();
 if((false))
  {
   if(((false || ((! (! (false)))))))
    return;
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
  }
 if(((((! (! ((bool(bvec3(false, true, true))))))) && true)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      return;
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if((false))
      barrier();
     return;
     if((false))
      {
       if(((bool(bvec3(false, false, false)))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
    }
   if((false))
    barrier();
   return;
   if((((((((injectionSwitch.x > injectionSwitch.y))) || false)) && ((injectionSwitch.x < injectionSwitch.y)))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((true && ((((((injectionSwitch.x > injectionSwitch.y)))) && true))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(((! ((bool(bvec2(! (false), true)))))))
      return;
     if((false))
      {
       if(((! (! (((false) || false))))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if(((! (((true && ((true && (true && (! (false)))))))))))
    {
     if(((! (! (false)))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    {
     if(((false || (((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((false) && true)))
  barrier();
 if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec3((false), true, true))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
       if((false))
        barrier();
      }
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || (false))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(((false || (false))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
    }
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((((false) && ((injectionSwitch.x < injectionSwitch.y))) || ((((false)) || false))))
    barrier();
   if(((((max((vec2(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), (vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt((float(((mat4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, (injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, (min((mix(float((- 6.4)), float(1.0), bool(true))), 1.0)), 0.0, exp(0.0), 1.0)) * mat4(1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false || ((false))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(((false || (false))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if(((false || (false))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   return;
  }
 if((false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(((bool((bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, ((injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint virtual_gid = (min((((((uint(uvec4(workgroup_base, 0u, 0u, (0u >> (uint(6u))))))) >> ((~ (((~ (((true ? 123362u : (workgroup_base))) & 0u)) | (~ (((true ? 123362u : (workgroup_base))) & 0u))))))) + subgroup_id * ((subgroup_size) | 0u) + subgroup_local_id) << 0u), (((uint(uvec4(workgroup_base, 0u, 0u, (0u >> (uint(6u))))))) >> ((((! (! ((((bool(bvec2(true, false)))) || false)))) ? 123362u : (workgroup_base))) & 0u)) + subgroup_id * ((subgroup_size) | 0u) + subgroup_local_id));
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if((false))
  return;
 buf[virtual_gid] = 1;
 if(((bool(bool((true && (false)))))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        return;
       if((((false) || false)))
        {
         if((((false) || false)))
          {
           if((false))
            return;
           return;
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((bool(bvec4((bool((bvec2(bvec2(bvec2(false, false)))))), false, true, true)))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            return;
           return;
          }
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          barrier();
         barrier();
         if(((! (! (false)))))
          return;
        }
       if((false))
        return;
       return;
      }
     barrier();
    }
   return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
  }
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false)) || false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((((false || ((((injectionSwitch.x > injectionSwitch.y)))))) || false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if(((false || (false))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
           if((false))
            return;
          }
         if((false))
          return;
         barrier();
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(((bool(bvec4(false, false, false, true)))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       if((((false)) && true))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((true && ((bool(bvec4((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), (! (! (false))), false, false))))))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((false)) || false))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  return;
 if(((((min((max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((bool(bvec4(((((((mix(float((- 8.9)), float(injectionSwitch.x), bool(true)))) * 1.0) > injectionSwitch.y))), false, ((injectionSwitch.x < injectionSwitch.y)), true))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((bool((bvec2(bvec2(bvec2(false, true))))))))
  return;
 if((((! (! (((((mix(float(((5.8 * 2.2))), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))) > injectionSwitch.y))))) || ((bool(bool(false)))))))
  {
   if((false))
    {
     if(((bool(bvec4((bool(bool(((injectionSwitch.x > injectionSwitch.y))))), false, ((injectionSwitch.x < injectionSwitch.y)), true)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        {
         if(((! (! (false)))))
          return;
         barrier();
        }
       return;
       if((false))
        barrier();
      }
     if((false))
      return;
     return;
    }
   if(((! ((true && (! (((false) || ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((false) || false)))
      return;
     barrier();
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((false) && (((bool(bvec2(bool(bvec3((false || (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, false)))), false, false)), true))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if(((false || (((false) || false)))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   int i = 0;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((bool((bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, ((injectionSwitch.x > injectionSwitch.y))))))))) && true)))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > (((max(injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y))))
          barrier();
         return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        return;
       if((((true && (bool(bvec2(false, false)))))))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      barrier();
     barrier();
     if((! (! ((false || ((false || ((((injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     if((false))
      return;
     if(((! (! ((! (! ((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y))) && true), false, true, true)))))))))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if(((! (((! (false)) && true)))))
      {
       if(((bool(bvec2(false, true)))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           barrier();
          }
         barrier();
        }
       if((false))
        return;
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((false) || false)))
    {
     if((false))
      return;
     return;
    }
   if((((false) || false)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if((true && (((((! ((! (! (! ((mix((min(vec2(((clamp(2591.8581, 2591.8581, 2591.8581))), (injectionSwitch)[1]), (min(vec2((2591.8581), (injectionSwitch)[1]), vec2((2591.8581), (((injectionSwitch) * mat2(1.0)))[1]))))), vec2((injectionSwitch)[0], (64.85)), bvec2((((((false || ((mat2((((1.0 * ((((injectionSwitch.y)) * 1.0)))) / 1.0)) * (injectionSwitch)).x < injectionSwitch.y))))) && true), false))).x > injectionSwitch.y))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if(((true && (false))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        return;
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((! (! ((true && ((bool(bvec4((((! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((false) || false), false, true)))))))))
      return;
     if((bool(bvec2((((false)) || false), true))))
      {
       if((false))
        {
         if(((! ((! (! (! (((false) || false)))))))))
          return;
         return;
         if((false))
          return;
        }
       if((false))
        barrier();
       if(((! (! (false)))))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   buf[next_virtual_gid] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
      }
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           return;
          }
         if((false))
          return;
         barrier();
        }
       barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
  }
 if((((((injectionSwitch.x < (vec2(0.0, 0.0) + (injectionSwitch)).y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false) && true)))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((false))
    {
     if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), (! ((! (! (! (false)))))), false)))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
