#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((bool(bool((((((injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((false)) || false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (clamp((mix(float((- 7.3)), float(injectionSwitch.y), (false || (bool(true))))), injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((mix(vec2((405.990), ((((max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))[1]), vec2((injectionSwitch)[((0) / 1)], (float(vec3((370.196), 0.0, 0.0)))), bvec2(((injectionSwitch.x < injectionSwitch.y)), (((((false ? (injectionSwitch) : (true ? ((true ? injectionSwitch : (asinh(vec2(- 8.1, 306.131))))) : (injectionSwitch))))).x > injectionSwitch.y))))).x > (0.0 + (((true ? injectionSwitch.y : (5.8)))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if((false))
    {
     if((((false) && true)))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((bool(bvec2((false || ((((((false))) || (bool(bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))))) && true)), ((injectionSwitch.x < injectionSwitch.y)))))) || false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((bool(bool(bool(bvec4((true && (false)), true, false, false))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > ((false ? (- 9268.1251) : injectionSwitch.y))))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((((bool((false || (bool((((((false) || false)) && true))))))) || false)))
  {
   if(((((sqrt(vec2(0.0, 0.0)) + ((vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false) && true)))
    {
     if(((((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if(((bool(bvec2((false || ((true && ((bool(bvec4(false, true, false, true))))))), false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((((true && (false))) || false)))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((! (! ((bool(bvec2((false), true)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     if(((! (! (false)))))
      barrier();
     if((((((((bool(bvec4((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (min(((+ 8.9)), ((+ (((float(mat4(8.9, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, (injectionSwitch.x), 0.0, 1.0)))) + 0.0)))))), (((vec2(((mat2x4((((vec2(vec4(vec2(((false ? (9697.7844) : (- 3669.3399))), (injectionSwitch)[1]), 1.0, 1.0)))) * vec2(1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) * mat2(1.0)))) * mat2(1.0))), bvec2(false, true))).y), true, false, true))) || false)) || false)))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((((true ? injectionSwitch.x : (- 302.579))) > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if(((bool(bvec2(false, (! (! (true))))))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((((injectionSwitch.x < injectionSwitch.y)) && ((false || (false))))))
      barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, ((injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if((false))
  barrier();
 if((false || ((false))))
  {
   if((bool((false || (bool(((bool(bvec2((! (((! (false))) && ((injectionSwitch.x < injectionSwitch.y)))), false))))))))))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false || ((((! (! ((! ((bool(bvec3(((! ((! (! (bool(bvec4((! (true && (! (((true) && (! (! (! ((! (true))))))))))), true, false, false)))))))), false, false)))))))) && (false))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (false)))))
    barrier();
   if(((! (! ((bool(bvec4(bool(bvec4((((false)) && true), false, true, ((injectionSwitch.x < injectionSwitch.y)))), false, false, false))))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if(((! ((! (! (! (false))))))))
      barrier();
     barrier();
    }
   if((! (! ((! (! ((false))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if(((true && ((bool(bvec4(false, true, false, false)))))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((true && (((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if(((true && ((((false || ((bool(((bvec2(bvec4(bvec2(bvec2((bvec2(bvec3(bvec2(false, false), false))))), false, false))))))))) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((! (! ((false)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
    }
   if((((true && ((false)))) || false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((false) && true)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && ((! (! ((! (! ((true && (false))))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((true && (false))))
    barrier();
   if((false))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((((false ? (- 283.128) : (clamp(injectionSwitch.x, injectionSwitch.x, ((true ? injectionSwitch.x : (4.7)))))))) - 0.0) > (max(((injectionSwitch) + (min(((vec2(vec4(mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2((- 5384.1209), (- 2.4)), bvec2(false, false)), 1.0, 1.0)))), vec2(0.0, 0.0)))), injectionSwitch)).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((! (! (((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (float(vec2((injectionSwitch)[1], 1.0)))), vec2((float(uint(true))), (2918.5006)), bvec2(((injectionSwitch.x > injectionSwitch.y)), false))).y)))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if(((! (! ((! (! (false))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((bool(bvec3((! (((! ((bool(bvec2(((! (! (injectionSwitch.x > ((injectionSwitch.y) - 0.0))))), true)))))) || false)), false, true))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false) && true)))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > ((true ? injectionSwitch.y : (injectionSwitch.s)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       barrier();
      }
     if(((((float(mat4x2(injectionSwitch.x, tan(0.0), 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((bool(bool(((((min(injectionSwitch.x, (0.0 + ((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((bool(bvec4((true && (bool(bvec3(((false)), true, true)))), (((! (! (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)), false))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (bool(bvec4((((! ((false || (false)))) || false)), ((injectionSwitch.x < injectionSwitch.y)), false, true))))))
      barrier();
     if((((injectionSwitch.x > (mix(vec2((- 3226.8085), (858.479)), vec2((injectionSwitch)[(max((~ (~ (0))), 0))], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((bool(bool((true && ((false)))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if(((bool(bool(false)))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((false) || false)))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((! ((bool(bvec4(! ((((injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((((bool(bool(injectionSwitch.x > ((true ? (min((mix(float(((injectionSwitch.y) - 0.0)), float((- 208.068)), bool(false))), injectionSwitch.y)) : (- 8.7)))))))) && true))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(mat4x2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))).y))))
    {
     if(((! ((false || (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((bool(bool(bool(bool((false))))))))
  barrier();
 if(((bool(bvec2(false, false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > ((((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if(((((((((bool(bvec4((bool(bvec3(((bool(bvec3(bool(bvec4(false, true, true, true)), false, false)))), ((injectionSwitch.x > injectionSwitch.y)), ((false) && true)))), true, false, true)))) || false)) || false)) || ((injectionSwitch.x > injectionSwitch.y))) || ((false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((false || ((bool(bvec4(false, true, false, true))))))) && true))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if(((((! (! (false)))) || false)))
        {
         if((((true && (bool((bool(bool(bool(false))))))))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((! (! (((bool(bool(false))))))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((((((false ? (vec2(- 36.79, 516.830)) : false ? (injectionSwitch) : ((clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))))))).x < injectionSwitch.y)) && (! (! ((bool(bvec4((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false, false, false)))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = ((max(((~ (~ (gl_NumWorkGroups.x))) * 1u), ~ (~ (gl_NumWorkGroups.x)))));
 if((false))
  {
   if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if((((((((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((! (! ((bool(bvec4((false), false, false, true))))))) && true))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((! ((! (! (! (false || (((bool(bvec4(false, false, true, false)))))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((bool(bool((false)))) && true)))
    barrier();
   if(((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((4.6), (4.7)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! ((bool(bvec4(! (false), false, true, false)))))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec4(false, true, true, true)))))
    barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((true && ((true && (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((bool((bvec3(bvec4(bvec3((false), true, false), false))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false)) || false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = ((((gl_WorkGroupID) / uvec3((mix(float((5743.7459)), float(((clamp(injectionSwitch, ((injectionSwitch) * (vec2(mat4x2(abs(vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), ((injectionSwitch) + vec2(0.0, 0.0)))).y)), bool(true))), (injectionSwitch.y), (injectionSwitch.y)))) * uvec3(1u, (((~ (~ (1u)))) ^ 0u), (((0u ^ ((1u * (1u)))) | 0u)))).x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = (min(workgroup_id, workgroup_id));
 if(((bool((! ((bool((bvec2((bvec2(bvec3(bvec2(bvec2(! (bool((false || (bool(bool((false))))))), true)), true)))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false || ((false))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((bool((bool(bvec4(bool((((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))
  {
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((((mix(vec2((4.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (7510.7993)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec3(false, true, true)))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bvec4(false, false, false, true)))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = ((((((clamp((min((((clamp((max((((((max((workgroup_base) - 0u, (workgroup_base) - 0u))) | ((max((workgroup_base) - 0u, (workgroup_base) - 0u))))) | ((max((workgroup_base) - 0u, (((~ (~ ((workgroup_base) - 0u)))) - 0u))))), (workgroup_base) - 0u)), (max((max((workgroup_base) - 0u, (workgroup_base) - 0u)), (workgroup_base) - 0u)), (max((max((workgroup_base) - 0u, (workgroup_base) - 0u)), (workgroup_base) - 0u))))) - 0u), (max((max((max((workgroup_base) - 0u, (workgroup_base) - 0u)), (workgroup_base) - 0u)), (max((max((workgroup_base) - 0u, (workgroup_base) - 0u)), (workgroup_base) - 0u)))))), (((((workgroup_base) - 0u) / 1u)) | ((workgroup_base) - 0u)), (workgroup_base) - 0u))) + ((0u) | (0u))))) / 1u) + subgroup_id * (clamp(((subgroup_size) ^ 0u), (0u ^ (subgroup_size)), subgroup_size)) + subgroup_local_id;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > (((min(injectionSwitch, ((true ? injectionSwitch : (injectionSwitch)))))) - log(vec2((injectionSwitch.y), (injectionSwitch.y)))).y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > (clamp((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((! (((! (! ((false || (false || (! ((false))))))))))))
    {
     if((false))
      barrier();
     if(((! (! (((false) || false))))))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((true && ((bool(bool(false)))))) && true)))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((false) && true)))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (false)))))
  barrier();
 if(((true && (false))))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (min(injectionSwitch.y, ((injectionSwitch.y) / 1.0)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((false) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((true && ((false))))
    barrier();
   if((false))
    {
     if(((bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(((false || (false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = (0u | (workgroup_base + subgroup_id * subgroup_size)) + (((~ (clamp((~ ((~ (((~ (((subgroup_local_id + 1)) >> (uint((injectionSwitch.x)) >> (uint(0u))))) ^ 0u))))), (~ (((clamp(~ (~ (subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)), ((~ (~ (subgroup_local_id + 1))) * ((1u << (uint(7u))) >> (uint(7u))))))))), (((((~ ((~ ((((~ (~ ((0u ^ (~ (subgroup_local_id + 1))))))) | 0u)))))) + uint((injectionSwitch.x))) | (((~ ((~ ((((~ (~ ((0u ^ (~ (subgroup_local_id + 1))))))) | 0u)))))) + uint((injectionSwitch.x))))))))) % (min((((((~ (~ ((max(false ? (subgroup_size) : subgroup_size, false ? (subgroup_size) : subgroup_size)))))))) | (subgroup_size)), (max((((0u) | (0u)) | ((max(((subgroup_size) ^ 0u), (~ (~ (subgroup_size))))))), subgroup_size)))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if(((! (! ((bool(bool(false))))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((! (! ((false)))))
      barrier();
     if((false))
      barrier();
     if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if((((injectionSwitch.x > (min(injectionSwitch, (vec2((mix(float((4.6)), float(injectionSwitch[0]), bool(true))), (((clamp((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[1])))).y))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((true && (! (! (((false) && true))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) && true)))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false || ((false))))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > ((true ? (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : (((true ? (vec2(0.0, 0.0) + (vec2(- 79.86, - 20.38))) : (vec2(998.100, 424.310))))))).y))))
  {
   if((false))
    barrier();
   if((bool(bvec4((false), true, true, false))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((((float(vec2(((injectionSwitch.x) - 0.0), tan(0.0)))) / exp(0.0))) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(((! ((false || (! (false)))))))
      {
       if(((true && (false))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((((! (! (false)))) || false)))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((((injectionSwitch.x) + tan(0.0)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if((((injectionSwitch.x > (float(mat3x4(injectionSwitch.y, determinant(mat3(1.0, 1.0, 0.0, 0.0, (clamp((dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, ((1.0 * (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), (mix(float((- 8431.1478)), float(((1.0) + 0.0)), bool(((injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (((injectionSwitch.x > ((false ? (- 93.72) : injectionSwitch.y)))))))))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (max((((max(injectionSwitch.y, injectionSwitch.y))) - 0.0), (min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((true && (false)) || false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > (mix(float((max(injectionSwitch.y, injectionSwitch.y))), float((- 1.5)), bool(((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (52.30)), vec2((7676.4382), (injectionSwitch)[1]), bvec2(false, true))).y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((true && (((injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (((false || ((false))) || false))))))
  {
   if(((! ((((injectionSwitch.x < injectionSwitch.y)) && (! (((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((false) && true)))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((((false) && true))) || false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((bool(bvec4((false), true, ((injectionSwitch.x > injectionSwitch.y)), true))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((bool(bvec3((bool((bvec2(bvec4(bvec2((false), false), true, false))))), false, false))))
      barrier();
    }
   if((false))
    barrier();
   if((((! (! (bool((bvec3(bvec3(bvec3(false, false, false)))))))))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((bool(bvec2(((false || (((injectionSwitch.x > injectionSwitch.y))))), true))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((((0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((! ((! (! ((! (! (! ((! (! (false))))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((((float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(tan(0.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, exp(0.0)))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((bool((bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), ((((((false) && true)) && true)) && true)))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false || (((! (! (false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   int i = 0;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (float(float(((dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (((injectionSwitch) * mat2(1.0)).y)))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((((((bool((bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))) || false))) && true)))))
    {
     if(((false || (false))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((bool(bool((bool((bvec2(bvec3(bvec2(false, false), true))))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((true && ((((((true ? (max(injectionSwitch.x, injectionSwitch.x)) : (41.70))) > injectionSwitch.y))))))
          barrier();
         if((false))
          barrier();
         if((((false) && true)))
          {
           if(((bool(bool((false || (false)))))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          {
           if(((! (! (false)))))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((false) && true)))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false) || false)))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 904.406)), bool(false)))))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > ((true ? ((false ? (- 8.6) : injectionSwitch.y)) : (intBitsToFloat(i))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((! (! (false)))) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   if((((injectionSwitch.x > (max(((mix(vec2((- 48.18), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], (- 972.767)), (bvec2(bvec4(bvec2((true && ((! (! (true))))), false), false, false)))))), injectionSwitch)).y))))
    {
     if((false))
      barrier();
     if(((true && (! ((! (! (! ((! ((! (! (! (! (! ((true && (((false)))))))))))))))))))))
      {
       if((true && ((false))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if(((bool(bvec3(false, false, false)))))
        {
         if((false))
          barrier();
         if((((((true && (true)) && (bool(bvec3(((! (! ((true && (injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)), ((((((injectionSwitch.x) / sqrt(1.0)) < injectionSwitch.y)) && ((bool((bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), false))))))))))))))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if(((bool(bvec4(false, true, true, false)))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((bool(bvec2((false), false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((false) && true)))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
     if((((bool(bvec4(! (! (((((false) || false)) || false))), true, false, false))))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if(((true && (false))))
          barrier();
         if((((bool(bvec4(bool(bvec4(((false || (bool(bvec4(false, true, false, true))))), false, false, true)), false, true, false))))))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((((true ? (max(injectionSwitch.x, injectionSwitch.x)) : (- 6.9))) > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(((((false || (false))) && (bool(bvec3((((bool(bvec2(true, false)))) || ((injectionSwitch.x > injectionSwitch.y))), false, true))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((bool(bool((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    {
     if((false))
      barrier();
     if(((true && ((! (! (false)))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((((true && ((true && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if((false))
      {
       if(((false || ((bool(bvec3(false, true, true)))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if(((! (! ((! (! (false))))))))
    barrier();
   if((false))
    barrier();
   if(((((bool(bvec2((! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((true && ((((bool(bvec2(false, true))) && true))))) && true)))
    {
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, (0.0 + (injectionSwitch.y))))))))
      {
       if((false))
        barrier();
       if(((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, ((false) || ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(((((clamp((mix(float((- 872.069)), float(injectionSwitch.x), bool(true))), (mix(float((- 3.4)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(((bool((bool(bvec4(bool((! (! (false)))), false, false, false)))))))
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > ((false ? (((false ? (log2(2.7)) : 1.9))) : injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((! (! ((! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bool(false)))))
  barrier();
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((bool(bvec4((false), true, true, false))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > (((mix(vec2((7.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (70.95)), bvec2(((injectionSwitch.x < injectionSwitch.y)), false)))) + vec2(0.0, 0.0)).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > (max(injectionSwitch.y, ((true ? injectionSwitch.y : (1.1)))))))))
      barrier();
     barrier();
    }
   if((((false) || false)))
    {
     if((! (! ((false)))))
      barrier();
     barrier();
    }
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((true && (false))))
    {
     if(((! ((! (! (! (false))))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((true && (((false || ((! (! ((! ((! (! (! ((! (! ((bool((bvec2((((bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(((true && ((! (! (true && (bool(bool((false)))))))))), true)), true, true)), true)), true, false)))))))))))))))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((bool(bvec2(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, ((false) && true), false)), true))))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec4(false, true, false, true)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((! (! (! ((bool(bvec4((! ((((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)), true, false))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(((((vec2(injectionSwitch[0], (max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    barrier();
   if(((((! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((false) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((false || (bool(bvec2(false, false)))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
