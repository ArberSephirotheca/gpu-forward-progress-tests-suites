#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if((! (! ((! (! (((((! (! ((((injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(((((false || ((clamp(injectionSwitch.x, injectionSwitch.x, (((false ? (- 573.399) : mix(float(injectionSwitch.x), float((vec3(- 5.3, 6.6, 5.1).t)), bool(false))))))) > injectionSwitch.y))) || false)), ((injectionSwitch.x < injectionSwitch.y)), true, true)))))))))))))))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((! (! (false)))))
  {
   if((false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size;
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if((false))
  return;
 if((((((true && (false || ((((((true && (false))) && true)) && true))))))) && true))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((bool(bool(((true && (((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 uint workgroup_size = ((((false ? (uvec3(20605u, 83407u, 121842u)) : gl_WorkGroupSize))) | (max((gl_WorkGroupSize), (uvec3(uvec4((gl_WorkGroupSize), 0u)))))).x;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
 if(((! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 uint workgroup_id = (uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)) * (((gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.w * (uvec4(GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size[3])).z;
 if(((((! ((true && ((bool(bvec4((((bool(bvec4(! ((((! (! (bool(bvec2((injectionSwitch.x > (vec2(injectionSwitch[0], (max(injectionSwitch[1], ((true ? (clamp((((min(injectionSwitch, injectionSwitch))[1]) * 1.0), ((injectionSwitch[1]) * 1.0), ((injectionSwitch[1]) * 1.0))) : (- 4558.4104))))))).y), false)))))) || false)), ((injectionSwitch.x < injectionSwitch.y)), false, false)))) || ((injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))))))
  {
   if((false))
    return;
   return;
  }
 uint virtual_gid = (0u ^ (workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.y)) + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = ((((injectionSwitch.x < injectionSwitch.y)) ? (max(workgroup_base, workgroup_base)) : (uint((((0 + ((~ 88405)))) * ((~ (~ (1))) * (((1 << (int(2))) >> (int(2)))))))))) + ((subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.y) << 0u) + ((subgroup_local_id + (min((max(1, 1)), (((max(1, 1))) >> 0)))) % GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.y);
 if(((! (! ((false || ((((max((vec2(injectionSwitch[0], (mix(float(injectionSwitch[1]), float((657.540)), bool(false))))).x, (clamp(injectionSwitch.x, injectionSwitch.x, (((clamp(true ? (max(injectionSwitch.x, injectionSwitch.x)) : (radians(- 98.40)), true ? (max(injectionSwitch.x, injectionSwitch.x)) : (radians(- 98.40)), (max(true ? (max(injectionSwitch.x, injectionSwitch.x)) : (radians(- 98.40)), true ? (max(injectionSwitch.x, injectionSwitch.x)) : (radians(- 98.40)))))))))))) > injectionSwitch.y)))))))))
  return;
 if((false))
  {
   if((false))
    return;
   if((bool((bvec3((((bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((bvec3(bvec3(bvec3((bvec3(bvec4(bvec3((false), ((true) && true), true), false))))))))))), (true && (true))))))))))))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.x = next_virtual_gid;
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((((((injectionSwitch.x > (min(injectionSwitch.y, ((true ? injectionSwitch.y : (396.316))))))) && true))))
  {
   if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    return;
   return;
  }
 if((false))
  return;
 if(subgroup_local_id + (min(1, ((~ (~ (max(1, 1))))))) < GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.y)
  {
   int i = 0;
   if(((bool(bvec2(false, false)))))
    return;
   buf[GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.x] = 2;
   if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if((((! (! ((false || ((! (! (! (! ((! ((true && ((! (! ((bool(bvec3(((bool(bvec2(bool((false || (bool((false || ((((! (! (false || ((((! (! (((! ((injectionSwitch.x > injectionSwitch.y))) && true))))) && true))))))))))))), true)))), false, true)))))))))))))))))))))))
    return;
  }
 else
  {
   if((! (! ((! (! ((false))))))))
    return;
   if((((false) && true)))
    {
     if((false))
      return;
     if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
    }
   if(((true && (false))))
    return;
   if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if((false))
    return;
   ((false ? (num_workgroup) : buf[GLF_merged4_0_1_16_1_1_13_2_1_12_3_1_14next_virtual_gidsubgroup_sizeworkgroup_idworkgroup_size.x] = 2));
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
