#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if(((bool(bvec3(false, false, (((injectionSwitch.x < injectionSwitch.y)) && (true)))))))
  return;
 do
  {
   if((false || (((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if((false))
      {
       if((false))
        break;
       if((((! (! (((! (! (((((false) || false))) || false)))))))) || false))
        break;
       return;
       if((false))
        break;
      }
     return;
    }
  }
 while((true && (false)));
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((((((false || (! (! (false))))) || ((bool(bvec2((((1.0 * ((min(injectionSwitch.x, injectionSwitch.x))))) + 0.0) > injectionSwitch.y, true)))))))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((((false) && true)))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if(((((vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = ((false ? (subgroup_local_id) : gl_NumWorkGroups.x));
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((false || (((mix(float((- 2.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (clamp(workgroup_size, workgroup_size, (max(((workgroup_size) << 0u), (max(workgroup_size, workgroup_size)))))) * workgroup_id;
 uint virtual_gid = workgroup_base + (~ (~ (((((((true ? subgroup_id * subgroup_size : (workgroup_id)))) | uint((injectionSwitch.x))))) | ((((((true ? subgroup_id * subgroup_size : (workgroup_id)))) | uint((injectionSwitch.x)))))))) + subgroup_local_id;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + (((clamp(((! (! ((injectionSwitch.x < injectionSwitch.y))))) ? (((uint(uvec2((max(((uint(((((uvec2(0u, 1u)) << uvec2(0u, 0u)) | uvec2(0u, 0u)))))) | ((true ? (uint(uvec3((0u), 0u, 1u))) : (num_workgroup))), ((uint(((uvec2(0u, 1u)) << uvec2(0u, 0u))))) | (0u))), 0u)))) ^ ((((((clamp(injectionSwitch.x, (max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) ? (max(subgroup_size, subgroup_size)) : (((min(((true ? true ? subgroup_id * subgroup_size : (clamp(subgroup_id, (max(num_workgroup, num_workgroup)), virtual_gid)) : (109218u))), true ? subgroup_id * subgroup_size : (clamp(subgroup_id, num_workgroup, virtual_gid)))))))))) : ((num_workgroup << subgroup_local_id)), (min(((((float(vec2(max(injectionSwitch.x, (min((max(injectionSwitch, (((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x, injectionSwitch.x))), 1.0)))) < injectionSwitch.y)) ? ((((uint((injectionSwitch.x)) | (min(true ? (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size : (clamp(subgroup_id, (((0u ^ ((clamp(num_workgroup, num_workgroup, (max(num_workgroup, num_workgroup))))))) ^ 0u), virtual_gid)), true ? ((subgroup_id * subgroup_size) << 0u) : (clamp(subgroup_id, num_workgroup, ((((false || (bool(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y))))))) ? (workgroup_id) : (((0u | (((injectionSwitch.x < injectionSwitch.y)) ? ((~ (~ (0u))) + (virtual_gid)) : (subgroup_local_id))))))))))))))) : ((~ (uint((uvec2(0u, (min((clamp(0u, 0u, 0u)), 0u))) ^ (((uvec2(((((clamp(~ ((min(~ (~ (((num_workgroup << subgroup_local_id)))), ~ (~ (((num_workgroup << subgroup_local_id))))))), ((~ ((num_workgroup << subgroup_local_id))) ^ 0u), ~ ((num_workgroup << subgroup_local_id)))))) + 0u), 1u)) - uvec2((injectionSwitch.x), (injectionSwitch.x))))))))), ((((float(vec2(max(injectionSwitch.x, (min(injectionSwitch.x, ((injectionSwitch.x) / 1.0)))), 1.0)))) < injectionSwitch.y)) ? (((((min(true ? (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size : (clamp(subgroup_id, (((0u ^ ((clamp(num_workgroup, num_workgroup, (((max(num_workgroup, num_workgroup))) ^ 0u)))))) ^ 0u), virtual_gid)), true ? ((subgroup_id * subgroup_size) << 0u) : (clamp(subgroup_id, num_workgroup, ((((false || (bool(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y))))))) ? (workgroup_id) : ((((injectionSwitch.x < injectionSwitch.y)) ? (0u + (virtual_gid)) : (~ (~ ((subgroup_local_id))))))))))))))) | (uint(uint(((((min(true ? (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size : (clamp(subgroup_id, (((0u ^ ((clamp(num_workgroup, num_workgroup, (max(num_workgroup, num_workgroup))))))) ^ 0u), virtual_gid)), true ? ((subgroup_id * subgroup_size) << 0u) : (((clamp(subgroup_id, num_workgroup, ((((false || (bool(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y))))))) ? (workgroup_id) : ((((injectionSwitch.x < injectionSwitch.y)) ? (0u + (virtual_gid)) : (subgroup_local_id))))))) ^ 0u))))))))))) : ((~ (uint((((uvec2(0u, 0u) ^ (uvec2(((((clamp(~ (~ (~ (((min((num_workgroup << subgroup_local_id), (min((num_workgroup << subgroup_local_id), (num_workgroup << subgroup_local_id))))))))), ((((~ ((((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_id) : num_workgroup)) << subgroup_local_id))) ^ 0u)) << 0u), ~ ((num_workgroup << subgroup_local_id)))))) + ((true ? 0u : ((false ? virtual_gid : 193229u))))), 1u))) - (uvec2(0u, 0u) << (uvec2(5u))))))))))), (((1u * ((((((((((false || (bool(bool(false))))) || (((vec2(vec4(mix(vec2((injectionSwitch)[0], ((- - 6.0))), vec2((69.15), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 1.0)))).x < injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y))))) ? (((min(true ? subgroup_id * ((subgroup_size) | ((min(subgroup_size, ((subgroup_size) << 0u))))) : (clamp(subgroup_id, num_workgroup, virtual_gid)), true ? subgroup_id * subgroup_size : (clamp(((subgroup_id) ^ 0u), num_workgroup, virtual_gid)))))) : ((num_workgroup << (min(subgroup_local_id, (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) | (((((((((false || (bool(bool(false))))) || (((vec2(vec4(mix(vec2((injectionSwitch)[0], ((- - 6.0))), vec2((69.15), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 1.0)))).x < injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y))))) ? (((min(true ? subgroup_id * ((subgroup_size) | ((min(subgroup_size, ((subgroup_size) << 0u))))) : (clamp(subgroup_id, num_workgroup, virtual_gid)), true ? subgroup_id * subgroup_size : (clamp(((subgroup_id) ^ 0u), num_workgroup, virtual_gid)))))) : ((num_workgroup << (min(subgroup_local_id, (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))))) >> 0u))))) + (((((0u + ((~ (~ (subgroup_local_id))))) + 1) % subgroup_size) / 1u));
 if((((((false) && true)) && true)))
  return;
 buf[virtual_gid] = 1;
 if((! ((true && (! ((! (! (! ((false || (((((((true && ((bool(bool(false)))))) || false) || (((bool((bvec3(bvec4(bvec3(((false) || false), false, (bool(bvec2(false, false)))), false))))) || (false || (((! ((bool((bvec2(bvec3(bvec2((true && ((true && ((false || (false)))))), true), false))))))))))))) && true))))))))))))))
  {
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     return;
    }
   if((bool(((bvec2(bvec2(bvec2(bvec2(bvec2(subgroup_local_id + (max(1, (0 ^ (((true ? 1 : (11921))))))) < subgroup_size, ((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     int i = 0;
     buf[next_virtual_gid] = 2;
     if(((! (! (false)))))
      return;
     if((false))
      {
       if(((true && (bool((bvec2(bvec3(bvec2((false), ((injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y))))))))))
        return;
       if(((! (! ((((0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))
        {
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(((((max(injectionSwitch, (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2(0.0, 0.0) + (vec2((- 7582.0545), (- 31.87)))), bvec2(false, false))))).x > injectionSwitch.y))))
        return;
       if((false || (((injectionSwitch.x > injectionSwitch.y)) || (((false))))))
        return;
       if((false))
        return;
      }
    }
   else
    {
     do
      {
       buf[next_virtual_gid] = 2;
       if((false))
        break;
      }
     while((false || ((bool((bvec3(bvec4(bvec3(false, false, false), false))))))));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
