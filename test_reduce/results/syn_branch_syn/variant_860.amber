#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != ((max((0 ^ 1) & 1, (0 ^ 1) & 1))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 uint subgroup_size = gl_SubgroupSize;
 if(true)
  {
   if(((! (! ((false)))) && (! (! (true)))))
    {
    }
   else
    {
     if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((1.7)), bool(false)))))))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   if(((((vec2(((injectionSwitch[0]) - ((0.0) / 1.0)), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; ((false || ((! (! (((! (! (_injected_loop_counter > 0))))))))) && true); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = ((1 << (((int(5))) >> 0)) >> ((int(ivec3(int(5), 0, 1))))); _injected_loop_counter != ((((injectionSwitch.x < injectionSwitch.y)) ? ((0) + (0 ^ 0)) : (_injected_loop_counter))); _injected_loop_counter --)
        {
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
            }
           barrier();
          }
        }
       GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
       if((true && ((((((mix(vec2((- 1.0), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2((clamp(injectionSwitch, ((injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))[0], (vec3(701.895, 5.9, 734.778).g)), bvec2(true, false)))).x > injectionSwitch.y))))))
        {
         if((false))
          {
           if((false))
            barrier();
           if((((((! (! (! ((false || (! (! ((bool((bool(bvec3(bool(! (((((false ? (vec2(- 2.7, - 5.1)) : (true ? injectionSwitch : ((min(((vec2(- 8090.4409, - 3.7)) * vec2(1.0, 1.0)), vec2(- 8090.4409, - 3.7)))))))).x > injectionSwitch.y))), true, true))))))))))))))))))
            {
             do
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if((false))
            barrier();
           barrier();
          }
         do
          {
           if(false)
            {
            }
           else
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(false);
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(((! (((((! (bool((bvec2(bvec4(bvec2((! (! (false))), true), false, false))))))) && true)) && true))));
         if((false))
          barrier();
        }
      }
    }
   while(false);
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false || (true)))
  {
   if((false))
    {
     for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       barrier();
      }
    }
   (((false ? (subgroup_id) : (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y = (((((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) << 0u)) - uint((injectionSwitch.x)))) >> uint((((float(mat4x3(((min(injectionSwitch, ((false ? (injectionSwitch) : ((injectionSwitch) - vec2(0.0, 0.0)))))).x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, (injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0)))) * 1.0)))));
  }
 else
  {
   do
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
   while(((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y)));
   do
    {
     if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          {
           do
            {
             barrier();
             if((false))
              barrier();
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((false || (false)))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(((bool(bvec3(bool((bvec2((bvec3(bvec4(bvec3(bvec2(((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 4.9)), bool(false))))), true), false), false)))))), ((injectionSwitch.x < injectionSwitch.y)), true)))));
  }
 for(int _injected_loop_counter = (((((max(1, 1)) << (int(4))) >> (int(4)))) - ((0) - 0)); (int(ivec4(_injected_loop_counter, 0, 1, 0))) > ((~ ((((0 + (~ ((clamp(0, (int(ivec4(0, 0, 1, 0))), 0)))))) << 0))) << (((int(5)) + (min(0, (min(0, (((((int(ivec2(0, 0))) | 0)) >> 0))))))))); _injected_loop_counter --)
  {
   if((false))
    barrier();
   if(((((bool(bvec4((! (! (((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false))), (bool(bool((true && (((false) && true)))))), true, false)))))))
    {
     do
      {
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
    }
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 uint num_workgroup = (uint(uvec3(((max((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) >> (1u ^ 1u)), 0u, ((1u << ((0u | (uint(((((7u) / 1u)) ^ 0u)))))) >> (uint(7u))))));
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = ((false ? ((+ 54735u)) : gl_WorkGroupSize.x));
 uint workgroup_id = ((true ? (((min(gl_WorkGroupID, (min(gl_WorkGroupID, gl_WorkGroupID))))) | (((false ? (uvec3(45131u, 118419u, 41955u)) : gl_WorkGroupID)))) : (uvec3(178868u, 95902u, 6218u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if(((((! ((((true && (! ((bool(bvec4((! ((! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
  }
 while(false);
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 uint virtual_gid = ((clamp(~ (~ (((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w)) >> 0u)), ~ (~ (((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w)) >> 0u)), (min(~ (~ (((1u * ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w)))) >> 0u)), ~ (~ (min((((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w)) >> 0u), (~ (~ ((((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w)) >> 0u)))))))))))) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z + GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y;
 if((! (! ((false)))))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w + subgroup_id * (clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base)).z + ((uint(uvec2((uint(uvec2(((~ (~ (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)))), 0u))), 0u))) % ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z) * (~ (((max(uint((((((false ? (uvec3(149984u, 54684u, 15145u)) : max(uvec3(~ (0u ^ ((1u))), 1u, 1u), uvec3(~ (1u), 1u, 1u))))) << uvec3(0u, 0u, 0u)))), uint(((((((injectionSwitch.x > ((true ? injectionSwitch : (vec2(- 6621.3468, - 5.7)))).y)) ? ((true ? uvec3(105270u, 26599u, 97007u) : uvec3(126248u, 40481u, 170106u))) : (max(uvec3(~ (1u), 1u, 1u), uvec3(((~ (1u)) | (~ (~ ((((~ (((((injectionSwitch.x < injectionSwitch.y)) ? ((1u) ^ uint((injectionSwitch.x))) : (workgroup_id))))) - 0u)))))), 1u, ((1u) ^ 0u))))))) - uvec3(0u, 0u, 0u))))))))));
 if(true)
  {
   if((false))
    barrier();
   do
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((bool(bvec2(((true && (((((bool(bool((! (! (((((((false || (injectionSwitch.x > ((true ? injectionSwitch.y : ((roundEven(44.44) * - 1269.7490))))))) && true)))))))))) && true) && true))))), (true && (((false) && true)))))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > (vec2((injectionSwitch.y), (injectionSwitch.y)) * (injectionSwitch)).y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = int((injectionSwitch.x)); (~ (~ (_injected_loop_counter))) < 1; _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   while(false);
  }
 else
  {
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 else
  {
  }
 if(true)
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); (bool(bvec4(_injected_loop_counter != 1, true, false, true))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       barrier();
      }
     if((false))
      barrier();
     if((((! (! (true)))) && ((injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 else
  {
  }
 if(false)
  {
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(true)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (((int(5)) * int((injectionSwitch.y))))); _injected_loop_counter --)
        {
         if(((((bool(bvec2((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)))) || ((false) && true))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false || (((! (! (false)))))))
            barrier();
           if(((! (((! (! (! ((((((false || (true)) || false)) && ((injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
            {
             if((true && (((((max(injectionSwitch, injectionSwitch)).x > (mix(float((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float((9.6)), bool(false)))))))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(true)
                {
                 if(((((((((! (! (((bool(bvec2(injectionSwitch.x < (vec2(injectionSwitch[0], injectionSwitch[1])).y, true)))))))) || (! ((! ((true && (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))) || false)) || false))))
                  {
                   if((((mix(float((vec4(- 1.3, - 90.25, - 16.41, 6.8).r)), float(((injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     do
                      {
                       barrier();
                      }
                     while(false);
                    }
                   if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (0 ^ (0)); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             if((false))
              barrier();
            }
           else
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             else
              {
              }
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if(((((((min(((injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y) || false)))))
              barrier();
            }
          }
        }
      }
     else
      {
      }
    }
  }
 ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x = next_virtual_gid) - (0u >> (((false ? (subgroup_id) : uint(0u))))));
 buf[virtual_gid] = (((((0) << 0) + ((clamp(1, 1, ((true ? 1 : (- 32260)))))))) | ((~ (0 | (((min(~ (((0 ^ (~ (((((~ (1)) << 0)) | (((true ? ~ (1) : (28446)))))))))), ~ (((0 ^ (~ (~ (1))))))))))))));
 do
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 < GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z)
      {
       if((((false || (((false || (false)))))) || false))
        {
         if((! (! ((false)))))
          {
           if((((! (! (bool(((bool((((bool(bvec4((((max(((injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)), false, false, true))) && true)))) && true))))))))
            {
             if(false)
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while((false || (false)));
              }
            }
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       int i = 0;
       do
        {
         if((false))
          barrier();
         if((((false)) || false))
          {
           for(int _injected_loop_counter = int(((min(injectionSwitch.y, (mix(float((291.482)), float(injectionSwitch.y), bool(true))))))); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
            }
           do
            {
             barrier();
            }
           while(false);
          }
        }
       while((! (! (false))));
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
       if((true && (true)))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = ((0) ^ 0); (((injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter < (((1 * ((int(ivec4(1, 1, 1, 1)))))) << 0))); _injected_loop_counter ++)
          {
           do
            {
             if((false))
              barrier();
             buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x] = ((2) / int((injectionSwitch.y)));
             do
              {
               if(true)
                {
                 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
                  barrier();
                }
               else
                {
                }
              }
             while(((false) || false));
            }
           while(false);
          }
        }
       else
        {
        }
      }
     else
      {
       for(int _injected_loop_counter = 1; (int(ivec4(_injected_loop_counter, 0, 1, 1))) > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
          barrier();
         for(int _injected_loop_counter = ((1 << (int(2))) >> (int((~ (~ (2)))))); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
           do
            {
             buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x] = (int(ivec4(((false ? (_injected_loop_counter) : 2)), 0, int((injectionSwitch.y)), 0)));
            }
           while(false);
          }
         for(int _injected_loop_counter = 1; ((((_injected_loop_counter) ^ 0)) / 1) > ((int(ivec2(0, 0))) >> (int(4))); _injected_loop_counter --)
          {
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((bool((bvec3(bvec3(bvec3((! (! (true))), (((true && (true))) && true), false)))))))
          {
           if((false))
            {
             if(((((injectionSwitch) * mat2((((true ? injectionSwitch.y : (8.6)))))).x < injectionSwitch.y)))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   do
    {
     if(true)
      {
       if((false))
        {
         if((! (! (false))))
          {
          }
         else
          {
           if((true && ((! (! ((false)))))))
            barrier();
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (int((injectionSwitch.x)) ^ 1); ((false ? (- 60222) : _injected_loop_counter)) != 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
      }
     else
      {
      }
    }
   while((((min((mix(vec2(((mix(float((- 8.9)), float(39.70), bool(true)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (9.1)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y)));
  }
 while((((injectionSwitch.x < injectionSwitch.y)) && ((false || ((true && ((! (! ((! (! (! (! ((false))))))))))))))));
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
