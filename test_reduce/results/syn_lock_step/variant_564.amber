#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if(((false || (false))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((bool(bool(false)))) || false)))
    {
     if((((((false || ((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if((false))
        barrier();
      }
     if(((true && (false))))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            return;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((((false ? (mod(faceforward(injectionSwitch, vec2(- 94.62, - 238.391), injectionSwitch), 7030.4992)) : (vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
          {
           if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
            return;
           barrier();
          }
        }
       return;
       if((true && ((false))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y) || ((false) || false))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((bool(bool(false)))) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if(((false || (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     return;
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((! (! (false)))))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if(((! ((! ((! (! (! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((! (! (bool((bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), (! ((! (! (! (true)))))), false), true))))))))))
      return;
     return;
     if((false))
      return;
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if(((true && (false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if(((bool(bvec4(false, false, ((injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if(((((injectionSwitch.x > injectionSwitch.y)) || (((false) || false)))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((7.9), (- 5464.5955)), bvec2(false, ((false) || false)))).y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if((false))
    barrier();
   if((((false || (bool(bvec4(false, false, true, true)))))))
    barrier();
   if((false))
    barrier();
  }
 if(((false || (false))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((false || ((((injectionSwitch.x > injectionSwitch.y)) && true))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((bool(bool((false))))) && true))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false || ((false))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            return;
           if((false))
            return;
           return;
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((((false)) && true))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if(((! (! (! ((! (false))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((false)) || false))
      {
       if((((false) && true)))
        {
         if(((bool(bvec4((bool(bvec4((! (! (((injectionSwitch.x > injectionSwitch.y))))), true, false, true))), ((injectionSwitch.x < (max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (0.0 + (injectionSwitch.y)))))), true, true)))))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
       if((false))
        return;
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        return;
       if(((bool(bvec4(false, true, ((injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if((((false) && true)))
          {
           if(((((vec2(mat4x2(injectionSwitch, (dot(vec2(0.0, 0.0), vec2(exp(0.0), 1.0))), 1.0, 0.0, 0.0, 0.0, determinant(mat3((injectionSwitch.x), exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0))))).x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > (float(((true ? mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, 0.0) : (mat4x3(- 509.980, 1.2, - 89.61, - 4070.0273, - 520.185, - 13.99, 9749.7486, 0.1, - 9.4, - 3.5, - 9959.8135, 33.21))))))))))
        return;
       if((false))
        barrier();
       if(((((false || (false))) && true)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         barrier();
        }
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((true && ((((true && ((injectionSwitch.x > injectionSwitch.y))))))) && true)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(((! (! (false)))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > ((false ? (vec2(29.64, - 8.5)) : injectionSwitch)).y))))
            barrier();
           if((false))
            barrier();
           return;
          }
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((false))
      return;
     if((! (! ((false)))))
      {
       if((false))
        return;
       barrier();
      }
     if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((false || (false))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
       if((false))
        return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((bool(bvec4(false, false, true, false)))) && true)))
    return;
   if(((bool(bvec4(false, true, true, true)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (min((vec2(injectionSwitch[0], injectionSwitch[1])), ((min((min((injectionSwitch) * mat2((0.0 + ((min((injectionSwitch.y), (injectionSwitch.y)))))), (injectionSwitch) * mat2((injectionSwitch.y)))), (injectionSwitch) * mat2((injectionSwitch.y))))))).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     return;
     if(((false || (false))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((((injectionSwitch.x > ((((max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) * sqrt(vec2(1.0, 1.0)))).y))) && true)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(((bool(bvec2(((false) || false), true)))))
      barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
     if((false))
      barrier();
     if(((false || (false))))
      return;
    }
   if((false))
    return;
   if((((((injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(((bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((! (! (false)))) && true)))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (vec2(mat2x3((mix(vec2((- 9118.0553), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (6393.4044)), bvec2(true, false))), 1.0, 1.0, 1.0, tan(0.0)))).y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((bool(bvec3(false, false, true)))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((! (! (false || ((false || (((injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if((false))
      return;
     if(((((! (! (false))))) || false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if((false))
      barrier();
    }
   if((((false)) || false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    barrier();
   if((false))
    return;
   if((((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), true, true, ((injectionSwitch.x > injectionSwitch.y))))) && true))) && true))
    return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((! ((((bool(bool(! ((! (! (false)))))))) || false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((true && ((false))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 uint virtual_gid = ((((false ? (subgroup_id) : workgroup_base)) + subgroup_id * (0u ^ ((uint(uvec3((~ (~ (((true ? subgroup_size : (num_workgroup)))))), ((1u << (uint(7u))) >> (uint(7u))), 0u)))))) ^ 0u) + subgroup_local_id;
 if((false))
  return;
 if((false))
  barrier();
 if(((false || (false))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   return;
  }
 if((((false)) || false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((((true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if(((bool(bvec4(false, false, false, false)))))
  barrier();
 if(((bool(bool((((bool(bvec3(false, false, true))) && true)))))))
  barrier();
 if(((((! ((! (! (! ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 uint next_virtual_gid = (0u + (((((injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : (subgroup_size))) + ((true ? ((0u + (((((~ (~ (((((subgroup_id) << 0u) * subgroup_size) | (((subgroup_id) << 0u) * subgroup_size)))))) ^ 0u)))) - (((((((float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) ? (subgroup_size) : 0u))) : ((floatBitsToUint(- 2.9) - (workgroup_id & subgroup_local_id))))) + ((subgroup_local_id + 1) % (max(subgroup_size, subgroup_size)))));
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((((min((((((max(injectionSwitch, injectionSwitch)))) * mat2(1.0)) - tan(vec2(((false ? (- 1.9) : ((float(mat3x4(float(mat2(0.0, 0.0, sqrt(1.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      return;
     if(((false || (false))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((bool((false || (bool((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(((((clamp((max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((false) && true)))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[next_virtual_gid] = 2;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((bool(((bvec2(bvec3((bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, true))), false))))))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((((true && (false || (false))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false) && true)))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(((bool(bvec2(false, false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((bool((false || (bool((false))))))) && true))
      {
       if((((false) || false)))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(((! (! (false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
           if((((false || (false)) || (false))))
            barrier();
          }
         return;
         if(((((bool((bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))))))))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if(((((mix(vec2((4.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 21.46)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
          barrier();
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         return;
         if((false))
          return;
         if((false))
          barrier();
        }
      }
     barrier();
     if((false))
      return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if(((false || (((bool(bvec3((bool(bvec2((false), false))), false, true))) && true)))))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            {
             if(((bool((bvec2(bvec4(bvec2(false, true), false, true)))))))
              return;
             barrier();
            }
          }
         if((false))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            return;
           barrier();
           if((false))
            barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y) && true)))))))
            {
             if((false))
              barrier();
             barrier();
            }
           if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
            barrier();
           barrier();
          }
         if((false))
          return;
         barrier();
        }
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    {
     if((((false) && true)))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if(((true && (false))))
  barrier();
 if(((bool(bvec3(((((false || (((float(mat4x2(injectionSwitch.x, round(length(normalize(vec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))), sqrt(0.0), 0.0, sqrt(1.0), ((true ? 1.0 : (9.6))), 1.0, 1.0))) > injectionSwitch.y)))) || false)), false, true)))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if(((true && (((injectionSwitch.x > (mix(float((8.9)), float((min((((false ? (injectionSwitch) : ((true ? (injectionSwitch) : (vec2(559.672, - 52.52)))))) / (mix(vec2((vec2(1.0, 1.0))[0], (- 9.4)), vec2((5613.4719), ((min(vec2(1.0, 1.0), vec2(1.0, 1.0))))[1]), bvec2(false, true)))), injectionSwitch)).y), bool(true)))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    return;
   if(((((! (! (false)))) && true)))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if(((bool((bvec2((bvec2(bvec2(bvec2(bvec2(false, false)))))))))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > ((true ? (vec2(mat3(((false ? (vec2(625.173, - 5.1)) : injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) : (vec2(1.6, - 2297.2956)))).y))))
  barrier();
 if(((bool(bvec4(false, false, true, false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((! (false || ((! ((((injectionSwitch.x > (mix(vec2((0.9), (8.2)), vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)))))))))
  {
   if((((false)) && true))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((! (false || ((! (! (((! (((! (((! (((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) || false))) && true))))))))))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if(((bool(bvec4(false, true, true, false)))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((((false) || false)))
          return;
         barrier();
        }
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if((false))
          barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(((((mix(float((- 2.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bool(false)))))
      return;
     return;
     if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((bool(bvec2(((((bool(bvec3((((injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))))) || false), true))))
    barrier();
   if(((((! (! (false)))) && ((injectionSwitch.x < injectionSwitch.y)))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, false)))) || ((injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       return;
      }
     return;
     if((! (! ((((false) && true))))))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((true && (false))))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((false)) && true))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (((! (((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))) || false)))))
        barrier();
       return;
      }
     return;
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
