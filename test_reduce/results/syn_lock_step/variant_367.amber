#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = (((uint(uvec2(gl_WorkGroupID.x, (0u >> (uint(5u)))))) | (uint(uvec2(gl_WorkGroupID.x, (0u >> (uint(5u))))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + ((1u * (((((0u | (subgroup_id))) | 0u) * subgroup_size) ^ 0u))) + ((((((injectionSwitch.x < injectionSwitch.y)) ? (0u | ((((((((0u) >> 0u)) | ((uint(uvec3(0u, ((((((injectionSwitch.x < injectionSwitch.y)) ? 0u : (virtual_gid)))) << 0u), 0u))))) | ((((max(((((subgroup_local_id + ((1) * 1)) % (min(subgroup_size, subgroup_size)))) >> uint(((mix((mat2(1.0) * (((vec2(((false ? (- 8.0) : ((((injectionSwitch.x > injectionSwitch.y)) ? ((2.1)) : (injectionSwitch)[0])))), (vec3(3647.7855, - 7.7, 6.4).g))) / vec2(1.0, 1.0)))), vec2((- 44.09), ((min(injectionSwitch, (vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), (bvec2((bvec3(bvec4(bvec3(bvec2(false, true), false), true))))))).x))), (((max((max(subgroup_local_id + 1, subgroup_local_id + 1)), ((subgroup_local_id + 1) | (subgroup_local_id + 1))))) % subgroup_size))) / ((1u << (((uint(0u)) | (uint(0u))))) >> (uint(0u))))))) << 0u)))) | ((((subgroup_local_id + 1) % subgroup_size) | 0u)) : (num_workgroup)))));
 ((buf[virtual_gid] = 1) >> 0u);
 (~ (~ (buf[next_virtual_gid] = 2)));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
