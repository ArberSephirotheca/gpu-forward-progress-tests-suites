#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (min(((((uvec3(uvec4((uvec3(0u, 0u, 0u) ^ (false ? (((uvec3((((max(168489u, 168489u))) / (1u & 1u)), ((26936u) | (26936u)), 16716u))) - uvec3(0u, 0u, 0u)) : (((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) | ((((((((~ (~ (((uvec3(uvec3(((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) | (((uvec3(uvec3(((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)))))))) * uvec3(1u, 1u, 1u)))) - uvec3((~ (~ (0u))), 0u, 0u))) ^ uvec3(0u, 0u, 0u))))), 1u)))))), gl_WorkGroupSize)).x;
 uint workgroup_id = ((gl_WorkGroupID) | (((max(uvec3(0u, ((0u) ^ 0u), (clamp(0u, 0u, 0u))), uvec3(0u, 0u, (clamp(0u, 0u, 0u)))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (((((injectionSwitch.x < injectionSwitch.y)) ? (false ? (workgroup_id) : ((((min(((true ? 0u ^ ((((! (! (! ((! (false)))))) ? (subgroup_local_id) : workgroup_base + (1u * ((clamp(subgroup_id, (0u | (subgroup_id)), subgroup_id)) * subgroup_size))))) : (159661u))), ((0u) | 0u) ^ ((((! (! (false))) ? (subgroup_local_id) : workgroup_base + (1u * ((clamp(subgroup_id, (0u | (subgroup_id)), subgroup_id)) * subgroup_size))))))))) / (uint(((((uvec4(((((0u ^ ((((1u)) - 0u))) | (1u))) - 0u), ((true ? 0u : (uvec4(186192u, 69506u, 139966u, 112721u)[2]))), (clamp(1u, 1u, 1u)), (clamp(0u, ((0u) - 0u), (uint(((false ? (uvec3(196122u, 151110u, 102622u)) : uvec3(0u, 1u, 1u))))))))) | (uvec4(((((max((((1u) | (1u))) - (~ (~ (((0u) | (0u))))), (((1u) | (1u))) - 0u))) | 0u)), 0u, 1u, (0u | (0u)))))) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))) + subgroup_local_id) : (workgroup_id))));
 uint next_virtual_gid = (min(workgroup_base + ((0u >> (uint(5u))) ^ ((((min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u))) + (((((((clamp(uint(((true ? ((mix(float(injectionSwitch.y), float((- 65.90)), bool(false)))) : (- 3.3)))), uint(((true ? ((mix(float(injectionSwitch.y), float((- 65.90)), bool(false)))) : (- 3.3)))), uint(((true ? ((mix(float(injectionSwitch.y), float((- 65.90)), bool(false)))) : (- 3.3))))))) | (uint(((clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (min((clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (float(float((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), (max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))) / 1u) * ((subgroup_local_id + 1))) % subgroup_size), workgroup_base + ((0u >> (uint(5u))) ^ ((((min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u))) + ((((((uint(((true ? ((mix((max(float(injectionSwitch.y), (float(mat3x4(float(injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float((clamp(vec4(1.0, 0.0, 1.0, 0.0), (mix(vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], (vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[2], (vec4(1.0, 0.0, 1.0, 0.0))[3]), vec4((- 6.1), (- 5.7), (3.0), (- 1659.7995)), bvec4(false, false, false, false))), vec4(1.0, 0.0, 1.0, 0.0)))))))))), float((- 65.90)), bool(false)))) : (min((- 3.3), (- 3.3))))))) | (uint((injectionSwitch.y))))) / 1u) * ((subgroup_local_id + 1))) % subgroup_size)));
 ((((((true ? buf[virtual_gid] = 1 : (next_virtual_gid)))) << ((0u) / 1u))) + ((0u) | 0u));
 buf[next_virtual_gid] = 2;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
