#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (((uvec3(uvec3(true ? gl_WorkGroupID : (uvec3(87026u, 85845u, ((min((((110308u)) >> 0u), (110308u))) << (uint(((uvec4(uvec3(6219u, 25405u, 26112u), 4331u) & uvec4(0u, (0u ^ (((0u) - 0u))), 0u, 0u)) + (uvec4(0u, 0u, 0u, (1u ^ 1u)))))))))))))).x;
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((false || ((((bool(bool((((! ((((true) || false) && (! ((false || ((((! (! (false))))) || false))))))) || false)))))) && true)))))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = ((workgroup_base + ((((0u ^ ((((((! ((false || ((bool(bvec3(! ((! (! (bool(bvec2(true, false)))))), true, false)))))))) || false)) ? subgroup_id : (((num_workgroup)) / (clamp(((((1u) | (1u)) << (min((uint(4u)), (uint(4u))))) >> (uint(4u))), ((1u << ((false ? (subgroup_local_id) : (min((uint(4u)), (uint(4u))))))) >> (uint(4u))), ((((true ? ((((1u) | 0u) << (min((uint(4u)), (uint(4u))))) >> (uint(4u))) : (subgroup_local_id)))) >> 0u)))))))) * (((~ (((true ? ((((((((~ (subgroup_size)) / 1u)) >> 0u)) << uint((injectionSwitch.x)))) | (~ (subgroup_size))) : (31677u))))) | (~ (((true ? ((~ (subgroup_size)) | (~ (subgroup_size))) : (31677u)))))))) / uint(((clamp(((max((false ? (- 0.4) : injectionSwitch.y), ((bool(bvec3((bool(bool(false))), true, false))) ? (- 0.4) : injectionSwitch.y)))), injectionSwitch.y, (vec2(((mat2x3(injectionSwitch, 1.0, 0.0, abs(1.0), 1.0)) * mat2(1.0)))).y))))) + subgroup_local_id) | (workgroup_base + (((((((bool(bvec2(true, false))) ? subgroup_id : (num_workgroup))) * subgroup_size)) ^ 0u) / uint((injectionSwitch.y))) + (max(subgroup_local_id, ((((subgroup_local_id) + 0u)) ^ 0u)))));
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = ((true ? (((false ? (workgroup_base) : (min(~ (~ (((workgroup_base) * 1u))), ~ (((clamp(uint((injectionSwitch.x)) + ((true ? (uint(uvec4(((min(~ (((((clamp((workgroup_base), (workgroup_base), (workgroup_base)))) ^ 0u) * 1u)), ((~ (((((0u << ((~ (~ (uint(8u)))))) | (((workgroup_base)))) << 0u) * 1u))) + 0u)))), 1u, 1u, 1u))) : (uvec4(33571u, 165184u, 45656u, 111173u)[3]))), uint((injectionSwitch.x)) + ((min(~ (((((workgroup_base)) ^ 0u) * 1u)), ~ (((workgroup_base) * 1u))))), uint((injectionSwitch.x)) + ((((min(~ (((((workgroup_base)) ^ 0u) * 1u)), ~ (((workgroup_base) * 1u)))))) | (((min(~ (((((workgroup_base)) ^ 0u) * 1u)), ~ ((false ? (workgroup_base) : (((workgroup_base) * 1u)))))))))))))))))) : (subgroup_size))) + ((min(clamp(subgroup_id * subgroup_size, (uint(uvec4(((~ (((false ? (workgroup_id) : (min(~ (0u ^ ((0u | (((((subgroup_id * subgroup_size) / 1u)) ^ uint((injectionSwitch.x))))))), ~ (0u ^ ((0u | (((((subgroup_id * subgroup_size) / 1u)) ^ uint((injectionSwitch.x)))))))))))))), 1u, 0u, 0u))), (uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))), clamp((min(((subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), ((subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)))) + ((((((clamp((((clamp((max((subgroup_local_id + 1), (subgroup_local_id + 1))), (uint(uvec4((subgroup_local_id + 1), 0u, 0u, uint((injectionSwitch.x))))), (subgroup_local_id + 1))) + 0u)), (((subgroup_local_id + 1) + 0u)), (clamp(((true ? (((subgroup_local_id + 1) + 0u)) : (subgroup_local_id))), (1u * (((true ? (((subgroup_local_id + 1) + 0u)) : (subgroup_local_id))))), ((true ? (((subgroup_local_id + 1) + 0u)) : (subgroup_local_id)))))))) - (0u | (0u & 136722u))) | ((((~ ((uint((clamp(uvec2(~ (subgroup_local_id), (0u | (0u))), uvec2(~ (subgroup_local_id), 0u), uvec2(~ (subgroup_local_id), 0u))))))) + 1) + 0u)))) % subgroup_size);
 ((((buf[virtual_gid] = ((0 & - 86494) | (1))) | 0u)) | (1u ^ (max(1u, 1u))));
 buf[next_virtual_gid] = ((2) / 1);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
