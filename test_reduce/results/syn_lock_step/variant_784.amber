#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec4 GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(false)
  {
  }
 else
  {
   GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
  }
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base;
 uvec4 GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizevirtual_gid;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid;
 uvec4 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = ((((0) ^ 0)) << 0); _injected_loop_counter != ((1 << (int(2))) >> (((0 | (((false ? (_injected_loop_counter) : (int(2)) | 0))))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
      }
    }
  }
 if((bool(bool(true))))
  {
   if(false)
    {
    }
   else
    {
     (uvec3(0u, 0u, 0u) ^ (GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizevirtual_gid.xyz = GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_id.xyz));
    }
  }
 else
  {
  }
 (((uvec3(0u, ((0u) / 1u), 0u) ^ (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizevirtual_gid.xyz))) | uvec3(0u, 0u, 0u));
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_id.w = subgroup_id;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x = (max(GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_id, GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_id)).w;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.y = ((GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base) | uvec3(0u, 0u, 0u)).x;
 uint subgroup_size = gl_SubgroupSize;
 if((false || ((((((bool((bvec3(bvec3(bvec3(true, false, true))))))) || false) && (bool(bvec4(false, true, ((injectionSwitch.x < injectionSwitch.y)), true))))))))
  {
  }
 else
  {
   if(((true) || false))
    {
     GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.z = ((false ? (bitfieldInsert(subgroup_size, GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x, - 11898, 65020)) : ((clamp((((subgroup_size) - ((0u) | (0u))) | (0u | ((~ (~ (((subgroup_size) - 0u))))))), (uint(uvec4((subgroup_size), (1u & 1u), uint((injectionSwitch.y)), 0u))) - 0u, (subgroup_size) - 0u)))));
    }
   else
    {
    }
  }
 if(true)
  {
   (~ (~ ((~ (~ (((1u * ((((true ? ((GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.z) ^ ((min(0u, 0u)) >> (uint(((5u) | (5u)))))) : (subgroup_id)))))) + (0u | 0u))))))));
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y = subgroup_local_id;
 do
  {
   if(false)
    {
    }
   else
    {
     if(true)
      {
       for(int _injected_loop_counter = (0 | int((((injectionSwitch) / vec2(1.0, 1.0)).x))); (! (! (_injected_loop_counter < (0 ^ ((~ (~ ((clamp((((1 << (int(5))) >> (((int(5)) * 1))) | 0), (((1 << (int(((false ? ((ivec4(- 45024, 57741, - 50033, 50920).a / _injected_loop_counter)) : 5))))) >> (((int(5)) * (int(int(((false ? (_injected_loop_counter) : 1)))))))) >> 0), (1 << (int(5))) >> (((int(5)) * 1)))))))))))); ((_injected_loop_counter ++) ^ 0))
        {
         do
          {
           GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.x = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y;
          }
         while((false || ((false || (false)))));
        }
      }
     else
      {
      }
    }
  }
 while(false);
 uint num_workgroup = ((min((clamp((~ (((~ (uvec3(1u, (clamp(((1u) | (1u)), 1u, 1u)), 1u) * (((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))) ^ uvec3(0u, 0u, 0u)))), (~ (((~ (uvec3(1u, (clamp(((1u) | (1u)), 1u, 1u)), 1u) * (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))), (~ (((~ (uvec3(1u, (clamp(((1u) | (1u)), 1u, 1u)), 1u) * (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))))), (~ (((~ (uvec3(1u, (clamp((0u | (((1u) | (1u)))), 1u, 1u)), 1u) * (gl_NumWorkGroups))) ^ ((true ? uvec3(0u, 0u, 0u) : (uvec3(186877u, 98773u, 43262u)))))))))).x;
 for(int _injected_loop_counter = ((((1 & 1) | ((int(ivec2(1 & 1, 0)))))) & int((injectionSwitch.y))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.x = num_workgroup;
  }
 if((bool((bvec3(bvec3(bvec3(false, false, true)))))))
  {
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     do
      {
       ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.x) / 1u);
      }
     while(false);
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw.y = workgroup_size;
 if(false)
  {
  }
 else
  {
   do
    {
     GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz.z = (uvec2(0u, 0u) ^ (((GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).zw)).y;
    }
   while(false);
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(false)
  {
  }
 else
  {
   do
    {
     if(((((injectionSwitch.x) - 0.0) > injectionSwitch.y)))
      {
      }
     else
      {
       GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = (clamp(((0u << (uint(1u))) | ((((1u << (uint(4u))) >> (uint(4u))) * (workgroup_id)))), workgroup_id, workgroup_id));
      }
    }
   while((false || (false)));
  }
 uint workgroup_base = (((((((clamp(0u, 0u, (~ (~ (0u)))))) | ((min(0u, 0u)))) | (166575u & 0u))) << (uint(0u))) ^ (((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz.z * (1u * ((clamp(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w)))))) | (((false ? (82064u) : (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz.z * (1u * ((clamp(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w))))))))));
 GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y = workgroup_base;
 if(true)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z = GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y;
    }
  }
 else
  {
  }
 do
  {
   do
    {
     if(false)
      {
      }
     else
      {
       if((((((injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > ((true ? injectionSwitch : (abs(injectionSwitch)))).y)))) || (((bool(bvec2(bool(((((((bvec2(bvec4(bvec2(bvec4(bvec2(bvec4((bvec2(bvec4(bvec2((bvec3(bvec4(bvec3(bvec2((bvec2(bvec3(bvec2(bvec2((bvec3(bvec3((bvec3(bvec4((bvec3(bvec4((bvec3(bvec3(bvec3((bvec2(bvec3(bvec2(false, false), true))), true)))), false))), false)))))))), false)))), false), ((injectionSwitch.x > injectionSwitch.y)))))), true, ((injectionSwitch.x > injectionSwitch.y))))), false, false)), true, false)), false, true))))))))), true)))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 << (int(2))); _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = ((((1 << (int(6))) >> (int(6)))) - 0); _injected_loop_counter > (0 ^ int((injectionSwitch.x))); _injected_loop_counter --)
            {
             GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z;
            }
          }
        }
      }
    }
   while(((((injectionSwitch.x > injectionSwitch.y))) || ((! (! (bool((bvec3(bvec3((bvec3(bvec4(bvec3((! (! (((false) && true)))), true, ((injectionSwitch.x < injectionSwitch.y))), true)))))))))))));
  }
 while(false);
 uint virtual_gid = (min(((((GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z) >> 0u)) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z)) + ((0u >> (uint(8u))) + (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.y)) * (((((clamp(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y))) | (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) / 1u)) + (uint(uvec2(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.x, (~ (~ ((1u | 0u)))))));
 GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x = virtual_gid;
 for(int _injected_loop_counter = (0 << (int(5))); _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw.x = (((min(GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x, GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x))) - (0u << ((min(uint(3u), uint((~ (((true ? ~ (3u) : (virtual_gid)))))))))));
    }
  }
 if(true)
  {
   ((GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizevirtual_gid.w = ((GLF_merged2_0_2_50_2_2_50GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw.x) ^ 0u)) << (0u | uint((mix(float((- 23.22)), float((min(((min(injectionSwitch, injectionSwitch)).x), ((min(injectionSwitch, injectionSwitch)).x)))), bool(true))))));
  }
 else
  {
  }
 if(true)
  {
   GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.w = GLF_merged2_0_3_75_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizevirtual_gid.w;
  }
 else
  {
  }
 uint next_virtual_gid = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y + (((uint(uvec2(((((clamp(0u, 0u, 0u)) + (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.x))) - 0u) + 1, 1u)))) % ((max(uint(uvec2(((GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id) >> (uvec4(154937u, 15397u, 81660u, 126416u) & uvec4(0u, 0u, 0u, 0u))).y, (1u ^ uint((injectionSwitch.x))))), uint(uvec2(((GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id) >> (uvec4(154937u, 15397u, 81660u, 126416u) & uvec4(0u, 0u, 0u, 0u))).y, (1u ^ uint((injectionSwitch.x)))))))));
 do
  {
   if(true)
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false || (true)))
        {
         for(int _injected_loop_counter = (clamp(1, ((false ? (_injected_loop_counter) : 1)), (~ (~ (1))))); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(false);
 if(true)
  {
   if((true && (false)))
    {
    }
   else
    {
     (0u | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz.x = ((0u ^ (min(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.w, GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.w))))));
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = (0 ^ ((((~ ((int(ivec2(~ ((clamp(0, 0, 0))), 0)))))) / 1))); _injected_loop_counter != ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
    {
     buf[GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.w] = 1;
    }
  }
 while((false || (false)));
 buf[GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz.x] = 2;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
