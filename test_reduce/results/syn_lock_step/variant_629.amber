#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_9 {
 float _f0;
 uvec3 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 int _f4;
 bool _f5;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 vec2 _f1;
 bvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_7 {
 uint _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 mat2 _f4;
 mat4 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 ivec2 _f1;
 bvec4 _f2;
 vec4 _f3;
 uvec3 _f4;
 bvec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 mat2 _f1;
 bvec2 _f2;
 bool _f3;
 float _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uint _f1;
 vec4 _f2;
 int _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 uint subgroup_size;
 _GLF_struct_6 _f1;
 _GLF_struct_10 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((bool((bvec3(bvec3(bvec3(! (! (false)), (((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).x < ((injectionSwitch) * vec2(1.0, 1.0)).y)), false)))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (bool((bvec3(bvec4(bvec3((((true && ((injectionSwitch.x > injectionSwitch.y))))), true, true), true)))))))))
  {
   if((false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(_GLF_struct_0(uvec2(((0u ^ (max(1u, 1u))))), 1u, vec4(1.0), 1), vec2(1.0), _GLF_struct_1(uvec4(1u)), _GLF_struct_2(vec4(1.0))), gl_SubgroupSize, _GLF_struct_6(_GLF_struct_4((((transpose(transpose(mat4(1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, (((((clamp(0.0, 0.0, 0.0))) - 0.0)) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat2(1.0), (bvec2(bvec2(bvec2(true)))), true, 1.0), _GLF_struct_5(ivec3(1), ((((ivec2(1)) / ivec2(1, 1))) - ivec2(0, 0)), bvec4(true), vec4(1.0), uvec3(1u), bvec2((false || (true))), mat3x4((min(1.0, 1.0)))), mat2x4(1.0)), _GLF_struct_10(_GLF_struct_7(1u), _GLF_struct_8(ivec2(1), vec2((mix((((min(float((min((min((5054.1587), ((true ? (5054.1587) : (- 261.991))))), (5054.1587)))), float((min((5054.1587), (((((mix(float((float(((161185u) | 0u)))), float(false ? (((0.0 + (4067.4272 + 52.84)))) : (float(mat2x4(((true ? ((min(5054.1587, 5054.1587))) : (5.1))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))), bool(true)))) / 1.0))))))))) * 1.0), float(1.0), (((! ((((! (! ((bool((bvec3(bvec4((bvec3((bvec3(bvec3(bvec3(bvec3(! (bool(true)), true, true))))))), false))))) || ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))), bvec3(true), vec2(1.0)), uvec2(1u), mat3x2(1.0), (mat2(((false ? (mat3x4(74.66, - 342.106, - 9.2, - 92.55, 6.7, 20.61, - 3.3, - 10.80, 48.81, 6.8, 2294.2110, 78.95)) : mat3x4(((mat2((mix(float((36.36)), float(1.0), bool(true))))) + mat2(0.0, 0.0, 0.0, 0.0))))))), mat4(1.0), _GLF_struct_9(1.0, (~ (min((((~ ((((uvec3(uvec3(uvec3((((((clamp(1u, 1u, 1u))) | ((min(1u, 1u))))) - (((~ ((uint(uvec3(((~ ((max(0u, 0u)))) | 0u), 0u, 1u)))))) | uint((injectionSwitch.x)))))))) - (clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))))) / uvec3(1u, 1u, 1u)), (~ ((((uvec3(uvec3(uvec3((((((clamp(1u, 1u, 1u))) | (1u))) - (((((max(0u, 0u))) | uint((injectionSwitch.x)))) | 0u)))))) - uvec3(0u, ((0u) - 0u), 0u)))))))), ivec2(1), mat3x4((mix(float(1.0), float((84.86)), bool(false)))), 1, true)));
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((false || ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(((((! (! (true))) && ((((false)) && true)))) || ((false) && true)))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > (min(((((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y))) ? (vec2(3.0, 4553.4449)) : (max((max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y, ((((((injectionSwitch.x > injectionSwitch.y))) && ((((true ? injectionSwitch.x : (3010.9390))) < injectionSwitch.y))) ? (vec2(3.0, 4553.4449)) : injectionSwitch)).y))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(((((float(mat2(injectionSwitch.x, 1.0, (max(determinant(mat4(abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, (dot(vec4((max(0.0, (clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), length(0.0), (float(((((true ? float(1.0) : (7.4)))) - 0.0))), 1.0, 0.0, 1.0)), determinant(mat4(abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, (dot(vec4((max(0.0, (clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), length(0.0), (float(((((true ? float(1.0) : (7.4)))) - 0.0))), 1.0, 0.0, 1.0)))), sin(abs(0.0))))) > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 if((false))
  return;
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((false))
  {
   if((((((true ? injectionSwitch.x : (4390.8589))) > injectionSwitch.y))))
    barrier();
   if((((false || ((false)))) || false))
    barrier();
   return;
   if((false))
    barrier();
   if(((bool(bool((((injectionSwitch.x < injectionSwitch.y)) && (bool(bool((((injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
  }
 if(((bool(bvec4(((false) && true), true, false, false)))))
  return;
 if((false))
  return;
 if((false))
  barrier();
 if(((((! (! (false)))) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size + subgroup_local_id;
 if((false))
  return;
 if((! (! (((bool(bool((false || (false))))))))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if((((! (! ((false) && true))))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > ((true ? (max((max(injectionSwitch.y, injectionSwitch.y)), ((true ? injectionSwitch.y : (vec3(- 69.85, - 7976.3317, 107.747).y))))) : (max((925.501), (925.501)))))))))
  barrier();
 uint next_virtual_gid = ((true ? workgroup_base : (virtual_gid))) + subgroup_id * _GLF_struct_replacement_11.subgroup_size + (0u ^ ((min(((((subgroup_local_id + (int((((((max(((max((false ? (ivec2(89285, - 57955)) : ivec2(1, 1)), (false ? (ivec2(89285, - 57955)) : ivec2(1, 1))))), ((min(((false ? (ivec2((max(- 38805, - 38805)), 19623)) : (false ? (ivec2(89285, - 57955)) : ((true ? (max((clamp((~ (~ (ivec2(1, 1)))), ivec2(1, 1), ((ivec2(1, 1)) | ivec2(0, 0)))), ivec2(1, (clamp(1, ((1) + 0), 1))))) : (ivec2(36614, - 55263))))))), (false ? (ivec2(89285, - 57955)) : ((true ? (max((clamp((~ (~ (ivec2(((1) >> 0), (~ (~ ((~ (~ (1)))))))))), ivec2(1, 1), ((ivec2(1, 1)) | ivec2(0, 0)))), ivec2(1, 1))) : (ivec2(36614, - 55263)))))))))))) | ivec2(0, 0)) - ivec2(0, 0))))) + 0u)) % _GLF_struct_replacement_11.subgroup_size), ((subgroup_local_id + (int((((max(((false ? (ivec2(89285, - 57955)) : ivec2(1, 1))), (((clamp((~ (~ (false ? (ivec2(89285, - 57955)) : ((true ? ivec2(1, 1) : (ivec2(36614, - 55263))))))), false ? (ivec2(89285, - 57955)) : ((true ? ivec2(1, 1) : (ivec2(36614, - 55263)))), (min(false ? (ivec2(89285, - 57955)) : ((true ? ivec2(1, 1) : (ivec2(36614, - 55263)))), false ? (ivec2(89285, - 57955)) : ((true ? ivec2(1, 1) : (ivec2(36614, - 55263))))))))))))) - ivec2(0, 0))))) % _GLF_struct_replacement_11.subgroup_size)))));
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 ((((injectionSwitch.x < injectionSwitch.y)) ? ((((((((buf[next_virtual_gid] = 2) ^ 0u)) ^ (1u ^ 1u))) >> 0u)) ^ 0u) : ((73563u * 172984u))));
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((((((((! (! (bool(bvec4(false, false, true, false)))))) || ((false || (! (! (bool(bool((((injectionSwitch.x > ((min(((true ? (injectionSwitch) / vec2(1.0, 1.0) : (injectionSwitch))), (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   if((! (((((! ((((false)) || false))) || false)) || false))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (max((mix(vec2((injectionSwitch)[0], (723.822)), vec2((- 3.0), (mat2((injectionSwitch.y)) * (clamp(((true ? ((injectionSwitch)) : ((injectionSwitch + injectionSwitch)))), ((injectionSwitch)), ((injectionSwitch)))))[1]), bvec2(false, true))), ((injectionSwitch) / vec2(1.0, 1.0)))).y))))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if((((((((((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) || false))))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    {
     if(((((clamp(injectionSwitch, ((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((false))
  barrier();
 if(((! (! ((! (! ((false || ((false || (false))))))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false || ((false))))
    {
     if((false))
      barrier();
     return;
    }
   barrier();
   if((false))
    barrier();
  }
 if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
  {
   if(((! (! ((false || (false)))))))
    {
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
