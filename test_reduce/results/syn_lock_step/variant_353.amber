#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > (((vec2(injectionSwitch[0], injectionSwitch[(clamp(1, 1, (min(1, 1))))]))) * vec2(1.0, 1.0)).y))))
  {
   if((bool(bvec3((false), false, true))))
    return;
   return;
   if((false))
    return;
  }
 if(((! (! (false)))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((! (! ((false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = ((gl_WorkGroupID) / (((((uvec3(1u, 1u, 1u) * (uvec3(1u, (max(((1u) | (1u)), 1u)), 1u) << (uvec3(0u)))) ^ uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) >> (uvec3(0u)))).x;
 if(((! ((((! (! ((! (((! (! (false))) && true))))))) && true)))))
  return;
 uint workgroup_base = (((false ? (subgroup_size) : (clamp((max(((true ? (max((((workgroup_size * workgroup_id)) << 0u), (((workgroup_size * workgroup_id)) >> 0u))) | (((((workgroup_size * workgroup_id)) - 0u) | (workgroup_size * workgroup_id))) : (num_workgroup))), (((max((((workgroup_size * workgroup_id)) << 0u), (((workgroup_size * workgroup_id)) >> 0u))) | (((((workgroup_size * workgroup_id)) - 0u) | (workgroup_size * workgroup_id)))) >> 0u))), (max(((true ? (max((((workgroup_size * workgroup_id)) << 0u), (((workgroup_size * workgroup_id)) >> 0u))) | (((((workgroup_size * workgroup_id)) - 0u) | (workgroup_size * workgroup_id))) : (num_workgroup))), (((max((((workgroup_size * workgroup_id)) << 0u), (((workgroup_size * workgroup_id)) >> 0u))) | (((((workgroup_size * workgroup_id)) - 0u) | (workgroup_size * workgroup_id)))) >> 0u))), (max(((true ? (max((((workgroup_size * workgroup_id)) << 0u), (((workgroup_size * workgroup_id)) >> 0u))) | (((((workgroup_size * workgroup_id)) - 0u) | (workgroup_size * workgroup_id))) : (num_workgroup))), (((max((((workgroup_size * workgroup_id)) << 0u), (((workgroup_size * workgroup_id)) >> 0u))) | (((((workgroup_size * workgroup_id)) - 0u) | (workgroup_size * workgroup_id)))) >> 0u))))))));
 uint virtual_gid = ((max(((0u ^ (0u)) ^ uint((injectionSwitch.y))), (0u ^ uint((injectionSwitch.y))))) * ((min((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, (clamp((max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id))));
 uint next_virtual_gid = (min(((workgroup_base + ((max((0u ^ (((true ? max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (uint((uvec3(((uvec4(uvec3(((((0u) | (((((max((0u), (0u)))) - 0u)) | (((false ? (virtual_gid) : (((0u) >> 0u)))))))) - 0u), (max(0u, (((((injectionSwitch.x < injectionSwitch.y)) ? 1u * (0u) : (subgroup_id)))))), ((1u << (uint(5u))) >> (uint(5u)))), ((0u) / 1u))) - uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))) : (subgroup_id))))), ((true ? max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (uint((uvec3(((uvec4(uvec3(((((0u) | (((((max((0u), (0u)))) - 0u)) | (((false ? (virtual_gid) : (((0u) >> 0u)))))))) - 0u), (max(0u, (((((injectionSwitch.x < injectionSwitch.y)) ? 1u * (0u) : (subgroup_id)))))), ((1u << (uint(5u))) >> (uint(5u)))), ((0u) / 1u))) - uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))) : (subgroup_id)))))) + ((subgroup_local_id + ((int(ivec4((true ? (max(1, 1)) : (71565)), 0, 0, (clamp(((true ? (0 | 1) : (- 38170))), (max((((0 | 1)) ^ 0), (0 | 1))), (0 | 1)))))))) % subgroup_size)) | (((max(uint((injectionSwitch.x)), uint((injectionSwitch.x)))) ^ ((0u | (((((((true ? ((workgroup_base) << 0u) + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (min((uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((max((1u << (uint(5u))), (1u << (uint(5u))))) >> (uint(5u)))), 0u))))), (uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((((((1u << (uint(5u))) >> (uint(5u)))) << uint((injectionSwitch.x)))) ^ 0u)), 0u)))))))))) + ((subgroup_local_id + 1) % subgroup_size) : (122195u))))) * 1u)) | ((((true ? ((workgroup_base) << 0u) + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (min(((~ (~ (uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((1u << (uint(5u))) >> (uint(5u)))), 0u)))))))), (uint((uvec3(uvec4(uvec3(((~ (~ ((0u) | (0u))))), 0u, ((1u << (uint(5u))) >> (uint(((5u) | ((max(5u, 5u)))))))), 0u)))))))))) + ((0u ^ ((((subgroup_local_id) | 0u) + 1))) % subgroup_size) : (122195u))))))))))), (max(((workgroup_base + ((max((0u ^ (((true ? max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (uint((uvec3(((uvec4(uvec3(((((0u) | (((((max((0u), (0u)))) - 0u)) | (((false ? (virtual_gid) : (((0u) >> 0u)))))))) - 0u), (max(0u, (((((injectionSwitch.x < injectionSwitch.y)) ? 1u * (0u) : (subgroup_id)))))), ((1u << (uint(5u))) >> (uint(5u)))), ((0u) / 1u))) - uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))) : (subgroup_id))))), ((true ? max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (uint((uvec3(((uvec4(uvec3(((((0u) | (((((max((0u), (0u)))) - 0u)) | (((false ? (virtual_gid) : (((0u) >> 0u)))))))) - 0u), (max(0u, (((((injectionSwitch.x < injectionSwitch.y)) ? 1u * (0u) : (subgroup_id)))))), ((1u << (uint(5u))) >> (uint(5u)))), ((0u) / 1u))) - uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))) : (subgroup_id)))))) + ((subgroup_local_id + ((int(ivec4((true ? (max(1, 1)) : (71565)), 0, 0, (clamp(((true ? (0 | 1) : (- 38170))), (max((((0 | 1)) ^ 0), (0 | 1))), (0 | 1)))))))) % subgroup_size)) | (((max(uint((injectionSwitch.x)), uint((injectionSwitch.x)))) ^ ((0u | (((((((true ? ((workgroup_base) << 0u) + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (min((uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((max((1u << (uint(5u))), (1u << (uint(5u))))) >> (uint(5u)))), 0u))))), (uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((((((1u << (uint(5u))) >> (uint(5u)))) << uint((injectionSwitch.x)))) ^ 0u)), 0u)))))))))) + ((subgroup_local_id + 1) % subgroup_size) : (122195u))))) * 1u)) | ((((true ? ((workgroup_base) << 0u) + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (min(((~ (~ (uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((1u << (uint(5u))) >> (uint(5u)))), 0u)))))))), (uint((uvec3(uvec4(uvec3(((~ (~ ((0u) | (0u))))), 0u, ((1u << (uint(5u))) >> (uint(((5u) | ((max(5u, 5u)))))))), 0u)))))))))) + ((0u ^ ((((subgroup_local_id) | 0u) + 1))) % subgroup_size) : (122195u))))))))))), ((workgroup_base + ((max((0u ^ (((true ? max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (uint((uvec3(((uvec4(uvec3(((((0u) | (((((max((0u), (0u)))) - 0u)) | (((false ? (virtual_gid) : (((0u) >> 0u)))))))) - 0u), (max(0u, (((((injectionSwitch.x < injectionSwitch.y)) ? 1u * (0u) : (subgroup_id)))))), ((1u << (uint(5u))) >> (uint(5u)))), ((0u) / 1u))) - uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))) : (subgroup_id))))), ((true ? max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (uint((uvec3(((uvec4(uvec3(((((0u) | (((((max((0u), (0u)))) - 0u)) | (((false ? (virtual_gid) : (((0u) >> 0u)))))))) - 0u), (max(0u, (((((injectionSwitch.x < injectionSwitch.y)) ? 1u * (0u) : (subgroup_id)))))), ((1u << (uint(5u))) >> (uint(5u)))), ((0u) / 1u))) - uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))) : (subgroup_id)))))) + ((subgroup_local_id + ((int(ivec4((true ? (max(1, 1)) : (71565)), 0, 0, (clamp(((true ? (0 | 1) : (- 38170))), (max((((0 | 1)) ^ 0), (0 | 1))), (0 | 1)))))))) % subgroup_size)) | (((max(uint((injectionSwitch.x)), uint((injectionSwitch.x)))) ^ ((0u | (((((((true ? ((workgroup_base) << 0u) + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (min((uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((max((1u << (uint(5u))), (1u << (uint(5u))))) >> (uint(5u)))), 0u))))), (uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((((((1u << (uint(5u))) >> (uint(5u)))) << uint((injectionSwitch.x)))) ^ 0u)), 0u)))))))))) + ((subgroup_local_id + 1) % subgroup_size) : (122195u))))) * 1u)) | ((((true ? ((workgroup_base) << 0u) + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) - (min(((~ (~ (uint((uvec3(uvec4(uvec3(((0u) | (0u)), 0u, ((1u << (uint(5u))) >> (uint(5u)))), 0u)))))))), (uint((uvec3(uvec4(uvec3(((~ (~ ((0u) | (0u))))), 0u, ((1u << (uint(5u))) >> (uint(((5u) | ((max(5u, 5u)))))))), 0u)))))))))) + ((0u ^ ((((subgroup_local_id) | 0u) + 1))) % subgroup_size) : (122195u)))))))))))))));
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(((bool(((bool(false)) || ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > (mix(float((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float((3729.7461)), bool(false)))))))
    return;
   return;
   if(((false || (((injectionSwitch.x > (mix(float((982.171)), float(injectionSwitch.y), bool(((injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
  }
 if((bool(bvec2((false), false))))
  return;
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((false))
  return;
 if((true && ((false))))
  {
   if((false))
    return;
   if((((bool(bvec3(bool(bvec2(false, true)), true, false))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! ((! (! (false || ((false))))))))))
    {
     if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   return;
  }
 if((false))
  return;
 buf[next_virtual_gid] = 2;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
