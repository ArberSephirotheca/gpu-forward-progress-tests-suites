#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y = (max(subgroup_size, subgroup_size));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((((~ (~ ((0u ^ (max((~ (((~ ((GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id))) | (~ ((GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id)))))), (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id))))))) | (((~ (~ ((((((0u ^ (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id)) ^ 0u)) | ((min(0u ^ (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id), 0u ^ (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id))))))))) | (~ (~ ((0u ^ (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.z * workgroup_id))))))))) | 0u));
 uint virtual_gid = ((~ ((uint(uvec3(~ (clamp(workgroup_base + (clamp((((((uint(uvec3(subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y, 1u, 1u)))) / 1u)) ^ (1u ^ ((1u << (uint(1u))) >> (uint(1u))))), ((((0u | 0u)) | ((0u | 0u))) ^ (((subgroup_id * (~ (((true ? ~ ((uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size))) : (uvec3(122909u, 108696u, 52039u)))))).y) - 0u))), ((((max(uint(uvec3(((1u) << 0u), 1u, 1u)), uint(uvec3(((1u) << (min(((false ? (workgroup_size) : 0u)), 0u))), 1u, 1u))))) * ((subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y) ^ 0u))))) + subgroup_local_id, ((false ? (subgroup_size) : workgroup_base + ((0u + (clamp((((~ (~ ((~ (~ (((subgroup_id) << 0u) * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y))) - 0u))))), ((subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y) - 0u), ((subgroup_id * (((min(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size, GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size)).y) * 1u)) ^ 0u))))) + subgroup_local_id)), workgroup_base + (clamp(subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y, ((subgroup_id * (uint(uint(((false ? (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size) : GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size)).y)))) - 0u), ((((subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y) ^ 0u) | ((0u + ((subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y) ^ 0u))))))) + subgroup_local_id)), 1u, 0u))))));
 uint next_virtual_gid = ((true ? workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y + ((false ? (num_workgroup) : ((clamp((0u ^ ((((((subgroup_local_id + 1)) | (((max(subgroup_local_id, subgroup_local_id)) + 1))) % GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y)) * (1u | 1u))), ((false ? (atomicAnd(virtual_gid, workgroup_base)) : (((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y)), (((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_size.y))))) : (subgroup_id)));
 if(false)
  {
  }
 else
  {
   buf[virtual_gid] = 1;
  }
 atomicStore(buf[((next_virtual_gid) << 0u)], uint(2), 4, 64, 0);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
