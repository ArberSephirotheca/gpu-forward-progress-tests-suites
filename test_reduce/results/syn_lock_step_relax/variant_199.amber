#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (min((~ (~ (gl_WorkGroupID.x))), (max(gl_WorkGroupID.x, gl_WorkGroupID.x))));
 uint workgroup_base = (((max(((((false ? (workgroup_id) : ((false ? (clamp((subgroup_id), (subgroup_id), (subgroup_id))) : (0u ^ (((workgroup_size * workgroup_id) << 0u)))))))) | 0u), (clamp(workgroup_size * (min(((workgroup_id) << 0u), workgroup_id)), (max(workgroup_size, (((uint(((uvec3(workgroup_size, 1u, 0u)) | uvec3(0u, 0u, 0u))))) ^ 0u))) * workgroup_id, (((((((0u + (workgroup_size))) << 0u)) << 0u)) + (0u & 176216u)) * ((((min((((((((clamp((((workgroup_id)) ^ 0u), (workgroup_id), (workgroup_id))) | 0u)) | (workgroup_id)) | 0u)) - 0u), (((((clamp((((workgroup_id)) ^ 0u), (workgroup_id), (workgroup_id))) | 0u)) | (workgroup_id)) - 0u)))) * 1u))))))) / uint((injectionSwitch.y)));
 uint virtual_gid = (((false ? (subgroup_size) : (min(uint((((uvec3(0u, 0u, 0u) ^ ((false ? (uvec3(135757u, (0u + ((((~ (~ (((false ? (subgroup_local_id) : 182883u))))))) | (((clamp((~ ((0u | ((0u ^ (~ (((false ? (subgroup_local_id) : ((((182883u) | (182883u))) - 0u)))))))))), (~ (~ (((false ? (subgroup_local_id) : 182883u))))), (~ (~ ((((! (! (false))) ? (subgroup_local_id) : 182883u))))))))))), 28444u)) : (uvec3((~ ((~ (uint(uvec3((((~ (~ (max((((clamp((((false ? (35976u) : ((0u) >> 0u))) | (~ (((true ? ((~ (workgroup_base)) + 0u) : (num_workgroup)))))), ~ (((~ (workgroup_base)) + 0u)), ~ (((((~ (workgroup_base)) + ((~ (~ ((clamp(0u, 0u, 0u))))) + (0u))) / 1u))))))), (((clamp((0u | (~ (((true ? ((~ (workgroup_base)) + 0u) : (num_workgroup)))))), ~ (((~ (workgroup_base)) + 0u)), ~ (((((~ (workgroup_base)) + ((~ (~ ((clamp(0u, 0u, 0u))))) + (0u))) / 1u)))))))))))) << 0u), 0u, 1u)))))) + ((subgroup_id) + 0u) * subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u))))))), uint((((false ? (uvec3(135757u, (0u + ((~ (~ (((false ? (subgroup_local_id) : 182883u))))))), 28444u)) : (uvec3((~ ((~ ((clamp(~ (((~ (workgroup_base)) + 0u)), ~ ((((min((clamp(~ (workgroup_base), (~ (~ (~ (workgroup_base)))), ~ (workgroup_base))), (max(~ (workgroup_base), ~ (((((workgroup_base) / 1u)) << 0u))))))) + 0u)), ~ (((~ (workgroup_base)) + ((0u | ((~ (((~ (0u))) - 0u)))) + (0u)))))))))) + subgroup_id * subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u)))))))))) + ((subgroup_local_id) >> (0u | 0u));
 uint next_virtual_gid = workgroup_base + (clamp(((subgroup_id) - 0u) * subgroup_size, ((((false ? (workgroup_base) : ((false ? (workgroup_id) : subgroup_id)))) * subgroup_size) - 0u), (max(subgroup_id * subgroup_size, subgroup_id * ((subgroup_size) >> 0u))))) + ((((subgroup_local_id + 1) / 1u)) % subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[(max(next_virtual_gid, next_virtual_gid))], ((~ ((clamp((min(~ (((clamp(((uint(2)) + 0u), (((((uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, ((false ? (workgroup_size) : 1u))))) * 1u)) / 1u)), uint(2))) << 0u)), ~ (((true ? clamp(((uint(2)) + 0u), (((uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, 1u))) << 0u)), uint(2)) : (subgroup_id)))))), (uint(uint(~ (clamp(((uint((max(2, 2)))) + 0u), (uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, 1u))), uint(2)))))), ~ (clamp(((uint(2)) + 0u), (clamp(((((min(uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, 1u)), uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, 1u)))))) << 0u), (uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, 1u))), (max((((uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, (((1u) ^ 0u) * (((((0u | ((0u ^ (~ (~ (1u))))))) ^ 0u)))))))) - 0u), (uint(uvec3(uint((clamp(2, (int(int(2))), 2))), 0u, 1u))))))), uint(2)))))))), 4, 64, ((0) << 0));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
