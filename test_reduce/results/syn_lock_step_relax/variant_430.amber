#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((((injectionSwitch.x < injectionSwitch.y)) ? ((((uvec3(1u, 1u, 1u) * (uvec3(((uvec4(gl_WorkGroupSize, 0u)) | (uvec4(((clamp((((uvec3(uvec3((~ (~ (~ ((min(~ ((((min(gl_WorkGroupSize, gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)), ~ ((min(gl_WorkGroupSize, ((gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))))))))))) - uvec3(0u, 0u, (((uint(uvec2(0u, 1u))) << 0u))))), (((uvec3(uvec3((~ (~ (~ ((min(~ ((((((max((((min(gl_WorkGroupSize, gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), (min(gl_WorkGroupSize, gl_WorkGroupSize))))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)), (((uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)) << (((uvec3(0u)) << uvec3(0u, 0u, 0u)))) >> (uvec3(0u))) * (~ ((min(gl_WorkGroupSize, ((gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))))))))))))) - uvec3(0u, 0u, (((((uint(uvec2(0u, 1u))) << 0u) ^ 0u)))))), (uvec3(((uvec4((((uvec3(uvec3((~ (~ (~ ((min(~ ((((min(gl_WorkGroupSize, gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)), ~ ((min(gl_WorkGroupSize, ((gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))))))))))) - uvec3(0u, 0u, (((uint(uvec2(0u, 1u))) << 0u))))), 0u)) | (uvec4((((uvec3(uvec3((~ (~ (~ ((min(~ ((((min(gl_WorkGroupSize, gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)), ~ ((min(gl_WorkGroupSize, ((gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))))))))))) - uvec3(0u, 0u, (((uint(uvec2(0u, 1u))) << 0u))))), 0u)))))))), 0u)))))))) << uvec3(0u, 0u, 0u)) : (bitfieldExtract(uvec3(121132u, 195789u, 173322u), 70442, - 9412)))).x;
 uint workgroup_id = ((((gl_WorkGroupID.x) | ((min(gl_WorkGroupID.x, gl_WorkGroupID.x))))) - (1u * (((((0u) | ((uint(uvec4(0u, 1u, 0u, 1u)))))) * 1u))));
 uint workgroup_base = (min(((workgroup_size) >> (min((clamp(0u, 0u, 0u)), 0u))) * ((true ? workgroup_id : ((clamp(workgroup_id, workgroup_id, ((workgroup_id) << 0u)))))), workgroup_size * ((true ? workgroup_id : (workgroup_id)))));
 uint virtual_gid = workgroup_base + subgroup_id * ((((subgroup_size) >> 0u)) | (subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * (clamp(((((subgroup_size) ^ 0u)) >> 0u), subgroup_size, ((clamp(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))))) + ((subgroup_local_id + (clamp(1, 1, 1))) % (1u * (subgroup_size)));
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint((~ (~ (2)))), 4, 64, 0);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
