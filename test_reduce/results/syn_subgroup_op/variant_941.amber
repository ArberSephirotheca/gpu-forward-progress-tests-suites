#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(false)
  {
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(true)
      {
       if((false))
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                continue;
               return;
              }
            }
          }
         return;
        }
      }
     else
      {
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if((false))
    return;
  }
 for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(false)
  {
  }
 else
  {
   if(false)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        return;
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != (72468 & 0); _injected_loop_counter --)
      {
       do
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = (1 & (1 & 1)); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
          }
         while(false);
        }
       while(((((injectionSwitch.x > injectionSwitch.y))) || false));
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != ((0 >> (((int(5)) >> 0))) >> (((true ? int(0) : (- 66457))))); _injected_loop_counter --)
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if((false))
    return;
  }
 while(false);
 if((false))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((false))
      {
       do
        {
         if((false))
          {
           do
            {
             if((false))
              return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           return;
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(false);
        }
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     do
      {
       if((false))
        return;
      }
     while(((false) && true));
     if((false))
      {
       if((false))
        return;
       do
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           return;
          }
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     return;
    }
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       return;
       if((false))
        return;
      }
    }
   if((false))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((! (! (true))))
  {
   if((((false) && true)))
    return;
   if(false)
    {
     if((false))
      {
       if((((false) || false)))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
          {
           return;
          }
         if((false))
          return;
        }
       if(false)
        {
        }
       else
        {
         return;
        }
      }
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           do
            {
             if((false))
              return;
             if((false))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 return;
                }
               else
                {
                }
               if((false))
                return;
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(false);
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         else
          {
          }
         if(true)
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
            {
             return;
            }
          }
         else
          {
           if((false))
            return;
          }
        }
      }
     else
      {
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            {
             do
              {
               do
                {
                 for(int _injected_loop_counter = ((1 << ((~ (~ (int(5)))))) >> (int(5))); _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   return;
                   if((false))
                    break;
                   if((false))
                    break;
                   if((false))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 0); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   if((false))
                    continue;
                   if((false))
                    break;
                  }
                }
               while(false);
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   do
                    {
                     if((false))
                      continue;
                     return;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
             while(false);
            }
          }
         else
          {
           if((false))
            {
             if((false))
              return;
             break;
             if((false))
              return;
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if((false))
          {
           if((false))
            break;
           break;
          }
        }
      }
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((((false) || false)))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
    }
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(false)
  {
  }
 else
  {
   if((false))
    return;
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(1))); _injected_loop_counter --)
  {
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while((false || (false)));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   for(int _injected_loop_counter = (1 | 0); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if(true)
      {
       return;
      }
     else
      {
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(false)
  {
  }
 else
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(((bool(bvec4(false, false, true, false)))))
      return;
     do
      {
       if(true)
        {
         if((false))
          {
           if((false))
            continue;
           continue;
          }
         if((false))
          {
           if((false))
            continue;
           if(true)
            {
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if((false))
                {
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if((false))
                {
                 if((false))
                  return;
                 continue;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 if(true)
                  {
                   if((false))
                    return;
                  }
                 else
                  {
                  }
                 if((false))
                  continue;
                 continue;
                 if((false))
                  break;
                }
               if((false))
                {
                 if((false))
                  continue;
                 break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(true)
                  {
                   if((false))
                    return;
                   do
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   while(false);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    return;
                   if((false))
                    {
                     if((false))
                      break;
                     if((false))
                      break;
                     break;
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  break;
                 if((false))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   break;
                  }
                 if((false))
                  {
                   do
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                     if((false))
                      continue;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   continue;
                  }
                }
               else
                {
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           else
            {
            }
           if((false))
            return;
          }
         if((false))
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
        }
       else
        {
        }
       if((false))
        break;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((false))
      return;
    }
   else
    {
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      {
       do
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
       while(false);
       if((false))
        {
         do
          {
           return;
          }
         while(false);
        }
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       do
        {
         if((false))
          return;
         return;
        }
       while((true && (false)));
      }
    }
  }
 if((false))
  {
   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      {
       if(true)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if(((! (! (false)))))
            {
             if((false))
              continue;
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               return;
              }
            }
          }
        }
       else
        {
        }
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(true)
    {
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      continue;
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((false))
    {
     for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
      {
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         return;
         if((false))
          return;
        }
      }
     do
      {
       return;
      }
     while(false);
    }
  }
 else
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> (int(0))); _injected_loop_counter --)
    {
     if(true)
      {
       if((false))
        {
         if((((bool(bool(bool((bvec2(bvec3(bvec2(false, true), true))))))))))
          break;
         for(int _injected_loop_counter = (0 | (0 >> (int(7)))); _injected_loop_counter != ((1 << ((((int(ivec2(int(3), 1))) / 1)))) >> (int(3))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if(false)
              {
              }
             else
              {
               return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if((false))
              break;
             if((false))
              break;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(true)
            {
             do
              {
               if((false))
                return;
              }
             while(false);
            }
           else
            {
            }
           continue;
          }
        }
       if((false))
        continue;
      }
     else
      {
       if((false))
        continue;
      }
     if((false))
      break;
     if((((! (! (bool(bvec3((true && (false)), true, true))))))))
      {
       if((((false) || false)))
        continue;
       continue;
      }
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((((1 << (int(4))) >> (int(4))) << (int(1))) >> ((clamp(int(1), int(1), ((int(1)) | (int(1))))))); _injected_loop_counter ++)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          break;
         return;
        }
      }
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > (int((injectionSwitch.x)) << (int(2))); _injected_loop_counter --)
      {
       return;
      }
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if(false)
    {
    }
   else
    {
     if(true)
      {
       return;
      }
     else
      {
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          continue;
        }
       else
        {
         return;
        }
      }
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 << (int(0))); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(false)
          {
          }
         else
          {
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
  }
 while(false);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = ((0 << ((0 + (int(2))))) >> (int(7))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      continue;
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
      }
    }
  }
 for(int _injected_loop_counter = ((((true ? 0 : (- 20789)))) * 1); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      return;
     if(true)
      {
       if((false))
        continue;
       if((false))
        {
         if((bool(bvec4((! (! (true))), ((injectionSwitch.x < injectionSwitch.y)), true, ((injectionSwitch.x < injectionSwitch.y))))))
          {
           return;
          }
         else
          {
          }
        }
       if(false)
        {
         if((false))
          return;
        }
       else
        {
         if(true)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = (0 & 63436); _injected_loop_counter < (~ (~ (((1) >> 0)))); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if(((true && ((false || (false))))))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   continue;
                  }
                 if(false)
                  {
                   if((false))
                    continue;
                  }
                 else
                  {
                   if((false))
                    {
                     if(true)
                      {
                       if(true)
                        {
                         for(int _injected_loop_counter = (0 >> (int(7))); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           if((false))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                }
                               return;
                              }
                            }
                          }
                        }
                       else
                        {
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          break;
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           do
                            {
                             do
                              {
                               if((false))
                                return;
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                              {
                               if(true)
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                 if((false))
                                  return;
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if((false))
                                    break;
                                   if((false))
                                    {
                                     if((false))
                                      return;
                                     continue;
                                    }
                                   continue;
                                   if(((bool(bool(false)))))
                                    continue;
                                  }
                                 if(true)
                                  {
                                   if((false))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                     return;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                    }
                                   if(((bool(bvec3(false, false, false)))))
                                    break;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             if((false))
                              break;
                            }
                           while(false);
                          }
                         else
                          {
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((false))
                          {
                           if((false))
                            {
                             if((false))
                              continue;
                             break;
                            }
                           break;
                          }
                        }
                      }
                     else
                      {
                       if((false))
                        continue;
                      }
                     do
                      {
                       do
                        {
                         do
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             do
                              {
                               if((false))
                                return;
                              }
                             while(false);
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             do
                              {
                               do
                                {
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(((! (! (false)))))
                                      continue;
                                     continue;
                                    }
                                   if(((true) || false))
                                    {
                                     if((false))
                                      break;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                    }
                                   else
                                    {
                                     if((false))
                                      return;
                                    }
                                   if(false)
                                    {
                                     if((false))
                                      break;
                                     if((false))
                                      {
                                       for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                        {
                                         if((false))
                                          {
                                           for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                            {
                                             return;
                                            }
                                          }
                                        }
                                       break;
                                      }
                                    }
                                   else
                                    {
                                     if((false))
                                      {
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         if((false))
                                          continue;
                                         if(((bool(bool(false)))))
                                          {
                                           if(true)
                                            {
                                             do
                                              {
                                               return;
                                              }
                                             while(false);
                                             if(((((false || (((injectionSwitch.x > injectionSwitch.y))))) && true)))
                                              break;
                                            }
                                           else
                                            {
                                            }
                                          }
                                         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                          {
                                           if((false))
                                            break;
                                           if(true)
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              break;
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              break;
                                             if((false))
                                              {
                                               if((false))
                                                return;
                                               break;
                                              }
                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                              {
                                              }
                                             else
                                              {
                                               return;
                                              }
                                            }
                                           else
                                            {
                                             if((false))
                                              break;
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              continue;
                                             if((false))
                                              {
                                               if((((false) || false)))
                                                continue;
                                               break;
                                              }
                                            }
                                           if((false))
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              return;
                                             break;
                                            }
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            break;
                                          }
                                        }
                                       else
                                        {
                                         if((false))
                                          {
                                           if((false))
                                            break;
                                           break;
                                          }
                                        }
                                       if((false))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         if(true)
                                          {
                                           if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
                                            continue;
                                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                                            {
                                             for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != ((1) >> 0); _injected_loop_counter ++)
                                              {
                                               return;
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                         if((false))
                                          {
                                           if((false))
                                            return;
                                           continue;
                                          }
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          continue;
                                         if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
                                          return;
                                        }
                                      }
                                    }
                                   if((false))
                                    break;
                                   return;
                                   if(true)
                                    {
                                     do
                                      {
                                       if((false))
                                        return;
                                      }
                                     while(((false) || false));
                                     if((false))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         do
                                          {
                                           return;
                                          }
                                         while(false);
                                        }
                                       for(int _injected_loop_counter = 1; _injected_loop_counter > (0 ^ 0); _injected_loop_counter --)
                                        {
                                         if((false))
                                          return;
                                        }
                                       if((false))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         break;
                                         if((false))
                                          continue;
                                        }
                                       break;
                                      }
                                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                      {
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          return;
                                        }
                                       if((false))
                                        {
                                         do
                                          {
                                           if(((injectionSwitch.x < injectionSwitch.y)))
                                            {
                                             do
                                              {
                                               return;
                                              }
                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                             if((false))
                                              continue;
                                            }
                                           else
                                            {
                                            }
                                           if(((bool((bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), true)))))))
                                            return;
                                          }
                                         while((bool(bvec2(false, true))));
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          return;
                                        }
                                       if((false))
                                        return;
                                      }
                                     if((false))
                                      break;
                                    }
                                   else
                                    {
                                    }
                                   if((false))
                                    continue;
                                  }
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             if(false)
                              {
                              }
                             else
                              {
                               if((false))
                                return;
                              }
                            }
                           if((false))
                            continue;
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             continue;
                            }
                          }
                         while(false);
                         if((false))
                          {
                           if((false))
                            break;
                           continue;
                          }
                        }
                       while(false);
                      }
                     while(false);
                     if((false))
                      break;
                     if(false)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           return;
                          }
                         while(false);
                        }
                      }
                     else
                      {
                       if((false))
                        break;
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            break;
                           break;
                          }
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            return;
                           if((false))
                            continue;
                           if((false))
                            {
                             do
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  break;
                                 return;
                                }
                              }
                             while(false);
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         if(false)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         else
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             return;
                            }
                           else
                            {
                            }
                           if(((true && (((false) && true)))))
                            return;
                           if((false))
                            continue;
                           if((false))
                            {
                             if((false))
                              break;
                             break;
                             if((false))
                              break;
                            }
                          }
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if((false))
                      {
                       if((false))
                        continue;
                       continue;
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    {
                     if(true)
                      {
                       do
                        {
                         return;
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     else
                      {
                      }
                    }
                  }
                 if((false))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         else
          {
          }
        }
      }
     else
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(((true && (false))))
      break;
     do
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       else
        {
        }
       if((false))
        continue;
      }
     while(false);
    }
   else
    {
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       if((false))
        {
         if((false))
          return;
         if((false))
          break;
         continue;
        }
       continue;
       if((false))
        continue;
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            {
             do
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   do
                    {
                     if((false))
                      return;
                    }
                   while(false);
                   return;
                   if((false))
                    break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         if((false))
          continue;
         if(((true && (false))))
          continue;
         if((false))
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << ((int(ivec4(int(8), 0, 1, 1))))); _injected_loop_counter --)
              {
               return;
              }
             if((false))
              break;
            }
           break;
          }
         break;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           break;
          }
         if((false))
          continue;
         continue;
        }
       if((false))
        {
         if((false))
          continue;
         continue;
        }
       if(((((bool(bvec3(false, true, false))) && true))))
        {
         if((false))
          {
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               return;
              }
             else
              {
              }
            }
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
         if((false))
          return;
        }
       for(int _injected_loop_counter = ((((1 << (int(2))) >> (int(2))) << (int(2))) >> ((0 ^ (int(2))))); _injected_loop_counter > (int((injectionSwitch.x)) << (int(8))); _injected_loop_counter --)
        {
         if((false))
          return;
         buf[virtual_gid] = 1;
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((false))
                return;
               if((false))
                break;
              }
             do
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                 if(true)
                  {
                   if((false))
                    continue;
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               if((false))
                return;
              }
             while(false);
            }
          }
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        return;
       if((false))
        {
         if((false))
          break;
         continue;
        }
       if((false))
        return;
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(((false || (false))))
              return;
             if((false))
              return;
            }
          }
         if(true)
          {
           if((false))
            {
             do
              {
               return;
              }
             while(false);
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               return;
              }
            }
           return;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         if((false))
          continue;
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          return;
         if((false))
          break;
        }
       else
        {
         if(((bool(bvec2((! (! (false))), false)))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          return;
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           break;
          }
        }
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        break;
       if(true)
        {
         if((false))
          return;
        }
       else
        {
         if(((! (! (false)))))
          continue;
        }
       if((false))
        return;
      }
     else
      {
      }
     if((false))
      continue;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        break;
       if(false)
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(false);
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(true)
            {
             return;
            }
           else
            {
            }
          }
         while(false);
        }
       if(true)
        {
         if(true)
          {
           do
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != ((((1 & 1) & 1) << (int(7))) >> (int(7))); _injected_loop_counter ++)
              {
               if((false))
                return;
              }
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             while(false);
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         else
          {
           if((false))
            break;
          }
        }
       else
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
       if((false))
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             return;
            }
          }
         break;
         if((false))
          break;
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(false)
            {
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              continue;
             if((false))
              continue;
            }
           else
            {
             if((((false) && true)))
              return;
             if((false))
              break;
            }
          }
         while(false);
        }
       else
        {
        }
      }
     else
      {
       if(((bool(bvec2(false, true)))))
        return;
       if((false))
        continue;
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        continue;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      break;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
   if((false))
    return;
   for(int _injected_loop_counter = ((- 78250 % - 8761) & 0); _injected_loop_counter < ((int((injectionSwitch.y)) << (int(2))) >> (int(2))); _injected_loop_counter ++)
    {
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if((false))
      break;
     if((false))
      {
       if((false))
        break;
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(true)
          {
           return;
           if(((bool(bvec3(false, false, false)))))
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((true && (false)))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             return;
            }
          }
         return;
        }
      }
     if((false))
      {
       do
        {
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             return;
             if((false))
              continue;
            }
          }
         if((false))
          continue;
        }
       while(false);
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        {
         do
          {
           if((false))
            return;
           if((false))
            break;
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              return;
             do
              {
               do
                {
                 if(false)
                  {
                  }
                 else
                  {
                   do
                    {
                     return;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
               while(((false) && true));
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
     if((false))
      return;
     if((false))
      {
       do
        {
         if((false))
          return;
        }
       while(false);
       return;
      }
     for(int _injected_loop_counter = (0 << (((int(3)) ^ (0 >> (int(4)))))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
      }
     return;
     do
      {
       if((false))
        {
         do
          {
           do
            {
             if((false))
              break;
             return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         while(false);
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec3(false, false, false)))))
        {
         if((false))
          return;
         return;
        }
       do
        {
         do
          {
           return;
          }
         while(false);
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if(false)
        {
        }
       else
        {
         if((false))
          {
           do
            {
             return;
            }
           while(false);
          }
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if((false))
        {
         do
          {
           return;
          }
         while(false);
        }
      }
     while(false);
     if(((false) || false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if((false))
  {
   if(true)
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(true)
        {
         if((false))
          return;
        }
       else
        {
        }
      }
     while((! (! (false))));
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if((false))
    return;
   for(int _injected_loop_counter = (0 >> ((min(int(6), int(6))))); _injected_loop_counter < (1 | 0); _injected_loop_counter ++)
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = ((((1 << (int(5))) >> ((min(int(5), int(5))))) << ((clamp(int(3), int(3), int(3))))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
     while(false);
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if(true)
      {
       if((true && ((false || (((injectionSwitch.x < injectionSwitch.y)))))))
        {
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       else
        {
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if((false))
      break;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 if(false)
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if(false)
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             return;
            }
           while(false);
          }
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if((false))
        break;
       if((false))
        continue;
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((false) || false)))
          {
           do
            {
             return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           do
            {
             for(int _injected_loop_counter = (0 >> (int(1))); _injected_loop_counter != ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
              {
               do
                {
                 if((false))
                  {
                   do
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       do
                        {
                         return;
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                   while(false);
                  }
                }
               while(false);
              }
             if((false))
              continue;
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 return;
                }
              }
             while(false);
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                continue;
               do
                {
                 if(false)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      return;
                     if((false))
                      {
                       if((false))
                        continue;
                       return;
                      }
                    }
                   if((false))
                    continue;
                  }
                 else
                  {
                   if((false))
                    return;
                   if((false))
                    return;
                   for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
       if((false))
        continue;
      }
     buf[next_virtual_gid] = 2;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       do
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if(false)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   return;
                   if((false))
                    {
                     if(true)
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 if(((bool(bvec4(false, false, false, false)))))
                  continue;
                }
               do
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (((int(3)) ^ 0))) >> ((clamp(int(3), ((false ? (- 25280) : int(3))), int(3))))); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (((false ? (27997) : int(1))))) >> (int(1))); _injected_loop_counter ++)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                     if(((true && (false))))
                      continue;
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        return;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                }
               while(false);
              }
             if((false))
              continue;
             if(false)
              {
               if((false))
                continue;
              }
             else
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 do
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        continue;
                       continue;
                      }
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((false))
                          {
                           if((false))
                            break;
                           break;
                          }
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(7))); _injected_loop_counter --)
                            {
                             return;
                            }
                           if((false))
                            continue;
                          }
                        }
                      }
                     while(false);
                    }
                  }
                 while(false);
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  break;
                 continue;
                 if(((! (! ((! (! (false))))))))
                  {
                   if(true)
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if((false))
              continue;
             if((false))
              {
               if(true)
                {
                 return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  continue;
                 break;
                }
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if(((false || (false))))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if((false))
                          return;
                         return;
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if(false)
                          {
                           if(((bool(bvec4(false, false, true, true)))))
                            continue;
                           if((false))
                            break;
                           if(false)
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = ((1 << (int(1))) >> ((((0 + (int(1)))) | (int(1))))); _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if((false))
                                {
                                 if(true)
                                  {
                                   return;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           if((false))
                            continue;
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               return;
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                          }
                        }
                       if((false))
                        return;
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if((false))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     continue;
                    }
                   return;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if((false))
                      {
                       if((false))
                        continue;
                       return;
                      }
                     if((false))
                      continue;
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           if((! (! (true))))
                            {
                             return;
                            }
                           else
                            {
                            }
                           if(((! (! (false)))))
                            return;
                           if((false))
                            return;
                          }
                         if((false))
                          break;
                        }
                      }
                     while(false);
                    }
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if(true)
                    {
                     if(true)
                      {
                       do
                        {
                         do
                          {
                           if((false))
                            continue;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             return;
                            }
                          }
                         while((bool(bool(false))));
                        }
                       while(false);
                       if((false))
                        break;
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                   if(false)
                    {
                     if((false))
                      continue;
                    }
                   else
                    {
                     do
                      {
                       return;
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         continue;
                        }
                      }
                     while(false);
                     if((false))
                      break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                  }
                 if((false))
                  {
                   if((false))
                    return;
                   if((false))
                    continue;
                   if((false))
                    {
                     do
                      {
                       return;
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   break;
                  }
                 if(false)
                  {
                   if((false))
                    return;
                  }
                 else
                  {
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if((false))
                      return;
                    }
                   while(false);
                  }
                 if((false))
                  continue;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
               if((false))
                break;
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                 if((false))
                  continue;
                 if((false))
                  continue;
                }
               else
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      continue;
                     return;
                    }
                   return;
                   if((((false) && true)))
                    continue;
                  }
                }
               if((false))
                return;
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
               if((false))
                break;
              }
             if(false)
              {
               if((false))
                {
                 if((false))
                  break;
                 continue;
                }
               if((false))
                {
                 if((false))
                  continue;
                 if((false))
                  break;
                 break;
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  return;
                 if((false))
                  break;
                 continue;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((false))
                  continue;
                 for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != (0 << (int(0))); _injected_loop_counter --)
                  {
                   if(true)
                    {
                     do
                      {
                       do
                        {
                         if((false))
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               do
                                {
                                 if((false))
                                  return;
                                }
                               while(false);
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = (((0 << (int(3))) >> ((0 ^ (int(4))))) | 0); _injected_loop_counter != (int((injectionSwitch.x)) ^ 1); _injected_loop_counter ++)
                              {
                               return;
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           return;
                          }
                         if((false))
                          break;
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     while(false);
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(true)
                  {
                   if((false))
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if((false))
                        continue;
                       continue;
                       if((false))
                        break;
                       if((false))
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           return;
                          }
                        }
                      }
                     break;
                     if((false))
                      return;
                    }
                   if((bool(bvec2(true, true))))
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(true)
                        {
                         do
                          {
                           for(int _injected_loop_counter = (((((1 << (int(0))) >> (int(0))) << (int(5))) >> (int(5))) ^ 1); _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             if((false))
                              break;
                             if((false))
                              break;
                             for(int _injected_loop_counter = (~ (~ (1))); _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 if((false))
                                  return;
                                }
                              }
                             do
                              {
                               return;
                              }
                             while(false);
                             if((false))
                              {
                               if((false))
                                break;
                               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << (int(1))); _injected_loop_counter --)
                                {
                                 return;
                                }
                              }
                             if(((bool(bvec3(false, false, false)))))
                              break;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                       else
                        {
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if((false))
                      break;
                     if((false))
                      break;
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 << (int(4))); _injected_loop_counter --)
                          {
                           if((false))
                            continue;
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                        }
                      }
                    }
                   if(((! (! (false)))))
                    return;
                   if((false))
                    continue;
                  }
                 else
                  {
                   if((false))
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     while(false);
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        continue;
                       continue;
                      }
                     if(true)
                      {
                       if((false))
                        return;
                      }
                     else
                      {
                      }
                     break;
                    }
                   if((false))
                    return;
                  }
                }
              }
             else
              {
               if(true)
                {
                 if((false))
                  {
                   if((false))
                    continue;
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           return;
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                       while(false);
                      }
                    }
                  }
                 if((! (! ((! (! (true)))))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if(true)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if((false))
                            return;
                          }
                         if((false))
                          break;
                         return;
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   if(((! (! (false)))))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 else
                  {
                  }
                 if((false))
                  break;
                 if(true)
                  {
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     do
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                              {
                               do
                                {
                                 return;
                                 if((false))
                                  continue;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                }
                               while(false);
                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   if((false))
                                    return;
                                  }
                                }
                              }
                            }
                           if((false))
                            {
                             if(true)
                              {
                               do
                                {
                                 return;
                                 if((false))
                                  continue;
                                }
                               while(false);
                              }
                             else
                              {
                              }
                            }
                          }
                         if((false))
                          return;
                        }
                       if((false))
                        {
                         if((false))
                          break;
                         continue;
                        }
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if((false))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((true && (((injectionSwitch.x > injectionSwitch.y)))))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                        }
                       if((false))
                        break;
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            break;
                           if((false))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                {
                                 return;
                                 if((false))
                                  break;
                                }
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             continue;
                            }
                           break;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                          }
                         do
                          {
                           do
                            {
                             if((false))
                              return;
                            }
                           while(false);
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             break;
                            }
                           break;
                          }
                         return;
                        }
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               return;
                              }
                             while(false);
                            }
                          }
                         if(true)
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       if((false))
                        break;
                      }
                     while((! (! (false))));
                    }
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((false))
                  {
                   if((false))
                    continue;
                   return;
                  }
                 if((((false) && true)))
                  {
                   if((false))
                    return;
                   continue;
                  }
                 if((false))
                  continue;
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (((int(ivec2(int((ivec3(0, 0, 0) ^ (ivec3(int(7), 1, 0)))), 0)))))); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       return;
                       if((false))
                        continue;
                      }
                    }
                  }
                 if((false))
                  continue;
                }
               else
                {
                 if((false))
                  continue;
                 if((false))
                  return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((false))
                {
                 if((false))
                  break;
                 continue;
                }
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
             if((false))
              {
               if((false))
                continue;
               continue;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              {
               if((false))
                {
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 | 1) ^ (0 & 1632)); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                }
               continue;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     for(int _injected_loop_counter = (0 | (1)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = (int((ivec3(0, 0, 0) | (ivec3(1, 0, 0))))); _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if(true)
                              {
                               if((false))
                                break;
                               return;
                               if(((! ((false || (! (false)))))))
                                break;
                              }
                             else
                              {
                              }
                            }
                          }
                         if((false))
                          return;
                        }
                       else
                        {
                        }
                      }
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
                          {
                           if((false))
                            {
                             if((false))
                              break;
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               if(true)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = (~ (~ (int((injectionSwitch.y))))); _injected_loop_counter != (((1 << (int(3))) >> (int(3))) ^ 1); _injected_loop_counter --)
                                    {
                                     return;
                                    }
                                  }
                                }
                               else
                                {
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                return;
                              }
                            }
                          }
                         if(true)
                          {
                           if((false))
                            {
                             if((false))
                              return;
                             if(false)
                              {
                              }
                             else
                              {
                               do
                                {
                                 return;
                                }
                               while(false);
                              }
                            }
                          }
                         else
                          {
                          }
                         if((false))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            break;
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             return;
                            }
                          }
                         if((false))
                          continue;
                         if((false))
                          return;
                         if(true)
                          {
                           if((false))
                            break;
                           if(false)
                            {
                            }
                           else
                            {
                             do
                              {
                               for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != (int((injectionSwitch.y)) & 1); _injected_loop_counter ++)
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
                                  {
                                   if(((((injectionSwitch.x > injectionSwitch.y))) && true))
                                    {
                                    }
                                   else
                                    {
                                     return;
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 if((false))
                                  {
                                   if((false))
                                    continue;
                                   break;
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 if((false))
                                  break;
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           if((false))
                            continue;
                           if((false))
                            {
                             if(true)
                              {
                               return;
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     if((false))
                      return;
                     if((false))
                      continue;
                     if((false))
                      break;
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       break;
                      }
                    }
                   else
                    {
                     if((false))
                      break;
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    return;
                  }
                 while(false);
                 if((false))
                  continue;
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   do
                    {
                     if((false))
                      return;
                    }
                   while(false);
                   if((false))
                    break;
                   if((false))
                    break;
                   if((false))
                    {
                     for(int _injected_loop_counter = (int((injectionSwitch.y)) | 0); _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 break;
                 if((false))
                  break;
                }
              }
            }
           else
            {
             if((false))
              continue;
             if((false))
              continue;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              continue;
             if((false))
              break;
             do
              {
               if(((((injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(true)
                  {
                   if((false))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   subgroupAll(false);
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      return;
                     if((false))
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if((false))
                break;
               if(((true && ((! (! (false)))))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  break;
                 for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               if((false))
                continue;
               if((false))
                {
                 if((false))
                  break;
                 if((false))
                  break;
                 if(((bool(bvec2(false, true)))))
                  break;
                 if(true)
                  {
                   if((false))
                    continue;
                   if((false))
                    return;
                   if((false))
                    continue;
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     return;
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           return;
                          }
                         while(false);
                        }
                      }
                    }
                   if((false))
                    continue;
                  }
                 else
                  {
                  }
                 if((false))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     break;
                    }
                   break;
                  }
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   break;
                  }
                 break;
                }
               if(((! ((false || (! (false)))))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((false))
                  {
                   if((false))
                    break;
                   break;
                  }
                 continue;
                }
               if((false))
                return;
               if((false))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 for(int _injected_loop_counter = (0 & (54660 - (- 45403))); _injected_loop_counter != ((1 << (int(6))) >> (((int(6)) ^ 0))); _injected_loop_counter ++)
                  {
                   if((false))
                    break;
                   if((false))
                    {
                     if(true)
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != (int(ivec3(0, 1, 1))); _injected_loop_counter --)
                    {
                     if((false))
                      return;
                    }
                  }
                 break;
                }
               if((false))
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = (0 ^ (((1) ^ 0))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = (0 & - 32674); _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if(true)
                  {
                   return;
                   if((false))
                    continue;
                  }
                 else
                  {
                  }
                 if((false))
                  {
                   if((false))
                    {
                     if((false))
                      continue;
                     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(0))); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    continue;
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     do
                      {
                       if((false))
                        return;
                      }
                     while(false);
                    }
                   if(((! (! (false)))))
                    break;
                   break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
               if((false))
                continue;
               if(false)
                {
                }
               else
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = ((1 & 1) ^ 0); _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         return;
                         if((false))
                          continue;
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                 if((false))
                  {
                   if((false))
                    return;
                   break;
                  }
                 return;
                 if((false))
                  continue;
                }
               if((false))
                break;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if((false))
            {
             if((false))
              return;
             if(true)
              {
               if((false))
                return;
              }
             else
              {
              }
             if((((false || (bool(bvec3(false, false, false)))))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if(true)
        {
         if((false))
          return;
         if((false))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
     if((false))
      return;
     if(true)
      {
       if(true)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         if(false)
          {
          }
         else
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                return;
              }
            }
           else
            {
            }
          }
         do
          {
           if(((((injectionSwitch.x < injectionSwitch.y))) && true))
            {
             if((false))
              return;
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if(false)
                {
                }
               else
                {
                 if((false))
                  return;
                 if(((bool(bvec3(bool(bvec4(true, true, true, false)), true, false)))))
                  {
                   if((false))
                    return;
                   if((false))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          continue;
                         if((false))
                          return;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             return;
                            }
                           while(false);
                          }
                         if((false))
                          {
                           if(false)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             if((false))
                              return;
                            }
                           else
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (clamp(1, 1, 1)); _injected_loop_counter ++)
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                                    {
                                     return;
                                    }
                                   if((false))
                                    continue;
                                  }
                                }
                              }
                            }
                           if(false)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             do
                              {
                               do
                                {
                                 if((false))
                                  return;
                                 if(true)
                                  {
                                   if((false))
                                    continue;
                                   if((false))
                                    {
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                   if((false))
                                    return;
                                   if((false))
                                    break;
                                  }
                                 else
                                  {
                                   if((false))
                                    continue;
                                  }
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                              }
                             while(false);
                             if((false))
                              {
                               if((false))
                                break;
                               if((false))
                                {
                                 if((false))
                                  break;
                                 continue;
                                }
                               return;
                              }
                             if(true)
                              {
                               if((false))
                                break;
                               if((false))
                                return;
                               if((false))
                                return;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if((false))
                                {
                                 if((false))
                                  {
                                   if(false)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if((false))
                                        break;
                                       break;
                                      }
                                    }
                                   else
                                    {
                                     if(false)
                                      {
                                       if((false))
                                        break;
                                      }
                                     else
                                      {
                                       do
                                        {
                                         return;
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                        }
                                       while(false);
                                      }
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                  {
                                   if((false))
                                    break;
                                   return;
                                  }
                                 if((false))
                                  {
                                   if((false))
                                    continue;
                                   return;
                                  }
                                }
                               if((false))
                                continue;
                               if((false))
                                break;
                              }
                             else
                              {
                              }
                             if((false))
                              break;
                             if((false))
                              break;
                             if(false)
                              {
                              }
                             else
                              {
                               do
                                {
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   if((false))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if((false))
                                        continue;
                                       if(((true) && true))
                                        {
                                         if(true)
                                          {
                                           return;
                                          }
                                         else
                                          {
                                          }
                                         if((((false) && true)))
                                          {
                                           if((false))
                                            break;
                                           continue;
                                          }
                                         if((false))
                                          continue;
                                        }
                                       else
                                        {
                                         if((false))
                                          break;
                                        }
                                      }
                                     if(((true) || false))
                                      {
                                       if((false))
                                        return;
                                       if(((! (! (false)))))
                                        {
                                         do
                                          {
                                           return;
                                          }
                                         while(false);
                                        }
                                       if((false))
                                        {
                                         if((false))
                                          break;
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           return;
                                          }
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          return;
                                        }
                                       for(int _injected_loop_counter = ((1 << (int(5))) >> (((((int(5)) | 0)) ^ 0))); _injected_loop_counter != 0; _injected_loop_counter --)
                                        {
                                         if(((false || ((! (! (false)))))))
                                          continue;
                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter != 0; _injected_loop_counter --)
                                              {
                                               if((false))
                                                continue;
                                               if(false)
                                                {
                                                 if(((true && (false))))
                                                  continue;
                                                }
                                               else
                                                {
                                                 return;
                                                }
                                              }
                                            }
                                           while((bool(bvec2((true && (((injectionSwitch.x > injectionSwitch.y)))), true))));
                                          }
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       if((false))
                                        return;
                                       if((false))
                                        break;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(false);
                                }
                               while(false);
                              }
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((false))
                                break;
                               continue;
                              }
                             if((false))
                              {
                               if((false))
                                return;
                               if((false))
                                return;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  return;
                                 return;
                                }
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    return;
                                   if((false))
                                    break;
                                   if(true)
                                    {
                                     if((false))
                                      return;
                                    }
                                   else
                                    {
                                    }
                                   return;
                                  }
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               if(true)
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                             if(false)
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        {
                                         if((false))
                                          return;
                                         continue;
                                         if((false))
                                          continue;
                                        }
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         return;
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                             else
                              {
                               if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                                break;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               if((false))
                                {
                                 if((false))
                                  return;
                                 break;
                                }
                               if((false))
                                {
                                 if((false))
                                  return;
                                 return;
                                }
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    break;
                                   continue;
                                   if((false))
                                    continue;
                                  }
                                }
                               else
                                {
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(8))); _injected_loop_counter --)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       break;
                                      }
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                       if((false))
                                        {
                                         if((false))
                                          {
                                           if(((injectionSwitch.x < injectionSwitch.y)))
                                            {
                                             return;
                                            }
                                           else
                                            {
                                            }
                                          }
                                         break;
                                        }
                                      }
                                     else
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                          {
                                           return;
                                          }
                                        }
                                      }
                                     if((false))
                                      break;
                                     if((false))
                                      {
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          return;
                                        }
                                       if((false))
                                        break;
                                       return;
                                      }
                                    }
                                  }
                                }
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    {
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         return;
                                        }
                                      }
                                    }
                                   if((false))
                                    break;
                                   if(((bool(bvec3(false, false, false)))))
                                    {
                                     if(true)
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   break;
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if((false))
                                  return;
                                 if((false))
                                  continue;
                                 return;
                                 if((false))
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               if((false))
                                {
                                 if(true)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    return;
                                   if((false))
                                    continue;
                                  }
                                 else
                                  {
                                  }
                                 if((false))
                                  continue;
                                 if((false))
                                  continue;
                                 continue;
                                }
                              }
                             if((false))
                              break;
                             if((false))
                              return;
                             if((false))
                              return;
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 if((false))
                                  {
                                   if((false))
                                    break;
                                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                    {
                                     return;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(((bool(bvec3(false, false, false)))))
                                        return;
                                       return;
                                      }
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                  }
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   do
                                    {
                                     return;
                                    }
                                   while(false);
                                  }
                                 if((false))
                                  continue;
                                 if((false))
                                  break;
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   if((false))
                                    continue;
                                   do
                                    {
                                     return;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                     if((false))
                                      break;
                                    }
                                   while(false);
                                  }
                                 else
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(true)
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                              }
                             else
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                              }
                            }
                           if((false))
                            continue;
                           if((false))
                            return;
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > (int((injectionSwitch.x)) | int((injectionSwitch.x))); _injected_loop_counter --)
                                {
                                 if((false))
                                  return;
                                }
                               for(int _injected_loop_counter = ((1 << ((0 | (int(4))))) >> (int(4))); _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 return;
                                }
                              }
                             if(true)
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                 if((false))
                                  {
                                   if((false))
                                    continue;
                                   continue;
                                  }
                                }
                              }
                             else
                              {
                              }
                             if((false))
                              break;
                             if((false))
                              return;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         if(((! ((! (! (! (false))))))))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             do
                              {
                               if(((true) || false))
                                {
                                 do
                                  {
                                   if((false))
                                    break;
                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           return;
                                          }
                                         while(false);
                                        }
                                       if((false))
                                        break;
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         do
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             if(((false || (false))))
                                              {
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 return;
                                                }
                                              }
                                            }
                                           if((false))
                                            {
                                             if((false))
                                              break;
                                             return;
                                            }
                                           if((false))
                                            continue;
                                          }
                                         while(false);
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        continue;
                                       if((false))
                                        continue;
                                      }
                                    }
                                  }
                                 while(false);
                                }
                               else
                                {
                                 if((false))
                                  return;
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           else
                            {
                            }
                           if((false))
                            return;
                          }
                         if((false))
                          {
                           if(false)
                            {
                             if((false))
                              return;
                            }
                           else
                            {
                             if(true)
                              {
                               return;
                              }
                             else
                              {
                               if((false))
                                return;
                              }
                             if(((! ((bool(bool(! (false))))))))
                              break;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if((false))
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               return;
                              }
                            }
                          }
                         if((false))
                          return;
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           if(((false || (false))))
                            return;
                           if((false))
                            return;
                          }
                         else
                          {
                          }
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if(false)
                            {
                            }
                           else
                            {
                             if(((! (! (false)))))
                              {
                               if((false))
                                return;
                               if((false))
                                continue;
                               break;
                              }
                             if((false))
                              return;
                            }
                           if((false))
                            return;
                           if(false)
                            {
                            }
                           else
                            {
                             buf[next_virtual_gid] = 2;
                             do
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   if(true)
                                    {
                                     return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               if((false))
                                break;
                              }
                             while(false);
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if((false))
                              {
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 break;
                                }
                               do
                                {
                                 return;
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                              }
                             if(true)
                              {
                               if((false))
                                break;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 continue;
                                }
                               if((false))
                                continue;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if(((((bool(bvec2(false, true))) || false))))
                                break;
                               if((false))
                                {
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > 0; _injected_loop_counter --)
                                    {
                                     do
                                      {
                                       return;
                                      }
                                     while((! (! (false))));
                                     if((false))
                                      return;
                                    }
                                   do
                                    {
                                     if(((false || ((false || (false))))))
                                      return;
                                    }
                                   while(false);
                                  }
                                 break;
                                }
                               if((! (! (false))))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    {
                                     if((((! (! (true)))) && ((injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                               do
                                {
                                 if((false))
                                  return;
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                               if((false))
                                break;
                               if(false)
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    return;
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if(((false || (false))))
                                    continue;
                                   if((false))
                                    return;
                                   return;
                                  }
                                 if((false))
                                  break;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 do
                                  {
                                   if((false || (false)))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       if((false))
                                        break;
                                       if(true)
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                                              {
                                               return;
                                               if((false))
                                                return;
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                       if(true)
                                        {
                                         if((false))
                                          {
                                           if((false))
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              break;
                                             continue;
                                            }
                                           if((false))
                                            break;
                                           return;
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(false);
                                    }
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                 if((false))
                                  break;
                                 if((false))
                                  break;
                                 if((false))
                                  {
                                   if((false))
                                    continue;
                                   return;
                                  }
                                 if((false))
                                  break;
                                 if((false))
                                  {
                                   if((false))
                                    return;
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        return;
                                      }
                                    }
                                   else
                                    {
                                    }
                                   if((false))
                                    return;
                                   if((false))
                                    continue;
                                   if((false))
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                        {
                                         if((false))
                                          break;
                                         return;
                                        }
                                      }
                                    }
                                   if((false))
                                    break;
                                   if(true)
                                    {
                                     for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < 1; _injected_loop_counter ++)
                                      {
                                       if((false))
                                        {
                                         if(false)
                                          {
                                           if((false))
                                            return;
                                          }
                                         else
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             for(int _injected_loop_counter = 0; _injected_loop_counter < (max(1, 1)); _injected_loop_counter ++)
                                              {
                                               return;
                                              }
                                            }
                                           return;
                                           if((false))
                                            break;
                                           if((false))
                                            break;
                                          }
                                        }
                                      }
                                     if((false))
                                      return;
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       if(true)
                                        {
                                         return;
                                        }
                                       else
                                        {
                                         if((false))
                                          return;
                                         if((false))
                                          continue;
                                        }
                                      }
                                     else
                                      {
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                     if((false))
                                      break;
                                     if(false)
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                      }
                                     else
                                      {
                                       if((((false) || false)))
                                        return;
                                      }
                                     if((false))
                                      {
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         do
                                          {
                                           return;
                                          }
                                         while(false);
                                        }
                                       else
                                        {
                                        }
                                       if(((false || (false))))
                                        {
                                         if((false))
                                          break;
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          continue;
                                         return;
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if((false))
                                          break;
                                         continue;
                                        }
                                       if((false))
                                        break;
                                      }
                                     if((false))
                                      return;
                                     if((false))
                                      {
                                       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
                                        continue;
                                       return;
                                      }
                                    }
                                   else
                                    {
                                     if((false))
                                      break;
                                    }
                                  }
                                }
                              }
                             else
                              {
                               if((false))
                                {
                                 if(true)
                                  {
                                   return;
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                  }
                                 else
                                  {
                                   if((false))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                     continue;
                                    }
                                  }
                                }
                              }
                             if((false))
                              continue;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if((false))
                            break;
                          }
                         else
                          {
                           if((false))
                            continue;
                           if((false))
                            continue;
                          }
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              return;
                             for(int _injected_loop_counter = (0 << (int(5))); _injected_loop_counter < 1; _injected_loop_counter ++)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                return;
                               do
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = (0 >> (int(1))); _injected_loop_counter != ((1 << (((int(6)) | (int(6))))) >> (int(6))); _injected_loop_counter ++)
                                    {
                                     if((false))
                                      {
                                       for(int _injected_loop_counter = (1 & ((int((injectionSwitch.y)) << (int(4))) >> (int(4)))); _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           return;
                                          }
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        continue;
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                     if(false)
                                      {
                                       if((false))
                                        continue;
                                      }
                                     else
                                      {
                                       return;
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                    }
                                  }
                                 if(((! ((bool(bvec3(! (false), false, false)))))))
                                  continue;
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  return;
                                }
                              }
                            }
                           if((false))
                            continue;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              continue;
                             return;
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             do
                              {
                               return;
                               if((false))
                                break;
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((false))
                              return;
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   if(true)
                    {
                     if((((false) && true)))
                      {
                       do
                        {
                         return;
                        }
                       while(false);
                      }
                    }
                   else
                    {
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      return;
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     else
                      {
                       if((false))
                        return;
                       do
                        {
                         return;
                        }
                       while(false);
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                  }
                 if(true)
                  {
                   do
                    {
                     if((false))
                      {
                       do
                        {
                         return;
                        }
                       while(false);
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    return;
                   if((false))
                    return;
                  }
                 else
                  {
                  }
                 if((false))
                  {
                   do
                    {
                     if((false))
                      return;
                     return;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
             else
              {
              }
             if((false))
              return;
            }
           else
            {
            }
          }
         while(false);
         for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              return;
             if(false)
              {
              }
             else
              {
               if(true)
                {
                 if((false))
                  return;
                }
               else
                {
                }
              }
             return;
             if(false)
              {
              }
             else
              {
               if((false))
                return;
              }
            }
          }
        }
       else
        {
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(false)
          {
          }
         else
          {
           if(true)
            {
             for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > (0 << (int(6))); _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  return;
                 do
                  {
                   return;
                  }
                 while(false);
                }
              }
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                return;
              }
             else
              {
              }
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      {
       for(int _injected_loop_counter = ((1 << ((clamp(int(1), int(1), int(1))))) >> (int(1))); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if((false))
      return;
     if((((false) && true)))
      {
       do
        {
         return;
        }
       while(false);
      }
     do
      {
       for(int _injected_loop_counter = ((1 << (((true ? int(4) : (ivec3(45968, - 40225, - 32069)[2]))))) >> (int(4))); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         do
          {
           subgroupAll(true);
           if((false))
            {
             if((false))
              break;
             return;
            }
          }
         while(false);
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        {
         do
          {
           if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
            {
             if((false))
              return;
             if(true)
              {
               if(false)
                {
                }
               else
                {
                 return;
                }
              }
             else
              {
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if(true)
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             do
              {
               if(false)
                {
                }
               else
                {
                 do
                  {
                   if((false))
                    break;
                   return;
                   if((false))
                    break;
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             while(false);
            }
           else
            {
            }
          }
         else
          {
          }
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(false)
              {
               for(int _injected_loop_counter = (93768 & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if((false))
                  return;
                }
              }
             else
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
        }
       if(true)
        {
         if(true)
          {
           return;
          }
         else
          {
           if((false))
            return;
          }
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(false);
        }
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        return;
       if(false)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((false) && true)))
            return;
          }
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(false);
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             return;
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << ((int(ivec2(int(1), 0))))); _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       do
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           return;
                           if((false))
                            continue;
                          }
                         if((false))
                          break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     if((false))
                      return;
                    }
                  }
                }
              }
             if(false)
              {
               if((false))
                {
                 if((false))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
              }
             else
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
             do
              {
               if((false))
                return;
              }
             while(false);
             if((false))
              {
               for(int _injected_loop_counter = ((1 << (int(4))) >> (((false ? (- 77669) : int(4))))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 if(((! (((! (false)) && true)))))
                  break;
                 return;
                }
              }
            }
          }
         if(true)
          {
           if((false))
            return;
          }
         else
          {
          }
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 return;
                }
               if((false))
                return;
              }
             do
              {
               if((false))
                return;
              }
             while((false || (false)));
             if(true)
              {
               if(true)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if(true)
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             else
              {
              }
             do
              {
               if(((bool(bvec3((bool(bool(false))), true, true)))))
                {
                 do
                  {
                   if((false))
                    break;
                   if((false))
                    continue;
                   if((false))
                    {
                     if((false))
                      continue;
                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       return;
                      }
                     if((false))
                      break;
                    }
                   if((false))
                    {
                     if((false))
                      break;
                     if(false)
                      {
                       if((false))
                        break;
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 while(false);
                 for(int _injected_loop_counter = 1; _injected_loop_counter != ((0 ^ 0) | 0); _injected_loop_counter --)
                  {
                   return;
                   if(true)
                    {
                     if((((false) || false)))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         return;
                        }
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    break;
                  }
                }
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               return;
              }
            }
          }
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             return;
             if((false))
              break;
            }
          }
         if(((bool(bvec2(false, true)))))
          return;
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
            {
             do
              {
               return;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
        }
       if((false))
        {
         do
          {
           return;
          }
         while(false);
        }
       if((false))
        return;
      }
     else
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           do
            {
             if((false))
              return;
            }
           while(false);
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 do
                  {
                   return;
                  }
                 while(false);
                }
               if((false))
                return;
              }
            }
           else
            {
            }
          }
        }
      }
     if((false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
