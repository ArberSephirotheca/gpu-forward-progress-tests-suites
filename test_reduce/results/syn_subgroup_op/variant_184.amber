#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((((gl_NumWorkGroups) ^ uvec3(0u, 0u, ((0u) - 0u))).x) | (1u * (0u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (uint(uint(workgroup_base))) + subgroup_id * subgroup_size + (clamp(((subgroup_local_id) / 1u), subgroup_local_id, subgroup_local_id));
 uint next_virtual_gid = workgroup_base + (0u ^ (subgroup_id * subgroup_size)) + (~ ((0u | (~ (((((((((true ? (((((injectionSwitch.x > injectionSwitch.y)) ? (atomicOr(subgroup_local_id, workgroup_base)) : (0u + (max((clamp(uint(uvec3(((0u | ((0u | (subgroup_local_id)))) + 1) % subgroup_size, (0u << ((max((clamp(uint(5u), uint(5u), uint(5u))), (clamp(uint(5u), uint(5u), uint(5u))))))), 1u)), uint(uvec3(((0u | ((0u | (subgroup_local_id)))) + 1) % subgroup_size, (0u << (((uint(5u))) | ((uint(5u))))), 1u)), uint(uvec3(((0u | (max((((max(((false ? (workgroup_size) : 0u | (subgroup_local_id))), 0u | (subgroup_local_id))))), (max((((max(((false ? (workgroup_size) : 0u | (subgroup_local_id))), 0u | (subgroup_local_id))))), (((max(((false ? (workgroup_size) : 0u | (subgroup_local_id))), 0u | (subgroup_local_id)))))))))) + 1) % subgroup_size, (0u << (uint(5u))), 1u)))), uint(uvec3(((0u | ((false ? (workgroup_base) : ((0u | (subgroup_local_id)))))) + 1) % subgroup_size, (((((uint(uint((0u) | (0u))))) << ((0u) / ((1u << (uint(2u))) >> (uint(2u)))))) << (((uint(5u))) | 0u)), 1u))))))) / 1u) : (subgroup_local_id)))))))) << 0u))))));
 buf[virtual_gid] = 1;
 if(((((subgroup_local_id + 1) | (subgroup_local_id + 1))) | (clamp(0u, 0u, 0u))) < subgroup_size)
  {
   (~ (~ (buf[next_virtual_gid] = 2)));
   if(((((injectionSwitch.x > (float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))) || false))))
    {
    }
   else
    {
     subgroupAll(false);
    }
  }
 else
  {
   if(((((injectionSwitch) * mat2((1.0 * (1.0)))).x > ((max(0.0, 0.0)) + ((float((mat2(mat4(mat2(((max((1.0 * ((((min((clamp(float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(((mat2((float(mat3((0.0 + ((injectionSwitch.y))), 1.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, (mix(float(0.0), float(((- 24.24 / 6.4))), bool(false))), 0.0, log(1.0), 0.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, sqrt(1.0), sqrt(1.0)))), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, (float(vec4((min(1.0, 1.0)), 1.0, 0.0, 0.0))), 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), ((0.0) - log(1.0)), 1.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, (clamp(0.0, (max((mix(float(0.0), float((- 20.71)), bool(false))), (mix(float(0.0), float((- 6576.9205)), bool(false))))), 0.0)), 1.0, 0.0)), 0.0, 1.0, 0.0)), (clamp(float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan((clamp(0.0, (min(0.0, (min(0.0, 0.0)))), 0.0))), determinant(mat3(0.0, (max((mix((0.0 + ((float(mat4x3(float(sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, (injectionSwitch.x), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))), float((- 8.6)), bool(false))), sqrt(0.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan(0.0), determinant(((true ? mat3(0.0, sqrt(0.0), 0.0, (clamp(determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0) : (mat3(- 4.0, 2.2, 2968.2506, 739.955, - 5.8, 577.820, 6.3, - 5165.8047, 7189.7718))))), 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, (float((mix(vec4((69.11), (vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, cos(0.0), 1.0))[1], (vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, cos(0.0), 1.0))[2], (31.53)), vec4((vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, cos(0.0), 1.0))[0], (941.158), (- 8655.7655), (vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), ((0.0) + 0.0), cos(0.0), 1.0))[3]), bvec4(((injectionSwitch.x < injectionSwitch.y)), false, false, true))))), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(((0.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, ((min(clamp(1.0, 1.0, 1.0), clamp(((1.0) + 0.0), 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)))))), float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), (min((max(0.0, (max(0.0, 0.0)))), (float(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)))))) - 0.0)), (((min((clamp(float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(((mat2((float(mat3((0.0 + ((injectionSwitch.y))), 1.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, sqrt(1.0), sqrt(1.0)))), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, (float(vec4((min(1.0, 1.0)), 1.0, (mix(float((58.01)), float(0.0), bool(true))), 0.0))), 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, (clamp(0.0, (max((mix(float(0.0), float((- 20.71)), bool(false))), (mix(float(((0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float((- 6576.9205)), bool(false))))), 0.0)), 1.0, 0.0)), 0.0, 1.0, 0.0)), (clamp(float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan((clamp(0.0, (min(0.0, 0.0)), 0.0))), determinant(mat3(0.0, (max((mix(float(sqrt(0.0)), float((- 8.6)), bool(false))), sqrt(0.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, (float(vec3(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, 1.0))), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), ((true ? (clamp(0.0, 0.0, 0.0)) : (7.2))), (clamp(determinant(((mat2(1.0, 0.0, 1.0, 1.0)) * mat2(1.0))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, (float((mix(vec4(((max(69.11, 69.11))), (vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, cos(0.0), 1.0))[1], (vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, cos(0.0), 1.0))[2], (31.53)), vec4((vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 0.0, cos(0.0), 1.0))[0], (941.158), (- 8655.7655), (vec4(determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), ((0.0) + 0.0), cos(0.0), 1.0))[3]), bvec4(((injectionSwitch.x < injectionSwitch.y)), false, false, true))))), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(((0.0) * (tan(0.0) + ((max((clamp(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, ((min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)))))), float(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, tan(0.0), determinant(mat3(0.0, sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), (min((max(0.0, (max(0.0, 0.0)))), (float(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)))))) - 0.0))), 1.0, cos(0.0), 0.0)))))))))))
    {
    }
   else
    {
     buf[next_virtual_gid] = 2;
    }
   if((! (! ((((false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
    }
   else
    {
     subgroupAll(true);
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
