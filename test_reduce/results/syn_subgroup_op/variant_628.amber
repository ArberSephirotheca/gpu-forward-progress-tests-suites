#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((true && (! (! ((((((injectionSwitch.x > injectionSwitch.y)) || (true)) && ((! (! ((! ((((((((min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > ((injectionSwitch) / vec2(1.0, 1.0)).y)) || (bool(bvec2(! ((true && (! (! ((((((! (bool(bvec2((! (bool(bvec3(((((bool((true && (bool(true && ((false) && true))))))))), false, true)))), true))))) && true)))))))), false)))))))))) || (true && (! (! ((false))))))))))))))) || false))
  return;
 uint num_workgroup = (max(((true ? (min((((~ (~ (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))) | ((~ (~ (((gl_NumWorkGroups) | (gl_NumWorkGroups))))))), (~ (~ ((((((uvec3((~ (~ (1u))), (max(((1u) | (6284u & 0u)), 1u)), 1u) << (uvec3(2u))) >> (uvec3(2u))) * (gl_NumWorkGroups))) | (gl_NumWorkGroups))))))) : (uvec3(79106u, 44377u, 107377u)))), (((uvec3(uvec4(((uvec3(uvec3(((max(max(((~ (~ (((((gl_NumWorkGroups) >> uvec3(0u, ((false ? (subgroup_size) : 0u)), 0u)) | ((gl_NumWorkGroups) >> uvec3(0u, ((false ? (subgroup_size) : 0u)), 0u)))))))), (clamp((((((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ ((((((gl_NumWorkGroups) >> uvec3(0u, (((max(0u, 0u))) << 0u), 0u)))) << uvec3(0u, 0u, 0u)))), (((((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))))), max((((((uvec3(0u, 0u, 0u) + ((uvec3(0u, 0u, 0u) + (((true ? (gl_NumWorkGroups) : (uvec3(136207u, 157156u, 20542u)))))))) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, ((true ? (max(0u, 0u)) : (subgroup_size)))))), ((((((uvec3((clamp(uvec4(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), 1u), uvec4(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), 1u), uvec4(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), 1u)))))) >> uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))))))))) - uvec3(0u, 0u, 0u)), ((false ? (subgroup_local_id) : 0u)))))) / (~ ((min(~ (uvec3(((1u) / 1u), (~ ((((min(((uint(uvec2((((! (! (bool(bvec2((false || (true)), true)))))) ? ~ (1u) : (159716u)), (1u & 1u))))), ~ ((~ (((~ (1u)) ^ (0u | 0u)))))))) | ((min(((uint(uvec2((((! (! (bool(bvec2((false || (true)), true)))))) ? ~ (1u) : (159716u)), (1u & 1u))))), ~ ((~ (((~ (1u)) ^ (0u | 0u))))))))))), 1u)), ~ (uvec3(((1u) / 1u), ((1u * (~ (~ ((min((~ ((min(((uint(uvec2((true ? ~ (1u) : (159716u)), (1u & 1u))))), ((~ ((~ (((~ (1u)) ^ (0u | 0u)))))) | (~ ((((~ (((~ (1u)) ^ (0u | 0u))))) << 0u)))))))), (~ ((min(((uint(uvec2(((((0u | (true ? ~ (1u) : (159716u)))) | (true ? ~ (1u) : (159716u)))), (1u & 1u))))), ~ ((~ (((~ (1u)) ^ (0u | 0u)))))))))))))))), 1u))))))))).x;
 uint workgroup_size = (0u | ((uint(uvec3(((gl_WorkGroupSize.x) ^ (max(0u, ((true ? 0u : (subgroup_local_id)))))), 1u, 1u)))));
 uint workgroup_id = ((((uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) ^ (((~ (max((((((((~ (((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))) | ((((((~ (((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u))), (((~ (((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))))))) | ((~ (((((~ ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | (~ ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))) ^ uvec3(0u, 0u, 0u))))))))) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = (uint(uvec4(workgroup_size, 0u, 0u, 0u))) * workgroup_id;
 uint virtual_gid = workgroup_base + (clamp(((((subgroup_id * subgroup_size) | 0u)) | (subgroup_id * subgroup_size)), ((((subgroup_id * subgroup_size) | 0u)) | (subgroup_id * subgroup_size)), ((((subgroup_id * subgroup_size) | 0u)) | (subgroup_id * subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = ((true ? workgroup_base : (subgroup_size))) + ((((((((0u + ((((((false ? (atomicMax(virtual_gid, subgroup_local_id)) : subgroup_id)) >> 0u)) + 0u))) / 1u)) ^ 0u)) << 0u))) * ((subgroup_size) | (subgroup_size)) + ((false ? (workgroup_id) : ((((subgroup_local_id + 1) / 1u)) % subgroup_size)));
 buf[virtual_gid] = ((((1 * ((min(((((~ (~ ((((~ (((~ (((0 + ((((! (! (((! (! ((true && (((false || (bool(bvec2(false, true)))))))))) && true))))) ? (642) : 1) << 0))))) ^ 0)))) - 0))))) / 1)), (((~ (~ (((~ (((~ ((((~ (((~ (((0 + (((! (! ((true && (((false || (bool(bvec2(false, true)))))))))) ? (642) : 1) << 0))))) ^ 0)))) - 0)))) * 1))) / 1))))))))) ^ 0)));
 if((((0u | (subgroup_local_id))) - (0u >> ((((true ? (min((uint(4u)), (uint(4u)))) : (subgroup_size)))) << 0u))) + 1 < subgroup_size)
  {
   ((((((buf[next_virtual_gid] = 2) >> 0u)) + 0u)) >> 0u);
   subgroupAll(false);
  }
 else
  {
   (1u * (buf[next_virtual_gid] = 2));
   do
    {
     subgroupAll(true);
    }
   while(((((false || ((injectionSwitch.x > injectionSwitch.y)))) && ((injectionSwitch.x < (mix(vec2((9.4), ((79.20 - (max(24.12, (clamp(24.12, 24.12, 24.12))))))), vec2((((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) - 0.0), (injectionSwitch)[1]), bvec2(true, true))).y)))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
