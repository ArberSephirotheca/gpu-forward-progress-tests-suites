#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (clamp((clamp(gl_NumWorkGroups, ((gl_NumWorkGroups) / (((~ (~ ((uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)))))) | ((~ (~ ((((injectionSwitch.x > injectionSwitch.y)) ? (min(uvec3(8912u, 25675u, 197813u), subgroup_id)) : ((uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)))))))))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[(max(1, 1))], gl_NumWorkGroups[2])))).x, (clamp(gl_NumWorkGroups, ((gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | (((((min(((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), (uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> (uvec3(7u)))))), gl_NumWorkGroups)).x, ((max(((((clamp(gl_NumWorkGroups, ((gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, (clamp(0u, (min(0u, 0u)), 0u))))), gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), (uvec3(uvec4(((clamp(gl_NumWorkGroups, ((gl_NumWorkGroups) / (uvec3(1u, ((((1u)) / 1u) << (99247u & (0u | 0u))), 1u) | uvec3(0u, 0u, (0u | ((clamp(0u, (min(0u, 0u)), 0u))))))), gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)), 1u)))))).x));
 uint workgroup_size = (max(((gl_WorkGroupSize) << uvec3((((max(uint(uvec2((0u), ((0u >> (uint(0u))) ^ 0u))), uint(uvec2((0u), ((0u >> (uint(0u))) ^ 0u)))))) >> uint((injectionSwitch.x))), (clamp(((max(uint(uvec4(0u, ((1u << (uint((min(((7u) | (7u)), (~ (~ (7u)))))))) >> ((false ? (num_workgroup) : (uint(((7u) / 1u)))))), 1u, uint((injectionSwitch.x)))), uint(uvec4(0u, ((max((1u << (uint(7u))) >> (uint(7u)), ((false ? (54353u) : (((1u << (uint(7u))) >> (uint(7u))) / 1u)))))), 1u, uint((mix(float((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), float(((4.6))), bool(false))))))))), ((max((~ (~ (uint(uvec4(0u, ((1u << (uint(7u))) >> ((((min(uint(7u), uint(7u)))) - (0u & 106604u)))), 1u, uint((injectionSwitch.x))))))), uint(uvec4(0u, (max(((1u << (uint(7u))) >> (uint(7u))), ((1u << (uint(7u))) >> (uint(7u))))), 1u, uint((injectionSwitch.x))))))), (clamp(((max(uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x)))), uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x))))))), ((max(uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x)))), ((uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((mix(float((9.3)), float((injectionSwitch.x)), bool(true))))))) / 1u)))), ((max(uint(uvec4((0u | (0u)), ((1u << (uint(7u))) >> (uint(7u))), 1u, uint(((min(injectionSwitch, injectionSwitch)).x)))), uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x))))))))))), 0u)).x, ((((gl_WorkGroupSize) << uvec3((((max(uint(uvec2((0u), ((0u >> (uint(0u))) ^ 0u))), uint(uvec2((0u), ((0u >> (uint(0u))) ^ 0u)))))) >> uint((injectionSwitch.x))), (clamp(((max(uint(uvec4(0u, ((1u << (uint((min(((7u) | (7u)), (~ (~ (7u)))))))) >> ((false ? (num_workgroup) : (uint(((7u) / 1u)))))), 1u, uint((injectionSwitch.x)))), uint(uvec4(0u, ((max((1u << (uint(7u))) >> (uint(7u)), ((false ? (54353u) : (((1u << (uint(7u))) >> (uint(7u))) / 1u)))))), 1u, uint((mix(float((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), float(((4.6))), bool(false))))))))), ((max((~ (~ (uint(uvec4(0u, ((1u << (uint(7u))) >> ((((min(uint(7u), uint(7u)))) - (0u & 106604u)))), 1u, uint((injectionSwitch.x))))))), uint(uvec4(0u, (max(((1u << (uint(7u))) >> (uint(7u))), ((1u << (uint(7u))) >> (uint(7u))))), 1u, uint((injectionSwitch.x))))))), (clamp(((max(uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x)))), uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x))))))), ((max(uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x)))), ((uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((mix(float((9.3)), float((injectionSwitch.x)), bool(true))))))) / 1u)))), ((max(uint(uvec4((0u | (0u)), ((1u << (uint(7u))) >> (uint(7u))), 1u, uint(((min(injectionSwitch, injectionSwitch)).x)))), uint(uvec4(0u, ((1u << (uint(7u))) >> (uint(7u))), 1u, uint((injectionSwitch.x))))))))))), 0u)).x) / 1u)));
 uint workgroup_id = ((gl_WorkGroupID.x) * (clamp(1u, 1u, 1u)));
 if(((false || (((false)))) || false))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = ((workgroup_size) * 1u) * (clamp((uint((uint(uint(uint(workgroup_id)))))), workgroup_id, workgroup_id));
 if(((! (! (false)))))
  barrier();
 uint virtual_gid = ((true ? (clamp(((workgroup_base) - 0u), ((clamp((~ (~ ((workgroup_base) - 0u))), (workgroup_base) - 0u, (workgroup_base) - 0u))), ((((workgroup_base) - 0u)) | ((uint(uvec3(((workgroup_base) - 0u), 1u, 0u))))))) : (((subgroup_size)) << uint(((min(injectionSwitch, injectionSwitch)).x))))) + ((((max((false ? (workgroup_base) : subgroup_id * (0u ^ (((subgroup_size) | (subgroup_size))))), (((((injectionSwitch.x > injectionSwitch.y)) || (false || (false)))) ? (workgroup_base) : subgroup_id * ((false ? (num_workgroup) : subgroup_size)))))) >> 0u)) + subgroup_local_id;
 if((bool(bvec2((false), false))))
  barrier();
 uint next_virtual_gid = (min(workgroup_base + subgroup_id * (min((((uint(uvec2(false ? (subgroup_id) : subgroup_size, 0u))))), subgroup_size)), workgroup_base + subgroup_id * (uint(uvec3((((min(((false ? (subgroup_id) : subgroup_size)), subgroup_size)) >> 0u)), 1u, 0u))))) + ((((((subgroup_local_id) - ((0u ^ ((~ (~ ((0u)))))) | (0u)))) + 0u) + (clamp(1, 1, 1))) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < (((((((true && (injectionSwitch.x < (max(injectionSwitch.y, injectionSwitch.y)))))) ? subgroup_size : (subgroup_id)))) - 0u))
  {
   atomicStore(buf[next_virtual_gid], (uint(uint((((max(((injectionSwitch.x < injectionSwitch.y)) ? uint(2) : (uvec3(54756u, 113799u, 86712u).p), ((true && ((injectionSwitch.x < injectionSwitch.y)))) ? uint(2) : (uvec3(54756u, 113799u, 86712u).p)))))))), 4, (min((0 | (clamp(((((((1 * (((64) << 0)))) | (64))) | ((((1 * (((64)) - 0))) | (64))))), ((((((1 * (((64) << 0)))) | (64))) | ((((1 * (((64)) - 0))) | (64))))), ((((((1 * (((64) << 0)))) | (64))) | ((((1 * (((64)) - 0))) | (64)))))))), (((1 * (64))) | (64)))), 4);
   if((false))
    barrier();
   if(((bool(bvec3(false, (((mix(float((86.87)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false)))))
    {
     if((false))
      barrier();
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint((max(2, ((true ? 2 : ((- - 81419))))))), ((4) | (4)), 64, 4);
   subgroupAll(true);
  }
 if((false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
