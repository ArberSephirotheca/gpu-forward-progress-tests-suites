#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec4 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 for(int _injected_loop_counter = (clamp((0 << (int(6))), (0 << (int(6))), (0 << (int(6))))); _injected_loop_counter != ((1 << (((int(2)) >> 0))) >> ((0 ^ (int((int(int(2)))))))); _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = 0; (int(int(_injected_loop_counter))) != 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 if((false))
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   if((((bool(bvec4(((true && (true && (true)))), false, true, false))) || ((injectionSwitch.x > injectionSwitch.y)))))
    {
     do
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (4.0)), vec2((4.9), (injectionSwitch)[1]), bvec2(false, true))).y))))
          {
           do
            {
             return;
            }
           while(false);
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     do
      {
       return;
      }
     while(false);
     if((false))
      barrier();
    }
   else
    {
    }
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((true && (false)))
  {
  }
 else
  {
   if((false))
    barrier();
   if((false))
    return;
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != int(((float(mat2x4(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0))))); _injected_loop_counter --)
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         return;
        }
       else
        {
        }
       if((false))
        barrier();
      }
    }
   while(((((injectionSwitch.x > injectionSwitch.y))) || false));
  }
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(((bool((! ((true && (! (bool((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))
  return;
 ((GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy = GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) - (uvec2(0u, 0u) >> (uvec2(4u))));
 if((((((false) || false)) || false)))
  {
   if((false))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if(true)
    {
     if((false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(true)
  {
   GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz = GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id;
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if((false))
  return;
 do
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      break;
     do
      {
       if((false))
        break;
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if((false))
    return;
  }
 while(false);
 if((false))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 if((false))
  return;
 if((false))
  return;
 for(int _injected_loop_counter = (max(1, (max(1, ((1) >> 0))))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
   if((false))
    {
     if((false))
      {
       if(((bool(bvec4(false, false, false, false)))))
        continue;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      continue;
     continue;
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || (true)))
    {
     do
      {
       if((false))
        break;
       if((((((bool(bvec3(bool(bool(false)), true, false))) || false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(true)
          {
           barrier();
          }
         else
          {
          }
         if((false))
          continue;
         if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
        }
      }
     while(((injectionSwitch.x > ((((false) && true) ? (vec2(395.721, - 16.08)) : (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)));
    }
   else
    {
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy.x = subgroup_id;
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       return;
       if((false))
        return;
      }
    }
  }
 while(false);
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  return;
 GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy.y = subgroup_size;
 GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x = GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    barrier();
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w = subgroup_local_id;
  }
 else
  {
  }
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> ((((int(ivec2(int(5), 1))) | (int(ivec2(int(5), 1))))))); _injected_loop_counter --)
            {
             if((false))
              return;
            }
          }
         return;
        }
       if((((bool(bvec4(bool(bvec4(false, (true && (true)), true, false)), true, false, false))))))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if((false))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   if((((! (! (bool(bvec4(false, false, false, false))))))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 for(int _injected_loop_counter = int((injectionSwitch.y)); ((_injected_loop_counter) | 0) > 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if(false)
      {
       do
        {
         do
          {
           if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
          }
         while(false);
         if(((bool((bvec2(bvec4((bvec2(bvec3(bvec2(false, true), true))), true, false)))))))
          continue;
        }
       while(false);
      }
     else
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false || ((false))))
  barrier();
 ((((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.x = num_workgroup) | ((max(0u >> (uint(((5u) | (5u)))), (~ (~ (0u >> (uint(5u)))))))))) | 0u);
 if(false)
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           if((((! ((true && (! ((((bool(bvec4((bool(bvec4(((false) && true), false, true, true))), false, false, false))) && true)))))))) && true))
            {
            }
           else
            {
             return;
            }
          }
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
    }
  }
 if((false))
  barrier();
 if(false)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(((bool(bvec4(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); ((_injected_loop_counter --) / 1))
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((! (! ((false)))) || false)))
      {
       if(((true) && true))
        {
         return;
        }
       else
        {
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((bool(bvec2(false, true))))
        {
        }
       else
        {
         if((false))
          {
           do
            {
             barrier();
            }
           while(false);
          }
         if((((((false)) || false)) || false))
          return;
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             return;
            }
          }
        }
       if((false))
        barrier();
       if((false))
        {
         for(int _injected_loop_counter = ((1 << (((false ? ((4514 + 23872)) : int(6))))) >> (int(6))); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        {
         do
          {
           return;
          }
         while(false);
        }
       if(true)
        {
         if(true)
          {
           if(true)
            {
             if((false))
              {
               do
                {
                 if((false))
                  return;
                }
               while(false);
               return;
              }
            }
           else
            {
            }
           if((false))
            return;
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       if(true)
        {
         if(((! (((bool(bool(bool(bvec4(! ((false || ((! (! (false)))))), false, true, false))))))))))
          {
           if((false))
            return;
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 uint workgroup_size = ((gl_WorkGroupSize) | (((((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   do
    {
     return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (! ((! (! (((! (((((((((! ((! (! (! (false)))))) ? (- 9.9) : injectionSwitch.x)) > injectionSwitch.y))))) || false)) || false))))))))))
  {
   for(int _injected_loop_counter = (int(ivec4(1, 0, 1, 1))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     return;
    }
  }
 if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), true, false, ((injectionSwitch.x < injectionSwitch.y))))))
  return;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if((false))
  return;
 if((((false || ((injectionSwitch.x > injectionSwitch.y)))) || ((true && (((! (! (false)))))))))
  return;
 do
  {
   if((false))
    barrier();
  }
 while(false);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
      }
     else
      {
      }
    }
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        {
         if((((! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if((false))
          return;
         barrier();
        }
      }
    }
   if(true)
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         return;
        }
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
    }
  }
 if(((true) || ((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
  }
 else
  {
  }
 if((false))
  return;
 for(int _injected_loop_counter = (((clamp(1, 1, 1))) | (1)); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if(true)
    {
     if((false))
      return;
    }
   else
    {
    }
  }
 if((((((false ? (- 481.719) : (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    return;
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.z = workgroup_id;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * ((((0u >> ((0u ^ ((0u + (uint(2u))))))) ^ (GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.z)) * uint((injectionSwitch.y))));
 if((false))
  barrier();
 if((false))
  return;
 (~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base)));
 if(true)
  {
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(false)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       do
        {
         return;
        }
       while(false);
       if((false))
        barrier();
      }
     barrier();
     if((bool(bvec2((! (! (true))), ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if((false))
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
     if(((((false || (false)) && true))))
      {
       do
        {
         if((false))
          return;
        }
       while(((false) || false));
       barrier();
      }
    }
  }
 else
  {
   GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y = (((uint(uint((~ (((((min(uint((injectionSwitch.x)) ^ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)), uint((injectionSwitch.x)) ^ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x))))) / 1u))))))) ^ 0u));
  }
 if((false))
  {
   if((false))
    return;
   if((! (! (((injectionSwitch.x < injectionSwitch.y))))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if(((! ((! (! (! (false))))))))
      {
       if((false))
        {
         for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); ((_injected_loop_counter) | 0) > 0; _injected_loop_counter --)
          {
           return;
          }
        }
       if((false))
        barrier();
       return;
      }
    }
  }
 uint virtual_gid = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + (uint(uint((((((min(GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy.x, (max(((GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy.x) << 0u), ((false ? (16597u) : ((GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy.x) << 0u)))))))) | 0u)) * 1u)))) * (min(GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).zw.x + (((0u) >> 0u) | (GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
    }
   if(true)
    {
     return;
    }
   else
    {
    }
  }
 if(true)
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     for(int _injected_loop_counter = ((((0) / 1)) ^ (0 << (int(8)))); ((_injected_loop_counter) | ((int(ivec3(_injected_loop_counter, 0, 1))))) != 1; _injected_loop_counter ++)
      {
       GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.y = ((virtual_gid) / uint(((max(injectionSwitch.y, ((true ? injectionSwitch.y : (18.61))))))));
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if((((false) || false)))
  barrier();
 if((false))
  {
   do
    {
     if((false))
      barrier();
     barrier();
    }
   while(false);
  }
 do
  {
   if((false))
    break;
   if((((false) || false)))
    return;
  }
 while(false);
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     return;
    }
  }
 if((((false) && true)))
  {
   do
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((((0.0 + ((clamp(((false ? (7627.5120) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     else
      {
      }
    }
   while(false);
   return;
  }
 if((false))
  return;
 uint next_virtual_gid = (((0u + (((true ? (clamp(GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + ((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((uvec3(((((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u)))) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + (min(((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x), ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x))), ((false ? (workgroup_size) : (0u ^ (((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz) + (uvec3(0u, 0u, 0u) >> (uvec3(5u)))).y + ((clamp((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((((uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u))))) | uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))))), (true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((((uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u))))) | uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))))), (true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((((uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u))))) | uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + (((clamp((clamp(GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id, GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id, GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id)), GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id, GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id)).w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x))))), (uint((~ (~ (uint((0u | ((min(GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + ((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u)))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x), GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + ((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((((false ? (GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id) : uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u)))))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x))))))))))))) : (num_workgroup)))))) | (((false ? (GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.s) : ((true ? (clamp(GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + (((! (! ((bool(bool(true)))))) ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((uvec3(((((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u)))) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + (min(((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x), ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x))), ((false ? (workgroup_size) : (0u ^ (GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + ((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u)))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x))))), ((~ ((0u | (~ (min(GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + ((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u)))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x), GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.xyz.y + ((true ? GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy : (uvec2((((false ? (GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id) : uvec3(((uvec3(uvec3((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u))) - uvec3(0u, 0u, 0u)))))))))).x * GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x + ((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x)))))))))) : (num_workgroup)))))));
 if(((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(false)
    {
     if((false))
      return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if((false))
      {
       if((false))
        return;
       do
        {
         barrier();
        }
       while(false);
      }
     if(((((false) && ((injectionSwitch.x < injectionSwitch.y))) || (false))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((! (! (((bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true))))))))
  return;
 do
  {
   if((false))
    return;
  }
 while(false);
 buf[GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.y] = 1;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if(((GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + (~ (~ ((clamp(1, 1, 1))))) < GLF_merged2_0_2_49_2_2_49GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw.x)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, (0 ^ ((((~ (~ (64)))) ^ 0))), 4);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((! (((! ((false))) || false))))
        return;
       if((((((true && (injectionSwitch.x > injectionSwitch.y)))) && true)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((true && (false))))
            return;
           return;
          }
        }
       else
        {
         do
          {
           if(((false || ((bool(bvec2(false, false)))))))
            {
             if((bool(bool((((injectionSwitch.x > injectionSwitch.y)) || ((false)))))))
              barrier();
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               return;
              }
            }
           do
            {
             return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         while((((((min((min(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch))))) / cos(vec2((injectionSwitch.x), (injectionSwitch.x)))).x > injectionSwitch.y)));
         if((false))
          {
           if((false))
            barrier();
           return;
          }
        }
       if(((((bool(bool((bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(((false || (((((true ? injectionSwitch.x : (- 81.59))) > injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = ((0) ^ int((injectionSwitch.x))); _injected_loop_counter < ((1 << (int(3))) >> (((int(3)) - 0))); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if(true)
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
               return;
              }
             barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              return;
             return;
            }
          }
        }
       else
        {
        }
       if((false))
        return;
       if((false))
        barrier();
       if(((bool(bvec2(false, false)))))
        {
         if(false)
          {
          }
         else
          {
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     subgroupAll(false);
    }
   else
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ (0)); _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter != ((1) / 1); _injected_loop_counter ++)
      {
       if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(((! (! (false)))))
        barrier();
       if((false))
        barrier();
       if(((bool(bvec2(false, false)))))
        continue;
       if((false))
        {
         if(false)
          {
          }
         else
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           else
            {
            }
           if((((! (! (! (! ((bool(bvec4((((mix(vec2((vec4(- 0.5, 774.783, - 392.248, - 3066.1404).s), (3799.8215)), vec2((((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), false, true, false)))))))))))
            {
             if((false))
              barrier();
             break;
            }
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
          }
         if((false))
          return;
        }
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((bool(bvec2((false), true))))
          barrier();
         if(true)
          {
           if((((false) || false)))
            {
             do
              {
               barrier();
              }
             while(false);
            }
          }
         else
          {
          }
         do
          {
           for(int _injected_loop_counter = ((false ? (15907) : 0)); _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while((! (! (false))));
         if((false))
          {
           if((false))
            return;
           return;
           if((false))
            barrier();
          }
        }
      }
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        continue;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(((! (! ((((true && ((! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
        continue;
      }
     if((false))
      return;
     if((bool(bvec4((false), true, ((injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
     if((! ((bool(bvec2(! (true), true))))))
      {
       do
        {
         subgroupAll(true);
         if(((! ((((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
          barrier();
         if((false))
          break;
         if((false))
          return;
        }
       while(false);
      }
     else
      {
      }
     if((false))
      {
       if((false))
        return;
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 if(true)
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     do
      {
       return;
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while((((((! (! (! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))) && true));
    }
   if((false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((! (! ((! ((! (! (! ((((((max(((((clamp((max(vec2(mat3x2(injectionSwitch, 0.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), vec2(mat3x2(injectionSwitch, 0.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))) * mat2(1.0), (max(vec2(mat3x2(injectionSwitch, 0.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), vec2(mat3x2(injectionSwitch, 0.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))) * mat2(1.0), (max(vec2(mat3x2(injectionSwitch, 0.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), vec2(mat3x2(injectionSwitch, 0.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))) * mat2(1.0)))))), ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))) && true))))))))))))
  {
   if((false))
    return;
   if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > (1.0 * (injectionSwitch.y))))))
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = ((((int(int((1 << (((true ? (min(int(6), int(6))) : (- 19033))))) >> (int(6)))))) >> int((injectionSwitch.x)))); _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
      {
       if(((((bool(bvec2(false, false)))) && (bool(bvec2(true, true))))))
        {
         if((((false) && true)))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
        continue;
       do
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       while(false);
       for(int _injected_loop_counter = 1; _injected_loop_counter != (((((injectionSwitch.x < injectionSwitch.y)) ? ((1 * (0))) : (- 23715))) ^ 0); _injected_loop_counter --)
        {
         if((false))
          {
           do
            {
             barrier();
            }
           while((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))));
          }
        }
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
     for(int _injected_loop_counter = ((88750 & 0) >> (int(4))); _injected_loop_counter < (int((injectionSwitch.y)) & 1); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     do
      {
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   barrier();
   if((((false) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if((false))
      {
       if(((((bool(bvec4((bool(bvec4(false, false, true, (! (! (((false) || false))))))), false, true, ((injectionSwitch.x < injectionSwitch.y))))) || (false || (false))))))
        {
         if(((((bool((! (! (bool(false)))))) || false))))
          return;
         barrier();
        }
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        barrier();
      }
    }
  }
 if((((injectionSwitch.x > (1.0 * ((max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter > (max(int((injectionSwitch.x)), int((injectionSwitch.x)))); _injected_loop_counter --)
    {
     if((false))
      {
       if((false))
        continue;
       barrier();
      }
    }
   barrier();
  }
 if((false))
  return;
 if(((((! (! ((false || ((! (((((! (injectionSwitch.x > injectionSwitch.y)) && true)) || false))))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
