#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_18 {
 ivec3 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 bvec3 _f3;
 float _f4;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 bool _f1;
 uvec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 vec3 _f1;
 int _f2;
 vec4 _f3;
 _GLF_struct_17 _f4;
 ivec3 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat3x4 _f3;
 vec4 _f4;
 mat2x4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 int _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 mat2x4 _f1;
 bool _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 mat2x4 _f3;
 _GLF_struct_15 _f4;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 bool _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 mat4 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_11 _f0;
 _GLF_struct_16 _f1;
 vec4 _f2;
 _GLF_struct_19 _f3;
 bool _f4;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 int _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_4 {
 float _f0;
 vec3 _f1;
 uvec4 _f2;
 vec4 _f3;
 bvec2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 bvec2 _f3;
 uint subgroup_id;
 vec4 _f4;
 float _f5;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 ivec2 _f3;
 _GLF_struct_5 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 int _f2;
 uint _f3;
 mat4 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 int _f1;
 int _f2;
 int _f3;
 uvec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat2x3 _f1;
 uint num_workgroup;
 _GLF_struct_1 _f2;
 bvec3 _f3;
 mat3 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > (max(injectionSwitch.y, (clamp((mix(float((383.559)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    barrier();
  }
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid;
 if((bool(bvec4(false, false, false, false))))
  {
   for(int _injected_loop_counter = ((1 << (int(7))) >> (int(7))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(false);
       if((false))
        barrier();
      }
    }
  }
 else
  {
   if((false))
    barrier();
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > (float(mat2x4(injectionSwitch.y, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))));
      }
     else
      {
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if(((bool(bool(false)))))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((! (! (true))))
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (((min(1 * (int(8)), 1 * (int(8))))))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   barrier();
  }
 for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   do
    {
     if((bool(bvec2(true, false))))
      {
       if((false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   while((bool((bvec3(bvec3(bvec3(false, (bool((bvec3(bvec3(bvec3(true, false, true)))))), false)))))));
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
       do
        {
         if((false))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     do
      {
       if((false))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(false);
    }
  }
 _GLF_struct_20 _GLF_struct_replacement_20;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_6(ivec4(1), _GLF_struct_3(mat2x3(1.0), mat4x3(1.0), uvec4(1u), bvec2(true), gl_SubgroupID, vec4(1.0), 1.0), _GLF_struct_4(1.0, vec3(1.0), uvec4((min(1u, 1u))), vec4(1.0), bvec2(true), mat2(1.0)), ivec2(1), _GLF_struct_5((mat4(1.0) * (vec4(1.0))), (clamp(1, 1, ((((1) | 0)) ^ 0))), bvec3(true)), mat3x2(1.0)), _GLF_struct_7(uvec2(1u)), 1, (0u | (((1u) ^ 0u))), mat4(1.0));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z = subgroup_size;
 if((bool(bvec3((false), false, ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != (int((injectionSwitch.y)) | int((injectionSwitch.x))); _injected_loop_counter ++)
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       do
        {
         GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y = subgroup_local_id;
        }
       while(false);
      }
    }
  }
 while(false);
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat2(1.0), mat2x3(1.0), (uint(uvec4(gl_NumWorkGroups.x, 1u, uint((((injectionSwitch.y) / 1.0))), ((clamp((((((1u << ((0u | (((uint(6u)) << ((0u) >> 0u)))))) >> (uint(6u))) + 0u)) / (1u * (1u))), ((true ? (1u << ((((0u | (((uint(6u)) << 0u)))) / 1u))) >> (uint(6u)) : (42007u))), (((1u << ((0u | (((uint(6u)) << 0u))))) - 0u)) >> (uint(6u)))))))), _GLF_struct_1(uvec2(1u), _GLF_struct_0(bvec4(true), 1, 1, 1, uvec3(1u), mat2x4(1.0))), bvec3(true), mat3(1.0));
 if((false))
  {
   do
    {
     if((((bool(bvec2(bool(((bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y))), true, true))))))), false))))))
      {
       if((! (! ((false)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   while((false || ((true && (false)))));
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if((false))
  barrier();
 if(true)
  {
   if((false))
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     while(false);
     if((false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (39171 & (0 << (int(1)))); _injected_loop_counter --)
    {
     if((false))
      {
       do
        {
         if(true)
          {
           if((false))
            barrier();
           do
            {
             barrier();
            }
           while(((bool((! ((true && (! (bool(false)))))))) || (false)));
          }
         else
          {
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; ((_injected_loop_counter) << 0) > 0; _injected_loop_counter --)
    {
     if(true)
      {
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 0; ((true && (((bool(bvec2((((bool(bvec3(_injected_loop_counter != ((1 << (int(((true ? ivec3((((int(0))) | ((int(0)))), 1, ((((0) * 1)) | (0 ^ 0))) : (((((ivec3(- 25311, 60755, - 99543))) << ivec3(0, 0, 0))) >> ivec3(0, 0, 0))))))) >> ((int(int(int(((true ? ((0) >> ((0) << 0)) : (((~ ((~ (~ (((~ (int(ivec2(((- 54307) | (- 54307)), 0))))) | int((injectionSwitch.x))))))))))))))))), true, true)))) && true), ((false) || false))))) && true))); _injected_loop_counter ++)
          {
           _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.y = _GLF_struct_replacement_2.num_workgroup;
          }
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 while(false);
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(true)
    {
     if(((false) || ((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       do
        {
         if((! ((bool(bvec3(! ((bool(bool((false))))), true, true))))))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
            }
           if((false))
            {
             if(((! (! (((false) && true))))))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       while(false);
       if(false)
        {
        }
       else
        {
         if((bool(bvec3(true, true, false))))
          {
           if(((bool(bvec3(false, false, true)))))
            barrier();
           if((((injectionSwitch.x > (float(mat3x2(injectionSwitch.y, abs(1.0), 1.0, 1.0, 1.0, 1.0)))))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(false)
              {
              }
             else
              {
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
          }
         else
          {
           if(((bool(bvec4(false, (((clamp(injectionSwitch, ((injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), true, true)))))
            barrier();
          }
        }
      }
     else
      {
       if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       do
        {
         if((false))
          {
           do
            {
             if(true)
              {
               if((false))
                barrier();
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if(true)
          {
           if((false))
            {
             if((false))
              barrier();
             if((! (((! ((true && ((! (! (true))))))) || false))))
              {
               do
                {
                 barrier();
                }
               while(false);
               if(((bool(bvec4(false, true, false, false)))))
                barrier();
              }
             else
              {
              }
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
         else
          {
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   else
    {
    }
   if((false))
    barrier();
   if((false))
    {
     if(false)
      {
       if((false || (((((! (! (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(false);
          }
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
     barrier();
    }
   if(((bool(bvec3(false, true, true)))))
    barrier();
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
  }
 uint workgroup_id = (min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
   do
    {
     if(((false || (false))))
      barrier();
    }
   while(false);
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(true)
  {
   _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w = workgroup_base;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = (((((0u | ((((clamp((((clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, (clamp(((((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base) | (_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base))) - uvec4(0u, 0u, 0u, 0u)), _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)).w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w))) + 0u) + _GLF_struct_replacement_8._f0._f1.subgroup_id * (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) << ((0u) << (((1u) + 0u) ^ 1u))))) + GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, (((clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, (max(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w)), _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w))) + 0u) + _GLF_struct_replacement_8._f0._f1.subgroup_id * ((~ (~ (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ((clamp((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z), (((((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z)) / 1u)) ^ 0u), (_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z))) << ((0u) << (1u ^ 1u)))))))) + GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, (((clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w))))) + 0u) + _GLF_struct_replacement_8._f0._f1.subgroup_id * (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) << (((min(0u, 0u))) << (1u ^ 1u))))) + GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y)) | (((true ? clamp((((clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, (clamp(((((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base) | (_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base))) - uvec4(0u, 0u, 0u, 0u)), _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)).w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w))) + 0u) + _GLF_struct_replacement_8._f0._f1.subgroup_id * (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) << ((0u) << (((1u) + 0u) ^ 1u))))) + GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, (((clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, (max(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w)), _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w))) + 0u) + _GLF_struct_replacement_8._f0._f1.subgroup_id * (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) << ((0u) << (1u ^ 1u))))) + GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, (((clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w))))) + 0u) + _GLF_struct_replacement_8._f0._f1.subgroup_id * (clamp(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) << (((min(0u, 0u))) << (1u ^ 1u))))) + (~ ((clamp(~ (GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y), ~ (GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y), ~ (GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y)))))) : (workgroup_base)))))))) << 0u))) / 1u);
 if(true)
  {
   do
    {
     if(((! (! ((((injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      {
       if((! (((! (false))) || false)))
        {
        }
       else
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z = virtual_gid;
 if((false))
  barrier();
 uint next_virtual_gid = (max(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w, ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w) - 0u))) + _GLF_struct_replacement_8._f0._f1.subgroup_id * _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z + ((GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y + 1) % _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z);
 if((false))
  barrier();
 if(true)
  {
   GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x = next_virtual_gid;
  }
 else
  {
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (vec2(vec3(injectionSwitch, 0.0))).y))))
  barrier();
 if(((((injectionSwitch.x > (vec2(mat3x2(injectionSwitch, 0.0, 0.0, length(0.0), 0.0))).y)) || false)))
  {
  }
 else
  {
   _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x = GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x;
  }
 if(false)
  {
  }
 else
  {
   do
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x > ((min(float(mat3x4((min(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat3x4((min(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))))
        {
        }
       else
        {
         if((false))
          barrier();
        }
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(false);
  }
 do
  {
   buf[GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z] = 1;
  }
 while((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && ((injectionSwitch.x < injectionSwitch.y))));
 if((false))
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(false);
   if(true)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > ((((injectionSwitch.x < (min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? 0 : (((_injected_loop_counter) - 0)))); _injected_loop_counter --)
        {
         if(false)
          {
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
              {
               if((false))
                barrier();
               if(false)
                {
                }
               else
                {
                 for(int _injected_loop_counter = ((((injectionSwitch.x > injectionSwitch.y)) ? (_injected_loop_counter) : 1)); _injected_loop_counter != ((0 | 0) | (0)); _injected_loop_counter --)
                  {
                   barrier();
                  }
                 if((false))
                  barrier();
                }
               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (((int(3)) ^ 0))); _injected_loop_counter --)
                {
                 if(((((clamp((((vec2((vec4(0.0, 0.0, 0.0, 0.0) + ((mix(vec4((vec4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))[0], (- 2.0), (vec4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))[2], (978.635)), vec4((2.5), (vec4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))[1], (- 1680.4013), (vec4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))[3]), bvec4(false, true, false, true))))))) * vec2(1.0, 1.0))).x, (clamp(((injectionSwitch.x) - 0.0), (float(mat4(injectionSwitch.x, 1.0, 0.0, ((0.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
                  barrier();
                }
               if((false))
                barrier();
              }
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < ((((clamp(0 ^ (int((injectionSwitch.y))), 0 ^ (int((injectionSwitch.y))), 0 ^ (int((injectionSwitch.y)))))) ^ 0)); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if(true)
              {
               if((false))
                barrier();
              }
             else
              {
              }
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
    }
   do
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > (clamp(injectionSwitch.y, (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
    }
   while(false);
  }
 if(GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y + 1 < _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z)
  {
   if(true)
    {
     do
      {
       if(true)
        {
         if((false))
          barrier();
         if((false))
          {
           do
            {
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           do
            {
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != ((- 93463 & 0) | 0); _injected_loop_counter --)
                {
                 do
                  {
                   barrier();
                  }
                 while((bool(((bool(false)) || false))));
                }
              }
            }
           while(false);
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false || (false)))
          {
          }
         else
          {
           if(((false || ((! (! (false)))))))
            barrier();
          }
         if(((((max((max(injectionSwitch.x, injectionSwitch.x)), ((false ? (- 4.7) : (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((((injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, 1.0))) < (clamp(injectionSwitch.y, (max((float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y)), injectionSwitch.y)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << ((((true ? (int(6)) : (_injected_loop_counter))) | (int(6))))) >> (int(6))); _injected_loop_counter ++)
                {
                 if(((! ((bool(bvec4(! (bool(bvec4((((! (((! (injectionSwitch.x < injectionSwitch.y)) || false))))), false, false, false))), true, true, true)))))))
                  {
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               while(false);
              }
            }
           if((false))
            barrier();
          }
        }
       else
        {
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(true)
          {
           for(int _injected_loop_counter = 0; (~ (~ (_injected_loop_counter))) != 1; _injected_loop_counter ++)
            {
             atomicStore(buf[(max((clamp((min(_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)), _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)), ((_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base) / uvec4(1u, 1u, 1u, 1u)))).x], uint((clamp(((2) | (((0 << (int(1))) + (2)))), 2, 2))), 4, 64, 4);
            }
          }
         else
          {
          }
        }
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   else
    {
    }
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(4))); _injected_loop_counter --)
          {
           subgroupAll(false);
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
        }
      }
     else
      {
      }
    }
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_20._f0._f0.GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x], uint(2), 4, 64, 4);
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     subgroupAll(true);
    }
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
    }
  }
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
