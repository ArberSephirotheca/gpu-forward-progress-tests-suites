#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_12 {
 uvec2 _f0;
 uvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat2 _f1;
 bvec3 _f2;
 bvec4 _f3;
 bvec4 _f4;
 float _f5;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat4x2 _f1;
 float _f2;
 int _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat2x3 _f2;
 _GLF_struct_11 _f3;
 bvec2 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 float _f4;
 bool _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 uint workgroup_size;
 mat3x2 _f1;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_8 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 mat4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_2 {
 int _f0;
 uint subgroup_size;
 mat4x2 _f1;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 int _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_4 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((bool(bvec4((bool(bvec3(false, false, true))), false, ((injectionSwitch.x < injectionSwitch.y)), ((false || ((bool(bool(((vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))))))))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat4x2(1.0), 1, _GLF_struct_0((bvec2(((bvec2(bvec4(bvec2((bvec3(bvec4(bvec3(bvec2(bvec2(true)), true), false)))), false, false))))))), _GLF_struct_4(_GLF_struct_1(((mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_2(1, gl_SubgroupSize, mat4x2(1.0)), _GLF_struct_3(mat2(1.0), mat4(1.0), bvec4(((! (! ((((bool((bvec2(bvec3(bvec2((! (! ((bool(bool(((injectionSwitch.x < injectionSwitch.y)) && (true))))))), false), true)))))) || false)))))))));
 if((false))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((bool(bvec4((((false)) && true), false, false, false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if(((! (! ((bool(bvec3(false, false, true))))))))
      return;
     return;
    }
   return;
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((((! (! ((((! ((true && (! ((((bool(bvec4(false, false, false, true))) && true))))))) || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(((((false || (bool((bvec3(bvec3(bvec3(((false || (false)) && true), true, false)))))))))))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > (((float(float((max(injectionSwitch.y, injectionSwitch.y)))))) - 0.0)))))
  return;
 if((((((false)) || false) && true)))
  return;
 if((false))
  {
   if((false))
    {
     if(((bool(bvec2(false, true)))))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_8(((((true) || false) ? uvec4(1u) : (((uvec4(23254u, 55329u, 128029u, 152006u)) - (uvec4(0u, 0u, 0u, 0u) << (uvec4((uint(uvec2(((((false ? (subgroup_local_id) : 5u))) + 0u), 0u)))))))))), bvec4(true), mat2x4(1.0), _GLF_struct_6(vec4(1.0), gl_WorkGroupSize.x, mat3x2(1.0)), _GLF_struct_7(ivec3(1), bvec4(true), mat2x3((clamp(1.0, ((1.0) + 0.0), (min(1.0, 1.0))))), mat4x3(1.0), 1.0, true, bvec4(true)), vec4((0.0 + ((mix(float(1.0), float(((min((clamp(((true ? 5.5 : (451.428))), 5.5, 5.5)), 5.5)))), bool(false))))))), _GLF_struct_13(_GLF_struct_9(mat4(1.0), mat4x2(1.0), 1.0, 1, mat3x2(1.0)), _GLF_struct_10(ivec4(1)), mat2x3(1.0), _GLF_struct_11(true, mat2(1.0), bvec3(true), bvec4((false || (((! (! (! (! (true))))))))), bvec4(true), 1.0), bvec2(true), _GLF_struct_12(uvec2(1u), uvec3(1u), mat3(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (uint((((min(uvec4((0u | (((true ? _GLF_struct_replacement_14._f0._f3.workgroup_size : (2474u))))), uint((injectionSwitch.x)), ((max((((1u << (uint(4u))) >> (uint(4u))) << (((uint(4u)) | (uint(4u))))), ((true ? (((clamp((1u << (uint(4u))) >> (((uint(4u)) >> uint((injectionSwitch.x)))), (1u << (uint(4u))) >> (((uint(4u)) >> uint((injectionSwitch.x)))), (1u << (uint(4u))) >> (((uint(4u)) >> uint((injectionSwitch.x))))))) << (((((uint(4u)) | (uint(4u)))) * 1u))) : (subgroup_id))))) >> (uint(4u))), 0u), uvec4((0u | (((true ? _GLF_struct_replacement_14._f0._f3.workgroup_size : ((uint(uvec4(2474u, 1u, 1u, 0u)))))))), uint(((max((mix((clamp(vec2((((false ? (vec2(- 3816.2833, 911.648)) : injectionSwitch)))[0], (((injectionSwitch)[1]) - 0.0)), vec2((((false ? (vec2(- 3816.2833, 911.648)) : injectionSwitch)))[0], (((injectionSwitch)[1]) - 0.0)), vec2((((false ? (vec2(- 3816.2833, 911.648)) : injectionSwitch)))[0], (((injectionSwitch)[1]) - 0.0)))), vec2((0.9), (41.39)), bvec2(false, false))), injectionSwitch)).x)), ((((1u << (uint(4u))) >> (uint(4u))) << ((uint(uvec4((((clamp(uint(4u), uint(4u), uint(4u)))) | (uint(4u))), 1u, 0u, 1u))))) >> (uint(4u))), 0u)))) | (uvec4(0u, 0u, (clamp(((((((0u) - 0u)) ^ 0u)) + 0u), (~ (~ (((((((0u) - 0u)) ^ 0u)) + 0u)))), ((((((0u) - 0u)) ^ 0u)) + 0u))), 0u) << (uvec4(2u)))))) * ((workgroup_id) + 0u);
 uint virtual_gid = (uint(uvec4(workgroup_base + subgroup_id * ((min(uint(uint((max((~ (~ ((min(_GLF_struct_replacement_5._f3._f1.subgroup_size, _GLF_struct_replacement_5._f3._f1.subgroup_size))))), _GLF_struct_replacement_5._f3._f1.subgroup_size)))), uint(uint(_GLF_struct_replacement_5._f3._f1.subgroup_size))))) + subgroup_local_id, 1u, ((1u << (uint(7u))) >> (uint(7u))), uint((injectionSwitch.x)))));
 uint next_virtual_gid = (~ (~ (workgroup_base))) + (uint((uint((min(uvec4((min((uint(uvec4(((uint((uint((max(uvec2(subgroup_id, (1u & 1u)), uvec2(subgroup_id, (1u & 1u)))))))) - (0u >> ((~ ((max((((clamp(~ (uint(2u)), ~ ((min((((! ((false || (! ((true && (true))))))) ? uint(2u) : (atomicAdd(virtual_gid, workgroup_base)))), uint(2u)))), ~ (uint(2u))))) ^ (0u >> (uint(5u)))), (min(~ ((uint(uvec4(uint(2u), 0u, 0u, 0u)))), (clamp(~ (uint(2u)), ~ (max((uint(2u)), (1u * ((uint(2u)))))), (~ (~ (~ (uint(2u)))))))))))))))), 1u, 0u, 1u))), uint((uint(uvec4((uint(uvec2(subgroup_id, (1u & 1u)))), 0u, 0u, 0u)))))), 1u, 0u, uint((1.0 * ((injectionSwitch.x))))), uvec4((((((min((uint(uvec4(uint((uint(uvec2(subgroup_id, (1u & 1u))))), 1u, 0u, 1u))), uint((uint(uvec2(subgroup_id, (1u & 1u)))))))) - 0u)) << 0u), 1u, 0u, uint(((float(((false ? (mat3x2(- 485.319, - 64.91, - 821.405, 49.11, - 6117.5131, - 5.7)) : mat3x2(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)))))))))))))) * _GLF_struct_replacement_5._f3._f1.subgroup_size + (((false ? (workgroup_id) : (((subgroup_local_id + 1) | (subgroup_local_id + 1))))) % _GLF_struct_replacement_5._f3._f1.subgroup_size);
 buf[virtual_gid] = 1;
 if((false))
  return;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_5._f3._f1.subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if((false))
    return;
   if((! (! ((false)))))
    return;
   subgroupAll(true);
   if((((! (! (((! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
