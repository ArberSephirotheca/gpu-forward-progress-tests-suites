#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if((((false) || false)))
    return;
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if((false))
      return;
     return;
    }
   return;
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((! (! (((! (! (false)))))))) && true))
      return;
    }
   return;
  }
 if((! ((((bool(bvec4((! (! (((! ((false))) && true)))), ((injectionSwitch.x < injectionSwitch.y)), true, true))) && true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if(((bool(bvec3(false, true, false)))))
  {
   if(((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((((false) && true)))
  return;
 if((false))
  {
   if((((injectionSwitch.x > ((((injectionSwitch.y) * 1.0)) / 1.0)))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((((bool(bvec4(bool(bvec2(false, false)), false, true, false))))))
      return;
    }
   if((((((((true ? (0.0 + (injectionSwitch.x)) : (- 9420.6386)))) * 1.0) > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((! (! ((false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((! ((! ((true && (! ((false || (! ((false))))))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       return;
      }
     if(((! (((! (((! (! ((false) || false)))))) && true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > (mix(float(injectionSwitch.y), (((mix(float(float((3100.4948))), float((44.35)), bool(((injectionSwitch.x > injectionSwitch.y)))))) - 0.0), bool(false)))))))
          {
           if((false))
            return;
           return;
          }
         return;
         if((false))
          return;
        }
       return;
      }
     return;
     if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if(((bool(bool(bool(bvec2((false), false)))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if((false))
      return;
     if((false))
      return;
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((((bool(bvec3((bool(bvec3((false), true, false))), false, false))) && true)))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
    }
   return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((((((injectionSwitch) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((false || (false))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > (vec2(mat2(injectionSwitch, (dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0))).y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x = subgroup_size;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((true && ((false || ((((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((bool(bvec4(((! (! (bool(bvec4(false, false, false, false)))))), false, false, false)))))
  return;
 if((false))
  {
   if((((((injectionSwitch.x) - abs(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((! (! (false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      return;
     return;
    }
   return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
  return;
 uint workgroup_size = (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > (mix(float((- 2.8)), float((1.0 * ((mix(float((- 7.8)), float(injectionSwitch.y), bool(true)))))), bool(true)))))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((((bool(bool(bool(bvec3(false, true, false))))))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > (vec2(((true ? injectionSwitch[0] : (- 7439.1533))), injectionSwitch[1])).y))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((((false) && true)))
    return;
   return;
  }
 if((false))
  return;
 if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((! (true && ((! ((bool(bvec3((false), false, true)))))))))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if(((bool(bvec4(false, false, true, false)))))
    {
     if((false))
      return;
     if((((false) || false)))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 ((false ? (((clamp(uint((~ (~ (uvec3(workgroup_id, 0u, 1u))))), uint((~ (~ (uvec3(workgroup_id, 0u, 1u))))), uint((~ (~ (uvec3(workgroup_id, 0u, 1u))))))))) : GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z = workgroup_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((((false) || false)))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((true && (((true && (false))))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false || ((false))))
    {
     if((false))
      return;
     if((bool(bool(((((float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y)))))))
      return;
     return;
     if(((bool(bool(false)))))
      {
       if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
      }
    }
   if((((bool(bvec2((! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (- 7.8)), vec2((- 5.7), (clamp((injectionSwitch)[1], (clamp((((injectionSwitch)[1]) / 1.0), (injectionSwitch)[1], (injectionSwitch)[1])), (mix(float((float(mat4x3((injectionSwitch)[1], 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float((2.4)), bool(false)))))), bvec2(false, true))).y))))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bool(false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((clamp(((vec2(mat3x4(injectionSwitch, 0.0, 1.0, ((false ? (- 0.2) : ((float(vec4(float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, (max(0.0, (min(0.0, 0.0)))), 1.0, (((clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z;
 uint virtual_gid = workgroup_base + ((min(((((0u + (false ? (packUnorm4x8(vec4(- 77.69, - 611.820, 956.772, 17.95))) : ((subgroup_id) | 0u)))))) + (uint((injectionSwitch.x)) << ((0u | ((uint(uint(uint(7u)))))))), ((((0u + (false ? (packUnorm4x8(vec4(- 77.69, - 611.820, 956.772, 17.95))) : ((subgroup_id) | 0u)))))) + (uint((injectionSwitch.x)) << ((((((injectionSwitch.x < injectionSwitch.y)) ? 0u : (mix(subgroup_local_id, workgroup_base, false)))) | ((((uint(uint(uint(7u))))) | uint((injectionSwitch.x)))))))))) * GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((bool(bool((false || ((false)))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if(((((vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y = (((bool((bvec2(bvec2(bvec2((false || (true)), true)))))) ? (clamp(virtual_gid, virtual_gid, virtual_gid)) : (workgroup_id)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((true && ((! (! ((false)))))))
  return;
 if((false))
  return;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x + (((((((injectionSwitch.x < injectionSwitch.y)) ? (((uint(uvec3((((((((((min((subgroup_local_id + 1), (subgroup_local_id + 1))) % GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x))) << 0u))) - 0u) * 1u), 1u, 1u))) >> 0u)) + (min(0u, 0u)) : (subgroup_size))))) + uint((injectionSwitch.x)));
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y] = 1;
 if(((bool(bool((false || ((! (! (true && ((true && ((bool((bvec2(bvec2((bvec2(bvec4(bvec2((false), true), true, false)))))))))))))))))))))
  return;
 if((false))
  return;
 if(subgroup_local_id + ((1) >> 0) < ((GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) | (GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)).x)
  {
   if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if((bool(bool((false)))))
    return;
   atomicStore(buf[next_virtual_gid], uint((int(((max(0, 0)) | ((((int(int(int(2)))))) * 1))))), 4, 64, 4);
   if(((((((float(mat2x3(injectionSwitch.x, 0.0, tan(0.0), (min(1.0, 1.0)), 1.0, (((min(0.0, ((true ? ((((false ? (- 4.2) : 0.0) * 1.0))) : (2721.6585)))))) - abs(0.0))))) - 0.0)) > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if(((false || (false))))
      return;
     if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(((bool((bvec2((bvec2(bvec4(bvec2(bvec2(bool(bvec4(((false) || false), false, ((injectionSwitch.x > ((((bool(bvec2((injectionSwitch.x < injectionSwitch.y), (! (((! (true)) && true))))))) ? injectionSwitch : (vec2(- 42.97, 9586.0705)))).y)), (! (! ((bool(bool((((bool(bool(injectionSwitch.x < (vec2(mat2x3(injectionSwitch, ((0.0) / (dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0)))), 0.0, 1.0, 0.0))).y))))))))))))), false)), false, true)))))))));
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
  }
 else
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((! (! ((! (! ((! (! ((false || ((((false)) || false)))))))))))))
    return;
   if((false))
    return;
   atomicStore(buf[((((((0u) | (0u))) * 1u) | (uint(uvec4(next_virtual_gid, 1u, (0u | (0u << (uint(5u)))), 0u)))))], uint(2), 4, 64, 4);
   if((false))
    return;
   if(((bool((((injectionSwitch.x < injectionSwitch.y)) && (bool(bool(bvec4((bool(bvec4((false), ((true) && true), true, ((injectionSwitch.x < injectionSwitch.y))))), false, true, true)))))))))
    {
     if((false))
      return;
     if((false))
      {
       if(((((((mix(vec2((injectionSwitch)[0], (- 845.037)), vec2((480.466), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x > (clamp(injectionSwitch, injectionSwitch, ((injectionSwitch) * vec2(1.0, 1.0)))).y))))
        return;
       if((false))
        return;
       if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((false))
      {
       if(((((min(injectionSwitch, ((true ? injectionSwitch : (injectionSwitch))))).x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! ((bool(bool(! (false))))))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if((false))
    return;
   if((! (! ((((false)) && true)))))
    return;
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((((false) || false)))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if(((! (! (false)))))
      return;
     if(((bool(bvec4(false, false, true, false)))))
      return;
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((bool(bvec2(false, ((injectionSwitch.x < injectionSwitch.y)))))))
  {
   if((false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
