#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((uint((((~ (~ (uvec4((clamp((clamp((((((uint(uvec2((workgroup_size) * 1u, 1u))) - 0u)) * 1u)), (uint(uvec2((workgroup_size) * 1u, 1u))), (uint(uvec2((workgroup_size) * 1u, 1u))))), (clamp((uint(uvec3((uint(uvec2(((false ? (28982u) : (workgroup_size) * ((false ? (subgroup_size) : 1u)))), 1u))), 1u, (max(0u, 0u))))), (uint(((((injectionSwitch.x < injectionSwitch.y)) ? uint((clamp((uint((uvec2(uvec2((((uvec2(uvec2(uvec2((workgroup_size) * 1u, 1u)))) - uvec2(0u, 0u)))))))), (uint((uvec2(uvec2((((uvec2(uvec2(uvec2((workgroup_size) * 1u, 1u)))) - uvec2(0u, 0u)))))))), (uint((uvec2(uvec2((((uvec2(uvec2(uvec2((workgroup_size) * 1u, 1u)))) - uvec2(0u, 0u))))))))))) : (workgroup_size))))), ((true ? (((uint(uvec2((workgroup_size) * 1u, (clamp(1u, 1u, 1u)))))) / 1u) : (subgroup_id))))), (uint(uvec2((workgroup_size) * 1u, 1u))))), ((1u << (((((uint((0u + (6u)))) << 0u) >> 0u)))) >> (((((((((uint(6u))) - (0u & 143821u))) | 0u) | ((~ (~ (((((uint(6u))) - (0u & 143821u))) | 0u)))))) - uint((injectionSwitch.x))))), 0u, (1u & 1u)))))) / uvec4((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))))) * workgroup_id;
 if((bool(bool((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(((((! ((bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if((((((false)) || false)) && true))
    return;
   return;
   if((false))
    return;
  }
 uint virtual_gid = (min((~ (~ (workgroup_base + (0u ^ ((0u | (((((((uint(uint((subgroup_id) - 0u))) | (uint(uint((subgroup_id) - 0u))))) - 0u))) * subgroup_size))))))), workgroup_base + (0u ^ (((~ (~ (0u))) | (((subgroup_id) - 0u) * subgroup_size)))))) + (((min((~ (~ ((min(uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u))), uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), (~ (~ (uint(uint(subgroup_local_id))))))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u)))))))), (min((((0u | ((min(uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u))), uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u)))))))) - (0u ^ 0u)), (((0u | ((min(uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u))), uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u)))))))) | ((min(uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u))), uint(uvec4((clamp((max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), (max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))), 0u, 1u, (1u | 0u)))))))))))));
 uint next_virtual_gid = ((((((workgroup_base + subgroup_id * subgroup_size)) >> 0u) * 1u) + 0u)) + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], (clamp((((true ? (((min(min((max(uint(((2) ^ (~ (~ (0))))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), uint(((2) ^ 0))), min((max(uint(((2) ^ 0)), (clamp((clamp((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (clamp((clamp((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), ((false ? (workgroup_id) : (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (uint(uvec2((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), 0u))))))), uint(((2) ^ 0))))))) | 0u : (workgroup_id)))), ((true ? (((true ? (((min(min((max(uint(((2) ^ (~ (~ (0))))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), uint(((2) ^ 0))), min((max(uint(((2) ^ 0)), (clamp((clamp((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (clamp((clamp((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), ((false ? (workgroup_id) : (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (uint(uvec2((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), 0u))))))), uint(((2) ^ 0))))))) | 0u : (workgroup_id)))) : (workgroup_size))), (((true ? (((min(min((max(uint(((2) ^ (~ (~ (0))))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), uint(((2) ^ 0))), min((max(uint(((2) ^ 0)), (clamp((clamp((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (clamp((clamp((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), ((false ? (workgroup_id) : (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (min(uint(((2) ^ 0)), uint(((2) ^ 0)))))), (uint(uvec2((min(uint(((2) ^ 0)), uint(((2) ^ 0)))), 0u))))))), uint(((2) ^ 0))))))) | 0u : (workgroup_id)))))), 4, 64, (~ (~ (((4) << 0)))));
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], ((uint(2)) | (uint(2))), ((min(((((0) * 1)) | ((clamp(0, (max(0, 0)), 0)))), 0)) | (4)), ((64) << 0), 4);
   subgroupAll((false || (true)));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
