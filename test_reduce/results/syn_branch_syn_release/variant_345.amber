#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = (0 >> (int(8))); _injected_loop_counter != ((1 << (((int(7)) ^ 0))) >> (int(7))); _injected_loop_counter ++)
  {
   if(((bool(bvec3(false, false, ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
  {
   do
    {
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (int((injectionSwitch.x)) & - 68286); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((((false) && true)))
            {
             if(true)
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while((! (! (false))));
          }
         else
          {
          }
         if(false)
          {
          }
         else
          {
           if(((true && (false))))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  {
   if(false)
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(2))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = ((((1 << (int(1))) >> (int(1))) << (int(7))) >> (int(7))); _injected_loop_counter > (0 >> (int(5))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if(true)
  {
   if((false))
    barrier();
   if((false))
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != (0 << (int(8))); _injected_loop_counter --)
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           if((false))
            {
             if(true)
              {
               if((false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
     while(false);
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if((false))
    barrier();
   for(int _injected_loop_counter = ((1) | 0); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if(true)
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         do
          {
           if(false)
            {
             if(((bool((bvec2(bvec4(bvec2(false, true), false, true)))))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = ((1 << (int(7))) >> ((1 * (int(7))))); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               for(int _injected_loop_counter = (0 >> (int(1))); _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 do
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if(true)
                      {
                       if(((true && (false))))
                        barrier();
                       for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                        {
                         if((false))
                          {
                           do
                            {
                             do
                              {
                               do
                                {
                                 if((false))
                                  barrier();
                                }
                               while(false);
                               if(true)
                                {
                                 for(int _injected_loop_counter = (0 >> (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                }
                               else
                                {
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           while(false);
                          }
                        }
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 while(false);
                }
              }
            }
          }
         while((bool(bvec3((false || (false)), false, false))));
        }
       else
        {
        }
      }
     else
      {
      }
     if((false))
      barrier();
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   if((false))
    barrier();
  }
 else
  {
   do
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       do
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            barrier();
           if((false))
            barrier();
           do
            {
             if(false)
              {
              }
             else
              {
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
              }
            }
           while((false || (false)));
          }
        }
       while(false);
      }
     else
      {
      }
     if((false))
      barrier();
    }
   while(false);
   if(false)
    {
    }
   else
    {
     if(true)
      {
       if(((bool(bvec3(false, true, true)))))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((false || (false)))
              {
              }
             else
              {
               if(((! (! (false)))))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         barrier();
        }
      }
     else
      {
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(true)
  {
   if((false))
    barrier();
   if(((bool(bvec3(false, false, false)))))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
         do
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(false)
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   if((((bool(bvec4(bool(bvec2(false, false)), false, false, true))))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         barrier();
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            {
                             if(true)
                              {
                               if(((true && (false))))
                                barrier();
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           while(false);
          }
         while((bool(bvec4(false, false, false, true))));
        }
       else
        {
         if((((false) && true)))
          barrier();
        }
       if((false))
        barrier();
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
    }
   else
    {
     if(true)
      {
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                    }
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               barrier();
              }
            }
           if(true)
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
               do
                {
                 barrier();
                }
               while(false);
               if((false))
                barrier();
              }
            }
           else
            {
            }
           if((false))
            {
             for(int _injected_loop_counter = (((1 & 1) << (int(2))) >> (int(2))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               barrier();
               if((false))
                barrier();
              }
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < ((((1 << (int(6))) >> (int(6))) << (int(0))) >> (int(0))); _injected_loop_counter ++)
            {
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                   if(true)
                    {
                     do
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if((false))
                          barrier();
                         if(false)
                          {
                          }
                         else
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                               for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < (min(1, 1)); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     if(true)
                                      {
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         for(int _injected_loop_counter = 1; _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               barrier();
                                              }
                                            }
                                           if(((injectionSwitch.x < injectionSwitch.y)))
                                            {
                                             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                              {
                                               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                                {
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                   if(false)
                                                    {
                                                     if((false))
                                                      barrier();
                                                    }
                                                   else
                                                    {
                                                     barrier();
                                                    }
                                                  }
                                                }
                                               if(((injectionSwitch.x < injectionSwitch.y)))
                                                {
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  barrier();
                                                }
                                               else
                                                {
                                                }
                                               if(((injectionSwitch.x < injectionSwitch.y)))
                                                {
                                                 do
                                                  {
                                                   if(false)
                                                    {
                                                    }
                                                   else
                                                    {
                                                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                                      {
                                                       if((bool(bvec3(true, false, true))))
                                                        {
                                                         if((false))
                                                          {
                                                           if(false)
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if((false))
                                                              barrier();
                                                             if(false)
                                                              {
                                                              }
                                                             else
                                                              {
                                                               do
                                                                {
                                                                 if((false))
                                                                  {
                                                                   do
                                                                    {
                                                                     barrier();
                                                                    }
                                                                   while((bool(bvec3(false, true, true))));
                                                                  }
                                                                }
                                                               while(((injectionSwitch.x > injectionSwitch.y)));
                                                               if(((injectionSwitch.x > injectionSwitch.y)))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                                                  {
                                                                  }
                                                                 else
                                                                  {
                                                                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                                                    {
                                                                     for(int _injected_loop_counter = 0; _injected_loop_counter < (((1 & 1)) ^ 0); _injected_loop_counter ++)
                                                                      {
                                                                       if(true)
                                                                        {
                                                                         do
                                                                          {
                                                                           if((false))
                                                                            {
                                                                             do
                                                                              {
                                                                               barrier();
                                                                              }
                                                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                                                             if((false))
                                                                              barrier();
                                                                            }
                                                                           if((false))
                                                                            barrier();
                                                                          }
                                                                         while(false);
                                                                         if((false))
                                                                          barrier();
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                     do
                                                                      {
                                                                       do
                                                                        {
                                                                         barrier();
                                                                        }
                                                                       while(((injectionSwitch.x > injectionSwitch.y)));
                                                                      }
                                                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                              barrier();
                                                            }
                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                            {
                                                             do
                                                              {
                                                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                                                {
                                                                 if(true)
                                                                  {
                                                                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                                                    {
                                                                     if(false)
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                                                        {
                                                                         if((false))
                                                                          barrier();
                                                                         if((false))
                                                                          barrier();
                                                                        }
                                                                       else
                                                                        {
                                                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                                                          {
                                                                          }
                                                                         else
                                                                          {
                                                                           if(true)
                                                                            {
                                                                             for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(7))); _injected_loop_counter --)
                                                                              {
                                                                               if((false))
                                                                                {
                                                                                 do
                                                                                  {
                                                                                   barrier();
                                                                                  }
                                                                                 while(false);
                                                                                }
                                                                              }
                                                                            }
                                                                           else
                                                                            {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                     if((false))
                                                                      {
                                                                       if(false)
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         barrier();
                                                                        }
                                                                      }
                                                                     barrier();
                                                                     if((! (! (false))))
                                                                      {
                                                                       if(true)
                                                                        {
                                                                         if((false))
                                                                          barrier();
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                     else
                                                                      {
                                                                       if((false))
                                                                        barrier();
                                                                       if((false))
                                                                        {
                                                                         if(false)
                                                                          {
                                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                                            barrier();
                                                                          }
                                                                         else
                                                                          {
                                                                           barrier();
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                 else
                                                                  {
                                                                  }
                                                                }
                                                              }
                                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                       if((false))
                                                        barrier();
                                                       if(false)
                                                        {
                                                         if((false))
                                                          barrier();
                                                        }
                                                       else
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          barrier();
                                                        }
                                                      }
                                                    }
                                                  }
                                                 while(false);
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           else
                                            {
                                            }
                                           if(true)
                                            {
                                             if(((injectionSwitch.x < injectionSwitch.y)))
                                              {
                                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                                {
                                                 if((false))
                                                  {
                                                   do
                                                    {
                                                     barrier();
                                                    }
                                                   while(false);
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    barrier();
                                                  }
                                                }
                                               do
                                                {
                                                 do
                                                  {
                                                   if((false))
                                                    barrier();
                                                  }
                                                 while(false);
                                                 if((false))
                                                  barrier();
                                                }
                                               while(((injectionSwitch.x > injectionSwitch.y)));
                                              }
                                             else
                                              {
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      barrier();
                                     do
                                      {
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         do
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           if(false)
                                            {
                                             if((false))
                                              barrier();
                                            }
                                           else
                                            {
                                             if(true)
                                              {
                                               if((false))
                                                {
                                                 if(true)
                                                  {
                                                   barrier();
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             else
                                              {
                                              }
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 barrier();
                                                }
                                              }
                                            }
                                          }
                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                    }
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                }
                              }
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                        }
                      }
                     while(false);
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                  }
                }
              }
             if((false))
              barrier();
            }
           do
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (1 & ((1 << (int(4))) >> (int(4)))); _injected_loop_counter ++)
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (((false ? (_injected_loop_counter) : int(7))))) >> (int(7))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             do
                              {
                               do
                                {
                                 if(true)
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     do
                                      {
                                       if((false))
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(false);
                                        }
                                      }
                                     while(false);
                                     for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       if(false)
                                        {
                                         if((false))
                                          barrier();
                                        }
                                       else
                                        {
                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                          {
                                           if((false))
                                            {
                                             if((false))
                                              barrier();
                                             if(false)
                                              {
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                              }
                                             else
                                              {
                                               if(true)
                                                {
                                                 if(true)
                                                  {
                                                   if(true)
                                                    {
                                                     for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                                                      {
                                                       for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
                                                        {
                                                         do
                                                          {
                                                           barrier();
                                                          }
                                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                                        }
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 else
                                                  {
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    barrier();
                                                  }
                                                 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                                                  barrier();
                                                 if((false))
                                                  barrier();
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                   for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > (0 >> (int(7))); _injected_loop_counter --)
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       do
                                        {
                                         if((false))
                                          barrier();
                                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                          {
                                           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                            {
                                             do
                                              {
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 if(((false || (false))))
                                                  {
                                                   if((bool(bvec4(true, false, true, false))))
                                                    {
                                                     if((false))
                                                      barrier();
                                                     if((false))
                                                      barrier();
                                                     barrier();
                                                     for(int _injected_loop_counter = 1; _injected_loop_counter > (((clamp(0, 0, 0))) << 0); _injected_loop_counter --)
                                                      {
                                                       if((false))
                                                        {
                                                         do
                                                          {
                                                           if(((injectionSwitch.x > injectionSwitch.y)))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             barrier();
                                                            }
                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                            barrier();
                                                          }
                                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                                        }
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        barrier();
                                                      }
                                                     if((false))
                                                      barrier();
                                                    }
                                                   else
                                                    {
                                                    }
                                                   do
                                                    {
                                                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                      {
                                                       do
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          barrier();
                                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                                          {
                                                           if((false))
                                                            barrier();
                                                          }
                                                         else
                                                          {
                                                          }
                                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(false)
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if(true)
                                                              {
                                                               do
                                                                {
                                                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                                                  {
                                                                   do
                                                                    {
                                                                     if(((! (! (false)))))
                                                                      barrier();
                                                                    }
                                                                   while(false);
                                                                   for(int _injected_loop_counter = (- 31134 & 0); _injected_loop_counter < (1 | (0 << (int(8)))); _injected_loop_counter ++)
                                                                    {
                                                                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                                                      {
                                                                       if(((true && (((false) || false)))))
                                                                        barrier();
                                                                      }
                                                                     if((false))
                                                                      {
                                                                       if((false))
                                                                        barrier();
                                                                       do
                                                                        {
                                                                         if(false)
                                                                          {
                                                                          }
                                                                         else
                                                                          {
                                                                           barrier();
                                                                          }
                                                                         if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
                                                                          barrier();
                                                                         if((false))
                                                                          barrier();
                                                                        }
                                                                       while(false);
                                                                       do
                                                                        {
                                                                         if(true)
                                                                          {
                                                                           if((false))
                                                                            barrier();
                                                                          }
                                                                         else
                                                                          {
                                                                          }
                                                                        }
                                                                       while(false);
                                                                      }
                                                                     do
                                                                      {
                                                                       if(false)
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                                          barrier();
                                                                        }
                                                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                                                        {
                                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                                          {
                                                                           do
                                                                            {
                                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                                              barrier();
                                                                            }
                                                                           while(false);
                                                                           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                                                            {
                                                                             if((false || (false)))
                                                                              {
                                                                              }
                                                                             else
                                                                              {
                                                                               barrier();
                                                                               if((false))
                                                                                barrier();
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                       else
                                                                        {
                                                                         do
                                                                          {
                                                                           if(((injectionSwitch.x < injectionSwitch.y)))
                                                                            {
                                                                             do
                                                                              {
                                                                               for(int _injected_loop_counter = (int((int(ivec3(int((~ (~ (1)))), 1, 0))))); _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                                                                                {
                                                                                 for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
                                                                                  {
                                                                                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                                                    {
                                                                                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
                                                                                      {
                                                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                                                        {
                                                                                         if((false))
                                                                                          barrier();
                                                                                         if((false))
                                                                                          barrier();
                                                                                         if((false))
                                                                                          {
                                                                                           do
                                                                                            {
                                                                                             if(((injectionSwitch.x < injectionSwitch.y)))
                                                                                              {
                                                                                               barrier();
                                                                                               if((false))
                                                                                                barrier();
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                            }
                                                                                           while(false);
                                                                                          }
                                                                                         if((false))
                                                                                          {
                                                                                           if((false))
                                                                                            barrier();
                                                                                           barrier();
                                                                                          }
                                                                                         if(true)
                                                                                          {
                                                                                           do
                                                                                            {
                                                                                             if((false))
                                                                                              barrier();
                                                                                             if(true)
                                                                                              {
                                                                                               if(false)
                                                                                                {
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                 barrier();
                                                                                                }
                                                                                               if((false))
                                                                                                barrier();
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                             for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                                                                              {
                                                                                               if((false))
                                                                                                {
                                                                                                 for(int _injected_loop_counter = (0 >> ((0 ^ (int(5))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                                                                                  {
                                                                                                   barrier();
                                                                                                   if((false))
                                                                                                    barrier();
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                                                              barrier();
                                                                                             if((false))
                                                                                              barrier();
                                                                                            }
                                                                                           while(((injectionSwitch.x > injectionSwitch.y)));
                                                                                          }
                                                                                         else
                                                                                          {
                                                                                          }
                                                                                         if((false))
                                                                                          barrier();
                                                                                         do
                                                                                          {
                                                                                           if((false))
                                                                                            {
                                                                                             if(((injectionSwitch.x < injectionSwitch.y)))
                                                                                              {
                                                                                               if(((true && (bool(bvec4((false || (false)), true, true, false))))))
                                                                                                {
                                                                                                 if((false))
                                                                                                  barrier();
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                 do
                                                                                                  {
                                                                                                   do
                                                                                                    {
                                                                                                     barrier();
                                                                                                    }
                                                                                                   while((true && (false)));
                                                                                                  }
                                                                                                 while(false);
                                                                                                }
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                             if((false))
                                                                                              barrier();
                                                                                            }
                                                                                          }
                                                                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                                                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                                                                          {
                                                                                          }
                                                                                         else
                                                                                          {
                                                                                           if(false)
                                                                                            {
                                                                                            }
                                                                                           else
                                                                                            {
                                                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                                                              barrier();
                                                                                             do
                                                                                              {
                                                                                               if((false))
                                                                                                {
                                                                                                 do
                                                                                                  {
                                                                                                   barrier();
                                                                                                  }
                                                                                                 while(false);
                                                                                                }
                                                                                              }
                                                                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                                                                            }
                                                                                          }
                                                                                         if(true)
                                                                                          {
                                                                                           if(true)
                                                                                            {
                                                                                             if((false))
                                                                                              barrier();
                                                                                            }
                                                                                           else
                                                                                            {
                                                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                                                              {
                                                                                               if((false))
                                                                                                barrier();
                                                                                               barrier();
                                                                                               if((false))
                                                                                                barrier();
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                         else
                                                                                          {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                   if((false))
                                                                                    barrier();
                                                                                  }
                                                                                }
                                                                              }
                                                                             while(false);
                                                                            }
                                                                           else
                                                                            {
                                                                            }
                                                                          }
                                                                         while(false);
                                                                        }
                                                                      }
                                                                     while(false);
                                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                                      barrier();
                                                                    }
                                                                   if(false)
                                                                    {
                                                                    }
                                                                   else
                                                                    {
                                                                     if((false))
                                                                      {
                                                                       do
                                                                        {
                                                                         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                                                          {
                                                                           barrier();
                                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                                            barrier();
                                                                           if((false))
                                                                            barrier();
                                                                          }
                                                                        }
                                                                       while(((injectionSwitch.x > injectionSwitch.y)));
                                                                      }
                                                                     if((false))
                                                                      barrier();
                                                                    }
                                                                  }
                                                                 else
                                                                  {
                                                                   if(false)
                                                                    {
                                                                    }
                                                                   else
                                                                    {
                                                                     do
                                                                      {
                                                                       if((false))
                                                                        {
                                                                         for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > (0 | (0 >> (int(5)))); _injected_loop_counter --)
                                                                          {
                                                                           do
                                                                            {
                                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                                              {
                                                                               do
                                                                                {
                                                                                 barrier();
                                                                                }
                                                                               while(false);
                                                                              }
                                                                            }
                                                                           while(((injectionSwitch.x > injectionSwitch.y)));
                                                                           do
                                                                            {
                                                                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                                              {
                                                                               barrier();
                                                                              }
                                                                            }
                                                                           while(false);
                                                                          }
                                                                         if((false))
                                                                          {
                                                                           do
                                                                            {
                                                                             barrier();
                                                                            }
                                                                           while(false);
                                                                          }
                                                                        }
                                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                                        barrier();
                                                                      }
                                                                     while(false);
                                                                    }
                                                                  }
                                                                }
                                                               while(((false) || false));
                                                              }
                                                             else
                                                              {
                                                               if((false))
                                                                barrier();
                                                               if((false))
                                                                barrier();
                                                              }
                                                             if(false)
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(true)
                                                                {
                                                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                                  {
                                                                   do
                                                                    {
                                                                     if((false))
                                                                      barrier();
                                                                    }
                                                                   while(false);
                                                                  }
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                       while(((injectionSwitch.x > injectionSwitch.y)));
                                                      }
                                                    }
                                                   while(false);
                                                   if((false))
                                                    barrier();
                                                  }
                                                }
                                              }
                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                            }
                                          }
                                        }
                                       while((true && (false)));
                                      }
                                    }
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               while(false);
                              }
                             while(false);
                            }
                          }
                        }
                       if((false))
                        barrier();
                       if((false))
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     while(false);
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             else
              {
              }
             if((false))
              barrier();
             do
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if(true)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           while(false);
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
      }
     else
      {
      }
    }
   if(false)
    {
    }
   else
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(false);
          }
        }
      }
     else
      {
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false || (true)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((! (! (((((injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     if(true)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
      }
     else
      {
      }
     if((false))
      barrier();
     if(true)
      {
       barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = (0 << (int(2))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if(((bool(bvec2(((false) || false), false)))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if(true)
    {
     if((false))
      {
       for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((false))
          {
           if(((bool(bvec4(false, true, false, true)))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(false);
              }
             else
              {
              }
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((true && (((true) || false))))
              {
               do
                {
                 barrier();
                }
               while(false);
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
        }
       barrier();
      }
    }
   else
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if(false)
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     else
      {
       if((false))
        barrier();
      }
     if((false))
      {
       if(true)
        {
         if(true)
          {
           for(int _injected_loop_counter = ((1 << (int(6))) >> (((int(6)) << 0))); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = (0 | 1); _injected_loop_counter != (int((injectionSwitch.x)) >> (int(1))); _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
         do
          {
           barrier();
          }
         while(false);
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (((int(4)) | (int(4))))) >> (int(4))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (0 & - 89279); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if(false)
      {
      }
     else
      {
       if(true)
        {
         if((false))
          barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
       if((false))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(true)
          {
           if(true)
            {
             if(true)
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
  {
   if(true)
    {
     if(true)
      {
       if(false)
        {
        }
       else
        {
         if(true)
          {
           for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               do
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                    }
                   if(true)
                    {
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if(true)
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = ((1 << (int(7))) >> (((int(7)) << 0))); _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                           do
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(true)
                              {
                               do
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   do
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   while(false);
                                  }
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = (1 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                  }
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != ((1 ^ 1) & - 50273); _injected_loop_counter --)
                                  {
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                      {
                                       if((! (((! (((((injectionSwitch.x < injectionSwitch.y))) || false))) && true))))
                                        {
                                         if(((bool(bvec2(false, false)))))
                                          barrier();
                                         if((false))
                                          barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                      {
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(((injectionSwitch.x > injectionSwitch.y)))
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       for(int _injected_loop_counter = 0; _injected_loop_counter != (((1 << (int(6))) >> (int(6))) | 1); _injected_loop_counter ++)
                                        {
                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                          {
                                           if((false))
                                            barrier();
                                           if((false))
                                            {
                                             if(((injectionSwitch.x < injectionSwitch.y)))
                                              {
                                               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                                                {
                                                 do
                                                  {
                                                   barrier();
                                                  }
                                                 while(false);
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                       if((false))
                                        barrier();
                                       do
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                        }
                                       while(false);
                                       if(false)
                                        {
                                         for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 << ((0 ^ (int(4))))) << (int(4))); _injected_loop_counter --)
                                          {
                                           if((false))
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                               barrier();
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                         if((false))
                                          {
                                           do
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if((false))
                                                {
                                                 if((false))
                                                  barrier();
                                                 barrier();
                                                }
                                              }
                                            }
                                           while(false);
                                           for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (((int(5)) ^ 0))) >> (int(5))); _injected_loop_counter ++)
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               barrier();
                                              }
                                             if((false))
                                              barrier();
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              barrier();
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                                  barrier();
                                }
                               while((true && (false)));
                              }
                             else
                              {
                              }
                            }
                           while(false);
                          }
                        }
                      }
                     while(false);
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(false);
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if((false))
                barrier();
               do
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((false))
                    {
                     if((false || ((true && (true)))))
                      {
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                     do
                      {
                       if(true)
                        {
                         do
                          {
                           barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                       else
                        {
                        }
                      }
                     while(false);
                    }
                  }
                 while(false);
                 if((false))
                  barrier();
                }
               while(false);
              }
             else
              {
               if((false))
                barrier();
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            barrier();
           do
            {
             barrier();
            }
           while(false);
          }
        }
      }
    }
   else
    {
    }
  }
 if((false))
  {
   if(true)
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((false))
        barrier();
       do
        {
         if(true)
          {
           if(false)
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if((false))
              barrier();
            }
          }
         else
          {
          }
        }
       while(false);
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     do
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << ((int(ivec3(int(6), 0, 1))))) >> (int(6))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               if(false)
                {
                }
               else
                {
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                     do
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     while(false);
                    }
                  }
                }
              }
             else
              {
               do
                {
                 if(true)
                  {
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     if((false))
                      {
                       if(true)
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((false))
                      barrier();
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       if(((false) && true))
                        {
                        }
                       else
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                             for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 ^ 0) & 1); _injected_loop_counter ++)
                                  {
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                  }
                }
               while(false);
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             do
              {
               if((false))
                {
                 for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(6))) >> (int(6))); _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 do
                  {
                   for(int _injected_loop_counter = (int((injectionSwitch.y)) ^ (0 ^ (1 ^ 1))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 while(false);
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while(false);
            }
          }
         else
          {
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   buf[virtual_gid] = 1;
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     if(((! (! (false)))))
      {
       if(true)
        {
         if(false)
          {
          }
         else
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     do
      {
       if(true)
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
        }
       else
        {
        }
      }
     while(false);
    }
   else
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           do
            {
             if((false))
              {
               for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 barrier();
                }
               if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         for(int _injected_loop_counter = (0 ^ ((min(1, 1)))); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < ((1 << (int(4))) >> ((clamp(int(4), int(4), int(4))))); _injected_loop_counter ++)
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(true)
          {
           do
            {
             if((false))
              barrier();
            }
           while(false);
          }
         else
          {
          }
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((false))
              barrier();
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(true)
          {
           if(true)
            {
             if(true)
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          barrier();
                        }
                       while(false);
                       if(true)
                        {
                         if(((false) && true))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 if((false))
                  barrier();
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(true)
                {
                 if((false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       do
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(true)
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             else
              {
              }
             if(false)
              {
              }
             else
              {
               if((((false) && true)))
                barrier();
              }
            }
           if(((false) && true))
            {
            }
           else
            {
             barrier();
            }
           for(int _injected_loop_counter = (0 ^ ((((1 << (int(4))) >> (int(4))) << (int(0))) >> (int(0)))); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(true)
          {
           do
            {
             if(false)
              {
              }
             else
              {
               do
                {
                 if(((true) || false))
                  {
                   for(int _injected_loop_counter = (0 | int((injectionSwitch.y))); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if(true)
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                         if(true)
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if(true)
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                         do
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             if(false)
                              {
                              }
                             else
                              {
                               if((false))
                                barrier();
                               do
                                {
                                 if(true)
                                  {
                                   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                                  }
                                 else
                                  {
                                  }
                                }
                               while(false);
                              }
                             if(((! (! (false)))))
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = 1; _injected_loop_counter > (15553 & 0); _injected_loop_counter --)
                                {
                                 if((false))
                                  barrier();
                                }
                               barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           while(false);
          }
         else
          {
          }
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               if(true)
                {
                 barrier();
                }
               else
                {
                }
               if(((! (! (false)))))
                barrier();
              }
            }
          }
         if((false))
          barrier();
        }
       while(false);
      }
    }
  }
 else
  {
   if((false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
