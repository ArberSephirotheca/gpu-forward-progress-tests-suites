#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! ((bool(bvec3((bool(bvec4(((! (false)) && true), true, false, (! (! (true)))))), false, true)))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size;
 if((false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size;
 uvec3 GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((bool(bvec4((false), false, false, true))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if(((true && (false))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if((false))
  barrier();
 if((false))
  {
   if((((false) || false)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((! (((! (! (bool(bvec4(! ((! (! ((false))))), true, false, true)))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false || ((true && (true)))) && (false))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((! (! ((! (((! (injectionSwitch.x > injectionSwitch.y)) || false))))))))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (mix(float((mix(float((- 8263.9137)), float(injectionSwitch.y), bool(true)))), float((4539.1636)), bool(false)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size;
 if((false))
  barrier();
 if((false))
  barrier();
 uvec4 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id;
 if((false))
  barrier();
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((((float((mat2x3(mat2x4((transpose(transpose(mat2x3(injectionSwitch.x, (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0))))))))) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > (min(((injectionSwitch.y) * 1.0), injectionSwitch.y))))))
  barrier();
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(((((vec2(injectionSwitch[0], ((injectionSwitch[1]) + 0.0))).x > (clamp(injectionSwitch, injectionSwitch, (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && ((false))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if((((((injectionSwitch.x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (abs(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) && true)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 if(((((vec2(injectionSwitch[0], ((((((injectionSwitch.x > injectionSwitch.y) || (! (! (false)))))) ? (injectionSwitch) : injectionSwitch))[1])).x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z = (((((~ (~ (subgroup_id))) ^ 0u))) | (0u << (uint(6u))));
 GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.z = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z;
 if((true && ((false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.y = ((GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.z) | (GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.z));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.w = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.y;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    {
     if((false || ((false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((((injectionSwitch.x > (min((max(injectionSwitch.y, injectionSwitch.y)), (max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w = subgroup_size;
 if((false))
  barrier();
 if((! (((! ((false))) && true))))
  {
   if(((bool(bvec4((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false))), false, false, (bool(bvec2(false, true))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((bool(bvec4(((true && (false))), false, true, true))))
      barrier();
     barrier();
    }
  }
 if(((((true && (false))) && true)))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w;
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((false ? (1.0) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      {
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((! (! ((false)))))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((true && (false))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y)) || (((((bool(bvec4((! ((true && (! (false))))), true, true, true))))) && true))))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((true && ((bool(bvec4((((injectionSwitch.x > (((min((max(float(mat3((injectionSwitch.y) - 0.0, (dot(vec2(0.0, abs(0.0)), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0)), float(mat3((injectionSwitch.y) - 0.0, (dot(vec2(0.0, abs(0.0)), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, (mix(float(((true ? abs(1.0) : (9.7)))), float((- 7443.1657)), bool(false))), 0.0, 1.0)))), float(mat3((injectionSwitch.y) - 0.0, (dot(vec2(0.0, abs(0.0)), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0))))))))), true, false, false))))) || false)))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 1719.3024)), bool(false)))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec4(false, false, false, false)))))
  barrier();
 if(((bool(bvec3(false, true, true)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((false || (false))))
    {
     if((false))
      {
       if((((true && ((((bool(bvec4((injectionSwitch.x > (float(mat3x2(injectionSwitch.y, 0.0, cos(0.0), 0.0, 0.0, 0.0)))), true, false, false)))) && true))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec4(false, (false || (false)), true, (((mix(float((- 6.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((false) || false)))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if((false))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.y = (~ (~ (num_workgroup)))) ^ 0u);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.y = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.y;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((((false)) && true)) && true))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 ((0u | ((((false ? (subgroup_size) : ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.x = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.y) * 1u))) ^ 0u))));
 if((false))
  {
   if(((bool(bvec4((false || (((injectionSwitch.x > injectionSwitch.y)))), false, ((injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(((true && ((bool(bvec2(false, true)))))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.w = workgroup_size;
 if((((false)) && true))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((false) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((((float(mat4x2(injectionSwitch.x, abs(0.0), 0.0, (min(log(1.0), log(1.0))), (injectionSwitch.y), 1.0, 1.0, 0.0))) / 1.0)) > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.w = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.w;
 if((false))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 (~ (~ ((0u ^ (((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.w) / 1u))))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if((((((clamp((0.0 + (mix(float(injectionSwitch.x), float((- 681.753)), bool(false)))), mix(float(injectionSwitch.x), float((- 681.753)), bool(false)), (min(mix(float(injectionSwitch.x), float((- 681.753)), bool(false)), mix(float(injectionSwitch.x), float((- 681.753)), bool(false))))))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((bool(bvec4((false), true, true, false))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (mix(vec2((1.3), (- 589.671)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && ((bool(bvec3(false, false, false)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if(((((mix(vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(((vec2(7.6, - 1.0).s)), (- 8.5)), bvec2(false, false))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy.y = workgroup_id;
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 if(((! (! (((false) && true))))))
  {
   if((((! (! ((false))))) && true))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 uint workgroup_base = (((((min(true ? GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y : (GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y), (~ (~ (true ? ((true ? (uint(uvec4((clamp(GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y, GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y, GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y)), 0u, 0u, 0u))) : (subgroup_id))) : (GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y)))))) << 0u)))) * (((((injectionSwitch.x < injectionSwitch.y)) ? (clamp(~ (((~ ((((((min((min(GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy, GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy)), GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy)).y))) | 0u) + 0u)) >> 0u)), ~ (((~ ((min((((min((max(GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy, ((uvec2(0u, 0u) ^ (uvec2(uvec3(GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy, 1u))))))), (~ (~ ((min(GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy, GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy)))))))) ^ uvec2(0u, 0u)), GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy)).y)) >> 0u)), ~ (((~ ((min((min(GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy, GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy)), GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy)).y)) >> 0u)))) : (num_workgroup))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.x = workgroup_base;
 uint virtual_gid = GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.x + GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.w * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z + ((true ? GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z : (subgroup_local_id)));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (((! ((! ((! (! (! (! ((true && (((((((injectionSwitch.x) - 0.0)) / 1.0) < injectionSwitch.y))))))))))))) ? injectionSwitch.y : (distance(vec4(- 4939.1859, 6.1, 7470.8320, - 9156.4729), vec4(- 7727.0718, - 7.1, 6.0, 11.04)))))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))) && (((true && (bool((! (! (bool(((injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   barrier();
  }
 if(((true && (((false)) && true))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if(((((float(((mat4x3(injectionSwitch.x, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, (injectionSwitch.x))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy.x = virtual_gid;
 if((false))
  barrier();
 if((false || ((! (! ((((injectionSwitch.x < injectionSwitch.y)) && ((false)))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint next_virtual_gid = ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id) * uvec4(1u, 1u, 1u, 1u)).xy.x + GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.w * ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size) / uvec4(1u, 1u, 1u, 1u)).z + ((clamp((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), (max((((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1)) | ((((uvec4(0u, 0u, 0u, 0u) >> (uvec4(0u))) ^ ((uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size)))).z + 1))), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1))), (uint(uvec3((((((true ? GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size : (uvec4(122106u, 94847u, 155277u, 124886u)))).z + 1)) / 1u), 1u, 1u))))) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z);
 if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x = next_virtual_gid;
 if((true && ((false))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x = ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x));
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch, ((false ? (vec2(- 3.8, 0.7)) : ((false ? (injectionSwitch) : injectionSwitch)))), injectionSwitch)).y))))
    barrier();
  }
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x;
 if((((bool(bvec3(bool(bvec4(false, true, false, (false || (((injectionSwitch.x > injectionSwitch.y)))))), false, false))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 buf[GLF_merged2_0_2_48_2_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_id.xy.x] = (~ ((min(~ (1), ((~ (1)) >> 0)))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (mix(vec2((18.78), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (98.29)), bvec2(((injectionSwitch.x < injectionSwitch.y)), false))).y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 if(((((true && (((((injectionSwitch.x > injectionSwitch.y) && true)))))) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))) || false))))
    barrier();
   barrier();
  }
 if((false || ((false))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((((injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bool((true && (false)))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool((! ((bool((bvec3(bvec4((bvec3(bvec3(bvec3(! (((bool(bool((! (! ((bool(false))))))))) || false), true, true)))), false)))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if(((((bool(((bvec2(bvec2(bvec2((bvec3(bvec4(bvec3((bvec2(bvec4(bvec2(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), true), true, false))), true), true))))))))))) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      {
       if(((((min(((injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     if((bool(bvec4((false), false, false, true))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((bool(bvec2((false), false))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((((false ? (subgroup_id) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z)) + 1 < (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size)).z) || false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((bool(bvec4((((bool(bvec3(bool(bvec2(! (! ((true && ((false || ((bool(bvec3(false, true, false))))))))), false)), true, true))))), false, ((injectionSwitch.x < injectionSwitch.y)), (bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), false)))))))) && true))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   int i = 0;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((bool(bvec4(((((! (! (injectionSwitch.x > injectionSwitch.y)))))), true, ((injectionSwitch.x < injectionSwitch.y)), true)))) && true))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(((bool(bvec3((bool(bvec3((bool(bvec3(false, false, false))), true, false))), false, false)))))
          barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((false || ((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       if((false || ((((bool(bvec3((false), true, true)))) && true))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((bool(bvec4(false, true, false, true)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((bool(bvec4(false, false, true, false)))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    {
     if(((((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))) || false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if(((((mix(float(injectionSwitch.x), float((8.3)), bool(((injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(((((float(vec3((mix(float(injectionSwitch.x), float((5.0)), bool(false))), 1.0, 1.0))) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if(((! (! (false)))))
      barrier();
    }
   atomicStore(buf[GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z], uint(2), 4, 64, (max(4, 4)));
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((! ((false || (! ((true && ((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))))))) || false))))
      barrier();
     if((((injectionSwitch.x > ((max(0.0, 0.0)) + (injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (bool(bvec3(((((bool((! (! (bool(! (true && ((((injectionSwitch.x > injectionSwitch.y))))))))))))) || false), true, true))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((true && ((injectionSwitch.x > (min(((injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((false || ((! (! (true && (((injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if((false))
        barrier();
       if((! (((! ((false))) || false))))
        {
         if(((! (! (false)))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((true && ((false))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((((false) || false)))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((! (! ((true && ((((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((((bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x > injectionSwitch.y)))), false))))))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((false) && ((true) && (bool(bvec3(true, true, false)))))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! ((! (! ((true && (false))))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if(((bool(bvec3(false, true, true)))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((! (! ((! (! ((((false || (false)))) && true))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) && true)))))
        barrier();
       barrier();
      }
     if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if(((! (! (false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! ((((injectionSwitch.x > injectionSwitch.y)) || ((! (! (! (false))))))))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if(((bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)))
        {
         if(((bool((true && (bool(((injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((((((((injectionSwitch.x > injectionSwitch.y) && true)) || ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((false) && true)))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[(~ ((((clamp(~ (((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id)) | ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id))), ~ (((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id)) | ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id))), ~ (((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id)) | ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id)))))) | (~ (((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id)) | ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id))))))).z], uint(2), 4, (((min(64, 64))) - 0), 4);
   if((false))
    barrier();
   if((false))
    barrier();
   if((((! ((bool(bvec3(! (bool(bvec2(((false) || false), false))), false, true))))))))
    {
     if(((((! ((! (! (! (((injectionSwitch.x > ((true ? (((((mix(float((- 2.2)), float(((injectionSwitch.y) + 0.0)), bool(true)))) * 1.0)) - 0.0) : (vec3(- 8680.8809, 9.1, - 2.9)[0])))) && true)))))))))))
      barrier();
     if((false))
      {
       if(((((mix(float((float((- - 38442)))), (min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > ((false ? (- 26.67) : ((dot(((vec4(0.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 0.0, 0.0))) * (injectionSwitch.y))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if(((true && (false))))
        barrier();
      }
     barrier();
     if(((((! (! (bool(bool(! (! (false)))))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((false || (false))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! ((true && (false)))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
