#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.y = subgroup_id;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.y;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 ((false ? (subgroup_id) : ((GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y = subgroup_local_id) / 1u)));
 if((false))
  return;
 if((false))
  barrier();
 if(((bool(bvec2(false, false)))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), (! (! (! ((true && ((! (! ((! (false))))))))))), true))))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x = num_workgroup;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if(((true && (false))))
  {
   if(((((! ((false || (! (((injectionSwitch.x > (abs(0.0) + (injectionSwitch.y))) && true))))))))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false)) && (! ((bool((bvec3(bvec4(bvec3(! ((true && (true))), true, true), false)))))))))
  {
   if((((false || (! (((! (bool(bvec3(((((! (! (true && (((((max((mat2((injectionSwitch.y)) * (injectionSwitch)) * mat2((min((float(mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), ((true ? 1.0 : (- 0.0)))))), (mat2((injectionSwitch.y)) * ((vec2(0.0, 0.0) + (injectionSwitch)))) * mat2(1.0))))).x > injectionSwitch.y)))))))), true, true)))) && true)))))))
    barrier();
   if((false || (((! (! (false)))))))
    return;
   if((((injectionSwitch.x > (float((mat3x4(mat3x4(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))))
    return;
   barrier();
   if((false))
    return;
  }
 if(((! (! ((bool(bvec3(((false)) || ((injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((((! ((bool(bvec2(! ((! (! (injectionSwitch.x > injectionSwitch.y)))), false)))))))))
  {
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 (0u + (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size));
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((! (! ((bool(bvec2((bool(bvec2((false), false))), true)))))))
  barrier();
 if((false))
  return;
 uint workgroup_id = (max((1u * (((gl_WorkGroupID.x) ^ 0u))), gl_WorkGroupID.x));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > (max((max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
   return;
   if((false))
    return;
  }
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.w = workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.w;
 if((false))
  {
   if((false))
    return;
   if((! (! (((false || (((((injectionSwitch.x > injectionSwitch.y))) && true))))))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z = workgroup_base;
 uint virtual_gid = (clamp(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z + ((~ (~ (uint(((uvec2(((((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y) | (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y))) | (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y)), 0u)) | (((uvec2(0u, 0u) << (uvec2(3u))) ^ ((uvec2(0u, 0u) ^ (uvec2(((((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y) | (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y))) | (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y)), 0u)))))))))))) * subgroup_size)) + GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y;
 if((false))
  return;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 uint next_virtual_gid = (((min((clamp(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id)), (~ (~ ((((clamp(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id)))) / uvec4(1u, 1u, 1u, 1u)))))).z + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + ((GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y + 1) % subgroup_size)) << 0u);
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.x = (~ (~ (((((((next_virtual_gid)) << 0u)) ^ 0u)) | ((((next_virtual_gid)) << 0u)))));
 if((false))
  return;
 if((((((((injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(! (! (((! (! ((bool(bvec4(((((true ? injectionSwitch.x : (54.33))) > injectionSwitch.y)), false, false, false))))))))), ((injectionSwitch.x < injectionSwitch.y)), (! (! (true))), true))))))) && true))
  barrier();
 if((((false) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.x;
 if((false))
  barrier();
 if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x] = 1;
 if((false))
  barrier();
 if((false))
  return;
 if(((((true ? false ? (uvec4(8832u, (clamp(23105u, 23105u, 23105u)), 148604u, 32164u).p) : (max(((GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y) * 1u) + 1, GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y + 1)) : (atomicOr(workgroup_size, num_workgroup)))))) < subgroup_size)
  {
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, ((injectionSwitch.y) / 1.0), injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((bool(bvec3(false, false, false)))))
    {
     if((false))
      return;
     barrier();
    }
   int i = 0;
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(2), (clamp(((4) | (4)), 4, 4)), (clamp((int(ivec3((clamp(((64) * 1), 64, 64)), 0, 1))), (1 * ((clamp(64, 64, 64)))), (clamp((clamp(64, 64, 64)), (clamp(64, 64, 64)), (clamp(64, 64, 64)))))), 4);
   if(((! (! (false)))))
    return;
   if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((bool(bvec4(false, true, true, true)))))
    return;
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(2), ((0 ^ 0) ^ (4)), 64, (~ (((~ ((1 * (4)))) * 1))));
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
