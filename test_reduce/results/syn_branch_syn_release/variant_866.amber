#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((clamp(((clamp(((min((((gl_NumWorkGroups) | ((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u)))))) >> uvec3(0u, 0u, 0u), (((gl_NumWorkGroups) | ((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u)))))) >> uvec3(0u, 0u, 0u)))), (clamp(((((gl_NumWorkGroups) | ((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u)))))) >> uvec3(0u, 0u, 0u)), ((((gl_NumWorkGroups) | ((((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u))))) | ((min(((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u)))), ((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(((true ? 0u : (subgroup_id))), 0u, 0u), 1u)))))))))) >> uvec3(0u, 0u, 0u)), ((((gl_NumWorkGroups) | ((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u)))))) >> uvec3(0u, 0u, (max(0u, ((false ? (subgroup_id) : 0u)))))))), ((((((gl_NumWorkGroups) | ((uvec3(uvec4(((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u), 1u)))))) >> uvec3(((0u) | (0u)), 0u, (clamp(0u, 0u, ((0u) ^ 0u)))))) >> uvec3(0u, 0u, 0u)))) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))), (((min(((true ? (min((gl_NumWorkGroups) | (((gl_NumWorkGroups)) >> uvec3((((~ (~ (0u)))) - 0u), 0u, 0u)), (gl_NumWorkGroups) | (((gl_NumWorkGroups)) >> uvec3((((~ (~ (0u)))) - 0u), 0u, 0u)))) : (uvec3(152820u, 102644u, 184571u)))), (gl_NumWorkGroups) | (((gl_NumWorkGroups)) >> (uvec3(1u, 1u, 1u) * (uvec3((((~ (~ (0u)))) - 0u), 0u, 0u)))))))) >> uvec3(0u, 0u, 0u), (((gl_NumWorkGroups) | (((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, (uint(uvec4(0u, (0u ^ (((clamp(uint(uvec3(0u, 1u, 1u)), uint(uvec3(0u, 1u, 1u)), uint(uvec3(0u, 1u, 1u))))))), 1u, 1u))))))).x;
 uint workgroup_size = (0u | (gl_WorkGroupSize.x));
 uint workgroup_id = (clamp(((((gl_WorkGroupID) | uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << (uvec3(0u))) >> (uvec3(0u)))), gl_WorkGroupID, ((gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = (((((0u ^ (((false ? (((atomicExchange(num_workgroup, workgroup_base))) << 0u) : (min(workgroup_base, workgroup_base)))) >> 0u)))) ^ uint((injectionSwitch.x)))) + ((subgroup_id * subgroup_size) / 1u) + ((clamp(uint(uint((((0u ^ (clamp((((((max(((((((! (((! (! ((true && (false))))) || (! (injectionSwitch.x < injectionSwitch.y))))))) ? uint(uvec4((subgroup_local_id + 1), 1u, 1u, 0u)) : (100490u)))) % (((((0u ^ (subgroup_size))) << 0u)) >> (0u >> (uint(8u)))), ((((uint(uint(((subgroup_local_id + (max((int(ivec3(1, 0, 0))), 1))) / ((1u << (uint(5u))) >> (uint(5u))))))) | (uint(uint(((subgroup_local_id + (max((int(ivec3(1, ((0) / 1), 0))), 1))) / ((1u << (uint(5u))) >> (uint(5u)))))))))) % subgroup_size))) >> ((max(0u, 0u)) >> (((min((((uint((max(7u, 7u)))) << 0u)), (uint(7u))))) | ((uint(7u)))))) << uint((injectionSwitch.x)))), (subgroup_local_id + 1) % (clamp(subgroup_size, ((((subgroup_size) + 0u)) / 1u), subgroup_size)), (1u * ((((subgroup_local_id + 1) % (0u + (subgroup_size))) / 1u)))))))))), uint(uint(((subgroup_local_id + 1) % subgroup_size))), ((true ? uint(uint((((((max((~ (~ (((subgroup_local_id + 1) | (subgroup_local_id + (int(ivec2(1, int((injectionSwitch.x)))))))))), subgroup_local_id + 1))) % subgroup_size)) * 1u))) : (((workgroup_id) | 0u)))))));
 buf[virtual_gid] = 1;
 if(((((true ? uint(uvec2((max(((((clamp((((max((max((((((min(subgroup_local_id + ((((1) >> int((injectionSwitch.x)))) - 0), subgroup_local_id + 1))) - (0u << (uint(5u)))) * 1u)), (max(((0u + ((subgroup_local_id + 1) | (subgroup_local_id + 1)))), subgroup_local_id + 1)))), (max((((min(subgroup_local_id + 1, subgroup_local_id + 1)) * 1u)), subgroup_local_id + 1))))) ^ (1u ^ 1u)), subgroup_local_id + 1, subgroup_local_id + 1)) >> 0u)) | 0u), ((((clamp((((max((max((((min(subgroup_local_id + 1, subgroup_local_id + 1)) * 1u)), (max(((0u + ((subgroup_local_id + 1) | (subgroup_local_id + 1)))), subgroup_local_id + 1)))), (max((((min(subgroup_local_id + 1, subgroup_local_id + 1)) * 1u)), subgroup_local_id + 1))))) ^ (1u ^ 1u)), subgroup_local_id + 1, subgroup_local_id + 1)) >> 0u)) | 0u))), uint((((min((injectionSwitch.x), (injectionSwitch.x)))) / (injectionSwitch.y))))) : (subgroup_local_id))))) < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], (max(uint((1 * (((2) | (2))))), (uint(uvec4(uint((1 * (((2) | (2))))), 1u, 0u, 0u))))), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], (uint(((uint(uint(2))) | (uint(uint((0 | (2)))))))), 4, ((int(ivec2(((~ (~ (((64) << 0)))) | (~ (~ (((64) << 0))))), 0)))), 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
