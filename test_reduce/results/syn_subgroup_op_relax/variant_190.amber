#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged3_0_2_52_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_id;
 uvec4 GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid;
 if((false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
       do
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       while(false);
      }
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_52_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_id.xy = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec4(false, true, true, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy = GLF_merged3_0_2_52_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_id.xy;
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     barrier();
     if((false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 GLF_merged3_0_2_52_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_id.w = subgroup_id;
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
  {
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.z = GLF_merged3_0_2_52_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_id.w;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.y = GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.z;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((true && (false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(true)
  {
   if(true)
    {
     GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.x = subgroup_size;
     if(((false || (false))))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != (~ (~ (0))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.z = subgroup_local_id;
 if((false))
  barrier();
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.y = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.z;
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     do
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
        }
       if((false))
        barrier();
      }
     while(false);
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           barrier();
          }
         if((false))
          barrier();
        }
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if((false))
  barrier();
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 while(false);
 do
  {
   do
    {
     if(false)
      {
      }
     else
      {
       GLF_merged3_0_2_52_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_id.z = num_workgroup;
       if((false))
        barrier();
       if(true)
        {
         if(true)
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       else
        {
         if((false))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         do
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           do
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           barrier();
          }
         while(false);
         if((false))
          barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
  }
 GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (((((injectionSwitch.x < injectionSwitch.y)) ? int(4) : (53725))))); _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_base = GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.y * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.w = workgroup_base;
 if((false))
  {
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   while(false);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(false);
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.w;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && ((true && (false))))))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.y * GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.x + GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.y;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 do
  {
   for(int _injected_loop_counter = (int((injectionSwitch.x)) | 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.w = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x;
    }
  }
 while(false);
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.y * GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.x + ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.y + 1) % GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.x);
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(false);
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.x = next_virtual_gid;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(true)
    {
     for(int _injected_loop_counter = (0 >> ((0 + (int(1))))); _injected_loop_counter != ((1) / 1); _injected_loop_counter ++)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
       if((false))
        barrier();
      }
    }
   else
    {
    }
   if((false))
    {
     do
      {
       if((false))
        barrier();
       barrier();
      }
     while(false);
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 while(false);
 if((false))
  {
   if((false))
    barrier();
   do
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   while(false);
   if((false))
    {
     do
      {
       barrier();
       if((false))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if(((false || (false))))
    barrier();
  }
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.x;
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if(((! (! (false)))))
    barrier();
   buf[GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.w] = 1;
  }
 if(false)
  {
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.y + 1 < GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.x)
        {
         switch(0)
          {
           case 15:
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           ivec3 _GLF_SWITCH_0_0v;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
             if((false))
              barrier();
             if((false))
              barrier();
            }
           case 0:
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           case 52:
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((((false) || false)))
            {
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
           atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x], uint(2), 4, 64, 0);
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           case 96:
           if((false))
            barrier();
           if((false))
            barrier();
           do
            {
             subgroupAll(false);
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       barrier();
                       if((false))
                        barrier();
                      }
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 barrier();
                 if((false))
                  barrier();
                }
              }
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(true)
                {
                 if((false))
                  barrier();
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     do
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(1))) >> ((min(((int(1)) + 0), int(1))))); _injected_loop_counter ++)
                        {
                         if(true)
                          {
                           if((false))
                            barrier();
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << ((clamp(int(7), int(7), int(7))))) >> (((int(7)) * 1))); _injected_loop_counter ++)
                            {
                             if((false))
                              barrier();
                             if(true)
                              {
                               barrier();
                               if((false))
                                barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     while(false);
                     if((false))
                      barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                }
               else
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           break;
           case 31:
           for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((! (! (false))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             else
              {
               for(ivec3 _GLF_SWITCH_0_1v[52]; false; mat2x3(- 511.481, - 177.407, 90.61, - 165.219, 6.8, - 2227.2152))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 if((false))
                  barrier();
                 if((bvec2(false, true) == bvec2(false, true)))
                  {
                   do
                    {
                     if((false))
                      barrier();
                     if(false)
                      {
                       if((false))
                        barrier();
                      }
                     else
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(((false) && true))
                        {
                        }
                       else
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           while(true)
                            {
                             mat4 _GLF_SWITCH_0_2v;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              {
                               if((false))
                                barrier();
                               if(false)
                                {
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((false))
                                    barrier();
                                  }
                                 while(false);
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   barrier();
                                  }
                                 barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                             if((false))
                              barrier();
                             if((false || (false)))
                              {
                              }
                             else
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               bvec2(false, false);
                              }
                             if((false))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x) ^ uvec2(124207u, 59663u));
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     if((false))
                      barrier();
                    }
                   while(false);
                   if((false))
                    barrier();
                   ivec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[18], _GLF_SWITCH_0_5v[65];
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(false)
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if(false)
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                     if((false))
                      barrier();
                    }
                   if((false))
                    barrier();
                   if((false))
                    {
                     if(((! (! (false)))))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if((false))
                    {
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       mat2(- 1838.1189, - 4.7, - 4.3, 1.2);
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                       if((false))
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         barrier();
                        }
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       do
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if((false))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       while(false);
                      }
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     if((false))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (((1 << (int(2))) >> (int(2))) ^ 1); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
                  {
                   if(false)
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                  }
                }
              }
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               if((false))
                barrier();
               if((((injectionSwitch.x < injectionSwitch.y)) && (false)))
                {
                 do
                  {
                   if((false))
                    barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
               else
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
              }
             barrier();
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             for(int _injected_loop_counter = ((0) | 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
              }
            }
           default:
           1;
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 do
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                 while(false);
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((! (! (false)))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if(((false) && true))
              {
              }
             else
              {
               if(true)
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               else
                {
                }
              }
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               if((! (! (true))))
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((false))
                barrier();
               do
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                   barrier();
                  }
                 else
                  {
                  }
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         if((false))
          {
           do
            {
             if(false)
              {
               if((false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           while(false);
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 >> (((int(5)) | 0))); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if((false))
            barrier();
          }
         if(true)
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if((false))
                barrier();
              }
             if((false))
              barrier();
            }
          }
         else
          {
          }
         switch(0)
          {
           case 0:
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
               if((false))
                barrier();
               if((false))
                barrier();
              }
            }
           else
            {
            }
           if((false))
            {
             do
              {
               barrier();
              }
             while((! (! (false))));
            }
           case 88:
           for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter != (40088 & 0); _injected_loop_counter --)
            {
             if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
              }
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if(true)
            {
             if((false || (false)))
              {
               if((false))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x], uint(2), 4, 64, 0);
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
           case 10:
           if((false))
            barrier();
           case 3:
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             subgroupAll(true);
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            {
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(8))); _injected_loop_counter --)
              {
               if((false))
                barrier();
               if((false))
                barrier();
               barrier();
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           break;
           if((false))
            barrier();
           if((false))
            barrier();
           for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 do
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 while(false);
                }
              }
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (((int(0)) ^ 0))) >> (int(0))); _injected_loop_counter ++)
              {
               if((false))
                barrier();
               if((false))
                {
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 while(false);
                 if((false))
                  {
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             if((false))
              barrier();
            }
           if(true)
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if(true)
              {
               if(((bool((true && (bool(((false) || false))))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
             else
              {
              }
            }
           case 86:
           do
            {
             if((false))
              barrier();
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   if(((false) || false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 do
                  {
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while((bool(bvec4(false, false, true, ((injectionSwitch.x > injectionSwitch.y))))));
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(                 ivec2(- 31462, 28405);
 false; (- mat4(9099.2152, - 7.3, 983.648, - 632.031, 6.5, 0.3, 3.9, 8.5, 35.10, - 103.409, - 1691.9434, - 1.8, - 2.0, - 122.904, - 3361.3142, 3.1)))
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
                      {
                       if((false))
                        barrier();
                      }
                     for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                   if((false))
                    barrier();
                   do
                    {
                     if((false))
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 barrier();
                                }
                              }
                            }
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                         do
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if(true)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                             if((false))
                              barrier();
                             if(false)
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                                {
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                              }
                             else
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         while(false);
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      {
                       do
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                   while((((! (! (false)))) && true));
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   mat3x4(71.82, - 393.580, - 40.40, - 2.5, 498.814, - 463.685, 3112.9805, - 27.44, - 58.07, 699.479, - 7.5, 99.59);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((false))
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                         barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if((false))
                        barrier();
                      }
                     do
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       barrier();
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((((false) || false)))
                          barrier();
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if((false))
                    barrier();
                   vec4(- 371.003, - 2021.2373, 7.3, - 10.81);
                   if(((((false || (false))) && true)))
                    barrier();
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   while((false || false))
                    {
                     if((false))
                      barrier();
                     do
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     while(false);
                     bvec2(false, true);
                     if(true)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      barrier();
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       ;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(true)
                            {
                             do
                              {
                               barrier();
                              }
                             while(false);
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       if((bool(bvec4(false, true, false, true))))
                        {
                        }
                       else
                        {
                         do
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             while((length(injectionSwitch) < - 0.4))
                              {
                               ivec3(31023, - 22156, - 79501);
                               if((false))
                                barrier();
                               do
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 for(int _injected_loop_counter = ((0 << (int(7))) & 53894); _injected_loop_counter < 1; _injected_loop_counter ++)
                                  {
                                   if((false))
                                    barrier();
                                   mat4x2(mat3x2(12.99, - 7.5, 3.5, 0.5, - 27.49, - 0.2));
                                   if((false))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               while(false);
                               radians(vec4(- 2.5, - 777.442, - 8.8, - 9.5));
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                 if((false))
                                  barrier();
                                 if((false))
                                  {
                                   if((false))
                                    barrier();
                                   if(false)
                                    {
                                     if(true)
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                      }
                                     else
                                      {
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(((((bool(bool((false || (false))))) || false))))
                                        barrier();
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if((false))
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                        }
                                       barrier();
                                      }
                                     if((false))
                                      barrier();
                                    }
                                   else
                                    {
                                     if((false))
                                      barrier();
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if(((true && (false))))
                                        barrier();
                                       if((false))
                                        barrier();
                                      }
                                     barrier();
                                    }
                                   if((false))
                                    {
                                     if((false))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         if((false))
                                          barrier();
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                          }
                                         if((((false) || false)))
                                          barrier();
                                        }
                                       else
                                        {
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     barrier();
                                    }
                                  }
                                }
                               if((false))
                                {
                                 if((false))
                                  {
                                   do
                                    {
                                     barrier();
                                     if((false))
                                      barrier();
                                     if((false))
                                      barrier();
                                    }
                                   while(false);
                                  }
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               do
                                {
                                 if((bool(bvec2(true, false))))
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                               if((false))
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                   if((false))
                                    {
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       barrier();
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     else
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                    }
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               ;
                               ;
                               if(true)
                                {
                                 mat4(7.9, 0.7, 2623.8109, - 50.07, 7.8, 8.2, 9.9, - 7.3, - 2.9, 8.9, 61.65, 2.4, - 4.8, - 571.301, 13.20, - 286.133);
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                }
                               uvec2(79159u, 178907u);
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if((false))
                              barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              {
                               if(((injectionSwitch.x < injectionSwitch.y)))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                               if((false))
                                barrier();
                              }
                             barrier();
                            }
                          }
                         while(false);
                        }
                       do
                        {
                         if((false))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      {
                       if(false)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         barrier();
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                      }
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != ((0) * 1); _injected_loop_counter --)
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         for(int _injected_loop_counter = (0 >> ((max(int(0), int(0))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           if((false))
                            barrier();
                           for(int _injected_loop_counter = ((1 << (((int(7)) ^ 0))) >> (int(7))); _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(true)
                              {
                               if((false))
                                {
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   barrier();
                                  }
                                 if((false))
                                  barrier();
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                               if((false))
                                barrier();
                               (- 9.7 + vec2(- 4523.3040, 826.839));
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if((false))
                                barrier();
                               mix(vec4(5.5, - 611.715, 238.934, 92.24), vec4(4.5, - 4592.3026, 6.7, 1.1), - 2.5);
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               do
                                {
                                 bvec4(true, true, false, false).sps;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                   barrier();
                                  }
                                }
                               while(false);
                               if(((bool(bool(false)))))
                                barrier();
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  {
                                   do
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                     if((false))
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   while(false);
                                  }
                                }
                               if((false))
                                barrier();
                               bvec3 _GLF_SWITCH_1_0v[41];
                               if(true)
                                {
                                 mix(160884u, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x >> GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_14next_virtual_gidsubgroup_idsubgroup_local_idworkgroup_base.y), false);
                                }
                               else
                                {
                                }
                               mix(vec4(55.30, 2324.6090, 951.721, 634.752), vec4(3.6, - 2309.0056, - 1.6, 1.1), 50.42).aa;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(true)
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                                      {
                                       if((false))
                                        barrier();
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     if(((! (! (((false) || false))))))
                                      barrier();
                                     if((false))
                                      barrier();
                                     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
                                      {
                                       if((false))
                                        barrier();
                                      }
                                    }
                                   else
                                    {
                                    }
                                   if((((false) || false)))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                  }
                                }
                               vec4(- 85.71, 2.6, - 6642.5268, 9.6).qqs;
                              }
                            }
                          }
                         if(((! (! (false)))))
                          barrier();
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if(true)
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = 0; _injected_loop_counter < ((int(int(1))) & 1); _injected_loop_counter ++)
                                {
                                 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
                                  barrier();
                                 barrier();
                                }
                              }
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       if((false))
                        barrier();
                      }
                    }
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                       if((false))
                        {
                         if((false))
                          barrier();
                         if(true)
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     barrier();
                    }
                   do
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        {
                         if(true)
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         else
                          {
                          }
                         if((false))
                          barrier();
                         for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                          {
                           if((false))
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               barrier();
                              }
                             else
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                              }
                            }
                          }
                         if((false))
                          barrier();
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                           barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                          }
                        }
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(false)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       if(true)
                        {
                         bvec2(false, true);
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       else
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               barrier();
                              }
                             else
                              {
                               if(((bool(bvec4(false, false, true, false)))))
                                barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
                              barrier();
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                }
                              }
                             do
                              {
                               if((false))
                                barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if((false))
                                barrier();
                              }
                             while(false);
                            }
                           if((false))
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               barrier();
                               if((((false) && true)))
                                barrier();
                              }
                            }
                           if((false))
                            barrier();
                           if(((! (! (false)))))
                            {
                             for(int _injected_loop_counter = (0 << (int(5))); _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                          }
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(false);
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                        }
                      }
                     if(false)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       if((false))
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         barrier();
                         if((false))
                          barrier();
                        }
                      }
                     if((false))
                      {
                       do
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       while(false);
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       else
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = (0 ^ int((injectionSwitch.y))); _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         if(true)
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     ivec4 _GLF_SWITCH_1_1v[25], _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if((false))
                      {
                       for(int _injected_loop_counter = ((1 << (int(2))) >> ((1 * (int(2))))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                        {
                         barrier();
                         if((false))
                          barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                      }
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     mix(trunc(vec4(6.5, 2.1, - 6.8, 9.6)), vec4(- 643.582, 2.6, - 8666.7507, 0.8), bvec4(false, false, true, false));
                     if((false))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(true)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              barrier();
                            }
                           else
                            {
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                            }
                          }
                         if((false))
                          barrier();
                        }
                       barrier();
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     do
                      {
                       if((false))
                        barrier();
                       if(((((false || (false))) || false)))
                        barrier();
                       do
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((false))
                            barrier();
                          }
                         do
                          {
                           if((false))
                            {
                             if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
                              barrier();
                             barrier();
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            {
                             if(((! (! (false)))))
                              barrier();
                             barrier();
                            }
                           for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                            {
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         if((false))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     while(false);
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         if(true)
                          {
                           if((false))
                            {
                             if((false))
                              barrier();
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             barrier();
                            }
                          }
                         else
                          {
                          }
                        }
                       while(false);
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(bvec4(true, false, true, true).r)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         barrier();
                         if((false))
                          barrier();
                        }
                       do
                        {
                         if((false))
                          barrier();
                         uvec2(170613u, 159606u);
                         if((false))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if((false))
                          barrier();
                         barrier();
                        }
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       mat4x3(87.85, - 85.25, - 1.0, 421.947, 0.7, - 4116.0685, 935.535, 817.524, - 2308.4832, 1.2, 9.8, 3822.3774);
                       mat2 _GLF_SWITCH_1_4v;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       ;
                       for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if((false))
                          barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           barrier();
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if(((! (! (false)))))
                            {
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             do
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                             while((bool(bvec4(false, true, true, true))));
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                           barrier();
                          }
                         else
                          {
                          }
                         if((false))
                          barrier();
                        }
                       if((false))
                        {
                         for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         barrier();
                         if((false))
                          barrier();
                        }
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         do
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if(((bool(bool(false)))))
                              barrier();
                             - 7285.1157;
                            }
                           else
                            {
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          barrier();
                        }
                       else
                        {
                        }
                       if((false))
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                        }
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                        {
                         if(((bool(bvec3(false, false, false)))))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                          }
                        }
                       do
                        {
                         (mat3x4(mat2x3(437.337, 920.548, - 26.21, - 85.36, 84.20, 56.01)) + mat3x4(mat4(- 7.4, - 2.8, - 313.480, 0.5, - 4.8, - 62.80, - 9491.1002, 477.363, 1550.0324, - 71.90, 1.1, 9.9, - 44.00, - 41.22, - 3.7, 4253.3729)));
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       while(false);
                       uvec2 _GLF_SWITCH_1_5v[54], _GLF_SWITCH_1_6v[44], _GLF_SWITCH_1_7v;
                       uvec2(119413u, 184151u);
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           barrier();
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         else
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                        }
                       do
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((false))
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         if((false))
                          barrier();
                        }
                       while(false);
                       if((false))
                        barrier();
                       ;
                       if((false))
                        {
                         if((false))
                          barrier();
                         for(int _injected_loop_counter = ((1 << (int(6))) >> ((0 ^ (int(6))))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       while(false);
                      }
                     else
                      {
                       mat2(float(17026), 5467.5839, 1.0, 966.863);
                       do
                        {
                         if((((false) && true)))
                          barrier();
                         bvec3(false, true, true);
                        }
                       while(false);
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                          }
                         if(((bool(bool(false)))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((false))
                              barrier();
                             do
                              {
                               barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if(false)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if((false))
                          barrier();
                         barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if((false))
                          barrier();
                         if(((bool(bool(false)))))
                          barrier();
                        }
                       if(false)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 1; _injected_loop_counter != (- 44246 & 0); _injected_loop_counter --)
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((false))
                            barrier();
                           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                        }
                       mat3x4(- 287.735, - 1.8, 89.48, 5.9, 4.9, - 67.52, 541.282, - 9820.8465, 97.89, - 237.039, 60.96, - 43.07);
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if((false))
                          barrier();
                        }
                       while(false);
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         do
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((false))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             for(int _injected_loop_counter = (0 >> ((int(ivec4(int(6), (1 | 0), 0, (1 & 1)))))); _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           else
                            {
                            }
                          }
                         while(false);
                        }
                       if((false))
                        barrier();
                       ivec4 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = (0 >> (int(3))); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                        {
                         if((false))
                          barrier();
                         barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     if((false))
                      {
                       if((false))
                        barrier();
                       if((false))
                        {
                         if((false))
                          barrier();
                         if(false)
                          {
                          }
                         else
                          {
                           if((! (! (((injectionSwitch.x < injectionSwitch.y))))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(true)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                    {
                                     if((((false) || false)))
                                      barrier();
                                     barrier();
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                  }
                                 if(true)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         barrier();
                        }
                       barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     _GLF_SWITCH_1_3v;
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((false))
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                          }
                         barrier();
                        }
                       do
                        {
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         do
                          {
                           mat2(- 32.80, 19.59, - 68.54, 689.102);
                          }
                         while(false);
                         mat2x3 _GLF_SWITCH_1_10v;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       while(true);
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(false);
                     mat2x4 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v[48];
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                       if((false))
                        barrier();
                      }
                     else
                      {
                       if((false))
                        {
                         if(true)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     bvec2(false, false);
                     ivec3 _GLF_SWITCH_1_14v;
                     if(true)
                      {
                       if(true)
                        {
                         if(true)
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if(((injectionSwitch.x < injectionSwitch.y)))
                                {
                                 if((false))
                                  barrier();
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                               else
                                {
                                }
                              }
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     if(true)
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                     for(int _injected_loop_counter = (max(1, 1)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       do
                        {
                         if(true)
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                           if(((true && (false))))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     vec2 _GLF_SWITCH_1_15v;
                     for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                      {
                       if((false))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         GLF_merged3_0_2_52_2_1_11_3_1_11GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_idvirtual_gid.xy.x;
                        }
                       if((false))
                        barrier();
                      }
                     roundEven(2166.8157);
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           if((false))
                            barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false || (true)))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                 do
                                  {
                                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                 if(((bool(bvec4(false, false, true, false)))))
                                  barrier();
                                }
                               while(false);
                               if((false))
                                barrier();
                              }
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
                            {
                             if((false))
                              barrier();
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                          }
                         if((false))
                          barrier();
                         for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           true;
                          }
                         if((false))
                          barrier();
                         ivec4 _GLF_SWITCH_1_16v[64], _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v;
                         if((false))
                          {
                           if((false))
                            barrier();
                           if(false)
                            {
                            }
                           else
                            {
                             do
                              {
                               if((false))
                                barrier();
                               do
                                {
                                 barrier();
                                }
                               while(false);
                               if((false))
                                barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                          }
                         for(int _injected_loop_counter = ((((1 ^ 1) & - 38944)) / 1); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = (0 >> (int(1))); _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              barrier();
                            }
                           do
                            {
                             if((false))
                              barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(((true && (false))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                         vec2 _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v;
                         if((false))
                          {
                           if((((false) && true)))
                            barrier();
                           barrier();
                          }
                         if((false))
                          {
                           if((bool(bool(false))))
                            {
                             if(((false || ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
                              barrier();
                             if((false))
                              barrier();
                            }
                           else
                            {
                             barrier();
                             if(((bool(bvec4((bool(bvec3(false, false, true))), true, true, true)))))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         int _GLF_SWITCH_1_21v;
                         if(true)
                          {
                           if((false))
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         else
                          {
                          }
                         bvec4 _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v;
                         if((false))
                          barrier();
                         uvec2 _GLF_SWITCH_1_24v[96], _GLF_SWITCH_1_25v;
                         if((false))
                          barrier();
                         if((false))
                          {
                           do
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                             if((false))
                              barrier();
                            }
                           while(false);
                           if(true)
                            {
                             do
                              {
                               if((false))
                                barrier();
                               if(true)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  {
                                   if(false)
                                    {
                                     if((false))
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   else
                                    {
                                     if((false))
                                      barrier();
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if((false))
                                      barrier();
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                }
                               barrier();
                              }
                             while(false);
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                           if((false))
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                              {
                               if(true)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               else
                                {
                                }
                               if((false))
                                barrier();
                              }
                             if((false))
                              barrier();
                            }
                           if((false))
                            barrier();
                          }
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         mat4x3((vec3(- 109.879, 8.9, 85.28) - - 6.4), vec3(7.3, - 702.823, 9.7), vec3(- 21.90, - 2.0, 522.030), vec3(889.289, 39.13, 24.92));
                         if((false))
                          {
                           if(false)
                            {
                             if((false))
                              barrier();
                            }
                           else
                            {
                             if(true)
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           ivec2(38840, 54776);
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                          }
                         if((false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  barrier();
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                   do
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if((false))
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   while(false);
                                  }
                                 do
                                  {
                                   barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 while(false);
                                 if((false))
                                  barrier();
                                }
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             do
                              {
                               for(int _injected_loop_counter = (clamp(1, 1, 1)); _injected_loop_counter != 0; _injected_loop_counter --)
                                {
                                 if(true)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     do
                                      {
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
                                          {
                                           barrier();
                                          }
                                        }
                                      }
                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   for(int _injected_loop_counter = (0 >> (int(3))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     if((false))
                                      {
                                       if(((false || (false))))
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                        }
                                       barrier();
                                      }
                                     if(((false || (false))))
                                      barrier();
                                    }
                                   if((false))
                                    barrier();
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                   if((false))
                                    {
                                     if(((true && (false))))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                }
                               if((false))
                                {
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   if(true)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                 barrier();
                                 if((false))
                                  barrier();
                                 if(((bool(bool(false)))))
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 for(int _injected_loop_counter = ((0 >> (((int(3)) | (int(3))))) | 1); _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    {
                                     if((false))
                                      {
                                       if(((bool(bvec2(false, true)))))
                                        barrier();
                                       barrier();
                                      }
                                     barrier();
                                    }
                                  }
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                  {
                                   barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                }
                              }
                             if((false))
                              barrier();
                            }
                          }
                         do
                          {
                           _GLF_SWITCH_1_12v;
                           if((false))
                            barrier();
                          }
                         while(false);
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       while(any(bvec4(true, true, true, false)));
                      }
                    }
                   if((false))
                    barrier();
                   mat4x3 _GLF_SWITCH_1_26v[88], _GLF_SWITCH_1_27v;
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         else
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       if(true)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(true)
                          {
                           if((false))
                            {
                             if(false)
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                               if((false))
                                barrier();
                              }
                            }
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     mat2(326.823, 93.85, 8.4, 3.5);
                    }
                   if((false))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       if((false))
                        barrier();
                       mat4(mat2x4(0.1, 65.76, - 49.99, 8276.6612, 5.9, 74.50, 7.6, - 2.2));
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       if((false))
                        {
                         if((false))
                          barrier();
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     if((false))
                      barrier();
                    }
                   if((false))
                    barrier();
                   if(true)
                    {
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       if(((! (! (false)))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   mat2x4 _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v[17];
                   if((false))
                    {
                     for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter != ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     barrier();
                    }
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << ((((1 << (int(4))) >> (int(4))) * (int(2))))); _injected_loop_counter --)
                      {
                       if((true == false))
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(false)
                          {
                           if((false))
                            {
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             barrier();
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(true)
                            {
                             if((false || (((false) && true))))
                              {
                              }
                             else
                              {
                               do
                                {
                                 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((! ((! (! (! (true)))))))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((false))
                                    barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               while(false);
                              }
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if((false))
                                barrier();
                               vec2(vec3(- 3635.5366, 6.9, - 52.33));
                               if((false))
                                barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               if((false))
                                barrier();
                              }
                             else
                              {
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             vec2 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v[26];
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                               mat3x4(- 8.7, - 0.8, 3192.7387, - 0.8, - 6302.6180, 353.942, - 95.36, - 175.810, - 8348.7628, - 1.6, - 1871.8265, - 9225.8117);
                              }
                             mat2 _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v[35], _GLF_SWITCH_1_36v;
                            }
                           else
                            {
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if((false))
                                barrier();
                              }
                             if(true)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                          }
                         {
                          for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                           {
                            if((((injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          if((false))
                           barrier();
                          if((false))
                           barrier();
                          if(((injectionSwitch.x > injectionSwitch.y)))
                           {
                            if((false))
                             barrier();
                           }
                          else
                           {
                            if((false))
                             {
                              if((false))
                               barrier();
                              if((false))
                               barrier();
                              barrier();
                             }
                            if((((injectionSwitch.x > injectionSwitch.y))))
                             {
                              if((((injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if((((injectionSwitch.x > injectionSwitch.y))))
                               {
                                if((((injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                if(((injectionSwitch.x > injectionSwitch.y)))
                                 {
                                  if((((false) && true)))
                                   barrier();
                                 }
                                else
                                 {
                                  barrier();
                                  if((false))
                                   barrier();
                                 }
                               }
                              if((((injectionSwitch.x > injectionSwitch.y))))
                               {
                                if((false))
                                 barrier();
                                barrier();
                               }
                              for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(1))); _injected_loop_counter --)
                               {
                                barrier();
                                if((false))
                                 barrier();
                               }
                              if((false))
                               barrier();
                              if(((true) || false))
                               {
                                if((false))
                                 barrier();
                                if((false))
                                 barrier();
                               }
                              else
                               {
                                if((false))
                                 barrier();
                               }
                             }
                           }
                          for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter > (0 ^ (0)); _injected_loop_counter --)
                           {
                            if((false))
                             {
                              if(true)
                               {
                                if((false))
                                 barrier();
                               }
                              else
                               {
                               }
                              barrier();
                             }
                            if((((injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          if((((injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                         if((false))
                          barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               if((false))
                barrier();
              }
             else
              {
              }
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                }
               barrier();
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           while(false);
           default:
           1;
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if((false))
                barrier();
               barrier();
               if((false))
                barrier();
              }
             while(false);
            }
          }
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
