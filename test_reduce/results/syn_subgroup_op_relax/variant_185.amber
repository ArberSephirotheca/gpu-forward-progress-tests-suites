#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false) && (! ((true && (((true && ((! (false || (((bool(bool(true))))))) && ((((! (! (bool(bvec2(true, true)))))) && true))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (clamp((float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, (injectionSwitch.y), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((! (((! (((false || (false))))) && true))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((true && ((false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((((bool((bvec3(bvec3(bvec3(((((min(((true ? injectionSwitch : (vec2(291.410, 51.68)))), (vec2(vec4(injectionSwitch, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))))).x > injectionSwitch.y))), false, true))))))) && (! (! (((true) || false))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if((! ((((injectionSwitch.x < injectionSwitch.y)) && (! (((! (! ((false || (((((bool(bool(bool(bool((bool(bvec3(false, false, true)))))))))) && ((injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   barrier();
   if(((true && ((false || (bool((bvec2(bvec3(bvec2((false), true), true))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((! (! (true && (((false || ((bool(bvec2((false), false)))))) || ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! ((bool(bool(((((clamp(mix(float(injectionSwitch.x), float((- 562.263)), bool(((injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float((- 562.263)), bool(((injectionSwitch.x > injectionSwitch.y)))), (float((min(float(mix(float(injectionSwitch.x), float((- 562.263)), bool(((injectionSwitch.x > injectionSwitch.y))))), float(mix(float(injectionSwitch.x), float((- 562.263)), bool(((injectionSwitch.x > injectionSwitch.y)))))))))))) > ((float(((false ? (mat2x4(5.7, - 87.16, - 7.1, 601.582, - 6.2, (max(- 8.6, - 8.6)), 14.86, - 97.42)) : mat2x4(mix((clamp(float((4.1)), (min(float((4.1)), float((min((4.1), (float(vec4((4.1), 1.0, 0.0, 1.0)))))))), (min(float((4.1)), float((4.1)))))), float((((bool(bvec4(true, true, false, false))) ? ((false ? (length(- 423.836)) : ((injectionSwitch.y) * 1.0))) : (refract(- 92.32, cos(9.2), - 2061.2551))))), bool(true)), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, (injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, (dot(vec2((min(1.0, 1.0)), 1.0), vec2(0.0, 0.0)))))))))))))))))))
  {
   if((false))
    {
     if(((((! (! (false)))) && true)))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((bool(bvec2(((((injectionSwitch.x) / cos(0.0)) > injectionSwitch.y)), false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bool(false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch) * vec2((injectionSwitch.y), (injectionSwitch.y))).x > injectionSwitch.y))))
  barrier();
 if((((((false)) && true) || false)))
  barrier();
 if((! (! ((((true && ((bool((bvec3(bvec3((bvec3(bvec4(bvec3(! (! (false)), true, true), false))))))))))))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(true)
    {
     if((false))
      barrier();
     barrier();
    }
   else
    {
     if((((((((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((false || ((! (! (((false) && true))))))))
      {
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((bool(bvec2((! (! ((! (! (bool(((bool((((injectionSwitch.x > injectionSwitch.y))))) && true)))))))), false)))))
    barrier();
   if(((! (! (((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y)))))))
    barrier();
   if((false))
    {
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false || ((((true && ((((injectionSwitch.x < injectionSwitch.y)) && (((false || ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))))
  barrier();
 if((false))
  barrier();
 if((((false) && (bool(bvec2(true, false))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((! (! (bool((bvec3(bvec3(bvec3(bool((bool(bvec4(bool((true && (((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))), (false || (false)), true, false)))), false, false))))))))))))
  {
   if((! (! ((((((false) || false)))) && ((true) && true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((((false || (bool((! (! (bool((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  {
   if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((! ((true && ((true && (! ((false)))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec2(false, true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec4((false || ((false))), true, ((injectionSwitch.x < injectionSwitch.y)), ((((injectionSwitch.x < injectionSwitch.y))) && true)))))
    barrier();
   if(((false || (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((mix(float((clamp((min(0.0, 0.0)), 0.0, (0.0 + (0.0))))), float((0.8)), bool(false))) + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > ((injectionSwitch.y) * 1.0)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((((((false ? (vec2(1.8, - 1744.4182)) : injectionSwitch)).x > injectionSwitch.y)))) && true))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((bool((bvec3(bvec4(bvec3((! (! (false))), true, true), true)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  {
   if(((false || (bool(((bool((false))) && true))))))
    barrier();
   if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((((false || ((true && ((((injectionSwitch.x > injectionSwitch.y))))))) || false)))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((((false) && true) || ((((bool(bvec2((bool(bvec2(false, true))), true))) && (true && (true))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((((false)) || false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = (0u | (((((gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x)) << 0u));
 if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((! (((false || (bool(bool((! (! ((((true && (! ((((! ((! (! (! ((false) || ((false) && ((injectionSwitch.x < injectionSwitch.y)))))))))) || false)))) && true)))))))))))))))
  barrier();
 if((! (! (bool(bvec4((bool((bvec2(bvec3(bvec2(((! (! (((! ((! (! ((! (! (! (false)))))))))))))), false), false))))), ((injectionSwitch.x < injectionSwitch.y)), false, false))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = ((1u * ((workgroup_base))) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if(((false || ((true && (false))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((false || (((((! (! ((true && (((! (! (((injectionSwitch) / vec2(1.0, 1.0)).x > (clamp(injectionSwitch.y, ((injectionSwitch.y) - 0.0), injectionSwitch.y)))))))))))) && true))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((bool(bvec3((false), false, ((injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false || ((bool(bvec4((bool(bvec4((! (! ((false)))), true, true, false))), false, false, ((injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * (((~ (~ ((clamp((4125u & (((~ (((~ (0u)) * 1u)))) + uint((injectionSwitch.x)))) ^ ((((true ? subgroup_size : (virtual_gid))))), (4125u & (((~ (((~ (0u)) * 1u)))) + (~ (~ (uint((injectionSwitch.x))))))) ^ ((clamp((((((true ? subgroup_size : (virtual_gid))))) ^ 0u), (((true ? subgroup_size : (virtual_gid)))), (((((true ? subgroup_size : (virtual_gid))))) | 0u)))), (4125u & (((~ (((~ (0u)) * 1u)))) + uint((mix(float((- 6274.4681)), float((injectionSwitch.x)), bool(true)))))) ^ ((((0u << (uint(1u))) | (((true ? subgroup_size : (virtual_gid))))))))))))) >> ((true ? 0u : (~ (~ ((workgroup_id))))))) + ((subgroup_local_id + (clamp(1, 1, 1))) % (((((((cos(0.0) * (injectionSwitch.x)) > (((max((! ((false || (! (false))))) ? (2.2) : ((true ? injectionSwitch.y : ((determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (round(- 2.2)))))), (! ((((false || (! (false))))) || false)) ? (2.2) : (((true && (((true) || ((injectionSwitch.x > injectionSwitch.y))))) ? injectionSwitch.y : (round(- 2.2))))))))))) && true) ? (virtual_gid) : ((subgroup_size) | ((min(subgroup_size, subgroup_size)))))));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((! (! (((((true && (((injectionSwitch.x > injectionSwitch.y))))) || false) || false)))))))
  barrier();
 if((! ((! (! (! ((false))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = 1;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false)) && true))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(((! (! (((((injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(((bool(bvec2(false, true)))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((! ((((true && (! ((false))))) || false))))
      {
       if((((injectionSwitch.x > (vec2(vec3(injectionSwitch, abs(1.0)))).y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if(((false || ((bool(bvec3(false, true, true)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((! (! (bool((true && (((bool(((true ? injectionSwitch : (intBitsToFloat((ivec2(61632, - 52288) ^ - 36384))))).x > injectionSwitch.y)) || false))))))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec3((bool(bvec4(false, true, true, false))), false, true)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((((! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((! (! (false || ((bool(bvec3((true && ((false))), true, true)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((((((true && (injectionSwitch.x > (max((max(injectionSwitch.y, injectionSwitch.y)), (min(injectionSwitch.y, injectionSwitch.y))))))) && ((injectionSwitch.x < injectionSwitch.y)))) && (((bool(bool(((injectionSwitch.x < injectionSwitch.y)))))) && true))))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((bool(bvec2(injectionSwitch.x < ((clamp((((clamp(clamp(injectionSwitch.y, (mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y), clamp(injectionSwitch.y, (mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y), clamp(injectionSwitch.y, (mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)))) + 0.0), clamp(injectionSwitch.y, (mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y), clamp(injectionSwitch.y, (mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)))), true))))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if(((((mix(float((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((8.8), (4.0)), bvec2(false, false))).x), float((- 2096.9662)), bool(false))) > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(((bool(bvec3(false, ((injectionSwitch.x < (min(injectionSwitch, injectionSwitch)).y)), false)))))
      barrier();
     if((((injectionSwitch.x > (min((min(injectionSwitch.y, injectionSwitch.y)), (mix(float((3.7)), float(injectionSwitch.y), bool(true)))))))))
      barrier();
     barrier();
     if((((injectionSwitch.x > (((mix(float((float(mat4((mix(float((mix(float(((true ? injectionSwitch.y : (- 5.3)))), float((float(false))), bool(false)))), float(((+ - 417.321))), bool(false))), 1.0, ((min(dot(vec2(0.0, 1.0), vec2((float(((mat2x3(0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, round(length(normalize(round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0, 0.0, round(length(normalize(vec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), float((- 726.644)), (false || (bool(false))))) + 0.0))))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec4((((bool((bvec2((bvec2(bvec2(bvec2(bvec2(false, true))))))))) && true)), true, true, ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if((((false || ((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, true))) || false)))))
      barrier();
     if(((true && ((bool(bvec3((! (! (false))), false, true)))))))
      barrier();
     atomicStore(buf[((max(((bool(bvec3(true, false, false))) ? next_virtual_gid : (next_virtual_gid)), (((true ? next_virtual_gid : (next_virtual_gid))) | ((true ? next_virtual_gid : (next_virtual_gid)))))))], uint(2), 4, 64, 0);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     subgroupAll(false);
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((true && (((bool(bvec3((injectionSwitch.x > (min((float((mat4x3(mat4(mat4x3(((injectionSwitch) * vec2(1.0, 1.0)).y, 0.0, length(vec2(0.0, 0.0)), (min(0.0, 0.0)), log((sqrt(0.0) + (1.0))), (injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0))))))), injectionSwitch.y))), false, true))))))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((bool(bvec3(((false || (false))), false, true))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(((((mix(vec2((89.26), (max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (- 902.755)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], (~ (~ (min((uint(2)), ((0u ^ ((min(((uint(2)) << 0u), uint(2)))))))))), 4, 64, 0);
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
      barrier();
     subgroupAll(true);
     if(((bool(((bool((false || (false)))) || false)))))
      {
       if(((! (! (false)))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(((((float((mat2x3(((false ? (mat3(1.2, - 8.6, - 43.69, 99.10, - 99.80, 9.2, - 89.03, 7.4, 7.6)) : mat3(mat2x3((float(float(injectionSwitch.x))), 0.0, 0.0, abs(0.0), 1.0, 1.0)))))))) > injectionSwitch.y))))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
    }
   if(((true && ((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((bool(bvec4((false || ((false))), ((injectionSwitch.x > injectionSwitch.y)), false, false))))
    barrier();
   if((false))
    barrier();
   if((((! (! (bool((bvec2(bvec4(bvec2(! (! ((! (! ((((bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), false)))) || false)))))), true), true, false))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > (mat2(1.0) * ((false ? (vec2(545.160, - 7.4)) : (((injectionSwitch)) * mat2(1.0))))).y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false || ((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
