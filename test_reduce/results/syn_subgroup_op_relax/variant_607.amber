#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (uvec3(uvec3(((uvec3((max((max((~ ((~ (~ (~ (((uvec3((uvec3(uvec4(~ (~ (gl_WorkGroupSize)), (uint(uvec2((1u & 1u), 1u)))))))) ^ (uvec3(0u, 0u, 0u) | (uvec3((((injectionSwitch.x) + (float((transpose(transpose(mat2x3(0.0, 0.0, abs(1.0), 0.0, 1.0, (injectionSwitch.x))))))))), (injectionSwitch.x), ((sin(0.0) + (float(mat3x2((((injectionSwitch.x)) - log(1.0)), abs(0.0), 1.0, 0.0, exp((1.0 * (0.0))), log(1.0)))))))))))))))), ((uvec3((uvec3(uvec4(~ (~ (gl_WorkGroupSize)), (uint(uvec2((1u & 1u), 1u)))))))) ^ (uvec3(0u, 0u, 0u) | (uvec3((((injectionSwitch.x) + (float((transpose(transpose(mat2x3(0.0, 0.0, abs(1.0), 0.0, 1.0, (injectionSwitch.x))))))))), (injectionSwitch.x), ((sin(0.0) + (float(mat3x2((((injectionSwitch.x)) - log(1.0)), abs(0.0), 1.0, (max(0.0, 0.0)), exp(0.0), log(1.0)))))))))))), ((uvec3((uvec3(uvec4(~ (~ (gl_WorkGroupSize)), (uint(uvec2((1u & 1u), 1u)))))))) ^ (uvec3(0u, 0u, 0u) | (uvec3((((injectionSwitch.x) + (float((transpose(transpose(mat2x3(0.0, 0.0, abs(1.0), 0.0, 1.0, (injectionSwitch.x))))))))), (injectionSwitch.x), ((sin(0.0) + (float(mat3x2((((injectionSwitch.x)) - log(1.0)), abs(0.0), 1.0, 0.0, exp(0.0), log(1.0)))))))))))))))))).x;
 uint workgroup_id = ((uvec3(1u, 1u, 1u) * (((true ? (uvec3(1u, ((((1u) * 1u)) / 1u), 1u) * (((uvec3(0u, 0u, 0u) | (((((false ? (uvec3(65353u, 61351u, 5642u)) : ((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) | ((false ? (uvec3(65353u, 61351u, 5642u)) : ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) - (max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))))) : (uvec3(164806u, 98847u, 29751u))))))).x;
 uint workgroup_base = ((true ? (uint(uvec4(((workgroup_size) / uint((injectionSwitch.y))), 1u, (((((0u >> (uint(1u))) | (0u >> (uint(1u)))))) | ((((0u >> (uint(1u))) | (0u >> (uint(1u))))))), 1u))) : (uint(true)))) * workgroup_id;
 uint virtual_gid = (0u | ((~ (~ ((max(((((max(clamp(((((clamp((~ (~ ((workgroup_base)))), (workgroup_base), ((0u | (min((workgroup_base), (workgroup_base))))))) / (0u ^ 1u)) | ((((uint((max(uvec2((workgroup_base), 1u), uvec2((workgroup_base), 1u))))) / (0u ^ 1u)) / 1u)))), ((workgroup_base) / (0u ^ 1u)), ((workgroup_base) / (0u ^ 1u))), clamp(((((clamp((~ (~ ((workgroup_base)))), (workgroup_base), ((0u | (min((workgroup_base), (workgroup_base))))))) / (0u ^ 1u)) | ((((uint((max(uvec2((workgroup_base), 1u), uvec2((workgroup_base), 1u))))) / (0u ^ 1u)) / 1u)))), ((workgroup_base) / (0u ^ 1u)), ((workgroup_base) / (0u ^ 1u))))))) << (0u << (uint(1u)))), (max((((clamp(((((workgroup_base) / (((true ? 0u : ((((false ? (workgroup_size) : uint(uint(((subgroup_size) / 1u))))))))) ^ 1u)) | ((((uint((max(uvec2((workgroup_base), 1u), uvec2((workgroup_base), 1u))))) / (0u ^ ((false ? (subgroup_size) : 1u)))) / 1u)))), ((workgroup_base) / ((min((0u | (0u)) ^ 1u, (0u | (0u)) ^ 1u)))), (((min((uint(uint(workgroup_base))), ((workgroup_base) | (1u ^ 1u))))) / (0u ^ 1u))))) << (0u << (uint(((1u) / 1u))))), (((clamp(((((workgroup_base) / (0u ^ 1u)) | (((((~ ((min(~ (uint((max(uvec2((workgroup_base), 1u), uvec2((workgroup_base), 1u))))), (~ (~ (~ (uint((max(uvec2((workgroup_base), 1u), uvec2((workgroup_base), 1u))))))))))))) / (0u ^ 1u)) / 1u)))), ((workgroup_base) / (0u ^ 1u)), ((workgroup_base) / (0u ^ 1u))))) << (0u << ((false ? (num_workgroup) : (uint(((min(uint((uvec2(0u, 0u) ^ (uvec2(((1u) | (1u)), 1u)))), uint((uvec2(0u, 0u) ^ (uvec2(((1u) | (1u)), 1u))))))))))))))))) + subgroup_id * ((~ ((max(~ (((((uint(uvec2(subgroup_size, 1u))) ^ 0u)))), ~ (((((uint(uvec2(subgroup_size, 1u))) ^ 0u)))))))) - (85825u & 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = (min((clamp(((((((((min(min((uint(uvec3(((min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) - 0u), 1u, 1u))), ((min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) - 0u)), min((uint(uvec3(((min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) - 0u), 1u, 1u))), ((min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) - 0u))))) >> 0u))) | (0u << (uint(8u)))) + (~ ((min(~ (((subgroup_local_id + 1) % ((~ (((~ (((true ? clamp(subgroup_size, subgroup_size, subgroup_size) : (workgroup_base))))) / 1u)))))), ~ (((subgroup_local_id + 1) % ((~ (((~ (((true ? clamp(subgroup_size, subgroup_size, subgroup_size) : (workgroup_base))))) / 1u))))))))))) | ((((((true ? (workgroup_base + ((((true ? subgroup_id : (atomicMin(subgroup_size, virtual_gid))))) * 1u) * subgroup_size) - 0u : (~ (~ (((workgroup_size & subgroup_id))))))))) | (0u << (uint(8u)))) + ((subgroup_local_id + (((((min(1, ((1) / 1)))) | (1))) << (0 << (int(2))))) % (clamp(subgroup_size, subgroup_size, subgroup_size))))), ((((workgroup_base + subgroup_id * subgroup_size) - 0u)) | (0u << ((((max((min(uint(uvec4((uint(8u)), 0u, 0u, 1u)), uint(uvec4((uint(8u)), 0u, 0u, ((((1u) | ((~ (~ (1u)))))) + 0u))))), uint(uvec4(((~ (~ (uint(8u))))), 0u, 0u, 1u)))) / 1u))))) + ((subgroup_local_id + 1) % (clamp(subgroup_size, subgroup_size, (max(((subgroup_size) ^ 0u), subgroup_size))))), (((((((uint((min((~ (~ (uint(((((workgroup_base + subgroup_id * subgroup_size) - 0u)) / 1u))))), uint(((((workgroup_base + subgroup_id * subgroup_size) - 0u)) / 1u))))))) | (0u << ((uint((~ (((~ (uvec2(((uint(8u)) >> 0u), 0u))) | (~ (~ (uvec2(0u, 0u)))))))))))) + ((subgroup_local_id + 1) % (clamp(subgroup_size, subgroup_size, subgroup_size)))) | (((((workgroup_base + subgroup_id * subgroup_size) - 0u)) | (0u << ((uint((~ (((((min((~ (uvec2(((uint(8u)) >> 0u), 0u))) | uvec2(0u, 0u), (clamp((~ (uvec2(((uint(8u)) >> 0u), 0u))) | uvec2(0u, ((0u) >> 0u)), (~ (uvec2(((uint(8u)) >> 0u), 0u))) | uvec2(0u, 0u), (~ (uvec2(((uint(8u)) >> 0u), 0u))) | uvec2(0u, 0u)))))) << uvec2(0u, 0u)))))))))) + ((((((uint(uint(0u)))) << (0u << (uint(8u)))) ^ (((subgroup_local_id + 1) % (clamp(subgroup_size, subgroup_size, subgroup_size)))))) | (((subgroup_local_id + 1) % (clamp(subgroup_size, subgroup_size, subgroup_size)))))))) | 0u))), ((((workgroup_base + subgroup_id * subgroup_size) - 0u)) | ((((((0u ^ ((max(0u, 0u)) << (uint(8u))))) - (0u | 0u)))) >> 0u)) + ((subgroup_local_id + 1) % (clamp(subgroup_size, subgroup_size, subgroup_size)))));
 buf[virtual_gid] = (min(1, 1));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
