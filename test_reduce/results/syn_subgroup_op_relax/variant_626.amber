#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_15 {
 vec3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uint _f1;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 mat3x2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat2x3 _f1;
 uvec4 _f2;
 bvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 int _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 _GLF_struct_16 _f1;
 uvec3 _f2;
 ivec4 _f3;
 ivec2 _f4;
 uint next_virtual_gid;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat3x4 _f1;
 float _f2;
 mat3x2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 bvec2 _f1;
 uint workgroup_id;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 ivec4 _f1;
 uvec2 _f2;
 uvec2 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 mat4x3 _f1;
 uint _f2;
 uvec3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 vec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 float _f1;
 mat3x4 _f2;
 mat3 _f3;
 mat2 _f4;
 uint _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat2x4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 mat4x3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((((((bool(bool(true))) && true))) && true) && (false))))
    return;
   if(((((clamp(injectionSwitch.x, ((false ? (- 364.775) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((((((vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > (clamp(injectionSwitch, (max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(((! (! (bool(bvec2((((false)) && true), ((false) && true))))))))
  {
   if((false))
    {
     if((((false || (bool(bvec4((bool(bvec2((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (bool(bvec4((false), true, false, true))))))), false))), false, true, ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if(((((((false) || false)) || false) || (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, false))))
  {
   if(((bool(bool((! ((! (! (! (false)))))))))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (~ ((1u ^ 1u) | (~ ((((clamp(~ ((((~ (((((~ (((clamp(uint(uvec3((uint(uvec3(~ ((0u | (0u | (0u))) + ((gl_NumWorkGroups.x))), 0u, 0u))), 0u, 0u)), uint(uvec3((uint(uvec3(~ ((uint(uint((uint(uvec3((0u | 0u) + ((gl_NumWorkGroups.x)), 0u, 1u))))))), 0u, 0u))), ((false ? (subgroup_local_id) : 0u)), 0u)), uint(uvec3((uint(uvec3(~ ((0u | 0u) + ((gl_NumWorkGroups.x))), 0u, 0u))), 0u, 0u))))))) ^ 0u)) >> 0u)))))), ~ ((((((((((1u << (((uint(1u)) | 0u))) >> (uint(1u))) * ((~ (((((~ (((0u + ((clamp(uint(uvec3((uint(uvec3(~ ((0u | (0u | (0u))) + ((gl_NumWorkGroups.x))), 0u, 0u))), 0u, 0u)), uint(uvec3((uint(uvec3(~ ((uint(uvec3((0u | 0u) + ((((gl_NumWorkGroups.x))) + 0u), 0u, 1u)))), 0u, 0u))), 0u, 0u)), uint(uvec3((uint(uvec3(~ ((0u | (~ (~ (((0u) >> 0u))))) + ((gl_NumWorkGroups.x))), 0u, ((0u) | (((0u) ^ 0u)))))), 0u, 0u))))))))) ^ 0u)) >> 0u))))))) ^ 0u)) - 0u))), ~ (((((~ (~ ((1u * (~ (((((~ (((clamp(uint(uvec3(((~ (~ ((max(uint(uvec3(~ ((0u | (0u | (0u))) + ((gl_NumWorkGroups.x))), 0u, 0u)), uint(uvec3(~ ((0u | (0u | (0u))) + ((gl_NumWorkGroups.x))), 0u, 0u)))))))), 0u, 0u)), uint(uvec3((uint(uvec3(~ ((uint(uvec3((0u | 0u) + ((gl_NumWorkGroups.x)), 0u, 1u)))), 0u, 0u))), 0u, 0u)), uint(uvec3((uint(uvec3(~ ((0u | 0u) + ((gl_NumWorkGroups.x))), 0u, 0u))), 0u, 0u))))))) ^ 0u)) >> 0u)))))))))))))) | 0u)))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false || (((false || (bool(bvec2(((((mix(float(injectionSwitch.x), float(((min(((true ? (((clamp(- 6.8, - 6.8, ((true ? ((- 6.8) / 1.0) : (- 0.4)))))) * 1.0) : ((mix(float(70.42), float((5.3)), bool(false)))))), - 6.8)))), bool(false))) > injectionSwitch.y))), false))))))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((bool((bvec3(bvec3(bvec3((false), true, true)))))))
      return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((((mix(float((float(vec3(injectionSwitch.x, 0.0, 1.0)))), float((- 835.749)), bool(((injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  return;
 uint workgroup_size = ((uvec3((min(0u, 0u)), 0u, 0u) | (uvec3((((0.0 + ((((injectionSwitch) - (((((injectionSwitch.x > injectionSwitch.y)) ? (vec2(38.95, - 4.1)) : min(((true ? vec2(0.0, 0.0) : ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), ((true ? vec2(0.0, 0.0) : (injectionSwitch)))))))).y)))) / 1.0), (injectionSwitch.y), (injectionSwitch.y)) * (gl_WorkGroupSize)))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if(((((((injectionSwitch.x > injectionSwitch.y)) || false)) || (false || ((false))))))
    return;
   return;
   if((false))
    return;
  }
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((bool((bvec3(bvec4(bvec3((((((((((injectionSwitch.x > injectionSwitch.y)))) || false)) || ((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) || false), ((! (! ((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))), true), true))))) && true)))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec3(((19133 & 0) ^ (1))), _GLF_struct_4(uvec2((((0u | (1u))) - 0u)), mat2x4(((float(vec2((float(vec2((1.0) / 1.0, 1.0))), 1.0))))), _GLF_struct_0(uvec3(1u), 1.0, mat3x4(1.0), mat3(1.0), mat2(1.0), 1u, mat4x2(1.0)), _GLF_struct_1((vec2(mat2x3(((false ? (injectionSwitch) : vec2(1.0))), (mix(float((- 6542.5507)), float((((! ((false || (! (true))))) ? 0.0 : (- 4.5)))), bool(true))), round(length(normalize((min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), 0.0, 0.0))), mat2(1.0)), _GLF_struct_2(mat3x4(((1.0) * 1.0)), vec2(1.0), mat4x2(1.0)), mat4x3(1.0), _GLF_struct_3(uvec3(1u), mat4x3((1.0 * (min((1.0), (float(float((1.0)))))))), 1u, uvec3(1u), bvec3(true))), _GLF_struct_7((uvec4(1u, 1u, 1u, 1u) * (~ ((min(~ ((((uvec4(1u))) | ((uvec4(1u))))), ~ ((((uvec4(1u))) | ((uvec4(1u)))))))))), ivec4((max((int(ivec4(((1) | 0), 1, 0, 0))), 1))), ((false ? (uvec2((clamp(133291u, 133291u, 133291u)), 38940u)) : uvec2(((0u ^ 0u) ^ (min((clamp((uint(uint((1u)))), (1u), (1u))), (1u))))))), uvec2(1u), _GLF_struct_5(ivec2(((1) ^ 0)), bvec2(true), (min((((clamp(gl_WorkGroupID, (uvec3(0u, 0u, 0u) ^ ((min(((gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), ((gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))), (~ (((((~ (gl_WorkGroupID)) + uvec3(0u, 0u, 0u))) | (~ (gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), (clamp(gl_WorkGroupID, (uvec3(0u, 0u, 0u) ^ ((min(((gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), ((gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))), (~ (((((~ (gl_WorkGroupID)) + uvec3(0u, 0u, 0u))) | (~ (gl_WorkGroupID))))))))).x), _GLF_struct_6(mat4x2(1.0), mat3x4((float(vec2(1.0, 0.0)))), 1.0, mat3x2(1.0), mat4((min(1.0, (min(1.0, (min(1.0, 1.0))))))))));
 if((false))
  return;
 uint workgroup_base = ((workgroup_size) / 1u) * _GLF_struct_replacement_8._f2._f4.workgroup_id;
 if(((((((injectionSwitch.x > injectionSwitch.y)) || ((mix(float((27.75)), float((max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((bool(bool(false)))))
    return;
   return;
  }
 uint virtual_gid = (((~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) - 0u);
 if((false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_14(mat4(1.0), _GLF_struct_9(mat4x2(1.0), 1, ivec3(1)), _GLF_struct_10(1, mat2x3(1.0), uvec4(1u), bvec2(true), ivec2(1)), _GLF_struct_11(mat4(1.0), ((bvec3(bvec4(bvec3((bvec3(bvec4(bvec3((((bvec3(bvec4(bvec3(bvec3((bvec3(bvec4(bvec3(bvec4(bvec3(true), ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y))))))), true)))))), true)))), true))))), _GLF_struct_12(mat4((float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, (((clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, sqrt(((float(mat3x4(max((((true ? min((float((mat3x4(mat3x4(mat3x4((min(1.0, 1.0)), 0.0, 0.0, (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, (injectionSwitch.y), 0.0, 1.0)))))), 1.0) : (81.42)))), (max((float(mat4x2(1.0, (mix(float(1.0), float((- 9.6)), bool(false))), 1.0, (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 0.0, 1.0))), 1.0))), 1.0, 1.0, (dot(((vec3(0.0, 1.0, ((((true ? float(float((mix(float((6.0)), float(injectionSwitch.x), bool(true))))) : (26.16))))))) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)))))))))), _GLF_struct_13(vec2(1.0), mat3x2(1.0), mat3(1.0))), _GLF_struct_16(_GLF_struct_15(vec3(1.0), mat2x4(1.0), (max(uvec2(1u), (((uvec2((injectionSwitch.x), (injectionSwitch.x)) | ((uvec2(uvec2(uvec2(1u)))))) << uvec2(((mix(float((- 6.4)), float(injectionSwitch.x), bool(true)))), (injectionSwitch.x))))))), 1u), uvec3(1u), ivec4(1), ivec2(1), workgroup_base + (max((((max(((~ ((min(~ ((clamp(((~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u)))) | (~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u))))), ~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u))), ~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u)))))), ~ ((clamp(((~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u)))) | (~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u))))), ~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u))), ~ (~ (false ? (subgroup_size) : ((subgroup_id) + 0u))))))))))), false ? (subgroup_size) : ((~ (~ ((subgroup_id) + 0u)))))))), (((max((~ ((max(0u | ((~ ((bool((bvec3(bvec3(bvec3(false, false, true)))))) ? (subgroup_size) : ((subgroup_id) + 0u)))), 0u | ((~ ((bool((bvec3(bvec3(bvec3(false, false, true)))))) ? (subgroup_size) : ((subgroup_id) + 0u)))))))), false ? (subgroup_size) : ((subgroup_id) + 0u))))))) * subgroup_size + ((((subgroup_local_id + (clamp((clamp((~ (~ (1))), 1, 1)), 1, 1))) % subgroup_size)) | 0u));
 if((false))
  return;
 if(((! (! ((bool(bvec3((bool(bvec3(false, true, false))), true, false))))))))
  {
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 ((buf[virtual_gid] = 1) << (0u << (uint(uint((uint(2u)))))));
 if((true && (((((bool(bvec4(bool(bvec3(true && (((injectionSwitch.x > injectionSwitch.y)) || (((! (! ((subgroup_local_id + 1 < subgroup_size))))))), false, false)), true, true, true)))) && true)))))
  {
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(2), 4, 64, ((min(((((((min(0, 0))) | 0) | (((min(((0) | (0)), 0))) | 0))) | (((((min(0, 0))) | (- 64002 & 0))) | 0)), ((((((min(0, 0))) | 0) | (((min(0, 0))) | 0))) | (((min(0, 0))) | 0))))));
   if((((((true && ((! (! ((false)))))) && true))) && true))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if((bool((bool(bvec4(bool((((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))
    {
     if((false))
      return;
     return;
    }
   if(((((false || (((injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if((((false) || false)))
      return;
     return;
    }
   if(((((! (! (((false) && true))))) && true)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], (max(uint(2), uint(2))), 4, 64, 0);
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   subgroupAll((((bool(bvec2(true, false))) && true)));
  }
 if((((true && (bool(bvec3(bool(bvec4((false || ((false))), false, false, false)), false, true)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
