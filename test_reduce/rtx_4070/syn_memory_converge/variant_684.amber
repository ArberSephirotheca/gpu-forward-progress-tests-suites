#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (((max((min(((((gl_WorkGroupSize) ^ uvec3(0u, ((0u) | (0u)), 0u))) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, (~ ((1u * (~ ((((((((min((((false ? (uvec3(115419u, 183057u, 135102u)) : (((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))), gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, ((true ? 0u : (subgroup_local_id))), 0u))) | uvec3(0u, 0u, 0u)).x)))))))) | 0u);
 uint workgroup_id = (uvec3(0u, 0u, 0u) + (((((true ? ((~ ((~ (~ (~ (max((uvec3(0u, 0u, 0u) + ((((((uvec3(uvec3((((uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | ((uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))))) / uvec3(1u, 1u, 1u))))), (uvec3(0u, 0u, 0u) + ((((((uvec3(uvec3((((uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | ((uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))))) / uvec3(1u, 1u, 1u)))))))))))) - uvec3(0u, 0u, 0u)) : (uvec3(185338u, 102108u, 151089u))))) | uvec3(0u, 0u, 0u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((workgroup_base) * 1u) + subgroup_id * (1u * ((((((((min(subgroup_size, (min(subgroup_size, subgroup_size)))) / 1u)))) ^ 0u)) / 1u)) + subgroup_local_id;
 atomicStore(write_val, (max(uint(virtual_gid), ((((uint(uvec4((false ? (((uint(uvec2((mix(num_workgroup, 197614u, false)), 1u)))) - 0u) : (max(uint((~ (~ ((0u | (virtual_gid)))))), uint(virtual_gid)))), ((1u << (uint(4u))) >> (uint(4u))), 0u, 1u))) / 1u))))), (((~ ((max(~ (((4) * 1)), ~ (((4) * 1))))))) + 0), 64, 0);
 if(((((bool(bool((((injectionSwitch.x < injectionSwitch.y)) && (false)))))) && true)))
  barrier();
 buf[virtual_gid] = (0u + ((~ (~ (((((uint(subgroupAllEqual(((write_val) | (write_val))))) / 1u)) | 0u))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
