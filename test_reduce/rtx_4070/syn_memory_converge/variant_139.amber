#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((false || (false))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((((vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((false) && (bool(bvec3((true && (true)), true, false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((((bool(bool(false)))) || ((bool(bvec2(((min((float(mat4((clamp((min(injectionSwitch, injectionSwitch)).x, (min(((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0), ((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0))), injectionSwitch.x)), 0.0, determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), ((false ? (1298.4008) : 1.0)), (float(((mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), log(1.0), cos(0.0), abs(0.0), 1.0, ((false ? (4139.7039) : 0.0)), 0.0, 1.0)) * mat4(1.0)))))), 0.0, sqrt(exp(0.0)), (injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (((float(mat4((clamp((min(injectionSwitch, injectionSwitch)).x, (min(((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0), ((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0))), injectionSwitch.x)), 0.0, determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), ((false ? (1298.4008) : 1.0)), (float(((mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), log(1.0), cos(0.0), abs(0.0), 1.0, ((false ? (4139.7039) : 0.0)), 0.0, 1.0)) * mat4(1.0)))))), 0.0, sqrt(exp(0.0)), (injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) + 0.0))) > injectionSwitch.y), (bool(bvec2(false, true))))))))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((false) || false)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (((! (false)) && (bool(bvec2(true, false))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((! ((((! (! (! (false))))) && (! (! (true))))))))
  {
   if((false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if(((bool(bvec3(false, true, false)))))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if((((false) || false)))
      barrier();
    }
   if((false))
    return;
   if((((true && ((((injectionSwitch.x > injectionSwitch.y)) || false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          return;
         barrier();
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             barrier();
            }
           return;
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(((! (! ((true && ((true && (false)))))))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((false) || false)))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if(((false || (false))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((bool((bvec2((bvec3(bvec3(bvec3(bvec2(((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : (4.2))) > injectionSwitch.y, false), true))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if(((((! (! ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((740.921), (8.8)), bvec2(((injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)))))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > ((mat2(1.0) * ((injectionSwitch) * mat2((injectionSwitch.y))))).y))))
    barrier();
   if((! ((! (! (! ((false))))))))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), false))) && ((true) || false)))))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((((! (! (bool(bvec2(bool(bvec3((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), true, false)), false))))))))
  {
   if((false))
    {
     if((((false || (true && (false))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if(((false || (false))))
    barrier();
   return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > (max((float((mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, (injectionSwitch.x), 1.0, sqrt((dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0))))), (float((mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, (injectionSwitch.x), 1.0, sqrt((dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0)))))))))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > (exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((! (! (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if((! (! (! (((! (! ((((((injectionSwitch.x < injectionSwitch.y)) || false)) && (! ((! (! ((false))))))))))))))))
    {
     if(((! (! (false)))))
      {
       if(((true && ((bool(bool(false)))))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      {
       if(((! (! (false)))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((((mix(float((- 1.3)), float(((injectionSwitch.x) - 0.0)), bool(true))) > ((float(mat4(float(vec2(injectionSwitch.y, 0.0)), (min(0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))
    barrier();
   if(((! (! (false)))))
    barrier();
  }
 if((true && ((false))))
  return;
 if((false))
  barrier();
 if(((((max((min(injectionSwitch.x, (min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! (false)))))
    barrier();
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((bool(bvec4((((bool((bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) && true)), false, false, true))))))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((false)) && true))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if(((true && (((false) || false)))))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((! (! ((! (! ((false))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(((false || (false))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
  }
 uint num_workgroup = (min(gl_NumWorkGroups.x, (((~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u)).x));
 if(((true && (false))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((((false)) && (! (! (true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((true && (((bool(bvec3(bool(bool((false))), true, true)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((false) && true)))
        return;
       barrier();
      }
     if((false))
      return;
     barrier();
    }
   if((true && ((false))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! ((bool(bvec3(false, true, true))))))))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((false))
    {
     if((false))
      {
       if((((false) && true)))
        {
         if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
         if((! (! ((((false) || false))))))
          {
           if((false))
            return;
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((! (! ((false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, (min(injectionSwitch, ((injectionSwitch) * mat2(1.0)))))).y))))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   return;
  }
 uint workgroup_size = (min(gl_WorkGroupSize.x, (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))));
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(((((! ((bool(bvec4((((true && (! (((false) || false))))) && true), ((injectionSwitch.x < injectionSwitch.y)), true, true))))) && ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((((true ? injectionSwitch.x : (3635.8791))) > injectionSwitch.y))) && true)))
    return;
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * (min(((workgroup_id) | 0u), ((workgroup_id) | (workgroup_id))));
 if((((((! ((true && (! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))) || ((injectionSwitch.x > injectionSwitch.y)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(((true && (false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > (mix(float((91.06)), (clamp((max((mix(float(float(injectionSwitch.y)), float((- 523.354)), bool(false))), float(injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true)))))))
    {
     if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if(((((min(injectionSwitch.x, injectionSwitch.x)) > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
    }
  }
 if((false))
  barrier();
 if(((((mix(float(injectionSwitch.x), float((858.486)), bool(false))) > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((! (! (bool((bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((false) && true)))
          barrier();
         return;
        }
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (false)))))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((! (! (bool(bvec4(false, false, true, true))))))))
          barrier();
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((! (! (((bool(bvec2(bool(bool(false)), true))))))) || (((! (! (((bool(bvec4((((injectionSwitch.x > injectionSwitch.y)) || ((false))), false, false, true))) && true))))))))
    return;
   if((((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y)))) && true))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          return;
         if((((false) && true)))
          {
           if((false))
            return;
           barrier();
          }
         return;
        }
       return;
      }
     return;
     if((false))
      return;
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((true && ((! (((true && (true)) && (! (((((clamp(injectionSwitch.x, (max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((((! (! ((! (! (injectionSwitch.x > ((injectionSwitch) - log(vec2(1.0, 1.0))).y))))))))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if(((false || ((((! (! (bool(bvec3((false), true, ((injectionSwitch.x < ((injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = (((false ? (61763u) : (true ? workgroup_base : (uvec4(117987u, 36753u, 58634u, 128179u).x))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec3((false), true, true))))
  {
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((true && ((false))))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if(((bool(bool(false)))))
      {
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
  }
 if(((((! ((true && (! (((injectionSwitch.x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(((false || (false))))
    barrier();
   if(((false || (false))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   barrier();
  }
 if(((bool(bvec2(false, false)))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   if(((((! (! ((! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (((false) || false)))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((true && (bool(bvec2(false, true)))))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(((true && (bool(bvec4(bool((false || (false))), true, ((injectionSwitch.x < injectionSwitch.y)), true)))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((((min(injectionSwitch, injectionSwitch)).x > (1.0 * (injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
  }
 if((false))
  {
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((bool(bool(false)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if(((! (! (false)))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(((bool(bool(false)))))
    {
     if(((! (! ((false || (false)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (false))))
      return;
     if((false))
      barrier();
    }
   if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((false))
      return;
     return;
    }
   if(((true && ((false || (((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((min((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((bool((bool(bvec3(bool(((((! (! (((((injectionSwitch.x > ((true ? injectionSwitch : (radians(vec2(- 1.7, - 1.4))))).y)) || false)) && true))))))), (! (! (true))), false))))))
    {
     if((false))
      {
       if(((! (! (false)))))
        return;
       barrier();
      }
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > (clamp(((injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
       if((false))
        {
         if((false))
          return;
         barrier();
        }
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        return;
      }
    }
   barrier();
  }
 if(((((mix(float(((float(mat3x4((injectionSwitch.x) * 1.0, 1.0, 0.0, 0.0, (dot(vec3((injectionSwitch.x), 1.0, 1.0), vec3(1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, abs(0.0)))))), float(((- 530.448 / 21.98))), bool(false))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false) && true)))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          return;
         barrier();
        }
       if(((bool(bvec2(false, true)))))
        return;
      }
     if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
      {
       if((false))
        {
         if(((true && (false))))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if(((((! (! (bool(bvec3((! ((! (! (bool((bvec3(bvec3(bvec3((! (((false || (injectionSwitch.x > (mix(vec2((4.9), (injectionSwitch)[1]), vec2(((max((max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], ((5000.1035 - - 99.26))), bvec2(true, false))).y))))), false, (true && ((bool(bvec3((! (! (((injectionSwitch.x < injectionSwitch.y))))), true, true))))))))))))))), false, false)))))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((((! (! ((((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   barrier();
  }
 if((! (! ((! (! ((((injectionSwitch.x > (mix(vec2((float((- - 99386))), (injectionSwitch)[1]), vec2(((clamp(float(vec4((injectionSwitch)[0], 1.0, abs(0.0), 1.0)), float(vec4((injectionSwitch)[0], 1.0, abs(0.0), 1.0)), float(vec4((injectionSwitch)[0], 1.0, abs(0.0), 1.0))))), (- 903.961)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))).y))))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint((((0u ^ ((~ (~ (virtual_gid)))))) << ((0u << (uint(3u))) >> (uint(7u))))), 4, 64, 0);
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     return;
    }
   if(((false || (false))))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    return;
  }
 if((((((! (! ((bool(bool((false))))))) && true))) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 ((buf[virtual_gid] = uint(subgroupAllEqual(write_val))) + 0u);
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool(bool(false)))))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (false))))
      barrier();
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
     if((false))
      barrier();
    }
   if(((bool(bvec2(false, false)))))
    barrier();
   if((false))
    {
     if(((true && (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if(((false || (((((1.0 * (float(mat4(injectionSwitch.x, 1.0, 0.0, (min(1.0, 1.0)), 0.0, 0.0, ((1.0) + 0.0), 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))))) > injectionSwitch.y))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((! ((false || (! ((false || ((((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((! (! ((((! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, ((injectionSwitch.x < injectionSwitch.y)))))))))))))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((((max(((true ? ((true ? (injectionSwitch) : (vec2(36.73, 20.80)))) : (vec2(- 27.57, 386.674)))), (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
        }
       barrier();
       if((((false) && true)))
        {
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
      }
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     return;
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if((((false || (bool(bvec2(false, false)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if(((bool(bool((false || (false)))))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         return;
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(((! ((false || (! (false)))))))
      barrier();
    }
   if((false))
    barrier();
   if((! ((! ((! (! (! (! ((true && ((false)))))))))))))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
   barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if(((bool(bvec3(false, true, true)))))
    barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (false))))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     if(((((! (! (((injectionSwitch.x > injectionSwitch.y))))))) || false))
      return;
     if((false))
      {
       if(((((! (! (injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y)))))))))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > (((max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((! (! (bool(((bvec2(bvec2(bvec2(bvec4(bvec2((bool(bvec2(false, true))), true), false, false)))))))))))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((bool(bvec4((false), false, true, true))))
          barrier();
         if((((false) || false)))
          {
           if((false))
            return;
           if((false))
            barrier();
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
        }
       return;
       if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      barrier();
     return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((((false) || false)))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((true && (false))))
  {
   if((false))
    return;
   barrier();
  }
 if(((((bool(bvec4((true && (bool(bvec2((false), true)))), false, ((injectionSwitch.x > injectionSwitch.y)), false)))) && true)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      return;
     barrier();
    }
   if(((bool(bvec3(false, false, true)))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    barrier();
   if((! ((false || (! (((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec3(false, false, true)))))
    {
     if((false))
      return;
     barrier();
    }
   if((((((injectionSwitch.y) * ((clamp(injectionSwitch.x, ((injectionSwitch.x) - 0.0), injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > (max(((injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
        return;
       barrier();
      }
     if((false))
      barrier();
     return;
     if((false))
      return;
     if((! (! ((false || ((false)))))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if(((bool(bvec3((! (! ((bool(bool(false)))))), true, true)))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if(((! (((! ((false || (false)))) || false)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((true && (false))))
      return;
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(((! (! (bool(bvec2((false), ((injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((((bool(bool(((mix(float(injectionSwitch.x), float(((- (clamp((clamp(- 31.14, - 31.14, - 31.14)), (clamp(- 31.14, - 31.14, - 31.14)), (clamp(- 31.14, - 31.14, - 31.14))))))), bool(false))) > injectionSwitch.y)))))))
  {
   if((! ((false || (! ((false)))))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   if((((false)) || false))
    barrier();
   return;
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bool(false)))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  return;
 if((((false) || false)))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   if(((((! (! (((false) || false))))) || false)))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((((bool(bvec2((false || (bool(bvec3((! (! (((((injectionSwitch.x > injectionSwitch.y))) || false)))), false, ((injectionSwitch.x < injectionSwitch.y)))))), false))))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
