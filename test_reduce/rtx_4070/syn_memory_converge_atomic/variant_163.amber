#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((true ? ((((((1u * (clamp((max(gl_NumWorkGroups, gl_NumWorkGroups)).x, (max((uvec3((uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), ((((((~ (~ (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)))) / uvec3(1u, 1u, 1u)))).x, (max(gl_NumWorkGroups, gl_NumWorkGroups)).x))))) / 1u)) * ((0u | (1u)) | 0u)) : (11486u)));
 uint workgroup_size = ((~ ((uvec3(0u, 0u, 0u) ^ (((~ ((((((gl_WorkGroupSize) ^ (((uvec3(1u, 1u, (((~ (~ ((max(false ? (clamp((((0u >> (uint(3u))) ^ (((((injectionSwitch.x < injectionSwitch.y)) && (true)) ? (subgroup_local_id) : (subgroup_id))))), (subgroup_local_id), (max((subgroup_local_id), (subgroup_local_id))))) : 1u, false ? (clamp((((0u >> (uint(3u))) ^ ((((max((true ? (subgroup_local_id) : (subgroup_id)), (true ? (subgroup_local_id) : (subgroup_id))))) | (clamp(((true ? (subgroup_local_id) : (subgroup_id))), ((true ? (subgroup_local_id) : (subgroup_id))), ((true ? (subgroup_local_id) : (subgroup_id))))))))), (subgroup_local_id), (max((subgroup_local_id), (subgroup_local_id))))) : 1u)))))))) * (uvec3(0u, 0u, ((0u) * 1u)))) ^ uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))) >> (uvec3(0u, 0u, 0u) + (((min(min(((uvec3((uint(uvec3(0u, 0u, (0u & 163190u)))), 0u, 0u) ^ ((((uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, (min(((1u) * 1u), 1u)))), ((uvec3(0u, 0u, 0u) ^ (((((clamp(uvec3(((0u) >> 0u), 0u, (max(0u, (uint(uvec3((1u * (((0u) << 0u))), 0u, 0u)))))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, (min(0u, 0u))))))) << uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, (min(((1u) * 1u), 1u))))), min(((uvec3(0u, 0u, 0u) ^ ((((((uvec3(0u, 0u, 0u) | (((uvec3(uvec3(((uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u))) << uvec3(0u, (uint(uint(0u))), 0u)))) / (clamp(uvec3(1u, 1u, (min(((1u) * 1u), 1u))), uvec3(1u, 1u, (min(((1u) * 1u), 1u))), uvec3(1u, 1u, (min(((1u) * 1u), 1u)))))), ((uvec3(0u, 0u, 0u) ^ (min((((((clamp(((uvec3(0u, ((0u) | (0u)), ((0u | (max(0u, 0u)))))) / (clamp((((((min(uvec3(1u, 1u, 1u) << (uvec3(5u)), uvec3(1u, 1u, 1u) << (uvec3(5u))))) | (uvec3(1u, 1u, 1u) << (uvec3(5u))))) >> (uvec3(5u))), ((uvec3(1u, 1u, (uint(uvec4((clamp(1u, 1u, 1u)), 0u, uint((injectionSwitch.x)), 1u)))) << (uvec3(5u))) >> (uvec3(5u))), ((uvec3(1u, 1u, 1u) << (uvec3(5u))) >> (uvec3(5u)))))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, (min(0u, 0u))))))) << uvec3(0u, 0u, 0u))), (((((clamp(((uvec3(0u, ((0u) | (0u)), ((0u | (max(0u, 0u)))))) / (clamp((((((min(uvec3(1u, 1u, 1u) << (uvec3(5u)), uvec3(1u, 1u, 1u) << (uvec3(5u))))) | (uvec3(1u, 1u, 1u) << (uvec3(5u))))) >> (uvec3(5u))), ((uvec3(1u, 1u, (uint(uvec4((clamp(1u, 1u, 1u)), 0u, uint((injectionSwitch.x)), 1u)))) << (uvec3(5u))) >> (uvec3(5u))), ((uvec3(1u, 1u, 1u) << (uvec3(5u))) >> (uvec3(5u)))))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, (min(0u, 0u))))))) << uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, (min((((clamp(1u, 1u, 1u))) * 1u), 1u))))))))))).x;
 uint workgroup_id = (max((min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (max((min((min((((max((uint(uvec3(workgroup_base + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 1u))), workgroup_base + subgroup_id * subgroup_size))) / 1u), (max((max((uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, (max(1u, 1u))))), workgroup_base + subgroup_id * subgroup_size)), (max((uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 1u))), workgroup_base + subgroup_id * subgroup_size)))))), ((false ? (num_workgroup) : workgroup_base + (((((false ? (write_val) : (max((max((((uint(uvec3(max(subgroup_id, (((uint(((uint(subgroup_id)) ^ 0u)))) / 1u)), 0u, 0u))) | ((uint(uvec3(uint(uvec3(max(subgroup_id, (uint(uint(subgroup_id)))), 0u, 0u)), 1u, 0u)))))), ((false ? (packSnorm4x8(vec4(3.7, - 3.4, 997.459, - 286.033))) : ((max(subgroup_id, (uint(uint(subgroup_id))))) << 0u))))), (max((((uint(uvec3(max(subgroup_id, (((uint(((uint(subgroup_id)) ^ 0u)))) / 1u)), 0u, 0u))) | ((uint(uvec3(uint(uvec3(max(subgroup_id, (uint(uint(subgroup_id)))), 0u, 0u)), 1u, 0u)))))), ((false ? (packSnorm4x8(vec4(3.7, - 3.4, 997.459, - 286.033))) : ((max(subgroup_id, (uint(uint(subgroup_id))))) << 0u)))))))))) | ((max((max((max((((uint(uvec3(max(subgroup_id, (((uint(((uint(subgroup_id)) ^ 0u)))) / 1u)), 0u, 0u))) | ((uint(uvec3(uint(uvec3(max(subgroup_id, (uint(uint(subgroup_id)))), 0u, 0u)), 1u, 0u)))))), ((false ? (packSnorm4x8(vec4(3.7, - 3.4, 997.459, - 286.033))) : ((max(subgroup_id, (uint(uint(subgroup_id))))) << 0u))))), (max((((uint(uvec3(max(subgroup_id, (((uint(((uint(subgroup_id)) ^ 0u)))) / 1u)), 0u, 0u))) | ((uint(uvec3(uint(uvec3(max(subgroup_id, (uint(uint(subgroup_id)))), 0u, 0u)), 1u, 0u)))))), ((false ? (packSnorm4x8(vec4(3.7, - 3.4, 997.459, - 286.033))) : ((max(subgroup_id, (uint(uint(subgroup_id))))) << 0u))))))), (((max((max((((uint(uvec3(max(subgroup_id, (((uint(((uint(subgroup_id)) ^ 0u)))) / 1u)), 0u, 0u))) | ((uint(uvec3(uint(uvec3(max(subgroup_id, (uint(uint(subgroup_id)))), 0u, 0u)), 1u, 0u)))))), ((false ? (packSnorm4x8(vec4(3.7, - 3.4, 997.459, - 286.033))) : ((max(subgroup_id, (uint(uint(subgroup_id))))) << 0u))))), (max((((uint(uvec3(max(subgroup_id, (((uint(((uint(subgroup_id)) ^ 0u)))) / 1u)), 0u, 0u))) | ((uint(uvec3(uint(uvec3(max(subgroup_id, (uint(uint(subgroup_id)))), 0u, 0u)), 1u, 0u)))))), ((false ? (packSnorm4x8(vec4(3.7, - 3.4, 997.459, - 286.033))) : ((max(subgroup_id, (uint(uint(subgroup_id))))) << 0u)))))))) - 0u)))))) * subgroup_size)))), workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 atomicStore(write_val, uint((0u ^ (((virtual_gid) | (clamp(0u, 0u, (clamp(((((true ? 0u : (subgroup_size)) / 1u))), 0u, 0u)))))))), 4, 64, 0);
 uint read_val = atomicLoad(((write_val) | (write_val)), 4, (int(int(((64) | 0)))), 0);
 (0u ^ (((((1u << (uint(7u))) >> (uint(7u))) * (((false ? (virtual_gid) : 1u * (buf[virtual_gid] = ((((uint(subgroupAllEqual(read_val)))) / 1u) / 1u)))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
