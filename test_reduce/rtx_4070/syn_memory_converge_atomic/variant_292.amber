#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_21 {
 uvec3 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 mat4x3 _f1;
 bvec4 _f2;
 mat2 _f3;
 mat3x4 _f4;
 mat3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 mat2 _f1;
 uvec3 _f2;
 _GLF_struct_20 _f3;
 float _f4;
 _GLF_struct_21 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_16 {
 ivec4 _f0;
 uint workgroup_base;
 mat2 _f1;
 bvec2 _f2;
 mat3x4 _f3;
 bvec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_18 _f0;
 uint _f1;
 mat3x4 _f2;
 _GLF_struct_19 _f3;
 mat3 _f4;
 bvec4 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 ivec4 _f3;
 mat3x4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 int _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 mat3 _f4;
 uint _f5;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_8 {
 float _f0;
 uint _f1;
 mat3x2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 vec2 _f1;
 uvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 vec2 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 bool _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 _GLF_struct_3 _f1;
 float _f2;
} ;

struct _GLF_struct_1 {
 float _f0;
 bvec3 _f1;
 ivec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uvec3 _f1;
 int _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 int _f2;
} ;

struct _GLF_struct_5 {
 uint subgroup_size;
 vec4 _f0;
 mat3 _f1;
 _GLF_struct_2 _f2;
 vec4 _f3;
 _GLF_struct_4 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupSize, vec4((((float(mat2x3((((min(float(vec4(float(mat2x3(1.0, 0.0, (((clamp(true ? (float(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : (- 6.3), true ? (float(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : (- 6.3), true ? (float(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : (- 6.3))))), 0.0, 0.0, 1.0)), 1.0, 0.0, (min(((false ? (- 2.9) : 0.0)), 0.0)))), float(vec4(float(mat2x3(1.0, 0.0, ((true ? ((false ? (8.3) : (float(mat3x2(1.0, 0.0, 0.0, ((0.0) * (injectionSwitch.y)), 0.0, 1.0))))) : (- 6.3))), 0.0, 0.0, 1.0)), 1.0, 0.0, (min(((false ? (- 2.9) : 0.0)), 0.0)))))))), ((false ? (9.5) : (0.0 + (1.0)))), 1.0, (max(0.0, ((false ? (- 7.8) : 0.0)))), 1.0, 0.0))) * abs(1.0)))), mat3((max(1.0, 1.0))), _GLF_struct_2(_GLF_struct_0(mat4x2(1.0), uvec3((0u + ((max(((((1u) / 1u)) - 0u), ((((1u) / 1u)) - 0u)))))), 1), _GLF_struct_1(1.0, ((bvec3(bvec3(bvec3(bvec4(bvec3(true), true)))))), ((ivec4((int((injectionSwitch.x)) ^ (0)), 0, 0, 0) | ivec4(0, 0, 0, 0)) ^ (ivec4(1))), ((((false ? (write_val) : 1u))) - 0u)), ((min(clamp(1, 1, 1), clamp(1, 1, 1))))), ((vec4(mat2x4((((((clamp(false ? (vec4(- 6.3, - 39.04, - 49.41, 10.82)) : mat4(1.0) * (vec4(1.0)), (max(false ? (vec4(- 6.3, - 39.04, - 49.41, 10.82)) : mat4(1.0) * (vec4(1.0)), ((false ? (vec4(3.0, - 7.7, 4002.0706, 6115.2277)) : false ? (vec4(- 6.3, - 39.04, - 49.41, 10.82)) : mat4(1.0) * (vec4(1.0)))))), false ? (vec4(- 6.3, - 39.04, - 49.41, 10.82)) : mat4(1.0) * (vec4(1.0))))))) * mat4(1.0)), 1.0, cos(0.0), tan(0.0), 0.0)))), _GLF_struct_4(mat2x4(1.0), _GLF_struct_3(mat2x3(1.0)), 1.0));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((false || (false))))
  return;
 if((((injectionSwitch.x > (min((min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))
  return;
 if(((((min((sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(vec3(1.0), true, _GLF_struct_6(mat2x4(1.0), gl_SubgroupInvocationID), _GLF_struct_11(mat3x2(1.0), _GLF_struct_7(mat4x2(1.0), vec2(1.0), uvec2(1u), ivec3(1)), _GLF_struct_8(1.0, ((1u) - ((0u + ((0u ^ ((max(uint((injectionSwitch.x)), uint((injectionSwitch.x)))))))) ^ 0u)), mat3x2(1.0), mat2x4((max((min(1.0, (clamp((mix(float(1.0), float((min((6.3), (6.3)))), bool(false))), 1.0, 1.0)))), (mix(float((min(1.0, (clamp((mix(float(1.0), float((6.3)), bool(false))), 1.0, 1.0))))), float((0.8)), bool(false))))))), vec2(((false ? (26.10) : ((true ? 1.0 : (mix(- 7911.3372, - 7.6, true))))))), _GLF_struct_9(bvec4(true), ivec2(1)), _GLF_struct_10(mat3x4(1.0), uvec4(1u))), _GLF_struct_14(mat3x4(1.0), 1, _GLF_struct_12(mat4x3(1.0), (bvec3(bvec3(bvec3(true)))), mat4x3(1.0), ivec4(1), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_13(ivec4(1), ivec4((0 + ((~ (~ (1))))))), mat3(1.0), 1u));
 if(((((true && (false)))) && ((injectionSwitch.x < injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > (clamp(((injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
  {
   if((false))
    return;
   return;
  }
 uint num_workgroup = ((gl_NumWorkGroups.x) << 0u);
 if((((((! (((! (! (! (false)))) && true))))) && true)))
  return;
 if((false))
  return;
 uint workgroup_size = (uint((~ (~ (uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u))))));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_18(_GLF_struct_16(ivec4((((0 ^ (((1) - int((injectionSwitch.x)))))) - 0)), workgroup_size * workgroup_id, mat2(1.0), bvec2(true), mat3x4(1.0), bvec3((! (! (true)))), mat2x4(1.0)), _GLF_struct_17(mat4x2(1.0), ((vec2(0.0, (clamp(0.0, 0.0, 0.0))) + (vec2(mat4x2(((vec2((clamp(1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, (((injectionSwitch.y) + 0.0))))))))), 1u, mat3x4((0.0 + (max((min((1.0), (1.0))), (1.0))))), _GLF_struct_19(mat4(1.0)), mat3((clamp(1.0, 1.0, 1.0))), bvec4(true), _GLF_struct_22(mat4(1.0), (mat2(mat3(mat2(1.0)))), uvec3(1u), _GLF_struct_20(uvec2(1u), mat4x3(1.0), bvec4(true), mat2(1.0), mat3x4(1.0), mat3(1.0), vec2(1.0)), 1.0, _GLF_struct_21(uvec3(1u), mat4x3(1.0), (((bvec3(bvec4(bvec3(((bvec3(bvec4(bvec3(bvec3(bvec3(((bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(((bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)))), (! (! ((! (! (false)))))))), false))))))))), false))))), false))))), bvec4(true)), mat2(1.0)));
 if((false))
  return;
 uint virtual_gid = _GLF_struct_replacement_23._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_5.subgroup_size + _GLF_struct_replacement_15._f2.subgroup_local_id;
 if((false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad((0u | (((write_val)) | ((write_val)))), 4, 64, (max(0, 0)));
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
