#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false || (((true && ((bool(bvec2(false, true)))))))))
  return;
 if(((bool(bvec2(false, true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = ((true ? (((min(((~ ((uvec3(0u, 0u, 0u) | ((uvec3(1u, 1u, 1u) * (~ (((((((((((~ (~ (gl_WorkGroupID)))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))))))))), ((((max((max(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), clamp(gl_WorkGroupID, gl_WorkGroupID, (~ ((uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))))) - ((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ (((false ? (uvec3(163856u, 57999u, 189147u)) : (max(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), clamp(gl_WorkGroupID, gl_WorkGroupID, (~ ((clamp((uvec3(uvec4(~ (gl_WorkGroupID), 1u))), (uvec3(uvec4(~ (gl_WorkGroupID), 1u))), (max((uvec3(uvec4(~ (gl_WorkGroupID), 1u))), (uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))))))))) - uvec3(0u, 0u, 0u))))))))))))) - uvec3(0u, 0u, 0u)).x : ((clamp(subgroup_size, subgroup_size, ((subgroup_size) / 1u))))));
 uint workgroup_base = ((((((true ? ((min(~ (~ ((1u * ((((min((0u + ((((1u * (workgroup_size * ((workgroup_id) - 0u)))) >> 0u))), (((1u * (workgroup_size * ((workgroup_id) - 0u)))) >> 0u)))) | (workgroup_size * ((((workgroup_id) + 0u)) | (workgroup_id)))))))), ~ (~ (((max(((1u * ((((1u * (workgroup_size * workgroup_id))) | (workgroup_size * ((workgroup_id) | (workgroup_id)))))) / 1u), ((1u * ((((1u * (workgroup_size * workgroup_id))) | (min((workgroup_size * ((workgroup_id) | (workgroup_id))), (workgroup_size * ((workgroup_id) | (workgroup_id)))))))) >> 0u)))))))) ^ 0u) : ((ivec2(87611, 9736) , subgroup_size)))))) / ((((true ? ((1u) | ((0u ^ (1u)))) : (workgroup_size)))) << 0u)));
 uint virtual_gid = (uint(uvec4(workgroup_base, (0u | ((false ? (subgroup_size) : ((uint((injectionSwitch.x))) - 0u)))), (min(1u, 1u)), (uint((((true && (false)) ? (num_workgroup) : ((((0u ^ ((0u ^ ((max(uint(uvec4((0u | ((min(uint(0u), uint(0u))))), 1u, uint((injectionSwitch.x)), 1u)), uint(uvec4((0u | ((min(uint(0u), uint(0u))))), 1u, uint((injectionSwitch.x)), 1u)))))))))) / 1u)))))))) + (0u ^ (subgroup_id)) * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, ((64) + ((max((((int(((true ? int(0) : (38070))))) << (int(2))) | (0 << ((0 + (int(2)))))), 0 << ((((0 | (((int(((false ? (55844) : (~ ((0 | (~ ((int(((ivec3(((2) ^ 0), 0, 1)) ^ ivec3(0, 0, (~ (~ ((~ (~ (0)))))))))))))))))))) / (((((min(1, 1)) << (int(7))) >> (int(7)))) << 0)))) - (0 << (int(0))))))))), (clamp(0, 0, 0)));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  return;
 ((((buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) << 0u) | 0u);
 if((((! (! ((((bool((bvec2(bvec3(bvec2(((((injectionSwitch.x < injectionSwitch.y)) && ((((((((! (! (! (! (((! ((bool((bvec2(bvec3(bvec2(! (! ((bool(bvec4(! ((false)), true, false, false))))), true), false))))))))))))) && true))) && true)) || false)))), false), true)))))) || false))))) || false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
