#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > ((((injectionSwitch.y) / 1.0)) - 0.0)))))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false || ((false))) && true)))
  {
   if(((((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) || false))))))
    barrier();
   if((false))
    {
     if(((((true && (injectionSwitch.x > ((true ? injectionSwitch : (vec2(- 8.8, - 6025.6232)))).y))))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((! (! (((false)) && true)))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > ((false ? (vec2(- 67.08, 1640.0946)) : (vec2(1.0, 1.0) * (injectionSwitch)))).y))))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if(((((((mix(vec2((false ? (vec2(676.904, 5.3)) : injectionSwitch)[0], (0.1)), vec2((9278.5610), (false ? (vec2(676.904, 5.3)) : injectionSwitch)[1]), bvec2(false, true))))).x > ((injectionSwitch) * mat2(1.0)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec2((false), true))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bool((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y))) || false), true, false, true))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(((false || (false))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((true && (bool(bvec4(false, (! (! (true))), (((! (! (! (! ((bool(bvec4((bool(bvec4(false, false, false, false))), false, true, false))) || ((bool(bvec4((((((true ? (injectionSwitch.x) : (3.1))) + sin(log(1.0))) < injectionSwitch.y)), true, false, true))))))))))), true)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((! (((injectionSwitch.x < injectionSwitch.y)) && (((bool(bvec4(! (((false)) || false), true, false, true))))))))) || ((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = (min((min((uvec3(uvec3((min(gl_WorkGroupSize, gl_WorkGroupSize))))), gl_WorkGroupSize)).x, gl_WorkGroupSize.x));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((false) && ((true) || false))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((bool((bvec2(bvec3(bvec2((((injectionSwitch.x > (float((((((transpose(transpose(mat2(((mat4(mat2(((mat2x4(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))) * mat2(1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / mat2((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))), false), false))))))
    {
     if((false))
      barrier();
     if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if((false))
    {
     if(((bool(bvec3((! (! (((injectionSwitch.x > injectionSwitch.y))))), true, true)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((((injectionSwitch.x > injectionSwitch.y)) ? (vec2(- 6.5, 4.6)) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((! (! ((! (! ((true && ((! (! ((((false || (((false)))) || (bool(bvec3(false, false, true)))) || false))))))))))))))
  barrier();
 if((((((injectionSwitch) * mat2(1.0)).x > (vec2(((true ? mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, sqrt(1.0), 1.0, 0.0) : (mat4x2(4.3, 8465.9218, - 5281.9351, 450.718, - 3.5, 77.05, 2959.4053, - 5.4)))))).y))))
  barrier();
 if((false))
  {
   if(((bool(bool(false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((((bool(bvec3((false), true, false))) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = (((((0u | (((((workgroup_size)) | 0u)) / 1u)) | (0u | ((~ (~ (workgroup_size))))))) ^ 0u)) * workgroup_id;
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((! (! ((false || ((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 9.8), (- 3.9)), bvec2(false, false))).y)) || false)))))))))
    barrier();
   if((false))
    barrier();
  }
 if(((! ((! ((false || (! (! (false))))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(((((((mix(vec2((42.18), ((max(- 20.98, - 20.98)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2((bool(bool(true))), true)))) - vec2(0.0, 0.0)).x > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[(1 * (((1) / 1)))]), vec2((596.773), (clamp(((+ - 2562.4516)), (max(((+ (mix(float(- 2562.4516), float((9.4)), bool(false))))), ((+ - 2562.4516)))), (float(float(((+ - 2562.4516)))))))), bvec2(false, false))).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false || (true && (false))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if(((((false || (injectionSwitch.x > ((injectionSwitch.y) + 0.0)))))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if((((false) || false)))
        barrier();
      }
     if((((false) || false)))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((false) && true)))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((min((max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec2(false, (! (((! (true)) && true))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((false) && true)))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y)) && true)) || false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if(((false || (((((! (! (((injectionSwitch.x < injectionSwitch.y)))))) || ((injectionSwitch.x > injectionSwitch.y))) && (false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) && (false || (true))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * (0u | (((subgroup_size)) >> 0u)) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((false))
  barrier();
 if((false))
  {
   if(((((mix(float((float((max(ivec3(30638, 67187, 35007), (clamp(ivec3(30638, 67187, 35007), ivec3(30638, 67187, 35007), ivec3(30638, 67187, 35007))))).y))), float(injectionSwitch.x), bool(true))) > (mix(vec2((injectionSwitch)[0], (- 145.129)), vec2((- 2389.4915), (injectionSwitch)[1]), bvec2(false, true))).y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if(((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((((mix(vec2((- 7.5), ((vec2(1.0, 1.0) * (injectionSwitch)))[1]), vec2((injectionSwitch)[0], (8.9)), bvec2(true, false)))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false) || false)))
  barrier();
 if((((! (! ((false))))) && true))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > ((((injectionSwitch) / vec2(1.0, 1.0))) - abs(vec2(0.0, 0.0))).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad((~ (((~ (write_val)) | ((0u >> (uint(4u))) | 0u)))), 4, 64, 0);
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((! (((! ((false || ((injectionSwitch.x > injectionSwitch.y))))) && true))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! (! ((bool(bvec4((((bool(bvec2(((bool(bool((false || (! (! (((((vec2(injectionSwitch[0], injectionSwitch[1])).x > (vec2((mat2x4(mat3x4(mat2x4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, exp(0.0), 0.0, 1.0)))))).y)))))))))) || false), false)))) || false), true, false, true)))))))))
    {
     if((((false)) || false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((false) && true)))
  barrier();
 if(((bool((((((injectionSwitch.x > injectionSwitch.y)) || (bool((! (! (false))))))) || false)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if((false))
  {
   if(((true && (((false) || false)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > (clamp((min((vec2(((mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - (((mat3(mat3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch)), (vec2(((mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).y))))
      barrier();
     if((false))
      {
       if((((((bool(bvec4((false || ((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))), false, (! (! (true))), false))) && true)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(((bool(bvec4(false, true, ((injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((true && ((false) || false)))))))
    barrier();
   if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false)))) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 if((false))
  barrier();
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((((false) || false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((((vec2(mat2x4(((injectionSwitch) / vec2(((1.0) / sqrt(1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, (dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(1.0)))))), 1.0))).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false) || false)))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    barrier();
   if((((((false) || false)) || (false || (((bool(bvec4((((! (! (bool(bvec2(((((bool(bvec3((((bool(bvec2(((bool(bvec4(false, true, false, false))) && true), (((clamp(((injectionSwitch.x) / 1.0), (mix(float((7.2)), float((mix(float(injectionSwitch.x), float((- 297.521)), bool(((false) || ((injectionSwitch.x > injectionSwitch.y))))))), bool(true))), injectionSwitch.x)) < injectionSwitch.y))))))), ((injectionSwitch.x < injectionSwitch.y)), false))))) && true) || false, false))))))), true, false, false))) && (! (! (true)))))))))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((((false) && true)) && true)))
        barrier();
       if((false))
        barrier();
      }
     barrier();
     if(((true && ((true && ((bool(bvec3(false, false, true)))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((! ((true && (! ((bool(bvec2((false), true)))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((false || ((! (! (false)))))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(((! (! (false || ((false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((((bool(bvec4((min((mix(vec2((- 5.8), (- 7.4)), vec2((injectionSwitch)[0], ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(true, true))), injectionSwitch)).x > (max(injectionSwitch.y, injectionSwitch.y)), true, false, ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
