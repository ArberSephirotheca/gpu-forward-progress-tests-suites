#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_17 {
 ivec4 _f0;
} ;

struct _GLF_struct_16 {
 ivec4 _f0;
 int _f1;
 float _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_18 {
 _GLF_struct_14 _f0;
 vec4 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_13 _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_10 {
 float _f0;
 ivec2 _f1;
 bvec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 uvec2 _f1;
 int _f2;
 mat2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 bvec4 _f1;
 bvec4 _f2;
 ivec3 _f3;
 ivec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 ivec2 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 vec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 bvec4 _f1;
 vec2 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 float _f1;
 vec4 _f2;
 _GLF_struct_4 _f3;
 mat2 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 uint _f0;
 uint _f1;
 _GLF_struct_0 _f2;
 mat3x4 _f3;
 _GLF_struct_1 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_12 {
 uint subgroup_size;
 int _f0;
 _GLF_struct_2 _f1;
 ivec4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_11 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(gl_SubgroupSize, (min((clamp(1, 1, 1)), ((1) ^ 0))), _GLF_struct_2(1u, (~ (~ (1u))), _GLF_struct_0((vec2(1.0, 1.0) * (((vec2((clamp(1.0, ((1.0) / 1.0), ((1.0) * 1.0))))) * mat2(1.0)))), mat4x2(1.0), mat2x4((float((transpose(transpose(mat3x2(1.0, 1.0, (dot(vec4((clamp((mix(float(1.0), float((- 488.245)), bool(false))), 1.0, 1.0)), 1.0, 0.0, 0.0), vec4(0.0, (clamp(0.0, 0.0, 0.0)), 1.0, 1.0))), 1.0, 0.0, 0.0)))))))), mat3x4(1.0), _GLF_struct_1(mat2x4(1.0), ivec4(1)), vec3((max(((1.0) + 0.0), 1.0)))), ivec4(1), _GLF_struct_6(_GLF_struct_3(mat4(((clamp(max((clamp(1.0, 1.0, 1.0)), 1.0), max((clamp(1.0, 1.0, 1.0)), 1.0), max((clamp(1.0, 1.0, 1.0)), 1.0))))), bvec4(true), vec2(1.0), mat4x3(1.0), mat2x3(1.0), bvec3(true)), 1.0, vec4(1.0), _GLF_struct_4(ivec3(1), vec3(1.0), mat3x2(1.0)), mat2(1.0), _GLF_struct_5(vec2(1.0), vec2(1.0))), _GLF_struct_11(mat3x4(1.0), _GLF_struct_7(bvec3(true), mat4x2(1.0), mat2x4(1.0), bvec2(true), ivec2(1)), _GLF_struct_8(mat4(1.0), bvec4(true), bvec4((! ((((false || (! ((bool(((bvec2((bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(true, ((false) && (! (! (true))))), false)), false))))))))))))) || false)))), ivec3(1), ivec3(1), vec2(1.0)), ivec2(1), _GLF_struct_9(mat3x2(1.0), uvec2(1u), 1, mat2(1.0), mat2(1.0)), _GLF_struct_10(1.0, ivec2(1), bvec3(true), mat3(1.0))));
 if(((! ((bool(bool(! (false))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (~ (~ (gl_WorkGroupSize.x)));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
 if((false))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_13((bvec2(bvec3(bvec2(true), true))), 1u, uvec2(1u)), _GLF_struct_18(_GLF_struct_14(mat4x3(1.0), mat2x3(1.0), bvec2(true), workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y), vec4(1.0), _GLF_struct_15(mat4(1.0)), _GLF_struct_16(ivec4((int(ivec3(((false ? (390) : 1)), (((min(1, 1)) << (int(6))) >> (((int(6)) | (int(6))))), 0)))), 1, 1.0, uvec4(1u)), _GLF_struct_17(((max((~ (~ ((ivec4(0, 0, 0, 0) ^ (((max(((true ? ivec4(1) : (ivec4(87852, 87086, - 48198, 84212)))), ((ivec4(1)) << ivec4(0, 0, 0, 0)))) | (max(((true ? ivec4(1) : (ivec4(87852, 87086, - 48198, 84212)))), ((ivec4(1)) << ivec4(0, 0, 0, 0)))))))))), ((max(((true ? ivec4(1) : (ivec4(87852, 87086, - 48198, 84212)))), ((ivec4(1)) << ivec4(0, 0, 0, 0)))) | (max(((true ? ivec4(1) : (ivec4(87852, 87086, - 48198, 84212)))), ((ivec4(1)) << ivec4(0, 0, 0, 0)))))))))));
 if((false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_19._f1._f0.workgroup_base + (min(subgroup_id * _GLF_struct_replacement_12.subgroup_size, subgroup_id * _GLF_struct_replacement_12.subgroup_size)) + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, ((0) >> 0));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
