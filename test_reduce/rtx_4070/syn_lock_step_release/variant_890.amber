#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((((((false || ((bool(bvec2((((false || (injectionSwitch.x > injectionSwitch.y)))) || ((true && (((true && ((((false)) || false)))) || ((injectionSwitch.x > injectionSwitch.y))))), false))))))) && true)))
  {
   if(((false || (false)) || (! ((((true && (false)) || ((! ((((false || (false)))))) || false)))))))
    {
     if((false || ((! (! (((! (! (bool((bvec3(bvec4(bvec3(((((! ((! (! (! ((((bool(((bvec3(bvec4(bvec3(bvec4((bvec3(bvec4(bvec3(false, true, false), false))), false)), ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))) || false))), ((injectionSwitch.x < injectionSwitch.y)), false), true))))))))))))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (uvec3(((uvec4(gl_WorkGroupID, 0u)) | (uvec4(gl_WorkGroupID, 0u))))).x;
 uint workgroup_base = ((clamp((~ (~ (((0u | (((((0u | ((workgroup_size))) >> 0u) * (((1u << (uint(0u))) >> (uint(0u))) * ((max(workgroup_id, workgroup_id)))))) - 0u)) | 0u)))), 0u | ((min((max((max((((((((min((min(workgroup_size, workgroup_size)), (1u * (workgroup_size))))) >> (clamp(0u, 0u, 0u))) * (((1u << (uint(0u))) >> (uint(0u))) * (clamp(((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id))), ((((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))) | (((((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))) ^ 0u))), ((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))))))) - 0u) + 0u), (((((false ? (subgroup_local_id) : (workgroup_size))) >> 0u) * (((1u << (uint(0u))) >> ((min(uint(uint((uint(0u)))), ((uint(uint((uint(0u))))) - 0u))))) * ((max(workgroup_id, workgroup_id)))))) - 0u)), (max((((((((min((min(workgroup_size, workgroup_size)), (1u * (workgroup_size))))) >> (clamp(0u, 0u, 0u))) * (((1u << (uint(0u))) >> (uint(0u))) * (clamp(((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id))), ((((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))) | (((((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))) ^ 0u))), ((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))))))) - 0u) + 0u), (((((false ? (subgroup_local_id) : (workgroup_size))) >> 0u) * (((1u << (uint(0u))) >> ((min(uint(uint((uint(0u)))), ((uint(uint((uint(0u))))) - 0u))))) * ((max(workgroup_id, workgroup_id)))))) - 0u)))), (((max((((((((min((min(workgroup_size, workgroup_size)), (1u * (workgroup_size))))) >> (clamp(0u, 0u, 0u))) * (((1u << (uint(0u))) >> (uint(0u))) * (clamp(((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id))), ((((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))) | (((((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))) ^ 0u))), ((max((clamp((((~ (~ (workgroup_id)))) | (workgroup_id)), workgroup_id, workgroup_id)), workgroup_id)))))))) - 0u) + 0u), (((((false ? (subgroup_local_id) : (workgroup_size))) >> 0u) * (((1u << (uint(0u))) >> ((min(uint(uint((uint(0u)))), ((uint(uint((uint(0u))))) - 0u))))) * ((max(workgroup_id, workgroup_id)))))) - 0u))) << 0u)))), 0u | (((((workgroup_size) >> 0u) * (((false ? (12431u) : ((1u << (uint(0u))) >> (uint(((false ? (subgroup_id) : (max(0u, 0u))))))) * ((max(workgroup_id, (~ (~ ((0u | (workgroup_id))))))))))))) - 0u))));
 uint virtual_gid = workgroup_base + (((((~ ((uint(uvec3(((~ ((((((max(subgroup_id * subgroup_size, (0u | (subgroup_id)) * subgroup_size))) / 1u)) << 0u))) - (0u & 155707u)), ((((injectionSwitch.x < injectionSwitch.y)) ? (((1u & 1u) * 1u)) : (atomicCompSwap(subgroup_size, subgroup_id, workgroup_size)))), 0u)))))) ^ 0u)) << 0u) + (0u ^ (((1u * (uint(uvec3(((max(max(subgroup_local_id, subgroup_local_id), ((false ? (subgroup_size) : ((max(subgroup_local_id, subgroup_local_id)) | (max(subgroup_local_id, subgroup_local_id)))))))), ((1u << (uint(4u))) >> ((max(uint(4u), (clamp(uint(4u), uint(4u), uint(4u))))))), uint((injectionSwitch.y)))))))));
 uint next_virtual_gid = ((0u | ((((((((~ (((((false ? (max((subgroup_id), (subgroup_id))) : ~ (uint((min(((((uint((((max(workgroup_base, workgroup_base)) << 0u)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % ((subgroup_size) | 0u)))) >> 0u)) >> 0u), (max(uint((((1u * ((min((max(workgroup_base, workgroup_base)), (max(workgroup_base, workgroup_base)))))) << 0u)) + (~ (~ ((((false ? (subgroup_size) : uint(uvec2(subgroup_id, 1u))))) * subgroup_size))) + ((subgroup_local_id + 1) % ((subgroup_size) | 0u))), uint((((1u * ((min((max(workgroup_base, workgroup_base)), (max(workgroup_base, workgroup_base)))))) << 0u)) + (~ (~ ((((false ? (subgroup_size) : uint(uvec2(subgroup_id, 1u))))) * subgroup_size))) + ((subgroup_local_id + 1) % ((subgroup_size) | 0u))))))))))) - (clamp(0u, 0u, 0u)))))))) - 0u)) / 1u)) + (clamp(((((false ? (workgroup_size) : uint((uvec2(uvec2(uvec2(((0u | 0u)), 0u)))))))) ^ (193171u & 0u)), ((((((~ (~ ((0u + (0u | (((uint(uvec3(0u, 0u, 0u)))) >> (0u >> (((true ? (clamp(uint(1u), uint(1u), uint(1u))) : (usubBorrow(virtual_gid, workgroup_id, num_workgroup))))))))))))) | 0u) + (0u | 0u)))), (0u | 0u))))));
 ((clamp((1u * (0u)), 0u, 0u)) | (buf[virtual_gid] = 1));
 atomicStore(buf[next_virtual_gid], uint((((((((((0 ^ ((int(((ivec2(2, 0)) / ((ivec2(1, 1)) ^ ivec2(0, 0))))) / (~ ((((0) / 1) ^ (((~ ((max(0, 0)) + ((1)))) ^ 0))))))))) * (max(1, ((1) | int((injectionSwitch.x))))))) >> (int(ivec3((((((0 | (((~ (((71519 & 0) | (~ (0)))))) ^ 0)) >> 0)) - 0)), 0, 0)))))) | ((((int((((((max(ivec2(2, 0), ivec2(2, 0)))) ^ ivec2(0, 0))) / ivec2(1, 1)))) / (((((~ (((((1 * (((int(ivec2(int(ivec2(0, 0)), 1)))))) ^ (((false || (true)) ? (~ ((0 | (((~ (((((((((~ (~ ((int(ivec2(~ (1), 0))))))) >> 0)) ^ 0))) ^ 0))) >> 0))))) : (- 82370)))))) | ((((1 * (((int(ivec2(int(ivec2(0, 0)), 1)))))) ^ (((false || (true)) ? (~ ((0 | (((~ (((((((((~ (~ ((int(ivec2(~ (1), 0))))))) >> 0)) ^ 0))) ^ 0))) >> 0))))) : (- 82370)))))))) | (~ ((0 ^ ((true ? (((int(((false ? ((ivec4(44704, 66294, 56748, 22348) | ivec4(- 55952, - 41369, - 32971, - 57012))) : ivec4((((~ (1)) ^ 0)), 1, 0, 1)))))) ^ 0) : (- 82370))))))) - 0)))))))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
