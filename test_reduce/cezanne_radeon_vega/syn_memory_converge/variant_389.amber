#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 (0u ^ (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = subgroup_id));
 if((false))
  {
   if((((bool(bvec4(bool((bvec2(bvec4((bvec2(bvec3(bvec2(false, true), true))), true, false)))), true, false, true))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((((((! (! (bool(bool((bool(bvec2(false, false))))))))))) || false))
  barrier();
 if((((((((bool(bvec3(bool(((((bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2((true && (true && (((max((min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > (clamp((vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(((injectionSwitch[0]) / 1.0), injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), false))), true)))), false, (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))), false, true)))) && true))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (((max(gl_WorkGroupSize, ((((((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) >> uvec3(((vec2(injectionSwitch[0], ((injectionSwitch[1]) - 0.0))).x), (injectionSwitch.x), (injectionSwitch.x)))) | uvec3(0u, 0u, 0u)))) | (max(gl_WorkGroupSize, ((((((uvec3(0u, 0u, 0u) << (uvec3(0u))) << (uvec3(3u))) | ((gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))))).x;
 if(((true && (false))))
  barrier();
 if(((true && (bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, true))))))
  barrier();
 if((((true && (((((injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > (((min(float(mat2x3(clamp((((mix(float((- 343.526)), float(((max(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, (dot(vec4(length(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, (dot(vec4(length(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))))), bool(true)))) - 0.0), (max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x3(clamp((((mix(float((- 343.526)), float(((max(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, (dot(vec4(length(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)), float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, (dot(vec4(length(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))))), bool(true)))) - 0.0), (max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))))))) && true)))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((true && ((((true && ((min(((injectionSwitch.x) - 0.0), (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((((injectionSwitch.x < injectionSwitch.y)) && (((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((bool(bvec4((false), false, true, (! (! (false)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = ((false ? (write_val) : ((max((((((((true ? workgroup_base : (subgroup_size)))) | (workgroup_base)) + GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * (((true ? 0u | (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) : (126262u)))) + subgroup_local_id) << 0u)) / (clamp(uint((injectionSwitch.y)), uint((injectionSwitch.y)), (min(uint((injectionSwitch.y)), (((((uint((uvec3(0u, 0u, 0u) ^ (uvec3(uint((injectionSwitch.y)), 1u, 0u)))))) / 1u)) ^ 0u))))), (workgroup_base + GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * (((true ? 0u | (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) : (126262u)))) + subgroup_local_id) / (clamp(uint((injectionSwitch.y)), uint((injectionSwitch.y)), (min(uint((injectionSwitch.y)), ((min((uint((injectionSwitch.y))) ^ 0u, (uint((injectionSwitch.y))) ^ 0u))))))))))));
 if(((((! (! (((((false) && true)) || false))))) || false)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = (0u | ((~ ((~ (~ (((max((~ (virtual_gid)), (~ (virtual_gid)))) - 0u))))))));
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((true && (((clamp((min(injectionSwitch, injectionSwitch)).x, (float(mat4x3((min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))))
  barrier();
 if(((false || (false))))
  barrier();
 if((false))
  {
   if(((((bool(bvec4(false, true, true, ((injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z), 4, 64, 0);
 if((((((((false || ((false || (bool(bvec2((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > (max(injectionSwitch.y, ((injectionSwitch.y) * 1.0))), false))))))))) || false))))
  {
   if((((false || ((false)))) && ((injectionSwitch.x < injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 buf[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z] = uint(subgroupAllEqual(write_val));
 if(((! (! (bool(bvec4((false), true, true, true)))))))
  {
   if(((((injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4((false), false, true, false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((! (! (((bool(bvec3((false), false, true)))) || false)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if(((! ((true && (! (false)))))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((false)) && true))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
