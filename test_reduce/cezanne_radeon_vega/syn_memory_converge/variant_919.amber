#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((bool(bvec4((false), ((injectionSwitch.x > injectionSwitch.y)), true, true))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! ((bool(bvec4(false, false, false, true))))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if(((((vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    return;
   if(((! ((false || (! (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)), true, true)))))))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((! (! ((false)))))
    {
     if((false))
      barrier();
     if((((false) || false)))
      return;
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((true && (false))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((true && (false))))
    barrier();
   if((false))
    return;
   if(((((false) && true) || (false))))
    barrier();
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if((false))
      {
       if((((false) && true)))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    {
     if(((((true && (false))) && true)))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if(((! (! (false)))))
    barrier();
   if(((((! (! (false)))) && true)))
    {
     if(((bool(bool(false)))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if(((! (! (false)))))
    return;
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((bool((bvec2(bvec2(bvec2(false, false))))))))
  barrier();
 if((((true && ((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), (((((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))) && true), false))) && true)))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && ((((false)) || false))))
  {
   if((false))
    barrier();
   return;
   if((false))
    barrier();
  }
 if(((! (! ((((true && (((! (! (false))) || ((bool(bool(false)))))))) && true))))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((! (! ((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))) || (false))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! (! (false)))))
          return;
         return;
        }
       if(((false || (false))))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((bool(bvec3((false), true, false))))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! ((bool(((bool(! (((((((mix(float((- 771.310)), float(mix(float((982.440)), float(injectionSwitch.x), bool(true))), bool(true)))) > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false || (((((((bool(bvec3(((mix(float((0.1)), float(float(mat4x2(((true ? injectionSwitch.x : (954.279))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), bool(((injectionSwitch.x < injectionSwitch.y)))))) > (vec2(((true ? vec2(((true ? injectionSwitch : (sqrt(injectionSwitch))))) : (injectionSwitch))))).y, true, (((! ((bool(bvec4((bool(bvec4((bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))), false, true, false))), false, false, ((injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((! (! ((false)))))
        return;
       return;
      }
     if((false))
      return;
     barrier();
     if((false))
      barrier();
     if(((bool((((bvec3(bvec4(bvec3(bvec4((bvec3(bvec3(bvec3(bvec3(bvec3(false, false, ((injectionSwitch.x > injectionSwitch.y)))))))), true)), true)))))))))
      return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((! (! ((((false) || false))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((false) || false)))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    return;
  }
 if(((((! (bool(bvec2((! ((bool(bvec3((bool(bvec4(injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y)), false, false, ((injectionSwitch.x < injectionSwitch.y))))), ((false) && true), ((injectionSwitch.x > injectionSwitch.y))))))), true))))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      {
       if((((false) && true)))
        return;
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((((((injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if((false))
      return;
     if(((bool(bvec2(false, false)))))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     return;
     if((false))
      return;
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if(((((bool(bvec3(false || (((! (! (((((((injectionSwitch.x > injectionSwitch.y)) || false)))) || ((injectionSwitch.x > injectionSwitch.y))))))), true, true))) && true))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if(((bool(bvec2(false, false)))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((! (! ((false)))))
    barrier();
   return;
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if(((bool(bvec4(false, true, false, false)))))
        barrier();
       return;
      }
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       if((false))
        {
         if((((((! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
          return;
         return;
        }
       return;
      }
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(((bool(bvec2(false, false)))))
  {
   if((false))
    barrier();
   if(((((((bool(bvec3((bool(bvec4(false, true, true, false))), ((injectionSwitch.x < injectionSwitch.y)), false)))) || false)) || false)))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > ((max((((injectionSwitch) * mat2(1.0))), (mix(vec2(((((injectionSwitch) * mat2(1.0))))[0], (- 5.4)), vec2((658.121), ((((injectionSwitch) * mat2(1.0))))[1]), bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))))) / vec2(1.0, 1.0)).y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if(((((min((clamp(injectionSwitch.x, ((clamp(vec2((mat2(mat4x2(mat2((min(injectionSwitch, injectionSwitch)), (injectionSwitch.x), 1.0))))), vec2((mat2(mat4x2(mat2((min(injectionSwitch, injectionSwitch)), (injectionSwitch.x), 1.0))))), vec2((mat2(mat4x2(mat2((min(injectionSwitch, injectionSwitch)), (injectionSwitch.x), 1.0)))))))).x, injectionSwitch.x)), (((mix(vec2((2.8), (8994.6339)), (vec2(mat4x3(vec2((((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) - tan(vec2(0.0, 0.0)))[0], (injectionSwitch)[1]), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0))), ((bvec2(bvec3(bvec2(bvec2(bvec2(true, true))), true)))))).x) * sqrt(1.0)))) > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((((injectionSwitch.x > (float(((mat3((min((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, (max((((clamp((clamp(((vec2(mat2x4((vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), ((vec2(mat2x4((vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), ((vec2(mat2x4((vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0))), ((((vec2(mat2x4((vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0)) * mat2(1.0)), ((vec2(mat2x4((vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0)))).y), (injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0)) * mat3(1.0))))) || false)))))
    {
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, (injectionSwitch.x))))))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    return;
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if(((((bool(bvec4(false, false, false, false)))) || ((injectionSwitch.x > injectionSwitch.y)))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if(((false || (false))))
        barrier();
       if(((((! (! ((vec2(injectionSwitch[(clamp(0, 0, 0))], (mix(float(injectionSwitch[1]), float((89.57)), bool(false))))).x > (((mix(float((- 669.849)), float(injectionSwitch.y), bool(true)))) * 1.0))))))))
        {
         if((false))
          barrier();
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((! ((! (! (! ((((injectionSwitch.x < injectionSwitch.y)) && ((false))))))))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
      }
     if(((false || (false))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((((((false) && true) && true))) && true)))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         barrier();
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if(((false || ((false || (false))))))
          barrier();
         barrier();
        }
       return;
      }
     if((false))
      return;
     if((false))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((((false) && true)))
        barrier();
       return;
       if((false))
        return;
      }
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((((((true ? (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : (- 5.5))) > injectionSwitch.y))))
    barrier();
   return;
   if(((true && (false))))
    {
     if((false))
      return;
     if(((((vec2(1.0, 1.0) * ((vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((((((clamp(injectionSwitch, injectionSwitch, ((vec2(mat4(vec2((injectionSwitch.y), (injectionSwitch.y)) * (injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y)))) && true))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       return;
      }
     return;
     if((false))
      barrier();
     if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, ((injectionSwitch.x < injectionSwitch.y))))))
      return;
     if((false))
      return;
    }
  }
 if(((false || ((bool((bvec3(bvec4(bvec3((! (! (false))), true, false), true)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((true && ((true && (((((false) || false)) && true)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if(((bool(bvec4(false, true, true, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec3(((false) || false), false, false)))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((bool(bvec2(false, false)))))
        {
         if(((! (! (false)))))
          {
           if((false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((bool(bvec3((false), ((false) || false), ((injectionSwitch.x < injectionSwitch.y))))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((false) && true)))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false || ((! (! ((false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((((false || ((mix(float((- 10.71)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((! (! ((false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   barrier();
  }
 if((((((false || ((bool(bvec3((injectionSwitch.x > ((float(mat4(float(mat3x2((mix(float(injectionSwitch.y), float((- 3825.4318)), bool(false))), 0.0, 1.0, 0.0, 1.0, (clamp((clamp(0.0, 0.0, (clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, (min(abs(tan(0.0)), abs(tan(0.0)))), 0.0, determinant(mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, (clamp(0.0, 0.0, ((float(mat3x4(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0))))))), false, false)))))) && true))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(((bool(bool(false)))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > (mix(float((86.99)), float(injectionSwitch.y), bool(true)))))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if((((! ((false || (! (((! (! (false)))) && true))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false || ((false))))
      {
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if(((false || (false))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
  }
 if((((((bool((bvec2(bvec4(bvec2(false, ((false) || false)), false, true))))) || ((true && (((injectionSwitch.x > injectionSwitch.y))))))) || false)))
  barrier();
 if(((bool(bvec4(false, true, (! (! (false))), true)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y))))) || false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bool((((! (! (false)))) && true))))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if((false))
    {
     if(((false || (false))))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((false || (false))))
          return;
         barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((bool(bool((false)))))
          {
           if((false))
            return;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if(((! (! (false)))))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((! (! ((((injectionSwitch.x > injectionSwitch.y)) || ((((false) || false) || ((bool(bool((false || ((! (! (((false) && true))))))))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     if(((bool(bool(false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((true && (((true && (false))))))
          {
           if((false))
            return;
           if((((false) || false)))
            barrier();
           barrier();
          }
         return;
        }
       if((((false) || false)))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((bool(bvec3(false, false, (! (! (false))))))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((((((false)) && true)) && true))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((true && ((! (! ((false)))))))
    barrier();
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
    }
   if(((bool(bvec4((bool(bvec2(false, false))), false, false, false)))))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = ((((((uvec3(uvec3(uvec3(uvec4(gl_WorkGroupID, 1u))))))) | uvec3(0u, (uint(uint(0u))), 0u)).x) | (((((uvec3(uvec3(uvec3(uvec4(gl_WorkGroupID, 1u))))))) | uvec3(0u, (uint(uint(0u))), 0u)).x));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((((((mix(float((- 86.94)), float((float((transpose(transpose(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))))), bool(true)))) + 0.0) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! ((bool(bvec2(false, true))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((bool(bvec3((false), true, false)))) || false))
      return;
     barrier();
    }
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = (uint(uint(workgroup_size * ((workgroup_id) * 1u))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if(((((max(((true ? injectionSwitch.x : (9.4))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 uint virtual_gid = ((((workgroup_base + subgroup_id * subgroup_size) / ((1u) / 1u))) << 0u) + subgroup_local_id;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((! (! ((false)))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if(((((float((vec2(0.0, 0.0) + ((false ? (injectionSwitch) : (vec2(((false ? ((mix(vec2((injectionSwitch)[0], (1283.2637)), vec2((- 471.704), (clamp((injectionSwitch)[1], (injectionSwitch)[1], ((false ? (- 5.4) : (injectionSwitch)[1]))))), bvec2(false, true)))) : (max(injectionSwitch, injectionSwitch)))).x, 1.0))))))) > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((! (! ((false)))))
  {
   if((false))
    barrier();
   return;
  }
 if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
  {
   if((((false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((bool(bvec3(false, true, false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   return;
  }
 if((false))
  {
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! ((bool(bvec3(! (false), true, true)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((false))
      barrier();
     return;
    }
   barrier();
  }
 if((true && ((false))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((bool(bvec3((false), true, true))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((((false || ((! (! ((((injectionSwitch.x > injectionSwitch.y))) || false))))))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((false)) || false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     if(((((! ((false || ((! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
       if((false))
        barrier();
       if((((((((injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
        return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((((((((false ? (atan(- 45.45, - 1.6)) : injectionSwitch.x)) > injectionSwitch.y) && (bool(bvec3((bool(bvec4((bool(bvec2(true, true))), true, ((injectionSwitch.x < injectionSwitch.y)), false))), false, true))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if(((false || ((bool(bvec4(false, true, false, false)))))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! ((bool(bool(! ((! (! (false)))))))))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
    }
   barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec4((false || (false)), true, false, true)))))
      barrier();
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > (mix(vec2((((injectionSwitch) * mat2(1.0)))[0], (((injectionSwitch) * mat2(1.0)))[1]), vec2((float(51236)), ((false ? (- 85.54) : (4.5)))), bvec2((false || (((injectionSwitch.x > injectionSwitch.y)))), false))).y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec4(false, (! (! (((! (! (false))) || ((true && (false))))))), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if(((((clamp((((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((! ((! (! (! (! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))))))))
        return;
       barrier();
      }
     if((false))
      return;
     barrier();
    }
   if((((((bool(bvec4(true && (false), true, false, false)))))) && true))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((bool((bvec3(bvec3(bvec3((false), true, ((injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((((false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   return;
  }
 if(((((false || ((! (! (bool(bvec4((false), ((injectionSwitch.x < (mix(float(injectionSwitch.y), float(((4035.6496))), bool(false))))), ((injectionSwitch.x < injectionSwitch.y)), false))))))))) || false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (((((! (false)) || false)) || false)))))
    barrier();
   if(((bool(bvec2(false, true)))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
   if((((((false) && true)) || false)))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if(((true && (false))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((! (! (false))) || (false))))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          {
           if((true && (((((! (! (false)))) || false)))))
            return;
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          {
           if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           if((false))
            barrier();
           return;
          }
        }
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > (float(vec2((min(injectionSwitch.y, injectionSwitch.y)), 0.0)))))))
          return;
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > ((injectionSwitch) * vec2(1.0, 1.0)).y) || false)))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if(((bool(bvec4((! (((((! (! (bool(bvec2((! ((false))), false))))) && ((injectionSwitch.x < injectionSwitch.y)))) || false))), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if((false))
    barrier();
   if((((! (! ((injectionSwitch.x > ((injectionSwitch.y) - 0.0))))))))
    {
     if((false))
      barrier();
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > ((injectionSwitch.y) + sqrt(0.0))))))
        barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((((injectionSwitch) / exp(vec2(0.0, 0.0))).x) / (dot(vec4(0.0, 0.0, ((true ? (clamp(1.0, (min(1.0, 1.0)), 1.0)) : (9.4))), 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)))) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((((false) && true)))
      {
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
         if((false))
          {
           if((false))
            return;
           barrier();
          }
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((false) && true)))
      barrier();
     if((((false) || false)))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     if((((((false) && true)) || false)))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if(((true && ((! (! (false)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false || ((! (! ((false)))))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((((false) && true)))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if(((false || (((bool(bvec4(! (! (false)), false, true, true))))))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((bool(bvec4(((false || ((true && ((! (! (! ((true && (! ((! (! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, false, (bool(bvec3(true, false, false))))))) || (((! ((! (! (((! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))) && true))
    {
     if((false))
      {
       if((false))
        return;
       if(((! (! (false)))))
        barrier();
       return;
      }
     if((((false) && true)))
      {
       if(((bool(bool(((false) && true))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((bool(bvec4(false, false, false, false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (mix(float((- 8.6)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > ((false ? (6.5) : injectionSwitch.y))))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((bool((bvec2(bvec4(bvec2((false), false), true, false))))))
      return;
     if((false))
      return;
     if(((((((! (! ((((injectionSwitch.x > injectionSwitch.y)) || ((false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (- 63.55)), vec2(((- - 761.054)), (injectionSwitch)[1]), bvec2(false, true))).y))))
      return;
     barrier();
     if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((false))
  barrier();
 if((false || ((((((((true ? injectionSwitch : (injectionSwitch))).x > (min(injectionSwitch.y, injectionSwitch.y)))))) || false))))
  {
   if((false))
    barrier();
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(((bool(bvec2((! (! (((injectionSwitch.x > injectionSwitch.y))))), true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (1.0 * (mix(float((9.5)), float(((min(injectionSwitch.y, injectionSwitch.y)))), bool(true))))))))
    {
     if((false))
      barrier();
     if((((false) && true)))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
        }
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((false || (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((bool(bool((false)))))
        {
         if((false))
          barrier();
         return;
        }
       return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if((((false) && true)))
    barrier();
   if((false))
    return;
   if((false))
    {
     if(((true && (false))))
      {
       if((((false) || false)))
        return;
       return;
      }
     barrier();
    }
   if((false))
    barrier();
   if(((! ((! ((false || (! ((true && (! ((false || (false))))))))))))))
    {
     if((true && ((false))))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if((bool(bvec4((false), true, true, false))))
        return;
       barrier();
       if((false))
        return;
      }
     if((false))
      return;
     if(((! (! (false)))))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     return;
     if(((bool(bvec2((! (! (false))), false)))))
      barrier();
     if((((false) && true)))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bool(false)))))
        {
         if(((! (! (((false) && true))))))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
    }
   if(((true && (false))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if(((! (! ((((true && (false))) || false))))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
     if((bool(bvec4((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), false, false, true))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > (((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if(((((((mix(float((min(((injectionSwitch.x) - log(1.0)), ((injectionSwitch.x) - log(1.0))))), float((- 406.348)), bool(false))) > injectionSwitch.y))) && true)))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if(((false || (false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, (min(0, 0)));
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    barrier();
   if(((((! ((! (! (! (false)))))))) || false))
    barrier();
  }
 if((((false) && true)))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > (tan(length((mat3(1.0) * (vec3(0.0, 0.0, 0.0))))) + ((mix(float((mat2(1.0) * (injectionSwitch)).y), float((- 9.6)), bool(false)))))))))
    {
     if((false))
      return;
     return;
     if((false))
      barrier();
    }
   return;
   if((false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (false)))))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if(((bool(bvec2(bool(bvec4((false), (bool(bvec4(true, false, true, false))), true, false)), false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((((((injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if(((! (! (bool(bool((false))))))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if(((((clamp(((((injectionSwitch.x) / 1.0) - 0.0)), injectionSwitch.x, (((max((mix(float((342.722)), float(((max((max(((float(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0)))) / cos(0.0), (min(((float(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0)))) / cos(0.0), ((float(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0)))) / cos(0.0))))), ((float(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0)))) / cos(0.0))))), bool(true))), (vec2(1.0, 1.0) * (injectionSwitch)).x))) - 0.0))) > injectionSwitch.y))))
      {
       if((false))
        {
         if((((((true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > (vec2(injectionSwitch[0], (mix(float(injectionSwitch[1]), float((5.4)), bool(false))))).y))))
          return;
         barrier();
        }
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
      }
     barrier();
    }
   if((((false)) || false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec3(false, true, false)))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec4((false || (false)), false, false, true)))))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool((bvec3(bvec3(bvec3((bool(bvec4(false, false, false, false))), ((injectionSwitch.x > injectionSwitch.y)), false))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((false) && true)))
        {
         if((((false || ((false)))) && true))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            return;
           barrier();
          }
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((((injectionSwitch.x > injectionSwitch.y))) || false))) || false))
      {
       if(((bool(bvec4(false, true, false, true)))))
        return;
       barrier();
      }
     if(((((mix(float(injectionSwitch.x), float((3.1)), bool(false))) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec4(false, false, false, true)))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false || (((bool(bvec3(false, false, false)))))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
