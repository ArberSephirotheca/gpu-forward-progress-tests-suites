#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_8 {
 uint _f0;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 vec4 _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 uvec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 ivec3 _f4;
 bvec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 uvec3 _f1;
 bvec3 _f2;
 mat4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 mat3x2 _f1;
 vec3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bool _f1;
 ivec2 _f2;
 mat4 _f3;
 mat3x2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 uvec3 _f4;
 vec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_3 {
 uint num_workgroup;
 _GLF_struct_0 _f0;
 bool _f1;
 _GLF_struct_1 _f2;
 ivec2 _f3;
 uvec4 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_9 _f2;
 mat3 _f3;
 vec2 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_3(gl_NumWorkGroups.x, _GLF_struct_0(ivec3(1), mat3x2(1.0), bvec3(true), mat2x4(1.0), uvec3(1u), vec3(((1.0) - 0.0)), mat2x3(1.0)), true, _GLF_struct_1(true, true, ivec2(1), mat4(((1.0) - 0.0)), mat3x2(1.0), (((max(ivec3(1), ivec3(1)))) ^ ivec3(0, 0, 0))), (((true ? (ivec2(1)) : (ivec2(49854, 86334)))) << ivec2(0, 0)), uvec4(1u), _GLF_struct_2(mat4x2((float(mat3x4((clamp(1.0, 1.0, (mix(float((min(1.0, 1.0))), float((((max(- 5.8 / 83.92, (mix(float((vec4(- 628.300, 8.0, 9.9, - 1.1).s)), float((min(- 5.8 / 83.92, - 5.8 / (clamp(83.92, 83.92, 83.92))))), bool(true)))))))), ((((bool(bvec2(((! (! (false || (bool(bool((! (! (bool(false))))))))))), false))) && true))))))), 0.0, (float(((true ? mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0) : (mat3x2(30.24, 1.3, 3978.7554, 2696.1596, 5398.4920, - 727.685)))))), 0.0, abs(0.0), 1.0, 1.0, (((max(float((vec3(mat3x4(vec3(dot((max(((vec4(0.0, 0.0, 0.0, (clamp(1.0, 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, (((clamp(float(vec2(float((mat4(1.0) * (mat4(1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, ((1.0) - determinant(mat2(0.0, 0.0, 1.0, 0.0))))), 0.0, (dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0))), exp(0.0), 1.0, 1.0, 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, ((((injectionSwitch.x > injectionSwitch.y)) ? (- 8754.2595) : ((0.0) / round(length(normalize(vec2(1.0, 1.0))))))), 1.0, exp(0.0), 0.0)))))), 1.0)), float(vec2(float((mat4(1.0) * (mat4(1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, (dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0))), exp(0.0), 1.0, 1.0, 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, ((mix(float((6.1)), float((min(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), bool(true)))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))))), 1.0)), float(vec2(float((mat4(1.0) * (mat4(1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, (dot(vec2(tan(0.0), 1.0), vec2(0.0, (clamp((min(1.0, 1.0)), 1.0, (mix(float((82.21)), float((min(1.0, 1.0))), bool(true)))))))), exp(0.0), 1.0, 1.0, 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, (dot(vec4(1.0, 1.0, 0.0, 1.0), (clamp((clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0), (max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))))), 1.0)))))))), vec4(0.0, 0.0, 0.0, 1.0))), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, log(1.0), 1.0)), 0.0, 0.0), 1.0, abs(0.0), 0.0, ((clamp(((((! ((true && (! (((injectionSwitch.x < injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? 1.0 : (- 4.4)), ((((! (bool(bvec3(((true && (! ((((max(((false ? (16.18) : injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y))))))), true, false)))))) ? 1.0 : (- 4.4)), (mix(float((4.3)), float(((((((! ((true && (! (((injectionSwitch.x < injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? 1.0 : (- 4.4))) - 0.0)), bool(true)))))), 1.0, 1.0, sqrt(1.0), 1.0, (clamp(1.0, 1.0, (((max(1.0, 1.0))) + 0.0))))))), float((vec3(mat3x4(vec3(dot((max(((vec4(0.0, (mix((mix(float(float(0.0)), float((8.9)), bool(false))), float((856.954)), bool(false))), 0.0, (clamp(1.0, 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 1.0))), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (min(((false ? (- 6.1) : 0.0)), 0.0)), log(1.0), 1.0)), (clamp(0.0, 0.0, (mix(float((clamp(((true ? 0.0 : (1.1))), ((true ? 0.0 : (1.1))), ((true ? 0.0 : ((min(1.1, 1.1)))))))), float((2.1)), (false || (bool(false))))))), 0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, sqrt((max((float(mat4((max(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, ((0.0) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), 1.0, 1.0)))))))), 0.0, (mix(float((float((43544u & 124297u)))), float((float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)))), bool(true))), 1.0, 1.0)))), mat3x2(1.0), vec3(((((true ? 1.0 : (950.089)))) - 0.0)), uvec4(1u))), _GLF_struct_6(_GLF_struct_4(mat3x4((clamp(1.0, 1.0, 1.0))), (((((clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)), bvec3(true), mat4((clamp(1.0, (float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0))), bvec3(true)), _GLF_struct_5(uvec4(1u), mat3x4(1.0), mat2x3(1.0), bvec3(true), ivec3(1), bvec4((((injectionSwitch.x > injectionSwitch.y)) || (true))), mat2x4(1.0))), _GLF_struct_9(_GLF_struct_7(mat2x3(1.0), vec4((max(1.0, 1.0))), mat2x3(1.0), 1), _GLF_struct_8(1u), uvec2(1u), vec3(1.0)), mat3(1.0), vec2(((mix(float((((injectionSwitch.x < ((injectionSwitch.y) + log(1.0)))) ? (min(1.0, 1.0)) : (- 985.866))), float((((3076.2693) * 1.0))), bool(false))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((min((uint(uvec3((min(min(workgroup_size, ((workgroup_size) - 0u)), min(workgroup_size, ((workgroup_size) - (min(0u, 0u)))))), ((0u) | (((0u) << 0u))), 1u))), min(workgroup_size, ((workgroup_size) - 0u))))) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((((true) && true) ? ((((((((true ? (min((min((((clamp(workgroup_base, (1u * (workgroup_base)), workgroup_base))) / 1u), (clamp(workgroup_base, (1u * (workgroup_base)), workgroup_base)))) + subgroup_id * subgroup_size, (clamp(workgroup_base, (1u * (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size)) + (((max(subgroup_local_id + ((1) ^ (1 ^ 1)), subgroup_local_id + ((1) ^ (1 ^ 1))))) % subgroup_size) : (atomicXor(virtual_gid, (clamp((max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid)))))))) | 0u)) / 1u) << 0u)) : (workgroup_size)));
 buf[virtual_gid] = 1;
 if((((min((max((~ (~ (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), subgroup_local_id + 1)) - 0u, (max((~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1)) - 0u)))) < (max(subgroup_size, (clamp(subgroup_size, subgroup_size, subgroup_size)))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), ((4) - 0), 64, (((0 ^ ((((max(0, 0)) | 0))))) - 0));
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
