#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (((true ? max(gl_NumWorkGroups.x, ((((((gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) << uvec3((injectionSwitch.x), (clamp((injectionSwitch.x), (injectionSwitch.x), (((false ? (vec2(- 6666.2080, - 627.053)) : injectionSwitch)).x))), (injectionSwitch.x)))) | uvec3((injectionSwitch.x), (((((injectionSwitch.x)) * 1.0)) - log(1.0)), (injectionSwitch.x))).x) : (subgroup_id))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (((false ? (num_workgroup) : max((clamp((((1u * ((((((bool(bvec3(bool((bvec3(bvec4(bvec3(bool(bvec2(true, true)), false, true), true)))), false, true))))) ? gl_WorkGroupID : (uvec3(3012u, 50852u, 167022u)))).x))) | (uint((injectionSwitch.x)) << (uint(5u)))), (((1u * ((((((bool(bvec3(((bool((bvec3(bvec4(bvec3(bool(bvec2((true && (true)), true)), false, true), true))))) || false), false, true))))) ? gl_WorkGroupID : (uvec3(3012u, 50852u, 167022u)))).x))) | (uint((injectionSwitch.x)) << (uint(5u)))), (((1u * ((((((bool(bvec3(bool((bvec3(bvec4(bvec3(bool(bvec2(true, true)), false, true), true)))), false, true))))) ? gl_WorkGroupID : (uvec3(3012u, 50852u, 167022u)))).x))) | (uint((injectionSwitch.x)) << (uint(5u)))))), ((((max(((bool(bvec2(true, true))) ? ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) : (uvec3(3012u, 50852u, 167022u))), ((bool(bvec2(true, true))) ? gl_WorkGroupID : (uvec3(3012u, 50852u, 167022u)))))) ^ uvec3(0u, (uint((((uint(uvec2((max((max(uint((clamp(0u, 0u, (clamp(0u, ((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : (max(0u, 0u)))), (uint(uint(((0u) | 0u))))))))), uint((clamp(0u, 0u, (clamp(0u, ((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : (max(0u, 0u)))), (uint(uint(((0u) | 0u))))))))))), ((uint(((0u ^ (clamp(0u, 0u, 0u)))))) * 1u))), (0u | (0u << (uint(5u)))))))) >> 0u))), 0u))).x))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + (0u | (((subgroup_id * (((clamp((((true ? (((subgroup_size)) | ((subgroup_size))) | (subgroup_size) : (workgroup_id)))), (clamp(subgroup_size, subgroup_size, ((((false ? (workgroup_size) : subgroup_size) + uint((injectionSwitch.x))))))), subgroup_size)) - uint((injectionSwitch.x))))) / 1u))) + (1u * (subgroup_local_id));
 uint next_virtual_gid = (((0u | (((uint(((uvec3((uint(uvec2(((! ((true && (! (false))))) ? (virtual_gid) : workgroup_base + subgroup_id * subgroup_size), 0u))), 1u, 1u)) ^ uvec3(0u, 0u, 0u))))))) | (0u | ((((! ((true && (! (false))))) ? (virtual_gid) : workgroup_base + subgroup_id * subgroup_size)))))) + ((clamp((((((true ? ~ ((true ? (((~ (((((((0u ^ ((false ? ((((~ subgroup_local_id) | 0u))) : (subgroup_local_id))))) | (((subgroup_local_id) << 0u))) + 1) / 1u)))) | 0u)) : (bitfieldInsert(num_workgroup, subgroup_size, 78018, - 16436)))) : (((min((~ ((~ (~ (~ (((subgroup_id & subgroup_local_id)))))))), (~ ((~ (~ (~ (((subgroup_id & subgroup_local_id))))))))))) | ((true ? (((((subgroup_id & (~ (~ ((max(subgroup_local_id, subgroup_local_id))))))) | 0u))) : (workgroup_size)))))))) ^ (0u << (uint(0u)))), ((max(~ (~ ((min((subgroup_local_id + (((int(((max(ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int(7)))), 1)), ivec2(ivec3(ivec2(true ? 1 : ((30832)), ((((injectionSwitch.x < injectionSwitch.y)) ? (0 << (int(7))) : (- 67012)))), 1)))))))))), (subgroup_local_id + (((int(((max(ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int(7)))), 1)), ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int((int(ivec4(7, 0, 0, 1))))))), 1)))))))))))))), ~ (~ ((min(((false ? (subgroup_size) : (subgroup_local_id + (((int(((max(ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int(7)))), ((1) | (((0 | 0) | (1)))))), ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int(7)))), 1)))))))))))), (subgroup_local_id + (((int(((max(ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int(7)))), 1)), ivec2(ivec3(ivec2(true ? 1 : ((30832)), (0 << (int(7)))), 1))))))))))))))))), (subgroup_local_id + ((1) / ((1 << (int(7))) >> (((int(7))) - 0)))))) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[(((true ? uint(uvec3((((((clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) / ((((((0u | ((true ? ((((1u) | (((min((((0u << (uint(6u))) | (1u))), (1u)))) | ((1u)))) / ((((1u << (uint(2u)))) ^ 0u) >> (uint(2u))))) : (next_virtual_gid)))) | 0u)) + 0u))))) | ((0u | (clamp((((clamp(next_virtual_gid, next_virtual_gid, (((max(next_virtual_gid, next_virtual_gid))) + 0u)))) - ((1u * (0u)) >> (((false ? (atomicMin(subgroup_id, (((~ (~ (workgroup_id)))) - 0u))) : uint(2u)))))), ((min((clamp(((clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), ((clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), ((clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))), ((clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))) | ((clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))))), 1u, ((true ? 1u : (workgroup_size))))) : (subgroup_local_id))))], uint(((((2) + 0)) - 0)), 4, 64, 4);
   subgroupAll((false || ((((true && (false))) && true))));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, (~ (((~ (64))) / 1)), 4);
   subgroupAll((! (! (true))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
