#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((! (! ((false)))) || false)))
  barrier();
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if((false))
  barrier();
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base;
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false || ((false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((! (! (false)))))
  {
   if((((false) || ((! (! (bool(bvec2(false, true)))))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y) && true), false, false)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x = subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(((! (! ((true && (bool(bool((((! (! ((((false) || ((injectionSwitch.x > injectionSwitch.y))) || (! ((bool(bool(! ((bool((bvec2(bvec3(bvec2(true && ((((false || (! (((false || (! (! (! (false)))))))))))), false), true))))))))))))))))))))))))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 if(((true && ((! (! (false)))))))
  {
   if(((! ((false || (((bool((false || (bool(bool(bool((! (((! ((bool(bvec2(! (((! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))) && true)))))))))))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > (mix(vec2((0.3), (9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((((mix(float((- 3.5)), float(((true ? injectionSwitch.x : (5443.5397)))), bool(true))) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = ((((((max(0u, 0u)) | (((((((true ? injectionSwitch : (sin(vec2(9637.6008, 1.3)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)) ? (write_val) : gl_WorkGroupSize.x))) * 1u)));
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if(((((bool(bvec3(false, true, false)))) || ((injectionSwitch.x > injectionSwitch.y)))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > ((false ? (injectionSwitch) : injectionSwitch)).y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && (((false || ((! (! ((bool(bvec2(! (! ((false))), true))))))))))))
  {
   if((bool(bvec2((true && ((false))), true))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((((false || (((injectionSwitch.x > injectionSwitch.y)))))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (false)))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * (((0u + (workgroup_id)) - 0u));
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 ((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base) | uint((((injectionSwitch.x)) * 1.0)));
 if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w = (~ ((~ (~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))).x;
 if((false))
  barrier();
 if((false))
  {
   if((((false)) && true))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((! (((! ((false || (((false) && (((min(injectionSwitch, injectionSwitch)).x < (vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) && ((injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if((false))
  {
   if((true && ((false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((false) && true)))
    barrier();
   if(((! (! (! (! ((false))))))))
    barrier();
  }
 uint virtual_gid = (uvec4(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base[0], GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base[1], GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base[2], GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base[3])).w + (((clamp(subgroup_id * (max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, ((((true ? GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base : (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base)) | ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base))))).y) | 0u))), subgroup_id * (max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, ((((true ? GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base : (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base)) | ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base))))).y) | 0u))), subgroup_id * (max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, ((((true ? GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base : (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base)) | ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base))))).y) | 0u)))))) - uint((injectionSwitch.x))) + ((((((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x) << ((0u) << 0u)))) | ((((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x) << ((0u) << 0u))))) / 1u);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((false || (true && ((false))))))
  barrier();
 if((false))
  barrier();
 if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! (! ((false)))))
  barrier();
 ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid) << 0u);
 atomicStore(write_val, uint((0u ^ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z))), 4, ((64) - 0), 0);
 if((((bool(bvec4(false || (false), ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) && true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_val = atomicLoad((max((((((min(write_val, write_val)))) | ((~ (~ (((min(write_val, write_val)))))))) | 0u), (0u | (write_val)))), 4, 64, 0);
 if((false))
  barrier();
 if(((bool(bvec2(false, true)))))
  barrier();
 buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z] = uint(subgroupAllEqual((max(read_val, read_val))));
 if(((((bool((bvec3(bvec3(bvec3(false, true, true)))))) || ((((injectionSwitch.x > injectionSwitch.y)))))) || ((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((((! (! (! (! (((false || ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)) || false)))
    barrier();
   if(((((vec2(vec4((max(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))), sqrt(1.0), 1.0))).x > (((true ? (float((transpose(transpose(mat3(mix(((((((injectionSwitch.x < injectionSwitch.y)) ? float((max(injectionSwitch, injectionSwitch)).y) : (900.348)))) - 0.0), float((float((max(17997, ((17997) | (17997))))))), bool(false)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) : (288.437))))))))
    barrier();
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((bool(bool(((((((injectionSwitch.x < (max(injectionSwitch, (mat2(1.0) * (injectionSwitch)))).y)) && (bool(bvec3(false, true, false)))))) && true))))) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
