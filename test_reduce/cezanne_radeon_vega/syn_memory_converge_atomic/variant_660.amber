#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if((false))
  barrier();
 uvec4 GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id;
 uvec4 GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val;
 if((false))
  {
   if(((! (! ((true && ((! (! ((((mix(float(injectionSwitch.x), float((max((clamp((mix(float((- 90.75)), float((9.1)), bool(true))), (mix(float((- 90.75)), float((9.1)), bool(true))), (mix(float((- 90.75)), float((9.1)), bool(true))))), (mix(float((- 90.75)), float((9.1)), bool(true)))))), bool(false))) > injectionSwitch.y))))))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.xy = (clamp((max(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid)), GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid));
 if((((true && (bool(bvec2(((false) && true), true)))))))
  barrier();
 uvec4 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base;
 if((false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size;
 if(((! (! (false)))))
  barrier();
 if((true && ((false))))
  barrier();
 GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((((((false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if((((false)) || ((false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if((((false) && true)))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((! (! (((bool((bvec2(bvec4((bvec2(bvec4((bvec2(bvec3((bvec2(bvec4(bvec2(false, (bool(bvec4((true && (false)), true, false, true)))), true, true))), false))), true, true))), true, (bool(bvec2((! (! (((true) && true)))), false))))))))) && ((injectionSwitch.x < (min(injectionSwitch, injectionSwitch)).y))))))))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.w = (uint(uint((uint(uvec2((min(subgroup_id, subgroup_id)), 1u))))));
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.y = GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.w;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((false)) && (bool(bool(true)))))
  barrier();
 if((false))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.z = ((0u << (uint(7u))) ^ ((min(((((max((((uvec2(0u, 0u) ^ ((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u))), (uvec2(0u, 0u) | ((((uvec2(0u, 0u) ^ ((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)))))))) | ((((uvec2(0u, 0u) ^ ((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u))))) | (((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) / uvec2(1u, 1u)))), (min((~ (~ (((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) / uvec2(1u, 1u))))), (~ (~ (((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) / uvec2(1u, 1u))))))))).x));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.xy.x = subgroup_local_id;
 if((((false)) || false))
  barrier();
 uint num_workgroup = (min((~ (uvec3(((uvec3((~ (gl_NumWorkGroups)))) ^ uvec3((clamp(((0u) | 0u), 0u, 0u)), 0u, (((true ? ((((clamp(((0u) << 0u), 0u, 0u))) << 0u) >> 0u) : (packUnorm2x16(injectionSwitch)))))))))).x, (~ ((min(uvec3(((uvec3((~ (gl_NumWorkGroups)))) ^ uvec3((clamp(((uint(uvec2((0u), 0u))) | 0u), 0u, 0u)), 0u, (((clamp(((0u) << 0u), 0u, 0u))) << 0u)))), ((uvec3(((uvec3((~ (gl_NumWorkGroups)))) ^ uvec3((clamp(((uint(uvec2((0u), 0u))) | 0u), 0u, 0u)), 0u, (((clamp(((0u) << 0u), 0u, 0u))) << 0u))))) ^ uvec3(0u, 0u, 0u)))))).x));
 GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.z = num_workgroup;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 ((GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz.x = GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.z) - 0u);
 if((bool(bool(((! (! (! (! ((true && ((((((true ? ((max(max(injectionSwitch, (max((min((mix(vec2((- 0.2), (44.57)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), (mix(vec2(((clamp(- 16.03, (float((clamp(vec3(- 16.03, 1.0, 0.0), vec3(- 16.03, 1.0, 0.0), vec3(- 16.03, 1.0, 0.0))))), (max(- 16.03, - 16.03))))), (- 3.3)), vec2(((min((mix(vec2((- 0.2), (44.57)), vec2((injectionSwitch)[(~ (~ ((max(0, 0)))))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))[((0) / 1)], ((min((mix(vec2((- 0.2), (44.57)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), true)))))), max(injectionSwitch, (min((mix(vec2((- 0.2), (44.57)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))))).x : (- 4.7))) > injectionSwitch.y)))))))))))))))
  {
   if(((! (! (((((((injectionSwitch.x > injectionSwitch.y)) || (((! (! (! (((! (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))) && true) && true)))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((min((clamp(injectionSwitch.x, (clamp((vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > (mix(float(injectionSwitch.y), float((4.0)), bool(false)))))))
  {
   if((((injectionSwitch.x > ((false ? (length(injectionSwitch)) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if((bool(bvec4((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y))))), true, true, true))))
  barrier();
 GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz.z = ((((((workgroup_size) + 0u)) | ((~ (~ (~ ((((1u * (~ (0u))))) ^ 0u))))))) ^ 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz.y = workgroup_id;
 if((false))
  barrier();
 if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = (max(((((GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz.z) << (0u | 0u)) * (max(GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz, GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz)).y) + 0u), ((((GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id) - uvec4(0u, 0u, 0u, 0u)).xyz.z) << (0u | 0u)) * (max(GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz, GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id.xyz)).y));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 if((false))
  barrier();
 if((bool(bvec4((false), false, (false || (false)), true))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((((bool(bvec4((bool((bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))), false, false, false))) && ((injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = ((max((((((~ (~ (((false ? (GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id) : max(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base))))))) / uvec4(1u, 1u, 1u, 1u)))), (((((~ (~ (((false ? (GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_id) : max(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base))))))) / uvec4(1u, 1u, 1u, 1u)))))) << uvec4(0u, 0u, 0u, 0u)).w + GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.z + (uint((injectionSwitch.x)) ^ (GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.xy.x));
 if((false))
  {
   if((((injectionSwitch.x > ((mix(float(float(((mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float((float(89563u))), bool(false))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.xy.y = (uvec2(0u, 0u) ^ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).y;
 if((bool((bvec3(bvec3(bvec3((false), (((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))))), false)))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > (float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0))))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((false) && true)))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 atomicStore(write_val, uint(GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.xy.y), (clamp((clamp(4, 4, ((((4) << 0)) | ((clamp((int(ivec4(4, 1, 0, 0))), 4, 4)))))), 4, 4)), 64, 0);
 uint read_val = atomicLoad(write_val, (min((clamp((0 | (4)), 4, 4)), 4)), 64, (~ (~ (0))));
 if((false))
  {
   if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y) || false), false, ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.w = read_val;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(((false || ((! (! ((false || (false)))))))))
    barrier();
   if(((((min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec3(false, false, true)))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.x = GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.w;
 buf[GLF_merged3_0_2_53_2_1_13_3_1_8GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupread_val.xy.y] = ((~ (((~ ((0u + (0u ^ ((0u | ((0u ^ (((true ? ((false ? (floatBitsToUint(519.188)) : (((~ (~ (uint(subgroupAllEqual(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_14read_valsubgroup_idsubgroup_sizeworkgroup_base.x))))))))) : (read_val))) / 1u))))))))) + 0u))));
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((((true && (! (true && ((bool(bvec4(((false || ((bool(bool((((! (! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))))), false, true, (! (! (false)))))))))))) && true))))
    barrier();
   if((false))
    barrier();
   if(((true && (bool(bvec4((true && ((false))), ((injectionSwitch.x < injectionSwitch.y)), false, false))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
