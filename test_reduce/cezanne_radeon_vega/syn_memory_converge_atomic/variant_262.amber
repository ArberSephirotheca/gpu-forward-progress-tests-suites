#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((! ((bool(bool(bool(((bool((! ((false))))) || false))))))))
    return;
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false || (((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((((! (((! ((! (false || ((! (((float((((mat3(1.0) * (vec3(injectionSwitch.x, 0.0, cos(0.0)))) * mat3(1.0))))) < injectionSwitch.y)))))))) || false)))) && ((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if((false))
      return;
     if(((true && ((((((min((min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > (float(mat2x3(injectionSwitch.y, 0.0, 0.0, length(vec2(0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, cos(0.0), 1.0, 1.0)), 0.0)))))) && true)))))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         if((bool(bvec4((bool(bvec2((! (! ((true && ((false)))))), false))), (bool(bvec2(false, false))), false, true))))
          return;
         if((((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y) && true)))))
          return;
         return;
         if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if(((((! (((bool(bvec2((! ((((mix(vec2((min((((injectionSwitch)[0]) / 1.0), (((injectionSwitch)[0]) - 0.0))), (- 371.039)), vec2((- 6.7), (injectionSwitch)[1]), bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (! ((bool(bvec3(! ((((bool(bvec4(false, false, false, false))) || false))), true, true))))), false))))))))))
    {
     if(((! ((! (! (! (false))))))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if((((((((injectionSwitch.x < injectionSwitch.y)) && (bool(bool(((((injectionSwitch) / (vec2(mat4x3(((vec2(1.0, 1.0)) * mat2(1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))).x > ((false ? (((((true && (true)) && (false)) ? (6.6) : - 9.7))) : injectionSwitch.y))))))))))) || false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
     if(((! ((true && (! (false)))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       if((((((true ? injectionSwitch.x : (- 724.633))) > ((injectionSwitch.y) * 1.0)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if((! (! ((! ((! (! (! ((! (! (((((true && ((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))))))
        return;
       if((false))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
        }
      }
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x < injectionSwitch.y)) && (((true && ((! (! ((! ((true && ((bool(bvec3(! ((((bool(bvec4(((injectionSwitch.x > (clamp((min((float(((true ? mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, (min(0.0, 0.0)), 1.0, 1.0, (mix(float(0.0), float(((9051.1760 - - 2.9))), bool(false)))) : (mat4(1.4, 89.19, 2.5, 463.530, - 0.1, - 9300.2853, - 11.16, - 3638.0629, - 953.465, 66.98, 8.9, 329.821, 469.948, - 9015.8758, (clamp(- 4.1, - 4.1, - 4.1)), 68.67)))))), injectionSwitch.y)), (min(injectionSwitch.y, (mix(float((4524.0352)), float(injectionSwitch.y), bool(true))))), (mix(float((- 4.7)), float((max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), false, false, false))) || false))), true, true))))))))))))))))
    return;
   if((false))
    return;
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > (vec2((clamp(injectionSwitch[0], ((injectionSwitch[0]) - abs(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch[0])), injectionSwitch[1])).y))))
    {
     if(((((true) || false) && (false))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(((true && (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
        }
       return;
      }
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    return;
   if((((((((false ? (2599.7560) : injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = ((max((false ? (uvec3(187208u, 53782u, 66093u)) : gl_NumWorkGroups), (false ? (uvec3(187208u, 53782u, 66093u)) : gl_NumWorkGroups)))).x;
 if((false))
  return;
 if(((((((min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false || ((false))))
  {
   if((false))
    return;
   if((false))
    return;
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(((! (! (((false) && true))))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((false || (bool(bvec4((((! (! (((((injectionSwitch.x > injectionSwitch.y)))))))) && true), ((injectionSwitch.x < injectionSwitch.y)), true, false))))) && true))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if(((! (! (false)))))
      return;
     return;
    }
   if(((false || (false))))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((! ((bool(bvec3((false || ((false || (! (((injectionSwitch.x > (mix(vec2((- 5.5), (- 5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))), false, true)))))))
  {
   if((false))
    {
     if((bool(bvec4((false), (! (! (true))), false, false))))
      {
       if((((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))) && true)))
        return;
       return;
      }
     return;
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if(((((false || (false))) && true)))
    {
     if((false))
      return;
     if((true && ((false))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((false || (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((true && ((((false) || ((! (! (bool(bvec4(false, true, true, true)))))))))))
    return;
   if(((! (((! ((false || ((true && (false)))))) || false)))))
    return;
   if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((! (! ((bool(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(true)))))))))))))
        {
         if((false))
          return;
         return;
        }
       return;
       if((((! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if((false))
      return;
     if(((true && (false))))
      return;
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y)) || (((((mix(float(injectionSwitch.x), (((((false ? (((- 24.69)) * determinant(mat2(1.0, 0.0, 0.0, 1.0))) : (min(max((min(float((- 67.60)), float((- 67.60)))), float((- 67.60))), max((min(float((- 67.60)), float((- 67.60)))), float((- 67.60)))))))) - (float(vec2(0.0, 1.0))))), bool(false))) > injectionSwitch.y))))))
      {
       if((false))
        return;
       return;
       if(((((max((clamp((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (clamp((max(injectionSwitch.x, injectionSwitch.x)), (max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((! (! (false))) || (bool((bvec3(bvec4((bvec3((bvec3(bvec3((bvec3(bvec4(bvec3((bvec3(bvec3(bvec3((false), ((injectionSwitch.x < injectionSwitch.y)), (((bool(bvec2(false, true)))) || false)))))), true)))))))), (((bool(bvec3(false, true, true)))) || false)))))))))
        {
         if(((bool((! (! (bool(false))))))))
          {
           if((false))
            return;
           if((false))
            {
             if((false))
              return;
             return;
             if((false))
              return;
            }
           if(((! (! (false)))))
            {
             if((false))
              return;
             return;
            }
           return;
           if((false))
            return;
          }
         return;
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(((((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))) || false)))
        return;
       if(((false || (((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))))
        return;
       if((false))
        return;
       if(((((false || ((true && (false))))) || false)))
        {
         if(((! (! (false)))))
          return;
         return;
        }
       if(((true && (((false) || false)))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           if(((true && (false))))
            return;
           if((false))
            return;
           return;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
      }
    }
  }
 if(((true && (((((injectionSwitch.x > injectionSwitch.y)) || false))))))
  return;
 uint workgroup_size = ((((gl_WorkGroupSize.x) | (((((injectionSwitch.x > injectionSwitch.y)) ? (num_workgroup) : gl_WorkGroupSize.x))))) | 0u);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((! (! ((false)))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((! (! ((false)))) || false)))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((! (! (false)))))
  return;
 uint workgroup_id = (((uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x) >> (0u | (0u >> (uint(8u)))));
 if((false))
  return;
 if((false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((true && (false))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + (~ (~ (subgroup_local_id)));
 if((false))
  return;
 if(((false || ((bool(bvec2(false, true)))))))
  return;
 if((false))
  return;
 if(((false || (false))))
  {
   if(((((bool(bvec2((! (! (injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))), (true && (false)))))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((bool((true && (((bool((((injectionSwitch.x > injectionSwitch.y))))) || false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     if(((! ((! (! (! (false))))))))
      return;
     return;
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if((false))
  {
   if((! (! ((((true && (bool(bvec4(false, true, true, true))))))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(((! (! (false)))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   return;
  }
 if((false))
  {
   if((! (! ((false)))))
    return;
   if(((((mix(float(injectionSwitch.x), float((69.70)), bool(false))) > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if(((! (((! (false)) || false)))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((! ((! (! (! ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((! (! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((true && ((false))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((true && ((false))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((! (! ((((injectionSwitch.x > injectionSwitch.y)) || (((((min((clamp(((false ? (intBitsToFloat(- 91826)) : (float(mat3x2(injectionSwitch.x, 0.0, determinant(mat2(1.0, 1.0, tan(0.0), 1.0)), 0.0, 0.0, 1.0))))), (float(mat3x2(injectionSwitch.x, 0.0, determinant(mat2(1.0, ((min(float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0))))), tan(0.0), (((float(mat2x4(1.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0))), 0.0, (min(0.0, 0.0)), 1.0))), (float(mat3x2(injectionSwitch.x, 0.0, determinant(mat2(1.0, 1.0, tan(0.0), 1.0)), 0.0, 0.0, 1.0))))), (clamp(((false ? (intBitsToFloat(- 91826)) : (float(mat3x2(injectionSwitch.x, 0.0, determinant(mat2(1.0, 1.0, tan(0.0), 1.0)), 0.0, 0.0, 1.0))))), (float(mat3x2((mix(float(injectionSwitch.x), float((386.261)), bool(false))), 0.0, determinant(mat2(((float(((false ? (mat3(- 7.2, 8.1, - 27.56, - 7.0, - 6.4, - 62.14, - 7.1, 68.82, 7796.3352)) : mat3(float(vec2(1.0, (injectionSwitch.y))), 0.0, 1.0, log(1.0), 1.0, tan(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), 1.0, tan(0.0), 1.0)), 0.0, 0.0, 1.0))), (float(mat3x2(injectionSwitch.x, 0.0, determinant(mat2(1.0, 1.0, tan(0.0), 1.0)), 0.0, 0.0, 1.0))))))) > (mix(float((float(((19335) - 0)))), float(injectionSwitch.y), bool(true)))) && ((injectionSwitch.x < (clamp((((((mix(vec2((injectionSwitch)[0], ((((min((clamp(9.2, 9.2, 9.2)), 9.2)))) * 1.0)), vec2(((clamp(- 49.31, - 49.31, - 49.31))), (max((injectionSwitch), (injectionSwitch)))[1]), bvec2(false, true))) * mat2(1.0)) * mat2(1.0)))).y, ((true ? injectionSwitch.y : (5.8))), injectionSwitch.y))))))))))))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((true && (false))))
  {
   if(((true && (false))))
    return;
   if((false))
    {
     if((! ((bool(bvec4((((injectionSwitch.x < injectionSwitch.y)) && (! ((false)))), false, true, false))))))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 atomicStore(write_val, uint(((false ? (subgroup_id) : virtual_gid))), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
