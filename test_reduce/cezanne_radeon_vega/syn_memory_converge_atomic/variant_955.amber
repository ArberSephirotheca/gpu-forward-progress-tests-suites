#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! ((! (! (! ((bool(bvec4(false, false, false, false)))))))))))
    {
     if(((false || (false))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((bool((bvec2(bvec3(bvec2(false, false), true))))) && (bool(bvec2(true, false)))))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if(((! (! ((! (true && ((false || ((! ((((bool(bvec2(false, false)))))))))))) || false)))))
  {
   if((! (! ((! (! ((false))))))))
    {
     if((false))
      {
       if(((((bool(bvec4(false, false, false, true)))) || false)))
        return;
       return;
      }
     return;
    }
   if(((false || ((((float((transpose(transpose(mat4(injectionSwitch.x, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), abs(1.0), 1.0, 1.0, log(1.0), 0.0)))))) > injectionSwitch.y))))))
    return;
   return;
   if((false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((((injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, (! (! ((true && (((true) && true)))))))))))))
  return;
 uint workgroup_id = ((gl_WorkGroupID) ^ uvec3(0u, 0u, (max(0u, 0u)))).x;
 if((false))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if((((injectionSwitch.x > (((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) + 0.0)))))
  return;
 if((((false || ((((true && ((false)))) || false)))) || false))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 uint workgroup_base = (0u ^ (((workgroup_size) ^ 0u))) * (0u | ((clamp(workgroup_id, ((true ? ((((workgroup_id) / 1u) << (0u << (uint(1u))))) : (uint(false)))), workgroup_id))));
 if((((false) || false)))
  return;
 if((((false) || false)))
  return;
 if((((! ((! (! (! ((injectionSwitch.x > (mix(vec2((((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2((636.783), (- 962.350)), bvec2(false, false))).y))))))))))
  {
   if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
    return;
   if((false))
    {
     if((((bool(bvec3((! (! ((injectionSwitch.x > (min(((1.0 * (mix(float((- 8.2)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)))))), false, false))))))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = (((uint((uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) ^ (uvec3(workgroup_base, (((min(uint((clamp((clamp(uvec3(0u << (uint(4u)), 1u, 1u), uvec3(0u << (uint(4u)), 1u, 1u), uvec3(0u << (uint(4u)), 1u, 1u))), uvec3(0u << (uint(4u)), 1u, 1u), (((uvec3(0u, 0u, 0u) | (uvec3(0u << (uint(4u)), 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))), uint(uvec3((1u * ((((((max((uint(uvec3(0u, 0u, 0u))), (uint(uvec3(0u, 0u, 0u)))))) >> 0u) << ((min(uint(4u), ((((((uint(4u)) - 0u) | ((uint(4u)) - 0u))) >> 0u)))))) - (uint((injectionSwitch.x)) ^ (0u))))), 1u, 1u)))))), ((((max(((clamp((max(0u, 0u)) | ((max((1u << (uint(0u))), (max((((true ? (clamp(1u << (uint(0u)), 1u << (uint(0u)), 1u << (uint(0u)))) : (bitfieldInsert(subgroup_local_id, workgroup_base, 61519, - 95490))))), (1u << (uint(0u)))))))), (max(0u, 0u)) | ((max((1u << (uint(0u))), (max(((0u + (1u)) << (uint(0u))), (uint((((clamp(uvec2((1u << (uint(0u))), 0u), uvec2((1u << (uint(0u))), 0u), uvec2((1u << (uint(0u))), 0u))) | (clamp(uvec2((1u << (uint(0u))), 0u), uvec2((1u << (uint(0u))), 0u), uvec2((1u << (uint(0u))), 0u)))))))))))), ((true ? ((true ? (((((((true ? max(0u, 0u) : (subgroup_id)))) ^ 0u)) - 0u)) | ((max((1u << (uint(0u))), (max((1u << (uint(0u))), (1u << (uint(0u)))))))) : (subgroup_id))) : (write_val)))))), (1u << (uint(0u)))))) | ((max((1u << (clamp((uint((clamp(0u, 0u, 0u)))), ((1u * (uint(0u)))), (min((uint((uint(uvec4(0u, 1u, 0u, 0u))))), (uint((uint(uvec4(0u, 1u, 0u, 0u)))))))))), (1u << ((false ? (4322u) : (uint(((((0u) << 0u) << 0u))))))))))) >> (uint(0u)))))))) | 0u)) + ((min(max((~ (~ ((clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), subgroup_id * (uint(uint((max(subgroup_size, subgroup_size)))))), max((~ (~ ((clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ((((subgroup_id * subgroup_size) / 1u)) | (((clamp(uint(uint(subgroup_id * subgroup_size)), uint(uint(subgroup_id * subgroup_size)), uint(uint(subgroup_id * subgroup_size))))))))))) + subgroup_local_id;
 if((false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, ((0) << 0));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  {
   if((((injectionSwitch.x > (vec2(1.0, 1.0) * ((clamp((vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
    return;
   return;
  }
 if((false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(((min(uint(uvec2(((false ? ((mat4x3(- 65.50, - 5811.9944, (((float(vec2(- 7.8, exp(0.0)))) + 0.0)), - 3.3, ((clamp((1.0 * (1.0 * (((- 604.351) + 0.0)))), (clamp(1.0 * (((((false ? (75.88) : (clamp(min((- 604.351) + 0.0, (max((min((- 604.351) + 0.0, (- 604.351) + 0.0)), (- 604.351) + 0.0))), min((- 604.351) + 0.0, (max((min((- 604.351) + 0.0, (- 604.351) + 0.0)), (- 604.351) + 0.0))), min((- 604.351) + 0.0, (max((min((- 604.351) + 0.0, (- 604.351) + 0.0)), (- 604.351) + 0.0)))))))))), (mix(float(1.0 * (((- 604.351) + 0.0))), float((clamp(((- 141.067 + - 3825.5833)), ((- 141.067 + - 3825.5833)), ((- 141.067 + - 3825.5833))))), bool(false))), 1.0 * (((false ? (8766.1895) : ((min((mix(float((clamp((- 604.351), (- 604.351), (- 604.351)))), float((96.39)), bool(false))), (float(float((mix(float((4291.8839)), float((- 604.351)), bool((! (((! ((bool(bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))))))) + 0.0)))))), (0.0 + (max((1.0 * (((- 604.351) + 0.0))), (mix(float((- 369.695)), float((0.0 + ((1.0 * (((- 604.351) + 0.0)))))), bool(true))))))))), 1.0, 2.1, 5.0, 923.333, - 695.414, 3.0, 2788.0982) , subgroup_local_id)) : read_val)), (1u | 1u))), uint(uvec2(((false ? ((mat4x3(- 65.50, - 5811.9944, (((float(vec2(- 7.8, exp(0.0)))) + 0.0)), - 3.3, ((clamp((1.0 * (1.0 * (((- 604.351) + 0.0)))), (clamp(1.0 * (((((false ? (75.88) : (clamp(min((- 604.351) + 0.0, (max((min((- 604.351) + 0.0, (- 604.351) + 0.0)), (- 604.351) + 0.0))), min((- 604.351) + 0.0, (max((min((- 604.351) + 0.0, (- 604.351) + 0.0)), (- 604.351) + 0.0))), min((- 604.351) + 0.0, (max((min((- 604.351) + 0.0, (- 604.351) + 0.0)), (- 604.351) + 0.0)))))))))), (mix(float(1.0 * (((- 604.351) + 0.0))), float((clamp(((- 141.067 + - 3825.5833)), ((- 141.067 + - 3825.5833)), ((- 141.067 + - 3825.5833))))), bool(false))), 1.0 * (((false ? (8766.1895) : ((min((mix(float((clamp((- 604.351), (- 604.351), (- 604.351)))), float((96.39)), bool(false))), (float(float((mix(float((4291.8839)), float((- 604.351)), bool((! (((! ((bool(bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))))))) + 0.0)))))), (0.0 + (max((1.0 * (((- 604.351) + 0.0))), (mix(float((- 369.695)), float((0.0 + ((1.0 * (((- 604.351) + 0.0)))))), bool(true))))))))), 1.0, 2.1, 5.0, 923.333, - 695.414, 3.0, 2788.0982) , subgroup_local_id)) : read_val)), (1u | 1u))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
