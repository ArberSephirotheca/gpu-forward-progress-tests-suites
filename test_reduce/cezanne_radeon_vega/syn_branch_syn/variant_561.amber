#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

struct _GLF_struct_9 {
 mat2 _f0;
 vec3 _f1;
 mat4x2 _f2;
 bvec4 _f3;
 ivec2 _f4;
 uvec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 bool _f1;
 _GLF_struct_9 _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 vec2 _f1;
 vec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat4 _f1;
 _GLF_struct_5 _f2;
 mat4 _f3;
 _GLF_struct_6 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat3x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 _GLF_struct_3 _f1;
 ivec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 vec4 _f1;
 bool _f2;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 uint _f1;
 _GLF_struct_0 _f2;
 uint num_workgroup;
 _GLF_struct_2 _f3;
 _GLF_struct_4 _f4;
 uvec3 _f5;
 _GLF_struct_7 _f6;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((bool(bool((false)))))
  {
   if((((((false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(bvec3(true), 1u, _GLF_struct_0(uvec3(1u)), gl_NumWorkGroups.x, _GLF_struct_2((transpose(transpose(mat3(1.0)))), _GLF_struct_1(vec4(1.0), vec4(((mix(float((max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), float((- 7723.1186)), bool(false))))), true)), _GLF_struct_4(vec2(1.0), _GLF_struct_3(mat4x2(1.0), mat3x4(1.0), ivec2(1)), ivec4(1), ivec2(1)), uvec3(1u), _GLF_struct_7(1.0, mat4(((true ? ((true ? 1.0 : (((8.2)) * 1.0))) : (vec3(1.1, (min((((max(- 6.3, ((true ? - 6.3 : (2117.7501)))))) / 1.0), - 6.3)), - 2.1).r)))), _GLF_struct_5(mat2x4(1.0), vec2(1.0), ((vec2(1.0)) * mat2(1.0)), bvec2(true)), ((true ? mat4((float(mat2x4(1.0, (clamp(sqrt(tan(0.0)), (((max(sqrt(((tan(((false ? (418.820) : (min(0.0, 0.0)))))) + 0.0)), (min(sqrt(((tan(((false ? (418.820) : (min(0.0, 0.0)))))) + 0.0)), (mix(float((1.3)), float((min((max(sqrt(((tan(((false ? (418.820) : (min(0.0, 0.0)))))) + 0.0)), sqrt(((tan(((false ? (418.820) : (min(0.0, 0.0)))))) + 0.0)))), sqrt(((tan(((false ? (418.820) : (min(0.0, 0.0)))))) + 0.0))))), bool(true)))))))) * 1.0), sqrt(tan(0.0)))), ((((((mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y) + (dot(vec2(0.0, 1.0), vec2((((mix(float(((171.183))), float(1.0), bool(true))) - determinant(mat4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)))), 0.0))))), tan(0.0), abs(length(vec4(0.0, 0.0, 0.0, 0.0))), exp(0.0), ((((injectionSwitch.x > injectionSwitch.y)) ? (1.3) : 0.0)), 1.0)))) : (mat4(61.38, (max(448.829, 448.829)), 1882.4694, 6.6, - 4482.0656, - 62.60, 9.8, 9729.5355, 3.1, - 9964.0711, - 6983.8468, - 3.7, 6314.8287, - 0.7, - 7718.0722, - 4001.5371)))), _GLF_struct_6(((transpose(transpose(mat3(1.0)))) * (sin(vec3(0.0, ((injectionSwitch.x) + (0.0)), 0.0)) + (((mix(vec3((vec3(1.0))[0], (((clamp(- 6.7, - 6.7, - 6.7)) / - 9.4)), (- 4585.1350)), vec3((((1.0 * ((- 7745.3397 * (max((float(((mat4x2(- 686.961, exp(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (max(- 686.961, - 686.961))))))) * 4.9)), (((vec3(1.0)) - vec3(0.0, 0.0, (float(mat3x2((min((float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), 0.0, sqrt(1.0), tan(0.0), tan(0.0), (max(((0.0) - 0.0), (1.0 * (0.0))))))))))[1], ((((min((mix(vec3(((552.757 / - 69.36)), (1.0), (2.7)), vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(true, true, true))), vec3(1.0))))[2]) * ((false ? (- 14.66) : 1.0)))), bvec3(false, true, true))))))), ((((uvec4((max(0u, 0u)), 0u, (max(0u, 0u)), 0u) ^ (uvec4(0u, 0u, 0u, (uint(uint((0u ^ (0u)))))) + (uvec4(1u)))))) + uvec4(0u, 0u, 0u, 0u))), mat2x3(1.0)));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((! (! (((injectionSwitch.x > injectionSwitch.y) && true))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(vec3(1.0), (bool((bvec2(bvec2(bvec2(true, (true && (false)))))))), _GLF_struct_9(mat2((clamp(((1.0) * 1.0), ((1.0) * 1.0), (min(((max((1.0) * 1.0, (1.0) * 1.0))), ((1.0) * 1.0)))))), vec3(1.0), mat4x2(1.0), bvec4(true), ivec2(((~ (((~ (int(ivec2(((false ? (87840) : ((1) + 0))), 0))))) | ((~ (int(ivec2(((false ? (87840) : ((1) + 0))), 0))))))))), uvec2(1u), (vec4(mat4x3(vec4((((((mix(float((6.8)), float(1.0), bool(true)))) - log(1.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0))))), workgroup_size * workgroup_id));
 if((false))
  barrier();
 uint virtual_gid = ((true ? ((((_GLF_struct_replacement_11._f0.workgroup_base) * 1u)) << 0u) : (subgroup_id))) + subgroup_id * subgroup_size + (((((true ? (subgroup_local_id) : (workgroup_size))) | ((~ (~ (subgroup_local_id)))))) ^ (min(0u, ((true ? 0u : (subgroup_size))))));
 uint next_virtual_gid = _GLF_struct_replacement_11._f0.workgroup_base + (max(((true ? subgroup_id : (atomicAnd(workgroup_size, virtual_gid)))), subgroup_id)) * (1u * ((true ? (((subgroup_size)) << 0u) : (79989u)))) + (((false ? (max((0u ^ ((max((~ (~ (0u ^ (((workgroup_size)))))), (((workgroup_size)) ^ 0u))))), (workgroup_size))) : (clamp((subgroup_local_id + (min(1, 1))) % subgroup_size, (0u | ((((clamp((subgroup_local_id + 1) % subgroup_size, (((~ (~ ((~ (~ (((max(subgroup_local_id, subgroup_local_id))))))))) | ((((max((max((~ (((~ (((((~ (~ ((1u * (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) | (((subgroup_local_id) ^ 0u))))) << 0u))), subgroup_local_id)), (max((~ (((~ (((((~ (~ ((1u * (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) | (((subgroup_local_id) ^ 0u))))) << 0u))), subgroup_local_id))))) | 0u))) + 1) % (0u ^ (subgroup_size)), (subgroup_local_id + 1) % subgroup_size)))) ^ 0u)), (((((1u * ((subgroup_local_id + 1))) | 0u)) | (subgroup_local_id + 1))) % subgroup_size)))));
 if(((((! (! ((! (((! (injectionSwitch.x > injectionSwitch.y)) || false))))))))))
  barrier();
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if((! (! (((! ((((injectionSwitch.x < injectionSwitch.y)) && (((! (((! (! ((((true && (((vec2(((mat3x2(injectionSwitch, 1.0, cos(0.0), 0.0, 1.0)) * mat3(1.0)))).x > injectionSwitch.y))))))))) || false)) && true))))))))))
  {
   if(((((clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((! (! (((! (! ((! ((bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), (! ((! (! (! (((false) && true))))))), true, true)))))))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((! ((! (! (! (false))))))))
  {
   if((true && ((false))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((bool(bvec4((false), false, true, true))))
  barrier();
 if((false))
  barrier();
 if(((((mix(float(((- vec4(9.3, 8.6, - 3.4, 8106.7160).s))), float((mix(float((1.4)), float(injectionSwitch.x), bool(true)))), bool(true))) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((! (! (false)))) && true)))
  {
   if((false))
    barrier();
   barrier();
   if(((false || (false))))
    barrier();
  }
 if((false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   int i = 0;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 else
  {
   ((buf[next_virtual_gid] = 2) / 1u);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
