#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false || ((false || (((! (! (false)))))))))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((! (! ((false))))) && true))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((bool(bvec4((! (! ((false)))), false, ((injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   if((((((false ? (normalize(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if(((bool(bool((bool(bvec4(false, true, false, (! (! (true)))))))))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((true && (bool(bvec4(false, true, false, false)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if(((! ((! (! (! (false))))))))
      {
       if((false))
        return;
       if((((false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if(((bool(bvec3(((false) && true), false, false)))))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if(((false || ((bool(bool(false)))))))
          return;
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((((((! (! (! (! (false))))))) || false)))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((vec2(((false ? (vec4(2979.7559, 87.63, 57.82, - 580.194).st) : ((vec2((min(((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))) * mat2(1.0)))))).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if(((bool(bool((bool(bvec3(false, false, false))))))))
          return;
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((((false) && true)) || false)))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if(((bool(bvec4(false, true, true, false)))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
         return;
        }
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((false) && true)))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          return;
        }
       return;
       if(((((((max(injectionSwitch, (mix(vec2((injectionSwitch)[0], (min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((26.12), (7.8)), bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))).x > injectionSwitch.y))) || false)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     return;
     if(((! (! (false)))))
      return;
    }
   if((false))
    return;
   if(((false || (false))))
    {
     if((false))
      barrier();
     barrier();
     if((false || ((false))))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > ((false ? (64.87) : ((true ? injectionSwitch.y : (- 9.7)))))))))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((! (((! ((false))) || false))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       barrier();
      }
     return;
     if((false))
      barrier();
     if(((bool(bvec3(false, false, true)))))
      return;
     if(((bool(bvec2(false, true)))))
      barrier();
     if((false || ((false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if(((((clamp((min(injectionSwitch.x, ((false ? (1902.5633) : injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((! ((! (! (((! (((false) || false))) && true))))))))
        return;
       barrier();
      }
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((! ((bool(bvec2(! (false), false)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        {
         if(((! (((! (false)) && true)))))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if(((((((((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x > (mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((! ((! (! (! (false))))))))
    {
     if(((bool((false || (bool(false)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((! ((false || (((! ((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x > injectionSwitch.y))))) || false)))) || false)))))))))
  {
   if(((((bool(bvec4((! (! (injectionSwitch.x > (max((((max(injectionSwitch.y, injectionSwitch.y))) - 0.0), ((injectionSwitch.y) - 0.0)))))), true, false, true)))))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (false))))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     return;
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((false) && true)))
    barrier();
   return;
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((bool((bvec2(bvec2(bvec2((false), true)))))))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if((false))
    barrier();
  }
 if((((true && ((false)))) && true))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false) || false)))
      return;
     if((((false) && true)))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((((vec2(mat2x4(injectionSwitch, (dot(vec3(1.0, log(1.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, (injectionSwitch.x), 0.0))).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      {
       if(((bool((bvec3(bvec3(bvec3((! (! (false))), false, false))))))))
        barrier();
       return;
      }
     return;
     if((false))
      return;
    }
   if((((((false) || false) || false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((((true && ((false)))) && true))
    return;
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((((false) && true)))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
       if(((! (! ((! (! (false))))))))
        return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((! ((! ((! (! (! (! ((false || ((true && ((false)))))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      return;
     if(((bool(bvec4(false, false, true, true)))))
      return;
     barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((bool((bvec3(bvec3((bvec3(bvec4(bvec3((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)), true), true)))))))))
      barrier();
    }
   return;
  }
 if((false))
  {
   if(((bool(bool(false)))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))) || false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((bool(bvec2((false || (false)), false)))))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if(((bool(bvec4((((true && (false))) && ((injectionSwitch.x < injectionSwitch.y))), false, true, true)))))
  barrier();
 if((bool(bvec3((false), false, true))))
  {
   if(((! (((! (false)) || false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if(((bool(bvec3(false, false, true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
      }
     return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((false) || false)))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((false || (false))))
              barrier();
             if((false))
              {
               if((false))
                return;
               barrier();
              }
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              barrier();
            }
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         return;
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           return;
           if((false))
            barrier();
           if((false))
            return;
          }
         barrier();
         if((! (! (((bool(bvec2(false, false))))))))
          {
           if((false))
            return;
           return;
          }
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         barrier();
        }
       if(((true && (((bool(bool(false))) || (false || ((false || ((false))))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
       if(((bool(bvec3(false, true, ((true && ((injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((((vec2(((false ? (4709.5658) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((((min((1.0 * ((0.0 + (injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((bool((bvec2(bvec3(bvec2((((injectionSwitch.x > injectionSwitch.y))), true), false))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if(((false || (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   return;
  }
 if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((bool((bvec2(bvec4(bvec2(false, true), false, true)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((clamp((max(injectionSwitch.x, injectionSwitch.x)), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((true && (false))))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if(((bool(bool((bool(bvec4(false, false, false, true))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        return;
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((false) || false)))
        {
         if((false))
          return;
         barrier();
        }
      }
     if(((true && (false))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
       if((((false) && true)))
        return;
       if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       return;
       if((false))
        barrier();
       if((false))
        {
         if(((bool(bvec4(false, false, false, true)))))
          barrier();
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if((false))
      return;
     if((false))
      return;
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((false) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec2(false, false)))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (1.0 * (((((true ? false ? (- 5297.4477) : injectionSwitch.y : (- 4.4)))))))))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((false || (false))))
      return;
     if((false))
      barrier();
     return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((false))
  {
   if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if(((((vec2(mat3x4((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2((injectionSwitch.x), sqrt(0.0), 0.0, 0.0)), 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool((bvec3(bvec4(bvec3(false, false, true), true)))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((! (! ((false)))))
    barrier();
   if(((((! (! (false)))) || (bool(bvec4(false, true, false, true))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         barrier();
         if((((false || (bool(bvec3(false, true, true)))))))
          return;
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
         if((false))
          barrier();
        }
       barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(((bool(bool(((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((bool(bvec4((false), true, true, false))))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((((false) && true)))
          return;
         barrier();
         if(((bool((! (! (bool((! (! (false)))))))))))
          barrier();
        }
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      {
       if(((((false || (((false) && ((true) || ((injectionSwitch.x > injectionSwitch.y))))))) && true)))
        barrier();
       barrier();
      }
     if(((true && ((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y) && true))), ((false) || false), true, true)))))))
      return;
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 59.42), (- 38.33)), bvec2(false, false))).y))))
      barrier();
     return;
    }
   barrier();
   if((false))
    barrier();
  }
 if(((((bool(bool((true && ((bool(bvec4(injectionSwitch.x > (min(injectionSwitch.y, ((injectionSwitch.y) / ((true ? 1.0 : (acos(- 87.54))))))), true, true, false))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((false || ((! (! ((((float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, (injectionSwitch.y), log(exp(0.0)), 0.0, ((0.0) - 0.0)))) > injectionSwitch.y)))))))))
  return;
 if((false))
  barrier();
 if(((! (! (false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((bool(bvec4(((false || (! (! (((false || (true && (false))))))))), false, (bool(bvec4(false, false, true, false))), false)))) || false)))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && ((false) && ((! (! ((bool(bvec4((injectionSwitch.x < ((injectionSwitch) / vec2(1.0, 1.0)).y), false, false, true))))))))))))
    return;
   if(((bool(bvec2(false, true)))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if(((((bool(bvec3(false, ((true) || false), ((injectionSwitch.x > (((min(injectionSwitch.y, injectionSwitch.y))) - abs(tan(0.0))))))))) && true)))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(((((false || (false))) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false || ((bool(bvec2((false), true))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec4((! ((! (! (((! (false)) && true)))))), true, true, true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((true && (false))))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((! ((! (! (! ((! (! (false)))))))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(((! (! ((true && (false)))))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > ((0.0 + ((1.0 * (float(((((injectionSwitch.x < injectionSwitch.y)) ? mat4(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 0.0, 0.0, tan(0.0)) : (mat4(- 5.6, - 1923.4393, - 2.3, 7403.4464, 4.6, - 922.922, - 947.340, - 5279.6836, 20.34, 8834.7621, - 5362.9254, 8.6, - 676.776, 3.0, 9351.1410, 3190.2405))))))))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      return;
     if(((((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && ((injectionSwitch.x < injectionSwitch.y))))))))
      return;
    }
   if((false))
    {
     if(((! (! ((! (! (false))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if(((true && (false))))
  barrier();
 if((false))
  {
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if((false))
    return;
   if(((true && (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     return;
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (clamp((float(mat2x3((max((vec2(injectionSwitch[0], (mix(float(injectionSwitch[1]), float((- 8.5)), bool(false))))), injectionSwitch)).y, 0.0, (float(mat4x2((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0))), (min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 uint workgroup_id = ((clamp((((gl_WorkGroupID)) << uvec3((((((uint(uvec2((max((uint((mix(float((injectionSwitch.x)), float((- 8727.2416)), bool(false)))) | (0u)), (uint((injectionSwitch.x)) | (0u)))), 1u))) + 0u)) / 1u)), 0u, 0u)), (gl_WorkGroupID), (gl_WorkGroupID))) - (~ (~ ((((uvec3(((uvec3((uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))))) - uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))).x;
 if((false))
  return;
 if((false))
  return;
 if((false))
  barrier();
 if(((bool((bvec3(bvec4(bvec3(((false) || false), ((injectionSwitch.x > (clamp(((injectionSwitch.y) - 0.0), (min(injectionSwitch.y, injectionSwitch.y)), ((0.0 + (float(vec2((vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0))))))))), true), false)))))))
  {
   if((((bool(bvec3(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false, false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((((bool(bool(bool(bool((false)))))) || false)))) && true))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((! ((! (! ((false || (! ((false))))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if((false))
    {
     if((((bool(bvec4((((false || ((false)))) || false), false, true, false))) && true)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if(((! (! (false)))))
        return;
       return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
      }
     if((false))
      barrier();
     if((((! (! ((bool(bvec3(bool(bool((! ((((injectionSwitch.x > injectionSwitch.y)) || (false)) || ((! (false))))))), true, false)))))))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bool((false || (((false) || false))))))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        return;
       barrier();
      }
     if(((! (! (((false)) || false)))))
      barrier();
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((! (! ((false)))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((((((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true)) || false)))
        return;
       barrier();
      }
     if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(((false || (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! (! (false)))))
          return;
         barrier();
        }
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((bool((bvec3(bvec3(bvec3((bool(bool((bool(bool((false))))))), true, ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((((((injectionSwitch.x > injectionSwitch.y)) ? (- 8.4) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
    }
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || ((true && (false))))))
      return;
     return;
    }
   if((false))
    barrier();
   if((((! (! (bool(bvec3(((injectionSwitch.x > ((true ? injectionSwitch.y : (- 6.1))))), true, true))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = ((workgroup_size * workgroup_id) | ((0u ^ (workgroup_size * (((0u ^ (workgroup_id))) | 0u)))));
 if((false))
  barrier();
 if((((injectionSwitch.x > (((min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float(((- 82.85 * 55.87))), bool(false)))))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = ((workgroup_base + ((true ? subgroup_id : (atomicExchange(num_workgroup, workgroup_id)))) * subgroup_size) << 0u) + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! ((bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))
  return;
 if((((false)) || false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((bool(bvec4(((((false || ((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) && true), ((injectionSwitch.x > injectionSwitch.y)), false, true))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
  }
 uint next_virtual_gid = (((((~ (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + (max(((1) - 0), ((1) - 0)))) % (min((min(subgroup_size, subgroup_size)), subgroup_size))))))) << (max((clamp(0u, 0u, 0u)), 0u)))) | (workgroup_base + subgroup_id * (0u + (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((true && (false))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false) || false)))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(((false || (false))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((((((injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
        }
       if((false))
        {
         if(((bool(bool(false)))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     return;
    }
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if((false))
    return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((! (((! ((false))) || false))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bool(false)))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((((true ? (513.503 / 3181.1317) : (- 1.1))))), bool(((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec4((false), ((injectionSwitch.x < injectionSwitch.y)), false, true))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
          barrier();
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         if((false))
          barrier();
         if(((bool(bvec4(false, false, false, false)))))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     if((false))
      barrier();
     if((((bool(bvec3(((((0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || false), true, false))))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false || ((false))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
     if((((((((injectionSwitch.x > injectionSwitch.y)) ? (- 2190.2059) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
  }
 if((! (! ((false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if((false))
    return;
   if((false))
    {
     if(((! (! (false)))))
      return;
     barrier();
    }
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], (mix(float((- 8.2)), float(injectionSwitch[1]), bool(true))))).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   if((bool(bvec3((false), false, true))))
    barrier();
   if((((! (! (bool(bool((! (! (false)))))))))))
    barrier();
   if((((bool(bvec2(((((vec2(1.0, 1.0) * ((mix(vec2((- 8380.1781), (- 5.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, (false || (true))))))).x > injectionSwitch.y)) && true), false))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((! (! ((false))))) && true))
          barrier();
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((false))
      {
       if(((! (! (false)))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((bool(bool((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if((((((((injectionSwitch.x > injectionSwitch.y) && true)) || false)))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((((mix(float((- 812.921)), float(injectionSwitch.x), bool(((injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  return;
 if((((((max((injectionSwitch.x), (injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  {
   if((false || ((! (! ((false)))))))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if(((bool((bvec3(bvec4(bvec3((bool(bvec4(false, true, true, false))), true, false), true)))))))
    return;
   if((false))
    return;
   barrier();
  }
 if(((bool(bvec3((bool(bvec2(false, false))), true, false)))))
  {
   if((((((false ? (539.594) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       if(((! (bool(bvec3((((! (false))) || false), false, false))))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   barrier();
   if(((((bool(bvec3(bool(bvec3((bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, true)), true, false)))))))
    barrier();
  }
 if((((((mix(float(mix(float((394.274)), float(injectionSwitch.x), bool((((! (! (injectionSwitch.x < injectionSwitch.y)))))))), float((- 7.6)), bool(false)))) > ((injectionSwitch) / ((vec2(1.0, 1.0)) / vec2(1.0, 1.0))).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
 if(((((min((float((transpose(transpose(mat4(injectionSwitch.x, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0)))))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((false || ((! (! (((clamp(injectionSwitch, (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 8.8), (59.69)), bvec2(false, ((injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y)))))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
