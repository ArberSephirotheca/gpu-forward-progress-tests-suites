#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (max(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = (uint((max((injectionSwitch.x), (injectionSwitch.x)))) | ((~ (~ (((true ? workgroup_size * ((false ? (workgroup_size) : workgroup_id)) : (atomicCompSwap(subgroup_size, subgroup_id, subgroup_id)))))))));
 uint virtual_gid = ((clamp(((~ (((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / 1u))) | ((0u ^ (((false ? (workgroup_size) : ((((workgroup_base + (((uint(uvec3((max(uint(uvec4(((clamp(subgroup_id * (uint(((max((uvec2(subgroup_size, 1u)), (uvec2(subgroup_size, 1u)))) | (uvec2(subgroup_size, (0u | (1u))))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u))) | 0u), 1u, 0u, 0u)), uint(uvec4(((clamp(subgroup_id * (uint(((max((uvec2(subgroup_size, 1u)), (uvec2(subgroup_size, (min(1u, 1u)))))) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u))) | 0u), 1u, 0u, 0u)))), 0u, 1u)))))) / 1u) + subgroup_local_id) >> (max(((max(136278u & 0u, 136278u & 0u))), (max(((max(136278u & 0u, 136278u & 0u))), ((max(136278u & 0u, 136278u & 0u))))))))))))), ((((~ (uint(uvec2((((((~ (workgroup_base + (0u + (subgroup_id * subgroup_size)) + subgroup_local_id))) / 1u)) << 0u), 1u))))) | 0u)) | (((false ? (workgroup_size) : (((min(((workgroup_base + ((uint(uvec4((clamp(clamp(subgroup_id * (uint(((uvec2((max(subgroup_size, subgroup_size)), 1u)) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)), clamp(subgroup_id * (uint(((uvec2((max(subgroup_size, subgroup_size)), 1u)) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)), clamp(subgroup_id * (uint(((uvec2((max(subgroup_size, subgroup_size)), 1u)) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)))), 1u, 1u, 1u))))) / ((true ? 1u : (((workgroup_size) << (1u ^ 1u)))))), ((workgroup_base + ((uint(uvec4((clamp(clamp(subgroup_id * (uint(((uvec2((max(subgroup_size, subgroup_size)), 1u)) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)), clamp(subgroup_id * (uint(((uvec2((max(subgroup_size, subgroup_size)), 1u)) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)), clamp(subgroup_id * (uint(((uvec2((max(subgroup_size, subgroup_size)), 1u)) | (uvec2(subgroup_size, 1u))))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)))), 1u, 1u, 1u))))) / ((true ? 1u : (((workgroup_size) << (1u ^ 1u)))))))) + (max(subgroup_local_id, ((subgroup_local_id) + 0u)))) >> (((1u * ((min((((uint(uint((((true ? 136278u : (packHalf2x16(injectionSwitch))))) | 0u)))) / 1u), (uint(uint((((true ? 136278u : (packHalf2x16(injectionSwitch))))) | 0u)))))))) & 0u))))), ((((~ (~ (workgroup_base + subgroup_id * (min(subgroup_size, subgroup_size)) + subgroup_local_id)))) | (((false ? (workgroup_size) : (((0u ^ (((workgroup_base + (clamp((((((max(subgroup_id, subgroup_id)) * (uint((((max(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)))) | (((uvec2(subgroup_size, 1u)) >> uvec2((injectionSwitch.x), (injectionSwitch.x)))))))) - 0u)) / ((uint((injectionSwitch.y)) << (uint(1u))) >> (uint(1u)))), subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) << 0u)))) / 1u) + subgroup_local_id))) >> (136278u & 0u)))))) ^ 0u))));
 uint next_virtual_gid = ((((true ? (uint(uvec4(workgroup_base, (clamp(0u, 0u, (max(0u, 0u)))), 1u, 0u))) : (((165098u) | (((165098u)) / 1u))))) + ((subgroup_id * subgroup_size) * ((0u ^ (0u)) | ((min(1u, 1u))))) + (((((max(((subgroup_local_id + ((0 >> (int((0 | (3))))) + ((((((1 << (int(7))) >> (int(7))) * (1))) | 0)))) - 0u), (clamp(subgroup_local_id + ((0 >> (int((0 | (3))))) + ((((((1 << (int(7))) >> (int(7))) * (1))) | 0))), subgroup_local_id + ((0 >> (int((0 | (3))))) + ((((((1 << (int(7))) >> (int(7))) * (1))) | 0))), subgroup_local_id + ((0 >> (int((0 | (3))))) + ((((((1 << (int(7))) >> (int(7))) * (1))) | 0)))))))) % subgroup_size)) / 1u)) >> 0u);
 (((uint((injectionSwitch.x)) | (((((((((injectionSwitch.x < injectionSwitch.y)) ? ((buf[virtual_gid] = 1) - (clamp(0u, (1u * (0u)), ((0u) | ((1u * (0u))))))) : ((workgroup_base)))))) * 1u) | 0u)))) << 0u);
 buf[next_virtual_gid] = (((max(2, 2)) - 0));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
