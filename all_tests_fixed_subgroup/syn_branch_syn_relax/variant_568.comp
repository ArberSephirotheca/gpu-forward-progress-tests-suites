#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(uvec3(191763u, 127375u, 33605u)) : gl_NumWorkGroups)).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u), ((_GLF_IDENTITY((gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, min(0u, 0u)), ((gl_NumWorkGroups.x) + 0u) >> 0u))) << 0u) | ((gl_NumWorkGroups.x) + 0u)), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, clamp((gl_NumWorkGroups.x) + 0u, (gl_NumWorkGroups.x) + 0u, (gl_NumWorkGroups.x) + 0u))), ((_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, ((gl_NumWorkGroups.x) + 0u) >> 0u))) << 0u) | ((gl_NumWorkGroups.x) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u), ((_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u) >> 0u, (_GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u) >> 0u, 0u ^ (((gl_NumWorkGroups.x) + 0u) >> 0u))) / (1u & 1u))))) << 0u) | ((gl_NumWorkGroups.x) + 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u), ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, ((gl_NumWorkGroups.x) + 0u) >> 0u), (_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, ((gl_NumWorkGroups.x) + 0u) >> 0u)) | 0u))) << 0u) | ((gl_NumWorkGroups.x) + 0u))), (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u), ((_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, ((gl_NumWorkGroups.x) + 0u) >> 0u))) << 0u) | _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u), ~ (~ (((gl_NumWorkGroups.x) + 0u))))))) / 1u))), _GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) + 0u), ((_GLF_IDENTITY((gl_NumWorkGroups.x) + 0u, ((gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) >> 0u))) << 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) + 0u)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), true && (_GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true && (true)), bool(bvec2(! (true && (true)), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (true && (true)), bool(bvec2(! (true && (true)), false))), false, false), true))))))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(true && (true), true)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec2(true && (true), true)), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bool(bvec2(true && (true), true)), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(8.5, (8.5) - sqrt(0.0))))) < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (false) && true)) || false)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true))))))), (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))))))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, false, true)))))))))), true && (_GLF_DEAD(false))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         barrier();
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
      }
    }
  }
 do
  {
   GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.x = num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(183120u) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(183120u) : gl_WorkGroupSize.x) ^ 0u), 0u ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(183120u) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(183120u) : gl_WorkGroupSize.x) ^ 0u)))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    return;
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ~ (~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base))).y + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u)) | 0u, min((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u)) | 0u, (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u)) | 0u))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false || (false), false || (false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ uvec2(0u, 0u))) | (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base)).y + subgroup_id * subgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_id * subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, min(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u) + (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base), (uvec2(0u, 0u) + (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base)) | (uvec2(0u, 0u) + (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) + (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base), (uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, uvec2(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))], uint(uint(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[1]))))))) | (uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)) / 1u)), clamp(uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)), uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)))))))))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), max(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), max(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))))))), uvec2(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) + (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base), (uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, uvec2(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))], uint(uint(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[1]))))))) | (uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)) / 1u)), clamp(uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)), uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)))))))))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), max(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), max(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))))))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(0u, 0u) + (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base), (uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, uvec2(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))], uint(uint(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base[1]))))))) | (uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)) / 1u)), clamp(uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)), uvec3(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)))))))))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), max(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), max(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-70.81, 65.38))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))))))))))))))))).y + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), 0u + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_id * subgroup_size, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_id * subgroup_size) ^ (0u | 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1))) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)))) % subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, 0u + (0u)))) % subgroup_size)) * 1u)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) - 0u)) % subgroup_size)), (max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, 0u + (0u)))) % subgroup_size)) * 1u)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) - 0u)) % subgroup_size))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> 0u))) * (1u | 1u)), uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> 0u))) * (1u | 1u)), 1u, 1u, 1u)))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0)))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0)))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0)))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0)))), injectionSwitch)).y)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || false), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true)), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true))))))))) && true)) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y) && true)), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true)))))))))))) && true)) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sign(9.5)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true)), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(1.9, 54.26)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y) && true))))))))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sign(9.5)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true)), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(1.9, 54.26)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y) && true))))))))))) && true)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y)))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true)), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true))))))))) && true)) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (_GLF_FUZZED(injectionSwitch)), vec2(mat4x2(mat2(1.0) * (_GLF_FUZZED(injectionSwitch)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))).y) && true)), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9916.2033) : injectionSwitch.x)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 0.0))) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true))))))))) && true)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ _GLF_IDENTITY((~ (~ (buf[virtual_gid] = 1))), 1u * ((~ (~ (buf[virtual_gid] = 1)))))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_FUZZED(workgroup_id)))), 0u | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_FUZZED(workgroup_id))))))), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_FUZZED(workgroup_id)))), 0u | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))))))))), ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_FUZZED(workgroup_id)))), 0u | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = 1), ~ (~ (~ (buf[virtual_gid] = 1)))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))))) ^ 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 0), bool(bool(_injected_loop_counter != (1 ^ 0))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))) > injectionSwitch.y) && true)))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)), min(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(17.35)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)))))), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) + 0.0, _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0]) + 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (float(mat2x3((injectionSwitch[0]) + 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))) - 0.0))), injectionSwitch[1])).x)), 0.0))))))) > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true, true, false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), true, false, false))))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), false || (false || (_GLF_IDENTITY(false, (false) || false)))), true)))), bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           barrier();
          }
         return;
        }
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ _GLF_IDENTITY(0u, (0u) / 1u)), true && (subgroup_local_id + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) / 1)) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))) ^ _GLF_IDENTITY(0u, (0u) / 1u)))))
  {
   int i = 0;
   do
    {
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) ^ 0), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), ~ (~ (_GLF_IDENTITY(0, (0) >> 0)))), _GLF_IDENTITY(0, (0) >> 0))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) || false), bool(bvec4((false), false, false, true)))) && true))))), true && ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))))))))) && true)));
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(248.205, -27.17)))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (73763 & 0)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, clamp(5, 5, 5)))))), (int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, clamp(5, 5, 5))))))) << 0), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) | (5)))) / 1)))) - 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)), injectionSwitch.y))) || false), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), 1.0, 0.0)))))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(-720.837)))), 1.0, 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0), vec4(mat4(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-20.07), min(_GLF_FUZZED(-20.07), _GLF_FUZZED(-20.07))) : 1.0))), (mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), clamp(length(vec2(0.0, 0.0)), _GLF_IDENTITY(length(vec2(0.0, 0.0)), clamp(length(vec2(0.0, 0.0)), length(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), length(vec2(0.0, 0.0)))), length(vec2(0.0, 0.0)))), 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0), _GLF_IDENTITY((mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), 1.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), (mat3(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(973.716) : _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), length(vec2(0.0, 0.0)), 1.0)) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(mat4x3(_GLF_IDENTITY((0.0), 1.0 * ((0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, cos(0.0), abs(0.0), 0.0))) * 1.0), sqrt(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, tan(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mat2x3(mat3(mat2x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), sqrt(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(1.0, length(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false) ? _GLF_FUZZED(vec3(2.9, 646.930, -986.873)) : vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) : _GLF_FUZZED(1.1))), 0.0)))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))) * (0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y), _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))))) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, min((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(36.71))))))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))) || false), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, true, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, true, true))))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))) || false)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, log(1.0), abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)))) - tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))
            break;
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   for(int _injected_loop_counter = ((_GLF_IDENTITY(1 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 1)), 0 ^ (int(ivec3(4, 0, 1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 1)), 0 ^ (int(ivec3(4, 0, 1)))), int(ivec2(_GLF_IDENTITY(int(ivec3(4, 0, 1)), 0 ^ (int(ivec3(4, 0, 1)))), 1))) : _GLF_FUZZED(-79191))), 0))))), int(4))) >> _GLF_IDENTITY(int(4), int(4)), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((~ -32979)) : 4))))))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(31626) : int(4))))))) >> _GLF_IDENTITY(int(4), int(4)), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(0, (0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) & -65155))) | (int(4))), int(_GLF_IDENTITY(4, ~ (~ (4)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-81836))), int(4)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-94415))))), min(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-94415))))), 1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-94415)))))))) >> _GLF_IDENTITY(int(4), int(4))))))), min(_GLF_IDENTITY(1 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) : _GLF_FUZZED(10649)))) | 0) | (_GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(int(4), int(4)))) >> 0)))), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), ~ (~ (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(4), int(4))) ^ (int(4))), int(4))))), 1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), _GLF_IDENTITY((1 ^ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)), max(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-29829) : 4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, (_GLF_IDENTITY((int(4)) - 0, 0 | ((int(4)) - 0))) ^ 0))))))) | 0, ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (0 | 0) | (1)))) ^ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * 1, clamp((int(4)) * 1, _GLF_IDENTITY((int(4)) * 1, max((int(4)) * 1, (int(4)) * 1)), (int(4)) * 1)))), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(int(4), int(4)))))) | 0) - 0)), _GLF_IDENTITY(1 ^ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(36.37, -95.48)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9235, _GLF_IDENTITY(int(int(9235)), (int(int(9235))) | (int(int(9235))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9235, max(9235, 9235)), _GLF_IDENTITY(0, (0) ^ 0) ^ (_GLF_IDENTITY(9235, (9235) | (9235)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (_GLF_IDENTITY(9235, (9235) << (0 ^ 0)))))), ~ (~ (_GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (_GLF_IDENTITY(9235, (9235) << (0 ^ 0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(9235, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(9235, (9235) | (9235))), 0 ^ (0 ^ (_GLF_IDENTITY(9235, (9235) | (9235)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-65555, clamp(-65555, -65555, -65555))) : _GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (9235)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (9235)))), int(int(_GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (9235))))))), (_GLF_IDENTITY(_GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (9235)))), int(int(_GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, (9235) | (9235)))))))) << 0), _GLF_IDENTITY(9235, 0 ^ (_GLF_IDENTITY(9235, _GLF_IDENTITY((9235) | (9235), ((9235) | (9235)) | ((9235) | (9235)))))))))))) - 0)) : 1 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))), (clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))) << 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0) : _GLF_FUZZED(62609))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))))) | 0))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 + (4)), 4))), int(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), 0 | (int(ivec3(4, 1, 1))))))))), min(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 + (4)), 4))), int(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), 0 | (int(ivec3(4, 1, 1))))))))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 + (4)), 4))), int(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), 0 | (int(ivec3(4, 1, 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-88702, min(-88702, _GLF_IDENTITY(-88702, (-88702) | (-88702))))) : 1 << _GLF_IDENTITY(int(4), int(4)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (true ? int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1))) : _GLF_FUZZED(-48235)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(4)), 1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(5), int(5)))))))))))))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), clamp(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), ~ (~ (int(4))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(4), int(4)), max(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) + 0))))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(4), int(4)), max(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) + 0)))))))))) >> 0)))))) * 1) >> _GLF_IDENTITY(int(4), int(4)))))))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) << 0)) - 0))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, 0 ^ (1)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) & 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
    }
  }
}
