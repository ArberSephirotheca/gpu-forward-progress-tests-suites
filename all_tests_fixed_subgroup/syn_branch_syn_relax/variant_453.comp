#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 mat3x2 _f0;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 vec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 uvec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 mat4x3 _f5;
 uint subgroup_size;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 vec2 _f1;
 mat3x4 _f2;
 uvec4 _f3;
 bvec3 _f4;
 mat2 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat3 _f1;
 uint _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 ivec2 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 vec4 _f1;
 bool _f2;
 uint workgroup_base;
 mat4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 int _f0;
 float _f1;
 mat4x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 _GLF_struct_1 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 vec3 _f1;
 mat2x3 _f2;
 ivec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 uint workgroup_id;
 _GLF_struct_0 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 mat3x4 _f4;
 _GLF_struct_2 _f5;
 mat3x2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y = subgroup_id;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(vec4(1.0), vec2(1.0), mat3x4(1.0), uvec4(1u), bvec3(true), mat2(1.0), _GLF_struct_13(_GLF_struct_7(mat4x2(1.0), uvec2(1u), vec4(1.0)), _GLF_struct_8(uvec2(1u), uvec2(1u)), _GLF_struct_9(mat2(1.0)), _GLF_struct_10(vec3(1.0), vec3(1.0), ivec3(1)), _GLF_struct_11(mat3x2(1.0), ivec4(1)), mat4x3(1.0), gl_SubgroupSize, _GLF_struct_12(mat3x2(1.0))));
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z = _GLF_struct_replacement_14._f6.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2x4(1.0), gl_WorkGroupID.x, _GLF_struct_0(uvec2(1u), vec3(1.0), mat2x3(1.0), ivec2(1), uvec2(1u)), mat2x4(1.0), mat4x3(1.0), mat3x4(1.0), _GLF_struct_2(uvec4(1u), _GLF_struct_1(1, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0)))), mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec4(true)), bvec4(true)), mat3x2(1.0));
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(mat4x3(1.0), ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(53376)))), _GLF_struct_4(mat3(1.0), mat3(1.0), 1u, mat3x2(1.0))), vec4(1.0), true, workgroup_size * _GLF_struct_replacement_3.workgroup_id, mat4(1.0), ivec4(1));
 uint virtual_gid = _GLF_struct_replacement_6.workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_6.workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z + ((subgroup_local_id + 1) % GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z);
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x = next_virtual_gid;
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z)
  {
   int i = _GLF_IDENTITY(0, (0) + int(_GLF_ZERO(0.0, injectionSwitch.x)));
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x], uint(2), 4, 64, 0);
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x], uint(2), 4, 64, 0);
  }
}
