#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) && true))) && true, false || (_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), (((false))) && true), ! (! (! ((false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), (((false))) && true), ! (! (! ((false))))))) && true)) || false)) || false)) && true)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), false)))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), true, true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), (false ? _GLF_FUZZED(vec2(60.72, 11.89)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min((1 << _GLF_IDENTITY(int(2), int(2))), (1 << _GLF_IDENTITY(int(2), int(2))))), (1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(int(1))), 0, 0)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, false))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 | 0)) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) && true))))), (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))) || false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(403.873) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-13.18) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (false))))
    return;
   return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1202.0575), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(90.17)), bvec2(true, false))))))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) ^ (int(6)))))), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))))))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch * injectionSwitch)))).x > injectionSwitch.y))))
      return;
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) ^ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))) | (gl_WorkGroupID))))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))))))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))))))) + uvec3(0u, 0u, 0u)))).x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)))[0]) / 1.0), _GLF_FUZZED(255.018)), vec2(_GLF_FUZZED(3.4), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-13.93), _GLF_FUZZED(-2072.9159)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(6.4))), (injectionSwitch)[1]), bvec2(true, true)))), vec2(0.0, 0.0) + (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-13.93), _GLF_FUZZED(-2072.9159)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(6.4))), (injectionSwitch)[1]), bvec2(true, true))))))).y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true, ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y, injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(injectionSwitch.y, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), (1 & 1), (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1 & 1)), ~ (~ ((~ (1 & 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (1 & 1)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 1), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)), max((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) << 0, 1 * ((_injected_loop_counter) << 0)))), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) << 0))) | (_injected_loop_counter)) != (1 ^ 1)) && true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))) || _GLF_IDENTITY(((_injected_loop_counter != (1 ^ 1)) && true), bool(bool(_GLF_IDENTITY(((_injected_loop_counter != (1 ^ 1)) && true), _GLF_IDENTITY(bool(bvec3(((_injected_loop_counter != (1 ^ 1)) && true), false, true)), ! (! (bool(bvec3(((_injected_loop_counter != (1 ^ 1)) && true), false, true)))))))))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) << 0)), (~ (_injected_loop_counter --)) * (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), (false ? _GLF_FUZZED(-52199) : _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) | 0)), 1 * ((_GLF_IDENTITY(int(6), (int(6)) | 0)))) ^ (0 & 95725)))))), (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-52199) : _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | 0)) ^ (0 & 95725))))))) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-52199) : _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | 0)) ^ (0 & 95725)))))))) | 0, int(int(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), (false ? _GLF_FUZZED(-52199) : _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) | 0)), 1 * ((_GLF_IDENTITY(int(6), (int(6)) | 0)))) ^ (0 & 95725)))))), (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-52199) : _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | 0)) ^ (0 & 95725))))))) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-52199) : _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | 0)) ^ (0 & 95725)))))))) | 0))))), (true ? _GLF_IDENTITY(~ (_injected_loop_counter --), (0 | 0) ^ (~ (_injected_loop_counter --))) : _GLF_FUZZED(_injected_loop_counter)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) >> uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) >> uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) >> uvec3(0u, 0u, 0u)))) / 1u), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) >> uvec3(0u, 0u, 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0), transpose(transpose(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0)))))), mat2(1.0) * (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0), transpose(transpose(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0))))))))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0), transpose(transpose(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0)))))), mat2(1.0) * (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0), transpose(transpose(mat4x3((false ? _GLF_FUZZED(vec2(7938.4617, 874.928)) : injectionSwitch), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, sqrt(1.0), 1.0))))))))).x, determinant(mat4(1.0, 0.0, 0.0, sqrt(0.0), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.08) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.08) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), clamp(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))).y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), clamp(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))).y))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.w * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_IDENTITY(_GLF_FUZZED(34804), (_GLF_FUZZED(34804)) | 0) : _injected_loop_counter)))), _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), true, false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false))))
          barrier();
         continue;
        }
      }
     GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), true, true, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), true, true, _GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))) || false))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         do
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> 0)) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 1, 0 ^ (1 ^ 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))) - 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, 0u)))))) - 0u) / 1u)) + subgroup_local_id, 1u * (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) / 1) ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)) || _GLF_IDENTITY(false, ! (! (false)))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(6339.8329), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), ((true)) || false))))).y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0)))))], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(6339.8329), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(true, false || (true))))).y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(167.987)), (vec2((injectionSwitch)[0], _GLF_FUZZED(167.987))) * mat2(1.0)), vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))) || false)))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || ((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) && true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || ((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) && true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))), false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(! (bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || ((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) && true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))))), false))))))))) && true))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
         else
          {
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (((_GLF_IDENTITY(-38860, ~ (_GLF_IDENTITY(~ (-38860), clamp(~ (-38860), ~ (-38860), ~ (-38860))))) & 0) >> _GLF_IDENTITY(int(7), int(7))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec3(false, true, false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec2(0, 1))))))) + 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec2(0, 1))))))) + 0))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec2(0, 1))))))) + 0)))) ^ 0)) ^ 0) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, min(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)), _GLF_IDENTITY(max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y), max(max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y), max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)))), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), clamp((~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))))), (~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))))) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u), clamp((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))) << uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size), (uvec4(1u, 1u, 1u, 1u) & uvec4(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u, 1u)) * ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u)))))) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)), min(uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)), (true ? uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)) : _GLF_FUZZED(uvec4(142005u, 3489u, 83678u, 22213u)))))))).y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y) - 0u), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))))) + 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED((143844u | uvec4(146529u, 157187u, 158705u, 192356u))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)))).y), (false ? _GLF_FUZZED(137964u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size), ~ (_GLF_IDENTITY(~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (true ? ~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)) : _GLF_FUZZED(uvec4(190018u, 72580u, 104245u, 139089u))))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) << uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)))).y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size), ~ (_GLF_IDENTITY(~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (true ? ~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)) : _GLF_FUZZED(uvec4(190018u, 72580u, 104245u, 139089u))))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) << uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)))).y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))) + 0u), uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size), ~ (_GLF_IDENTITY(~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (true ? ~ ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)) : _GLF_FUZZED(uvec4(190018u, 72580u, 104245u, 139089u))))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) << uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)))).y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))) + 0u))))) | 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))), (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(14604u) : (subgroup_local_id + 1))), (subgroup_local_id + 1)))) | 0u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))))) | 0u))), (true ? uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED((subgroup_id / virtual_gid)), 0u ^ (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))))) | 0u))), (true ? uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED((subgroup_id / virtual_gid))))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(14548u, 27776u, 60172u, 5009u)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (true ? GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) + uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((min(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, workgroup_size) - (uvec4(159841u, 175353u, 97202u, 49565u) & subgroup_size))) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 1u)))))) + uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)))) - (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(8u), uvec4(8u)))))))), (false ? _GLF_FUZZED((143844u | uvec4(146529u, 157187u, 158705u, 192356u))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) >> uvec4(0u, 0u, 0u, 0u)))) + uvec4(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u, 0u)))).y), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)), (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u), ((GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(3u, min(3u, 3u))), uvec4(3u)))) - uvec4(0u, 0u, 0u, 0u))).y, max(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)))), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))))), 0u + (0u ^ (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y)))))))))), subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y))) + 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uint(uint(uint(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(143844u, ~ (_GLF_IDENTITY(~ (143844u), (~ (143844u)) >> 0u))) | uvec4(_GLF_IDENTITY(146529u, (146529u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 157187u, 158705u, 192356u))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), min(false ? _GLF_FUZZED((_GLF_IDENTITY(143844u, ~ (_GLF_IDENTITY(~ (143844u), (~ (143844u)) >> 0u))) | uvec4(_GLF_IDENTITY(146529u, (146529u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 157187u, 158705u, 192356u))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)), false ? _GLF_FUZZED((_GLF_IDENTITY(143844u, ~ (_GLF_IDENTITY(~ (143844u), (~ (143844u)) >> 0u))) | uvec4(_GLF_IDENTITY(146529u, (146529u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 157187u, 158705u, 192356u))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u)))))).y)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), true, true))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))) || false, true), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), true, true))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))) || false, true), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), true, true))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))) || false, true), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), true, true))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))) || false, true), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), true, true))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))) || false, bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))) || false, true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))) || false, true), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), int(4))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))), int(1)))); _injected_loop_counter --)
        {
         return;
        }
      }
     break;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY((false), ((false)) && true) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    break;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : next_virtual_gid));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true)))))) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false), true))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false), true))))), true && (bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false), true))))))))))))))
  barrier();
 buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))) || false)))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       return;
      }
    }
   else
    {
    }
   if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, (0u) / 1u)) ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)))))).y)
    {
     int i = 0;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((true ? uint(2) : _GLF_FUZZED(154118u)), max((true ? uint(2) : _GLF_FUZZED(154118u)), (true ? uint(2) : _GLF_FUZZED(154118u))))), 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-980.852 * -3.1))), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-980.852 * -3.1))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-980.852 * -3.1))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-980.852 * -3.1))), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-980.852 * -3.1))), bool(false)))), float(_GLF_FUZZED(-6793.3523)), bool(false))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-33.49, -40.98)))), 1.0, 1.0)))) * mat2(1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(7012.2528))))), (injectionSwitch) * mat2(1.0)).y))))))) || false)) && true) || false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-163.173) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec4(bool(bvec3(true, false, false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2292.8174))))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        barrier();
       return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x))))], uint(2), 4, 64, 4);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(-760.135, 94.12)))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (42288 & 0)); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
