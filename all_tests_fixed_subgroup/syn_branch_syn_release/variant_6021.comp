#version 460
struct _GLF_struct_4 {
 vec2 _f0;
 vec4 _f1;
 bool _f2;
 vec2 _f3;
 mat2x3 _f4;
 vec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat3 _f1;
 vec4 _f2;
 mat4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 uint next_virtual_gid;
 bvec3 _f1;
 mat2x4 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 mat2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 mat4x2 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_5 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(uvec4(1u), mat4x2(1.0), _GLF_struct_2(_GLF_struct_0(uvec2(1u), mat4x3(1.0), ivec4(1), mat2(1.0), mat3x2(1.0)), vec2(1.0), _GLF_struct_1(bvec2(true), ivec4(1)), mat3x4(1.0)), _GLF_struct_5(mat3(1.0), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), bvec3(true), mat2x4(1.0), _GLF_struct_3(1.0, mat3(1.0), vec4(1.0), mat4(1.0), vec4(1.0)), _GLF_struct_4(vec2(1.0), vec4(1.0), true, vec2(1.0), mat2x3(1.0), vec4(1.0), bvec3(true))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[_GLF_struct_replacement_6._f3.next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_6._f3.next_virtual_gid], uint(2), 4, 64, 4);
  }
}
