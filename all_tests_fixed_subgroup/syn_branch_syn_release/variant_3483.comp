#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uint _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 mat2 _f2;
 mat2x3 _f3;
 _GLF_struct_1 _f4;
 vec2 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 uint subgroup_size;
 _GLF_struct_3 _f0;
 ivec2 _f1;
 mat4x2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_SubgroupSize, _GLF_struct_3(_GLF_struct_0(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(_GLF_FUZZED(2.5)), float(max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), bool(true))))), ivec4(1), mat4x2(1.0), bvec2(true), mat4x2(1.0)), mat4x3(1.0), mat2(1.0), mat2x3(1.0), _GLF_struct_1(mat3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, cos(0.0), cos(0.0), 1.0, 1.0, sin(0.0))))), mat4x3(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat3x2(vec4(1.0), tan(length(0.0)), 0.0))), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(899.472))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))))), 1.0), min(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-138.164, 0.0 + (-138.164))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 1.0)) : _GLF_FUZZED(-138.164))))), 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))))), 1.0), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true) ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-749.855), _GLF_FUZZED((9.7 * 9019.3837))), bvec2(false, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(61.69) : 1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(-138.164), float(mat4x2(_GLF_FUZZED(-138.164), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), 1.0), max(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))))), clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(59.81), min(_GLF_FUZZED(59.81), _GLF_FUZZED(59.81))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))))))), 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))))), 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))))), 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(59.81) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-138.164))))), 1.0)))))))), vec2(1.0), _GLF_struct_2(1u, mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(false))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))))))), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true)))))))))), false || (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))))))))))))) || false), (_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true)))))))))), false || (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))))))))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true)))))))))), false || (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))))))))))))) || false, ! (! ((_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true)))))))))), false || (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))))))))))))) || false)))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true)))))))))), false || (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))))))))))))) || false, ! (! ((_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true)))))))))), false || (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec2(bvec2(bool(bvec2(true, true)), true))))))))))))))) || false)))), false, true))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true)))))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))), ! (! (((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true)), (bool(bvec2(true, true))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))))) || false))) ? 1.0 : _GLF_FUZZED(-8615.4761)))))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(64379)))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), mat4x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), (0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), (0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), (0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), (0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), (0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), (0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1))]) ^ 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | 0)])).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u);
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, tan(0.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(89.80)), float(tan(0.0)), bool(true))))), mix(float(float(mat4x2(float(injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(89.80)), float(tan(0.0)), bool(true)))))), float(_GLF_FUZZED(5183.9922)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(89.80)), float(tan(0.0)), bool(true))))), mix(float(float(mat4x2(float(injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(89.80)), float(tan(0.0)), bool(true)))))), float(_GLF_FUZZED(5183.9922)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(89.80)), float(tan(0.0)), bool(true))))), mix(float(float(mat4x2(float(injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(89.80)), float(tan(0.0)), bool(true)))))), float(_GLF_FUZZED(5183.9922)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) / 1.0)) - 0.0)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u)))))) - 0u, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) + 0u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) + 0u)) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), (subgroup_id) + 0u)) - 0u, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) + 0u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)), 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) + 0u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)), 0u, 1u))), 1u * ((uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) + 0u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)), 0u, 1u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - _GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) + 0u)) - _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), 0u, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0))))) - 0u))))) * _GLF_struct_replacement_4.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), ((0u | 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))))) << 0u), ~ (~ (workgroup_base))) + subgroup_id * _GLF_struct_replacement_4.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))))), (_GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u)))), max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))))))))))), (subgroup_local_id + 1))))))) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec4((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))), min(((subgroup_local_id + 1)), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))))), (_GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1))))))))) | 0u)) / 1u, 1u, 1u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec4((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))), min(((subgroup_local_id + 1)), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))))), (_GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1))))))))) | 0u)) / 1u, 1u, 1u, 1u)), (false ? _GLF_FUZZED(91458u) : uint(uvec4((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))), min(((subgroup_local_id + 1)), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))))), (_GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (~ (uint(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))))), (subgroup_local_id + 1))))))))) | 0u)) / 1u, 1u, 1u, 1u)))))))))) % _GLF_struct_replacement_4.subgroup_size);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-84701 & 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ _GLF_IDENTITY(0, (0) | (0)))) / 1), (1 ^ 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0))))), int(_GLF_IDENTITY(int((0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))))), int(ivec4(int((0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) << (0 << _GLF_IDENTITY(int(2), int(2)))))), int(_GLF_IDENTITY(ivec4(int(4), 1, 0, 0), ~ (~ (ivec4(int(4), 1, 0, 0))))))))), 0, 1, 0)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
            barrier();
          }
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ (buf[virtual_gid] = 1)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(960.039) : injectionSwitch.y)))))) || false)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false)), true))))), false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))) && true), true))))), false, false, false))), false || (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))) && true), true))))), false, false, false)))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(-40.49, 757.791, 82.78, -40.96, 8.2, 8.9, 2.4, -770.360, 57.84)))))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false), bool(bool(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))))), true))))), false, false, false)))), true && (bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_IDENTITY(true, (true) || false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_IDENTITY(true, (true) || false)), true), false)))))))))), false, false, false))))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_size, (true ? _GLF_struct_replacement_4.subgroup_size : _GLF_FUZZED(virtual_gid))), 0u + (_GLF_struct_replacement_4.subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(max(vec2(-2.6, 2757.8189), injectionSwitch), 90.95, -6.5)))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(42434) : 0)), 0))) | (0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY((false ? _GLF_FUZZED(22179) : 5), (true ? (false ? _GLF_FUZZED(22179) : 5) : _GLF_FUZZED(50859))))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), max(int(5), int(5)))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), max(int(5), int(5))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0)))))) | 0) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log2(3.9)))), 1.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), 1.0, 1.0, abs(1.0), 1.0, 1.0)))))), injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), 1.0, 1.0, abs(1.0), 1.0, 1.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0)))))), injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-3573.0006, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-3573.0006, (-3573.0006) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec4(_GLF_IDENTITY(-3573.0006, (-3573.0006) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(_GLF_IDENTITY(-3573.0006, (-3573.0006) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(-1.8) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-3573.0006, (-3573.0006) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec4(_GLF_IDENTITY(-3573.0006, (-3573.0006) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(_GLF_IDENTITY(-3573.0006, (-3573.0006) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))), bool(false))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), 1.0, 1.0, abs(1.0), 1.0, 1.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3573.0006)), bool(false))), 1.0, 1.0, abs(1.0), 1.0, 1.0)))))), injectionSwitch.y))))), false, true, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), false, true))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! ((! (_GLF_IDENTITY(false, (false) || false)))))))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! ((! (_GLF_IDENTITY(false, (false) || false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.2, -542.817)))).y))))
    barrier();
  }
}
