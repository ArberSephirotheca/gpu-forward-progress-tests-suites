#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-74.59) : injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, true)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)) || false), ! (! (! (false)))))))) || false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))) >> 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))) >> 0u)) >> 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))) >> 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))) >> _GLF_IDENTITY(0u, max(0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID))) * uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u)).x) + 0u);
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))) | (workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1)))))), _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u & 29809u)) + 1))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))), (~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))))))) | (~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))))), (subgroup_local_id + 1)), (max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))), (~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 1u)))))) ^ 0u) + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (subgroup_local_id + 1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), min(~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))))))), (subgroup_local_id + 1))) | (max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))))), (~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * (1))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))) | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) ^ 0u)))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec2(bvec2(! (false), true))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) * 1)));
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((1), min((1), (1))) << (0 >> _GLF_IDENTITY(int(6), int(6)))) * 1)), (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - _GLF_IDENTITY(0, (0) << 0)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, 0 ^ (6))) << 0), (6) | 0)))), ~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - _GLF_IDENTITY(0, (0) << 0)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, 0 ^ (6))) << 0), (6) | 0))))))))) | 0) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(9084.7434)), bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), min(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), min(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), min(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), min(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), min(float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), float(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]))))))))))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], injectionSwitch[1])))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-3600.7653)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0)))[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])), 1.0, 0.0))) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec4(8, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), 0 | ((0 >> _GLF_IDENTITY(int(4), int(4))))), 1, 0), ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0), ((0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)) | (_GLF_IDENTITY((0), ((0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0)) | 0)) ^ (ivec4(8, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0))), 0 + (~ ((false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0))))))))) << 0)), 1, _GLF_IDENTITY(0, (0) ^ 0))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))), min(_GLF_IDENTITY(ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))), _GLF_IDENTITY(ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)))))))), (int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, ~ (~ (8)))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, int(int(8))), (false ? _GLF_FUZZED(15030) : _GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), int(int(max(8, 8))))))))), (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0), min(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))) ^ (ivec4(8, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), int(4))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), int(4)))) ^ 0), 1, 0))))))) | 0)) | (int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(8, 0 + (_GLF_IDENTITY(8, (8) | 0))), (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(i), int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(i), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), min(ivec3(_GLF_FUZZED(i), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ivec3(_GLF_FUZZED(i), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))) : 4))), int(4), int(4))))), 1, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), int(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) << 0)))), 1, 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)), _GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), clamp((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)), _GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), clamp((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)), _GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), clamp((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x))))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)), _GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0), 1.0, 0.0, 0.0, 0.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), clamp((ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) - 0)) | (int(4)))) | (_GLF_IDENTITY(int(4), (int(4)) / 1))), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))).x)), (ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (ivec4(8, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(15.29)), bool(false))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-681.235)), float(0.0), bool(true)))))), 0.0))), 1.0, 1.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), tan(0.0), 0.0))), 1.0, 1.0, 0.0)), (vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, sin(0.0)), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), tan(0.0), 0.0))), 1.0, 1.0, 0.0))) / vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(835.497, -9304.5258))))).x)))))) * ivec4(1, 1, 1, 1))) * ivec4(1, 1, 1, 1))) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ (ivec4(8, (0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(1, (1) >> 0), 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0) ^ (ivec4(8, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0), (false ? _GLF_FUZZED(-51146) : _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), clamp(0 >> _GLF_IDENTITY(int(4), int(4)), 0 >> _GLF_IDENTITY(int(4), int(4)), 0 >> _GLF_IDENTITY(int(4), int(4))))))), 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))))), (ivec4(0, _GLF_IDENTITY(0, max(0, 0)), 0, 0) ^ (ivec4(8, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), int(4)), max(0 >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), 0 + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), int(4))))))), 1, 0))) * ivec4(1, 1, 1, 1)))))))))))) | (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), max((4), (4))), (4)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(64, 0, 1), ivec3(ivec4(ivec3(64, 0, 1), 0))))), ~ (_GLF_IDENTITY(~ (64), ~ (_GLF_IDENTITY(~ (~ (64)), _GLF_IDENTITY((~ (~ (64))), clamp((~ (~ (64))), (~ (~ (64))), (~ (~ (64))))) ^ 0))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, exp(0.0), cos(0.0), length(log(vec4(1.0, 1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 1.0))).y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false)))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(false)) && true)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), true))), false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), true && ((false))), false, true)), false || (bool(bvec3(! (false), false, true)))))))), true)))))))), _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true)))))))), bool(bool(bool(bvec4(! (! (false)), false, false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)))))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(false || (bool(bvec3(! (false), false, true))), true && (false || (bool(bvec3(! (false), false, true)))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(false || (bool(bvec3(! (false), false, true))), true && (false || (bool(bvec3(! (false), false, true)))))))))), true))), false, false)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true)), bool(bool(bool(bvec4(! (! (false)), false, _GLF_IDENTITY(false, true && (false)), true)))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
}
