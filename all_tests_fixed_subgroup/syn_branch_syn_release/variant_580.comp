#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, (0u ^ 1u)), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_base, (0u ^ 1u)), (uvec2(workgroup_base, (0u ^ 1u))) - uvec2(0u, 0u))))))))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, (0u ^ 1u)), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_base, (0u ^ 1u)), (uvec2(workgroup_base, (0u ^ 1u))) - uvec2(0u, 0u))))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, (0u ^ 1u)), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_base, (0u ^ 1u)), (uvec2(workgroup_base, (0u ^ 1u))) - uvec2(0u, 0u))))))))))), (workgroup_base) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), clamp(~ (subgroup_id), ~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | 0u)))))), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), exp(0.0) * (float(_GLF_IDENTITY(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))))), (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), clamp(~ (subgroup_id), ~ (subgroup_id), ~ (subgroup_id))))), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(136143u, ~ (~ (_GLF_IDENTITY(136143u, _GLF_IDENTITY((136143u), ~ (~ _GLF_IDENTITY(((136143u)), (((136143u))) | (((136143u)))))) | 0u))))) : subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? workgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | 0u)) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   buf[virtual_gid] = 1;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97539))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(-89959, (-89959) | (_GLF_IDENTITY(-89959, ~ (~ (_GLF_IDENTITY(-89959, int(ivec4(-89959, 0, 1, 0)))))))) & _GLF_IDENTITY(0, (0) | 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) | 0)))) << 0)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1)))) < subgroup_size) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0)))), (0 | 0) | (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0)))), max(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0)))), (0 ^ (_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0))))) | (0 ^ (_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0))), 0 | (_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), (int(0)) - 0))))))))))), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_GLF_IDENTITY(i, (0 << _GLF_IDENTITY(int(1), int(1))) + (i))) : int(0))), ~ (~ (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_GLF_IDENTITY(i, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), int(1))) + (i))) : int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0))), (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0)))) >> (1 ^ 1))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_injected_loop_counter < 1), (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter < 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY((_injected_loop_counter < 1), _GLF_IDENTITY(true, ! (! (true))) && ((_injected_loop_counter < 1)))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter < 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY((_injected_loop_counter < 1), _GLF_IDENTITY(true, ! (! (true))) && ((_injected_loop_counter < 1)))))))), ! (! (! _GLF_IDENTITY((_injected_loop_counter < 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY((_injected_loop_counter < 1), _GLF_IDENTITY(true, ! (! (true))) && ((_injected_loop_counter < 1))))))))))), false)))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)), (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1))))))))) || false)), true && ((_GLF_IDENTITY(! (_injected_loop_counter < 1), (! _GLF_IDENTITY((_injected_loop_counter < 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))), ! (! (! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))))))))))))))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)), (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1))))))))) || false)), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter < 1), ((_injected_loop_counter < 1)) || false), (! _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter < 1), ((_injected_loop_counter < 1)) || false), bool(bool(_GLF_IDENTITY((_injected_loop_counter < 1), true && (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))), ! (! (! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1)))), ! (! (! (_GLF_IDENTITY((_injected_loop_counter < 1), true && ((_injected_loop_counter < 1))))))))))))))))))))) || false))))) || false))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(_injected_loop_counter)), min(_GLF_FUZZED(bitfieldReverse(_injected_loop_counter)), _GLF_FUZZED(bitfieldReverse(_injected_loop_counter)))) : _injected_loop_counter ++), ((false ? _GLF_FUZZED(bitfieldReverse(_injected_loop_counter)) : _injected_loop_counter ++)) / 1)))
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(uint(8u), uint(8u))))) ^ _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY(0u, (0u) + 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((uint(2))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(uint(8u), uint(8u))))) ^ _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY(0u, (0u) + 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((uint(2))))), (_GLF_IDENTITY(uint(2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(uint(8u), uint(8u))))) ^ _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), (_GLF_IDENTITY(0u, (0u) + 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((uint(2)))), 0u ^ (_GLF_IDENTITY((uint(2)), (_GLF_IDENTITY(0u, (0u) + 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((uint(2)))))))) / 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(uint(8u), uint(8u))) ^ _GLF_IDENTITY((uint(2)), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) | ((uint(2))))), (_GLF_IDENTITY(uint(2), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (uint(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ (2)))))) | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(8u))) ^ (uint(2)), ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (uint(2))) >> 0u)))), _GLF_IDENTITY(uint(2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), (0u ^ 0u), (1u & 1u)), ~ (~ (uvec3(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), (0u ^ 0u), (1u & 1u)))))), max(uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), (0u ^ 0u), (1u & 1u)), ~ (~ (uvec3(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), (0u ^ 0u), (1u & 1u)))))), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), (0u ^ 0u), (1u & 1u)), ~ (~ (uvec3(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) + 0u)) | (8u))), (0u ^ 0u), (1u & 1u))))))))), uint(8u))) ^ _GLF_IDENTITY((uint(2)), uint(_GLF_IDENTITY(uint((uint(2))), (uint((uint(2)))) << 0u)))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (64) << 0), _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), clamp(vec2(-84.70, 1374.1203), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-84.70, (false ? _GLF_FUZZED(distance(vec4(-943.254, -13.88, _GLF_IDENTITY(3050.3776, min(_GLF_IDENTITY(3050.3776, (3050.3776) / 1.0), 3050.3776)), -1.8), vec4(9785.8543, 57.98, 4.5, 4674.7412))) : _GLF_IDENTITY(-84.70, min(_GLF_IDENTITY(_GLF_IDENTITY(-84.70, 0.0 + (-84.70)), min(_GLF_IDENTITY(-84.70, 0.0 + (-84.70)), _GLF_IDENTITY(-84.70, 0.0 + (-84.70)))), _GLF_IDENTITY(-84.70, (-84.70) + 0.0))))), 1374.1203), max(_GLF_IDENTITY(vec2(-84.70, 1374.1203), (true ? vec2(-84.70, 1374.1203) : _GLF_FUZZED(vec2(17.50, _GLF_IDENTITY(8751.5894, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(8751.5894, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), (mat3(8751.5894, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat3(8751.5894, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), (mat3(8751.5894, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)))))), vec2(-84.70, 1374.1203))), _GLF_IDENTITY(vec2(-84.70, 1374.1203), _GLF_IDENTITY((vec2(-84.70, 1374.1203)), ((vec2(-84.70, 1374.1203))) * mat2(1.0)) * mat2(1.0)))).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(414.401, 414.401)))), (vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), clamp(vec2(-84.70, 1374.1203), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-84.70, min(-84.70, -84.70)), (false ? _GLF_FUZZED(distance(vec4(-943.254, -13.88, 3050.3776, -1.8), vec4(9785.8543, 57.98, 4.5, 4674.7412))) : _GLF_IDENTITY(-84.70, min(_GLF_IDENTITY(-84.70, 0.0 + (-84.70)), _GLF_IDENTITY(-84.70, 0.0 + (-84.70)))))), _GLF_IDENTITY(1374.1203, (_GLF_IDENTITY(1374.1203, (false ? _GLF_FUZZED(49.57) : 1374.1203))) / 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-84.70, 1374.1203), (true ? vec2(-84.70, 1374.1203) : _GLF_FUZZED(vec2(17.50, 8751.5894)))), vec2(mat2x4(_GLF_IDENTITY(vec2(-84.70, 1374.1203), (true ? vec2(-84.70, 1374.1203) : _GLF_FUZZED(vec2(17.50, 8751.5894)))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))), vec2(-84.70, 1374.1203))), _GLF_IDENTITY(vec2(-84.70, 1374.1203), (vec2(-84.70, 1374.1203)) * mat2(1.0)))).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(414.401, 414.401))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19674) : 1))]), max(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19674) : 1))]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19674) : 1))]), (vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19674) : 1))])) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bvec2(true, true))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-96.38, 140.962)) : injectionSwitch)), mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), _GLF_IDENTITY((vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401))), mix(vec2(_GLF_FUZZED(0.2), ((vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401))))[1]), vec2(((vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401))))[0], _GLF_FUZZED(-312.018)), bvec2(true, false))) * mat2(1.0)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, (_GLF_IDENTITY(414.401, _GLF_IDENTITY(float(vec4(414.401, 1.0, 0.0, 0.0)), _GLF_IDENTITY((float(vec4(414.401, 1.0, 0.0, 0.0))) / 1.0, min((float(vec4(414.401, 1.0, 0.0, 0.0))) / 1.0, _GLF_IDENTITY((float(vec4(414.401, 1.0, 0.0, 0.0))) / 1.0, float(vec4((float(vec4(414.401, 1.0, 0.0, 0.0))) / 1.0, 0.0, 1.0, 0.0)))))))) - sin(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), _GLF_IDENTITY(vec2(mat4(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(vec2(mat4(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat4(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_IDENTITY(_GLF_FUZZED(414.401), min(_GLF_FUZZED(414.401), _GLF_FUZZED(414.401)))), _GLF_IDENTITY(vec2(mat4(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), max(vec2(mat4(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(414.401, 414.401)))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat4(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-84.70, (-84.70) + 0.0), 1374.1203), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(-84.70, (-84.70) + 0.0), 1374.1203), clamp(vec2(_GLF_IDENTITY(-84.70, (-84.70) + 0.0), 1374.1203), vec2(_GLF_IDENTITY(-84.70, (-84.70) + 0.0), 1374.1203), vec2(_GLF_IDENTITY(-84.70, (-84.70) + 0.0), 1374.1203))) : _GLF_FUZZED(vec2(-5948.5392, -828.941)))).y), _GLF_FUZZED(414.401)), (vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401))) * mat2(1.0)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0)), int(ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0)), 0, 1, 1)))))], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(-1664.4737)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), vec2(mat2x4(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 0.0, 1.0, tan(0.0), tan(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0)), 1.0)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), mat2(1.0) * (vec2(-84.70, 1374.1203))).y), _GLF_IDENTITY(_GLF_FUZZED(414.401), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), max(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED(414.401)), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), mix(float(_GLF_FUZZED(-8.5)), float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(-1664.4737)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), vec2(mat2x4(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 0.0, 1.0, tan(0.0), tan(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0)), 1.0)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), mat2(1.0) * (vec2(-84.70, 1374.1203))).y), _GLF_IDENTITY(_GLF_FUZZED(414.401), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), max(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED(414.401)), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.1) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), clamp(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(vec2(-84.70, 1374.1203).y)))) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(414.401), (true ? _GLF_FUZZED(414.401) : _GLF_FUZZED(548.108)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(-1664.4737)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), vec2(mat2x4(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 0.0, 1.0, tan(0.0), tan(0.0), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, tan(0.0), 1.0)), 1.0)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), mat2(1.0) * (vec2(-84.70, 1374.1203))).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(414.401), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), max(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED(414.401)), bool(true))), max(_GLF_IDENTITY(_GLF_FUZZED(414.401), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), max(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED(414.401)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(414.401), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), max(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED(414.401)), bool(true)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).y))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 0.0)))[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(true, true))))).y), mix(float(_GLF_FUZZED(-8.5)), float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(-1664.4737)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_IDENTITY(_GLF_FUZZED(414.401), (false ? _GLF_FUZZED(-197.192) : _GLF_FUZZED(414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), vec2(mat2x4(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 0.0, 1.0, tan(0.0), tan(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 0.0, 1.0, tan(0.0), tan(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0)))), 1.0)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), mat2(1.0) * (vec2(-84.70, 1374.1203))).y), _GLF_IDENTITY(_GLF_FUZZED(414.401), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), false, true, true)))) ? -5.5 : 49.81))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), max(float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))) ? -5.5 : 49.81))))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))) ? -5.5 : 49.81))), float(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? -5.5 : 49.81))))), float(_GLF_FUZZED(414.401)), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(414.401, max(_GLF_IDENTITY(414.401, clamp(414.401, 414.401, 414.401)), 414.401)))), float(_GLF_FUZZED(-1.6)), bool(false)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(-84.70, _GLF_IDENTITY(1374.1203, (false ? _GLF_FUZZED(55.81) : 1374.1203))).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), bool(true)))))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203), vec2(mat4x2(_GLF_IDENTITY(vec2(-84.70, 1374.1203), min(vec2(-84.70, 1374.1203), vec2(-84.70, 1374.1203))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y), _GLF_FUZZED(414.401)), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2(vec3(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203).y, float(float(_GLF_IDENTITY(vec2(-84.70, 1374.1203).y, (vec2(-84.70, 1374.1203).y) / 1.0))))), _GLF_FUZZED(414.401)), 1.0))) : _GLF_FUZZED(cosh(vec2(-1.7, -719.927)))), min((true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2(vec3(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203).y, float(float(_GLF_IDENTITY(vec2(-84.70, 1374.1203).y, (vec2(-84.70, 1374.1203).y) / 1.0))))), _GLF_FUZZED(414.401)), 1.0))) : _GLF_FUZZED(cosh(vec2(-1.7, -719.927)))), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-84.70, 1374.1203).y), _GLF_FUZZED(414.401)), vec2(vec3(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-84.70, 1374.1203).y, float(float(_GLF_IDENTITY(vec2(-84.70, 1374.1203).y, (vec2(-84.70, 1374.1203).y) / 1.0))))), _GLF_FUZZED(414.401)), 1.0))) : _GLF_FUZZED(cosh(vec2(-1.7, -719.927))))))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true))).y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)))) - 0.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -74.20 : -3.9))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - log(1.0))), 1.0, 0.0)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -74.20 : -3.9))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - log(1.0))), 1.0, 0.0)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -74.20 : -3.9))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - log(1.0))), 1.0, 0.0)))))))))))), false, true))), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log2(vec2(-6.5, -2162.3366))))).x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
