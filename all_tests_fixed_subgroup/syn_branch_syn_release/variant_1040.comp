#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true)), vec2(1.0, 1.0) * (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))))))).x, mix(float(_GLF_FUZZED(-906.869)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true)), vec2(1.0, 1.0) * (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))))))).x), bool(true))), (false ? _GLF_FUZZED(-2574.7122) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(84.66) : _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x), min(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))).x > injectionSwitch.y) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false), true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5435.6586))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5435.6586))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), true && (bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)))), (bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false))) && true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec2(bool(bvec4(false, false, true, true)), false)))), bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, (0 & 883)), ivec2(0, 0) + (ivec2(0, (0 & 883))))))], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))])))).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0)))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))])))).y) + 0.0)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))))), (false) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), false, false))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), true), true, false)))))))))))))), true, false, false)))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2])) / uvec3(1u, 1u, 1u))))).x, gl_WorkGroupSize.x)))) | (max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))))), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (1) : _GLF_FUZZED(-54113)))))], gl_WorkGroupSize[2]))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) >> uvec4(0u, 0u, 0u, 0u))))[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[2])) / uvec3(1u, 1u, 1u))))).x, gl_WorkGroupSize.x)))) | (max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)), gl_WorkGroupSize.x))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), 0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), 0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), 0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), 0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))) | 0u), _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), 0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), 0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))), _GLF_IDENTITY(0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true)))))), 0u ^ (0u + (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5650.6181)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false)))), bool(true))))))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u), (workgroup_size) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) / cos(log(1.0)))), 1u)))))) - 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (! ((_GLF_IDENTITY(! (false), true && (! (false))))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 1u, 1u, 0u))))), _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, false)), (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, false))) || false)) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED((workgroup_size | workgroup_base)))), ~ (~ (workgroup_base + subgroup_id * subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) / (1u & 1u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) << (0u ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) >> (0u & 132958u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, (1u ^ 1u)), (false ? _GLF_FUZZED(uvec3(63428u, 25221u, 112616u)) : uvec3(subgroup_size, 1u, (1u ^ 1u))))))) - 0u)) / (_GLF_IDENTITY(1u & 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u & 1u, 1u), clamp(uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u), uvec2(_GLF_IDENTITY(1u & 1u, max(_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u), _GLF_IDENTITY(1u & 1u, max(_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_size) : 1u & _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), 1u)))), 1u & 1u)))), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(1u & 1u, 1u), clamp(uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), (clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) << (0u ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) >> (0u & 132958u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, (1u ^ 1u)), (false ? _GLF_FUZZED(uvec3(63428u, 25221u, 112616u)) : uvec3(subgroup_size, 1u, (1u ^ 1u))))))) - 0u)) / (_GLF_IDENTITY(1u & 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u & 1u, 1u), clamp(uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u), uvec2(_GLF_IDENTITY(1u & 1u, max(_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u), _GLF_IDENTITY(1u & 1u, max(_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_size) : 1u & _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), 1u)))), 1u & 1u)))), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(1u & 1u, 1u), clamp(uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))) | (clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) << (0u ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) >> (0u & 132958u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, (1u ^ 1u)), (false ? _GLF_FUZZED(uvec3(63428u, 25221u, 112616u)) : uvec3(subgroup_size, 1u, (1u ^ 1u))))))) - 0u)) / (_GLF_IDENTITY(1u & 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u & 1u, 1u), clamp(uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u), uvec2(_GLF_IDENTITY(1u & 1u, max(_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u), _GLF_IDENTITY(1u & 1u, max(_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_size) : 1u & _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), 1u)))), 1u & 1u)))), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(1u & 1u, 1u), clamp(uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u), uvec2(1u & 1u, 1u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)))), _GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, _GLF_IDENTITY((1u & 1u) << 0u, 0u ^ ((1u & 1u) << 0u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, _GLF_IDENTITY((1u & 1u) << 0u, 0u ^ ((1u & 1u) << 0u))))))))), workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << 0u))))), workgroup_base + subgroup_id * subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << 0u))))), workgroup_base + subgroup_id * subgroup_size))))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << 0u))))), workgroup_base + subgroup_id * subgroup_size)))))))) << _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))) | (~ (~ (clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (subgroup_id * subgroup_size) ^ 0u))), (workgroup_base + subgroup_id * subgroup_size) / (1u & 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 1u * (_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) | 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) / (1u & 1u)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(bitfieldExtract(num_workgroup, 3858, 72534))))))) : subgroup_id * subgroup_size))), ~ (~ (clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u))) & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (subgroup_id * subgroup_size) ^ 0u))), (workgroup_base + subgroup_id * subgroup_size) / (1u & 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 1u * (_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) | 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) / (1u & 1u)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(bitfieldExtract(num_workgroup, 3858, 72534))))))) : subgroup_id * subgroup_size))), ~ (~ (clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u))) & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (subgroup_id * subgroup_size) ^ 0u))), (workgroup_base + subgroup_id * subgroup_size) / (1u & 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 1u * (_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) | 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) / (1u & 1u)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(bitfieldExtract(num_workgroup, 3858, 72534))))))) : subgroup_id * subgroup_size))), ~ (~ (clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u))) & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), workgroup_base + subgroup_id * subgroup_size))))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) / (1u & _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), ~ (~ (subgroup_id))) * subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u)))) ^ 0u) & 1u)) / 1u), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), ~ (~ (subgroup_id))) * subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u), min((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u)))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), uint(uvec2(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(85529u))) << 0u))), ~ (~ (subgroup_id))) * subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), false))))) / 1u) & 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), ~ (~ (subgroup_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), ~ (~ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), ~ (~ (subgroup_id))))) * subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false))))) / 1u) & 1u)) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), workgroup_base + subgroup_id * subgroup_size), 1u))), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (workgroup_base)))) << (0u | 0u)))), max(workgroup_base, workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (workgroup_base), ~ (workgroup_base)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base))), clamp(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / 1u))))))), ~ (workgroup_base), ~ (workgroup_base)))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base))), clamp(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / 1u))))))), ~ (workgroup_base), ~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base))), clamp(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / 1u))))))), ~ (workgroup_base), ~ (workgroup_base)))))), (_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base))), ~ (workgroup_base))), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), ~ (workgroup_base), ~ (workgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), ~ (workgroup_base), ~ (workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), clamp(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), _GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), _GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))))))), ~ (workgroup_base), ~ (workgroup_base))))) << 0u)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) / (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, uint(uvec2((workgroup_base) << 0u, 0u))))))) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, uint(uvec2((workgroup_base) << 0u, 0u))))))) + subgroup_id * subgroup_size)))))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))) % subgroup_size, 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? 1 : _GLF_FUZZED(-93076)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) - 0u), (subgroup_local_id + 1) % subgroup_size), max(min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? 1 : _GLF_FUZZED(-93076)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_local_id + 1) % subgroup_size), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? 1 : _GLF_FUZZED(-93076)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u), (subgroup_local_id + 1) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, (1) / 1);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(52247) : 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)))) >> 0u)))], uint(2), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(0 & 2948, ~ (~ (0 & 2948))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(476.381)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), true))), true && (! (bool(bvec2(_GLF_DEAD(false), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) / 1)), _GLF_IDENTITY(0 + (4), _GLF_IDENTITY((0 + (4)) ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))), ((0 + (4)) ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))) - 0))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-87.74), _GLF_FUZZED(420.579)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - ((1 ^ 1) | 0)), ~ (_GLF_IDENTITY(~ (0), (~ (0)) / 1)))) - 0)], (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false), false), true), bvec3(bvec3(bvec3(bvec2((false), false), true))))))))), ! (! (! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.4 + 4.5))), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(84.62)), bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.4 + 4.5))), bvec2(true, _GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
