#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(49.61, 3.1)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), true, true, true)))) || false))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(49.61, 3.1)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), true, true, true)))) || false))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(49.61, 3.1)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), true, true, true)))) || false))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(49.61, 3.1)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), true, true, true)))) || false))) && true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(9.4, -7.0, -61.98).y)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), _GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(cosh(-1679.6155)) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) || false), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.2))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false, false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-325.840)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))) << 0u), subgroup_size)))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(false))), false)), (bool(bvec2(bool(bool(_GLF_DEAD(false))), false))) && true), false || (bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(427.540)), bool(_GLF_IDENTITY(false, (false) || false))))), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(9.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(5.9))), (injectionSwitch)[1]), bvec2(true, true))).x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(80.01, min(80.01, _GLF_IDENTITY(80.01, float(vec2(80.01, 0.0)))))), ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0), (mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0), (mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), mix(vec2((vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0), (mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))))[0], _GLF_FUZZED(-17.77)), vec2(_GLF_FUZZED(-9.9), (vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0), (mat3x2(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(-5.8))), _GLF_FUZZED(-8.6)), 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))))[1]), bvec2(false, true)))) - vec2(0.0, 0.0))), bvec2(true, false)))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(968.735))) > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) && _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), gl_WorkGroupID.x)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), gl_WorkGroupID.x))), min(~ (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), gl_WorkGroupID.x))), ~ (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), gl_WorkGroupID.x))))))) / (0u | 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true, ! (! ((bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), bvec3(bvec3(bvec3((false), true, true)))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))) || false)), (_GLF_IDENTITY(false, (false) || false)) || false), false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-67.61), min(_GLF_IDENTITY(_GLF_FUZZED(-67.61), min(_GLF_FUZZED(-67.61), _GLF_FUZZED(-67.61))), _GLF_FUZZED(-67.61)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.2)), bool(false)))))), vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), mix(float(1.0), float(_GLF_FUZZED(-0.2)), bool(false)))))), vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-6.1, float(_GLF_IDENTITY(mat4x2(-6.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(-6.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), -58.43, -1.3, 7512.8460).b)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), bool(true)), (true ? mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-6.1, float(_GLF_IDENTITY(mat4x2(-6.1, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(-6.1, (-6.1) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), -58.43, -1.3, 7512.8460).b)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), bool(true)) : _GLF_FUZZED(-117.117))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-67.61), min(_GLF_IDENTITY(_GLF_FUZZED(-67.61), min(_GLF_FUZZED(-67.61), _GLF_FUZZED(-67.61))), _GLF_FUZZED(-67.61)))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.2)), bool(false)))))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-6.1, float(_GLF_IDENTITY(mat4x2(-6.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(791.420) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)))), 1.0), transpose(transpose(mat4x2(-6.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), -58.43, -1.3, _GLF_IDENTITY(7512.8460, min(_GLF_IDENTITY(7512.8460, clamp(7512.8460, _GLF_IDENTITY(7512.8460, min(7512.8460, 7512.8460)), 7512.8460)), 7512.8460))).b)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), bool(true)), (true ? mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-6.1, float(_GLF_IDENTITY(mat4x2(-6.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(-6.1, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))).x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), -58.43, -1.3, 7512.8460).b)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), bool(true)) : _GLF_FUZZED(-117.117))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), true)), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, true)))))), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, true)))))), true)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-62.30) : injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) << 0u)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true))) ? _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) : _GLF_FUZZED(workgroup_size), clamp(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) - 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)), clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0)))))) | (0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), (~ (0)) / 1)) | (0 | 0))))) | (0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)))) : _GLF_FUZZED(-22579))) ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) ^ _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), false || (bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0) < subgroup_size, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), false || (bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0) < subgroup_size, true)))), (_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), false || (bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0) < subgroup_size, true))))) || false)))), (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), false || (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), int(int(int(int(1)))))), max(~ (_GLF_IDENTITY(int(int(1)), int(int(int(int(1)))))), ~ (_GLF_IDENTITY(int(int(1)), int(int(int(int(1)))))))))))) + 0u) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) - 0u), 1u)) * (subgroup_size)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) << 0) < subgroup_size, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((1 | 0) * (int(4)), (_GLF_IDENTITY((1 | 0) * (int(4)), (false ? _GLF_FUZZED(-99284) : (1 | 0) * (int(4))))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (1 | 0) * (int(4)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY(int(4), (1 | 0) * (int(4)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) | (4))), _GLF_IDENTITY(int(4), (1 | 0) * (int(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-60162))), (_GLF_IDENTITY(4, 0 | (4))) | (4))))))))) >> 0)) >> _GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(41956), (_GLF_FUZZED(41956)) | (_GLF_FUZZED(41956))) : ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec2(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))), ((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec3(1, 0, 1)))))) | (1))), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))), min((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))))))))))))), _GLF_IDENTITY(0, (0) - 0)))) + 0) | 0) | 0)))) < subgroup_size, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))) && true))))) || (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (_GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec2(_GLF_IDENTITY(uint(uint(subgroup_local_id)), (uint(uint(subgroup_local_id))) - (0u | 0u)), 0u)))))) + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false))))))) || false)))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, true), bvec3(bvec4(bvec3(! (true), false, true), false))))))), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))), ! (! ((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))))))), bool(bvec2(! (_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))), ! (! ((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))))))), false))))), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))), true, true), bvec3(bvec3(bvec3((true), true, true)))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true)))))), false || (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))))), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, false || (true)), true)))))))))), false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (uint(uint(subgroup_local_id))))) + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false))))), bool(bool(! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false)))))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false))))), bool(bool(! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false)))))))), false, false, false))) && true)))) || false)))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, true), bvec3(bvec4(bvec3(! (true), false, true), false))))))), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec4(bvec3((true), true, true), true))), bvec3(bvec3(bvec3((true), true, true))))))), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), true), bvec3(bvec3(bvec3((true), true, true)))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, false || (true)), true)))))))))), false)))))))))), true && (_GLF_IDENTITY(false, ! (! (false))) || (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (uint(uint(subgroup_local_id))))) + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), false, true, false))))))) || false)))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) && true))))), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (true), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (true), false, true), false)))))))))), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), bvec3(bvec3(bvec3((true), true, true)))))), false || (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), bvec3(bvec3(bvec3((true), true, true))))))))), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))), true, true), bvec3(bvec3(bvec3((true), true, true)))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, false || (true)), true))))))))), (_GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, true && (true))), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, false || (true)), true))))))))), (bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), _GLF_IDENTITY(true, false || (true)), true)))))))))) && true)) && true)), false))))))))))))) && true), false || (_GLF_IDENTITY(false, ! (! (false))) || (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (uint(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_id)))), (max(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (_GLF_IDENTITY(uint(subgroup_local_id), 1u * (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), uint(subgroup_local_id))) | (max(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | 0u), (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | 0u)) | (uint(subgroup_local_id))), uint(subgroup_local_id))))))))) + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3((true), true, true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false))))))), ((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((true), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((true), true, true)))), _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false)))))))) && true), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true)))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), bvec3(bvec3(bvec3(bvec3((true), true, true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), bvec3(bvec3(bvec3(bvec3((true), true, true)))))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, true)), bvec3(bvec3(bvec3(bvec3((true), true, true))))))), false))))))))), bool(bool((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)))))))))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))), true, true)))))))))), false)))))))))))))), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(32.95) : float(injectionSwitch.y))), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y)))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), false || ((false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2341.6214 / -5.1)), _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))) ? -6658.6706 : _GLF_IDENTITY(-52.75, min(-52.75, -52.75)))), min(_GLF_FUZZED((false ? -6658.6706 : _GLF_IDENTITY(-52.75, min(-52.75, -52.75)))), _GLF_FUZZED((_GLF_IDENTITY(false, true && (false)) ? -6658.6706 : _GLF_IDENTITY(-52.75, min(-52.75, -52.75))))))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8272.6914, -93.00)) : injectionSwitch)), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4))) + vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-85.34), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1627.1838), _GLF_FUZZED((-4.6 - 3.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(9.6)), float(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, true))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED(-85.34), (injectionSwitch)[1]), bvec2(false, true))))), (false ? _GLF_FUZZED(vec2(-2945.7349, -3908.7616)) : (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1627.1838), _GLF_FUZZED((-4.6 - 3.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED(-85.34), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))) * mat2(1.0))))[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-865.582), ((injectionSwitch))[1]), _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.4)), (_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.4)), min(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.4)), vec2(((injectionSwitch))[0], _GLF_FUZZED(1.4))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), false, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bvec2(bvec4(bvec2(true, false), false, false))), _GLF_IDENTITY(false, true && (false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bvec2(bvec4(bvec2(true, false), false, false))), _GLF_IDENTITY(false, true && (false)))), true), bvec3(bvec4(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bvec2(bvec4(bvec2(true, false), false, false))), _GLF_IDENTITY(false, true && (false)))), true), true))))))))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, _GLF_IDENTITY(false, (false) && true)))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, _GLF_IDENTITY(false, (false) && true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, _GLF_IDENTITY(false, (false) && true)))), false), false))), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), false, false))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), false, false))), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), false, false))), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), false, false))), false))))), true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))), true, true)), false, false))))))[1]), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))))))) || false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(46.04, 4561.7289)))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(46.04, 4561.7289)))), max(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(46.04, 4561.7289)))), false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(46.04, 4561.7289)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(46.04, 4561.7289)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(46.04, 4561.7289))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), tan(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, sqrt(0.0), 1.0, 1.0))))))))) : _GLF_FUZZED(mod(vec2(-39.22, -16.89), 7.6)))).y)) ? 0 : _GLF_FUZZED((-32332 & 41139))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), min(uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(int(2))) : _GLF_FUZZED(-28460)))), uint(2))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) / 1));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) - 0u), clamp(_GLF_IDENTITY(uint(2), (uint(2)) - 0u), _GLF_IDENTITY(uint(2), (uint(2)) - 0u), _GLF_IDENTITY(uint(2), (uint(2)) - _GLF_IDENTITY(0u, 0u | (0u))))), uint(2))), (_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) / 1), 2))), (uint(2)) ^ ((0u & 7569u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), max(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))))))) / 1u)), clamp((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)) / 1u)), min((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))) << 0u), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)), max((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | (2))), (false ? _GLF_FUZZED(subgroup_size) : uint(2))), 0u ^ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : uint(2)))))) / 1u)))))) - 0u), uint(2)))) / 1u)) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) - 0u, ((uint(2)) - 0u) << 0u)), uint(2))), (_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_size))) : uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) << 0))))) / 1u)) - _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u + (_GLF_FUZZED(num_workgroup))))))))))), uint(2)))) / 1u)) ^ _GLF_IDENTITY(0u, (0u) | (0u))) << 0u)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4846.3923)), float(1.0), bool(true)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), true), false, false))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(0.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5482.7487), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-3.2)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-520.458 - (-726.837 - 757.492))), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0)))), bvec2(true, true)))))) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.0)))))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))))))))))))) && true)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
