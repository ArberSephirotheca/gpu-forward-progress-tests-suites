#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0)), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], ((max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1]) + 0.0)), vec2(_GLF_FUZZED(69.65), _GLF_FUZZED((-8670.1746 - 149.072))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || _GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), (! (false)) && true))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false, false, false)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true, false)))))) || false, false, false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))))) || false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (false))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (false))) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, (false) || false)))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))) || false))) && true), false, false))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), false, false)))))), false || ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), false, false)))))))), (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))) || false)))) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(-227.609) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, tan(0.0)), vec3(mat2(vec3(injectionSwitch, tan(0.0)), 0.0))))).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, tan(0.0)), vec3(mat2(vec3(injectionSwitch, tan(0.0)), 0.0))))).x, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, tan(0.0)), vec3(mat2(vec3(injectionSwitch, tan(0.0)), 0.0))))).x, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat4(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, tan(0.0)), vec3(mat2(vec3(injectionSwitch, tan(0.0)), 0.0))))).x, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 0.0 + (float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(true)), (true ? mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.2)), min(float(_GLF_FUZZED(-1.2)), float(_GLF_FUZZED(-1.2)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -5.8)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8648.8296)), bvec2(true, false))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true)), (bool(true)) || false)) : _GLF_IDENTITY(_GLF_FUZZED(length(injectionSwitch)), min(_GLF_FUZZED(length(injectionSwitch)), _GLF_FUZZED(length(injectionSwitch))))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)) : _GLF_FUZZED(length(injectionSwitch))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))))))))), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || false))))), false, true)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), false, false, true)))))))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) / cos(vec2(0.0, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)))))), true)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), false || ((bool(bvec2(_GLF_DEAD(false), true))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY((uint(0u)), ~ (~ ((uint(0u))))) << 0u))))) >> 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) / 1u) / 1u)), (workgroup_base) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u)))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))) >> 0u)) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, 0u | (1u)) * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u), subgroup_id), ~ (~ (min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))))))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY((uint(0u)), ~ (~ ((uint(0u))))) << 0u))))) >> 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) / 1u) / 1u)), (workgroup_base) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u)))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))) >> 0u)) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, 0u | (1u)) * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u), subgroup_id), ~ (~ (min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))))))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY((uint(0u)), ~ (~ ((uint(0u))))) << 0u))))) >> 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) / 1u) / 1u)), (workgroup_base) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u)))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))) >> 0u)) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, 0u | (1u)) * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u), subgroup_id), ~ (~ (min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))))))) * subgroup_size))) << 0u)) ^ (136199u & 0u)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-710.890)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))), float(mat2x4(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), float(_GLF_FUZZED(-710.890)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))), float(mat2x4(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-710.890)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, sin(0.0), abs(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED((-92.08 * 84.89))), float(min(0.0, 0.0)), bool(true)))), 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.9)), float(0.0), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(96.99))), 0.0)), 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(smoothstep(-5.6, sqrt(45.25), 814.183)) : exp(0.0))), 1.0, 1.0))), 0.0, 1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u)))) ^ 0u), (subgroup_local_id) / 1u) + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) | (subgroup_local_id + 1)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41302) : _GLF_IDENTITY(0, max(0, 0)))) + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(950) : _GLF_IDENTITY(1, 0 ^ (1)))))), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41302) : _GLF_IDENTITY(0, max(0, 0)))) + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(950) : _GLF_IDENTITY(1, 0 ^ (1)))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) | (subgroup_local_id + 1))))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) && true)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) || false)) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false, true, true))), true, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true), ! (! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true), ! (! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true))))))))) || false)))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / subgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / subgroup_id)), (_GLF_FUZZED((next_virtual_gid / subgroup_id))) - 0u)) - 0u) : _GLF_IDENTITY(uint(2), (uint(2)) / 1u)), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / subgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / subgroup_id)), (_GLF_FUZZED((next_virtual_gid / subgroup_id))) - 0u)) - 0u) : _GLF_IDENTITY(uint(2), (uint(2)) / 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / subgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / subgroup_id)), (_GLF_FUZZED((next_virtual_gid / subgroup_id))) - 0u)) - 0u) : _GLF_IDENTITY(uint(2), (uint(2)) / 1u)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / subgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / subgroup_id)), (_GLF_FUZZED((next_virtual_gid / subgroup_id))) - 0u)) - 0u) : _GLF_IDENTITY(uint(2), (uint(2)) / 1u)), max((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / subgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / subgroup_id)), (_GLF_FUZZED((next_virtual_gid / subgroup_id))) - 0u)) - 0u) : _GLF_IDENTITY(uint(2), (uint(2)) / 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / subgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid / subgroup_id, (next_virtual_gid / subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / subgroup_id)), (_GLF_FUZZED((next_virtual_gid / subgroup_id))) - 0u)) - 0u) : _GLF_IDENTITY(uint(2), (uint(2)) / 1u))))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), (uint(2)) * 1u)), uint(uint((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), (uint(2)) * 1u)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), clamp(min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), _GLF_IDENTITY(min(uint(2), uint(2)), min(min(uint(2), uint(2)), _GLF_IDENTITY(min(uint(2), uint(2)), uint(uvec4(min(uint(2), uint(2)), 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(min(uint(2), uint(2)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (min(uint(2), uint(2)))), max(_GLF_IDENTITY(min(uint(2), uint(2)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (min(uint(2), uint(2)))), _GLF_IDENTITY(min(uint(2), uint(2)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(min(uint(2), uint(2)), (_GLF_IDENTITY(min(uint(2), uint(2)), 0u | (min(uint(2), uint(2))))) | 0u)))))))), 1u * (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), clamp(min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), 0u | (uint(2)))))) | (uint(2)))), _GLF_IDENTITY(min(uint(2), uint(2)), min(min(uint(2), uint(2)), _GLF_IDENTITY(min(uint(2), uint(2)), uint(uvec4(_GLF_IDENTITY(min(uint(2), uint(2)), min(min(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(8422)))), uint(2)), min(uint(2), uint(2)))), 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))) + 0u)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), min(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(min(uint(2), uint(2)), (min(uint(2), uint(2))) >> ((50016u & 0u) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), max(_GLF_IDENTITY(min(uint(2), uint(2)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (min(uint(2), uint(2)))), _GLF_IDENTITY(min(uint(2), uint(2)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(atomicMin(workgroup_base, workgroup_id)) : _GLF_IDENTITY(uint(5u), uint(5u))))) | (min(uint(2), uint(2))))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(65946))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0))) * (4)), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
