#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gid;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz = GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec4 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz = GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) - 0.0))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, sin(0.0), length(vec2(0.0, 0.0)), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), false))))) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), clamp((1 << _GLF_IDENTITY(int(6), int(6))), (1 << _GLF_IDENTITY(int(6), int(6))), (1 << _GLF_IDENTITY(int(6), int(6)))))) - 0) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.w = num_workgroup;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz.x = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.w;
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.y = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))))).x));
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, -1.4)) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.5) : 1.0)))), log(1.0)))).y))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (false ? _GLF_FUZZED((GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y - GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : (false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(127377u, 40913u, 102176u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gid << subgroup_size)) : uvec3(127377u, 40913u, 102176u))) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u)))))), ((~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))))))) << uvec4(0u, 0u, 0u, 0u)) >> uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), 0u)), 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))).xyz)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), _GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y - GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : (false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), ((false ? _GLF_FUZZED((GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y - GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : (false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) >> uvec3(0u, 0u, 0u))))))).x, 0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (false ? _GLF_FUZZED((GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y - GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))) ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))))), ((_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u)))))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u)))))) >> uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ ((~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u)))))) >> uvec4(0u, 0u, 0u, 0u)))))).xyz)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, 0 ^ (2))]))), _GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y - GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : (false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(num_workgroup)))))))))), ((false ? _GLF_FUZZED((_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, uvec2(uvec2(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))).y - _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size, ~ (~ (GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size))).xyz)) : (false ? _GLF_FUZZED((uvec3(127377u, 40913u, 102176u) / GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_size.xyz)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) >> uvec3(0u, 0u, 0u))))))).x));
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) - uvec2(0u, 0u)).y, clamp(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y)) * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.9) : injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.9) : injectionSwitch.x)) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.9) : injectionSwitch.x)) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm4x8(vec4(4448.6350, -2579.1314, -95.34, 556.805))))) + subgroup_id * GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz.z = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + _GLF_IDENTITY(1, 0 ^ (1)), min(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, max(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x)) + 1))) % GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z);
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u);
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid, uvec4(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid[0], GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid[1], GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid[_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), ~ (~ (_GLF_IDENTITY(2, (2) - 0))))))) << 0), _GLF_IDENTITY(2, (2) >> 0)))], _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid[3], (true ? GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid[3] : _GLF_FUZZED(virtual_gid))))).w;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(934.585)), vec2(_GLF_FUZZED(5984.0954), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(true, true && (true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(934.585)), vec2(_GLF_FUZZED(5984.0954), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(true, true && (true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(934.585)), vec2(_GLF_FUZZED(5984.0954), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(true, true && (true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))) && true), false))) && true)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))) && true), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) && true), true, false))), false))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))) && true))) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))[0], _GLF_FUZZED(26.90)), vec2(_GLF_FUZZED(910.225), (injectionSwitch)[1]), bvec2(false, true))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-919.318))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.8) : injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((7.7 + -486.241)), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) / 1), 0))) / 1))]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(acosh(injectionSwitch)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY(float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(803.809)), bool(false)), (false ? _GLF_FUZZED(-6.3) : mix(float(1.0), float(_GLF_FUZZED(803.809)), bool(false))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, cos(0.0), 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0))), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-30.14)), float(0.0), bool(true))), 0.0))), vec2(1.0, 0.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, 1.0 * (-7.9)))), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), tan(0.0) + (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(-25.07))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY((mat4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, 1.0 * (-7.9)))), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), tan(0.0) + (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(-25.07))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat4(1.0) * ((mat4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, 1.0 * (-7.9)))), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), tan(0.0) + (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(-25.07))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.1)), float(1.0), bool(true))), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-8.9, 162.447, 0.0, -7418.3065)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))), float(_GLF_FUZZED(-8867.2293)), bool(false)))))) / 1.0), 1.0, 1.0, 1.0), vec4(mat4x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(932.773)), 1.0 * ((true ? 0.0 : _GLF_FUZZED(932.773)))))) / 1.0), 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : 1.0)), 1.0, 1.0) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(vec4(4.2, -51.37, 4.4, -0.3)) : false ? _GLF_FUZZED(vec4(-8.9, 162.447, 0.0, -7418.3065)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773))), mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))), float(_GLF_FUZZED(-8867.2293)), bool(false)))))) / 1.0), 1.0, 1.0, 1.0), vec4(mat4x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(932.773)), 1.0 * ((true ? 0.0 : _GLF_FUZZED(932.773)))))) / 1.0), 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : 1.0)), 1.0, 1.0) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0) : _GLF_FUZZED(-4451.0030))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.773)))) / 1.0))), 1.0, 1.0, 1.0))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(477.390) : 1.0)))), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / 1.0), dot(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2x3(_GLF_IDENTITY((1.0), ((1.0)) * 1.0), sin(length(0.0)), 1.0, 1.0, 1.0, 0.0))) + 0.0), 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9437.2760)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(69.47)), vec2(_GLF_FUZZED((4.9 - -6461.9986)), (vec2(1.0, 0.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(595.075), clamp(_GLF_FUZZED(595.075), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(595.075), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_FUZZED(595.075)), bool(true))), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(595.075), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_FUZZED(595.075)), bool(true))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), abs(0.0)), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), abs(0.0)), vec2(0.0, 1.0)), max(dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), abs(0.0)), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), abs(0.0)), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0))), _GLF_FUZZED(595.075)))))), _GLF_FUZZED(-74.18)), bvec2(true, false)), (false ? _GLF_FUZZED((mat2(_GLF_IDENTITY(-5.6, (_GLF_IDENTITY(-5.6, mix(float(-5.6), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(8.3, 59.02, 6.4).t)), clamp(float(_GLF_FUZZED(vec3(8.3, 59.02, 6.4).t)), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(8.3, 59.02, 6.4).t)), min(float(_GLF_FUZZED(vec3(8.3, 59.02, 6.4).t)), float(_GLF_FUZZED(vec3(8.3, 59.02, 6.4).t)))), float(_GLF_FUZZED(vec3(8.3, 59.02, 6.4).t)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), -292.875, 4.0, _GLF_IDENTITY(-4156.2273, clamp(-4156.2273, -4156.2273, -4156.2273))) * injectionSwitch)) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((7.7 + _GLF_IDENTITY(-486.241, float(mat4x3(_GLF_IDENTITY(-486.241, (-486.241) / 1.0), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, tan(0.0), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-436.130), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-1.3 + 90.40))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0)))))), (true ? (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-436.130), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-1.3 + 90.40))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(50427))), _GLF_IDENTITY(1, (1) | (1)), 0))) / 1, max((int(ivec3(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))))), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))))) / 1, (int(ivec3(1, 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0)))), (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0))))) - 0)))))) / 1))))]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-24.52)), vec2(_GLF_FUZZED(-134.481), (injectionSwitch)[1]), bvec2(false, true))))[0], _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), abs(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)))))[0], 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), mix(float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), float(_GLF_FUZZED(98.40)), bool(false))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec2(length(0.0), 0.0), vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, tan(0.0), 0.0, cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-916.620) : float(mat4x3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec2(length(0.0), 0.0), vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, tan(0.0), 0.0, cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-16.10)), float(0.0), bool(true)))), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0))), vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-98.28)))))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, exp(0.0), 0.0, 0.0, exp(sin(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0), (mat4x2(0.0, 1.0, exp(0.0), 0.0, 0.0, exp(sin(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(1.0)))), 1.0, 1.0, 1.0), (vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, exp(0.0), 0.0, 0.0, exp(sin(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0), (mat4x2(0.0, 1.0, exp(0.0), 0.0, 0.0, exp(sin(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(1.0)))), 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(792.317))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075)))))), _GLF_FUZZED(-74.18)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED((7.7 + -486.241)), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) / 1))]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.0) : 1.0)))))), injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(118.656)), bool(false))), mix(float(_GLF_FUZZED(vec3(4.6, -39.66, 44.31).b)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(118.656)), bool(false)))), bool(true)))), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0))), vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0))), 1.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3563.6840)), bool(false))))), 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(-1388.3179)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075)))), _GLF_FUZZED(-74.18)), min(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.0) : 1.0)))))), injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(118.656)), bool(false))), mix(float(_GLF_FUZZED(vec3(4.6, -39.66, 44.31).b)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(118.656)), bool(false)))), bool(true)))), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0))), vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0))), 1.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3563.6840)), bool(false))))), 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(-1388.3179)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075)))), _GLF_FUZZED(-74.18)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x4((injectionSwitch)[0], 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.0) : 1.0)))))), injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(118.656)), bool(false))), mix(float(_GLF_FUZZED(vec3(4.6, -39.66, 44.31).b)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(118.656)), bool(false)))), bool(true)))), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0))), vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0))), 1.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4((injectionSwitch)[0], 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3563.6840)), bool(false))))), 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(-1388.3179)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(595.075)))), _GLF_FUZZED(-74.18)))), bvec2(true, false))) * mat2(1.0))))).y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_17_2_1_11num_workgroupsubgroup_local_idvirtual_gidnum_workgroup.xyz.z] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(379.880) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(int(121342u))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, tan(0.0), 1.0, sqrt(0.0)))) > injectionSwitch.y) || false)))))
          break;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)), true && (bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) || false)), false)), true && (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), false))))))))))))), false, false))), (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(ivec3(43580, 34813, 92849)[2]) : int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          barrier();
        }
       if(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1 < _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z, max(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z, _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z) * 1u))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_IDENTITY(_GLF_FUZZED((++ _injected_loop_counter)), (_GLF_FUZZED((++ _injected_loop_counter))) | 0) : _injected_loop_counter)) != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_IDENTITY(_GLF_FUZZED((++ _injected_loop_counter)), (_GLF_FUZZED((++ _injected_loop_counter))) | 0) : _injected_loop_counter)) != 0)))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (0 | 0) | (_injected_loop_counter --))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), true, false, false))))
          return;
         int i = 0;
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x], uint(2), _GLF_IDENTITY(4, 1 * (4)), 64, 4);
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))) << _GLF_IDENTITY(int(6), int(6)), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(0, (0) ^ 0) ^ (1 << _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(-77620)))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
                    barrier();
                   return;
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) || _GLF_IDENTITY(false, true && (false))))))))), false))))))));
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))) | (0)), ~ (~ (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))) | (0)), 0 ^ (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))) | (0))))))), _GLF_IDENTITY((0 | 0) / 1, (_GLF_IDENTITY((0 | 0) / 1, 0 + ((0 | 0) / 1))) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0) | (1 ^ 0), ~ (~ ((1 ^ 0) | (1 ^ 0))))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.3))) > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 return;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(6574.4318)), bool(false))), injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
              }
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) || false)))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_WRAPPED_LOOP(false)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))))) || false))))))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, false))), bool(_GLF_IDENTITY(bool(bool(bool(bvec2(false, false)))), true && (_GLF_IDENTITY(bool(bool(bool(bvec2(false, false)))), true && (_GLF_IDENTITY(bool(bool(bool(bvec2(false, false)))), ! (! (bool(bool(bool(bvec2(false, false))))))))))))))))))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(max(injectionSwitch, -725.358)) : vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))))).y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.4))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.4))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) && true)));
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.7)), float(injectionSwitch.y), bool(true)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), true, false, false))))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false)))))))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), false)))))))))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6916.5259, -268.261)))).y)))), bool(bvec2(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false))))))) && true)))
            barrier();
           barrier();
          }
         atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))))) | 0), 2, _GLF_IDENTITY(2, 1 * (2)))), (2) ^ 0)), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))))) | 0), 2, _GLF_IDENTITY(2, 1 * (2)))), (2) ^ 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))))) | 0), 2, _GLF_IDENTITY(2, 1 * (2)))), (2) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))))) | 0), 2, _GLF_IDENTITY(2, 1 * (2)))), (2) ^ 0)))), 1, 1))) | 0)), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0)).y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)) && true))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || false))) && true))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))), true), false, true))))))), ! (! (_GLF_DEAD(false)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                break;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               return;
              }
             else
              {
              }
            }
           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) && true)), true, true, true)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))))))))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))))))))), true, true)))))))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false))))))), ((! (_GLF_WRAPPED_LOOP(false)))) || false)))));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, false))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), ! (! (_GLF_IDENTITY(_injected_loop_counter < (1 & 1), true && (_GLF_IDENTITY(_injected_loop_counter < (1 & 1), true && (_injected_loop_counter < (1 & 1))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-24653))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-24653)))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((-1647 << -17820) & 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.21)), bool(false))) > injectionSwitch.y))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-70.59)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
