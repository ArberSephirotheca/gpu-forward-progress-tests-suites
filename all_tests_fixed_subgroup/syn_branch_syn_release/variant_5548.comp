#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(9.3, _GLF_IDENTITY(3670.3704, float(mat3x4(3670.3704, 1.0, determinant(mat2(exp(0.0), abs(0.0), 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-844.003) : _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0)), (dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0))) - 0.0))), dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sin(0.0))), (determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sin(0.0)), (true ? mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sin(0.0)) : _GLF_FUZZED(mat3(4513.5297, 64.01, 2.6, 0.1, 35.47, 79.05, -7.9, -2653.8134, 94.30)))))) - 0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(0.0))))), injectionSwitch)) : injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))))), false, false)))))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(59.78, -8686.0056), vec2(905.639, -5168.7131), bvec2(false, false))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-6.0) : injectionSwitch[1])))).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) ? _GLF_FUZZED(fma(563.426, -1848.8624, 8643.7587)) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(-712.984)), float(_GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(90.27)))), bool(true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- 7641.1175)), _GLF_FUZZED(-8.3)), bvec2(false, false))), injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(26.75), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(61.38) : injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(61.38) : injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(61.38) : injectionSwitch.y))))))))) || false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! ((bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true, true, false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))), (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, false)))) && true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true)), (bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(2957.0705, min(_GLF_IDENTITY(2957.0705, (2957.0705) - 0.0), _GLF_IDENTITY(2957.0705, max(_GLF_IDENTITY(2957.0705, 1.0 * (2957.0705)), 2957.0705)))), 9.1, -1265.1987)) : injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(- vec2(-8.4, -7.0), clamp(- vec2(-8.4, -7.0), - vec2(-8.4, -7.0), - vec2(-8.4, -7.0))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(2957.0705, min(_GLF_IDENTITY(2957.0705, (2957.0705) - 0.0), _GLF_IDENTITY(2957.0705, max(_GLF_IDENTITY(2957.0705, 1.0 * (2957.0705)), 2957.0705)))), 9.1, -1265.1987)) : injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(- vec2(-8.4, -7.0), clamp(- vec2(-8.4, -7.0), - vec2(-8.4, -7.0), - vec2(-8.4, -7.0))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(1u << _GLF_IDENTITY(uint(1u), uint(1u))))), 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) * 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(1u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(1u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec3(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u)))))) ^ 0u), uint(uint(1u << _GLF_IDENTITY(uint(1u), uint(1u)))))) + 0u)) / 1u), 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) * 1u))) : _GLF_FUZZED(subgroup_id)))), 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) >> 0u)))), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? _GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), uint(_GLF_IDENTITY(1u, (1u) | (1u ^ 1u))))) : _GLF_FUZZED((subgroup_local_id / subgroup_local_id))))), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_id))))))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | ((1u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))) / 1u), uint(1u), uint(1u)))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(_GLF_IDENTITY(1u, (1u) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))), max((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))))))) * 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(_GLF_IDENTITY(1u, (1u) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))), max((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))))))) * 1u, (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(_GLF_IDENTITY(1u, (1u) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))), max((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), (0u | 0u), 1u, 1u))))), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) / 1u)))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))))))) * 1u))), 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(163082u, 187606u, 162972u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), max(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(atomicMax(subgroup_id, workgroup_id)) : uint(1u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) << 0u)))) * 1u), 0u, 0u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), max(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(atomicMax(subgroup_id, workgroup_id)) : uint(1u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) << 0u)))) * 1u), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), max(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(atomicMax(subgroup_id, workgroup_id)) : uint(1u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) << 0u)))) * 1u), 0u, 0u))))), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(163082u, 187606u, 162972u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) * 1u), 0u, 0u)))))))))) * (workgroup_base), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), uint(1u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)))), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec4(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((0u | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u | 0u) : _GLF_FUZZED(181490u))), (0u | 0u), 1u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u))), 0u ^ ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))))), uint(1u))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(14478u))), uint(1u))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, (((1u | 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec4(0u, 0u, (((1u | 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, (((1u | 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, (((1u | 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), max(uint(1u), uint(1u)))), _GLF_IDENTITY(1u, (1u) - 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), uint(1u))))))))), max(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (195201u & 0u), 0u)), (uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (195201u & 0u), 0u))) * 1u))), uint(1u)), (false ? _GLF_FUZZED(78556u) : _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) | 0u))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) * 1u), 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (195201u & 0u), 0u)), (uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (195201u & 0u), 0u))) * 1u))), uint(1u)), (false ? _GLF_FUZZED(78556u) : _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) | 0u))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) * 1u), 0u, 0u), 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(163082u, 187606u, 162972u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (0u | 0u) | (uint(1u)))) >> (1u ^ 1u)), uint(1u))))), 0u | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (0u | 0u) | (uint(1u)))) >> (1u ^ 1u)), uint(1u))))))) * 1u), 0u, 0u), (false ? _GLF_FUZZED(uvec3(163082u, 187606u, 162972u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) * 1u), 0u, 0u)) << uvec3(0u, 0u, 0u))))))))) * (workgroup_base), min(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), uint(1u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))), min(((1u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) + 0u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) / 1u)), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), uint(1u)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) << 0u)), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), max(uint(1u), uint(1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) * 1u), 0u, 0u), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(uvec3(163082u, 187606u, _GLF_IDENTITY(162972u, min(162972u, 162972u)))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) * 1u), 0u, 0u)))))))) * (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))), ((uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) << 0u)) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(uint(1u), uint(1u)), 1u))), _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))) / 1u)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u))), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u)))))), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u * (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(max(uint(1u), uint(1u)), (max(uint(1u), uint(1u))) * 1u)))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), 0u), (false ? _GLF_FUZZED(uvec3(163082u, 187606u, 162972u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) * 1u)), uint(1u))))) * 1u), 0u, 0u)))))))) * (workgroup_base))) : _GLF_FUZZED(mix(subgroup_size, subgroup_local_id, true))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))))) / _GLF_IDENTITY(1u, max(1u, 1u))) : _GLF_FUZZED(num_workgroup))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / _GLF_IDENTITY(1u, max(1u, 1u))) : _GLF_FUZZED(num_workgroup))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / _GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / _GLF_IDENTITY(1u, max(1u, 1u)))) >> 0u) : _GLF_FUZZED(num_workgroup))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) + 0u))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u), uint(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u, ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u) << 0u)))))), max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u), uint(uint((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u)))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u), uint(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_FUZZED(subgroup_size)))) ^ 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false))), true, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), true, true)), bool(bool(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), true, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6535.1596) : injectionSwitch.y)), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((injectionSwitch.y) + 0.0) * 1.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), injectionSwitch)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), injectionSwitch)).y))), false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -39.90))), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false), (bool(bvec2(false, false))) || false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-296.746)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0))) > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1.3)), bool(false))), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1.3)), bool(false))), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))) * mat2(1.0), ((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1.3)), bool(false))), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))) * mat2(1.0)) * mat2(1.0)))).x > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, bool(bool(true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), false, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1.3)), bool(false))), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false)))), _GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_IDENTITY(_GLF_FUZZED(-1.3), min(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.3)))), bool(false))), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))) * mat2(1.0), ((mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1.3)), bool(false))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1.3)), bool(false)))) / 1.0), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(_GLF_IDENTITY(7.5, (_GLF_IDENTITY(7.5, mix(float(_GLF_IDENTITY(7.5, mix(float(_GLF_FUZZED(-8450.0342)), float(7.5), bool(true)))), float(_GLF_FUZZED(float(48821))), bool(false)))) / 1.0)), (injectionSwitch)[1]), bvec2(false, true))) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (transpose(mat2(1.0))))))) * mat2(1.0)))).x > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(true, bool(bool(true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, exp(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y), true, false), true))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))).y)), false, true, true))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))) || false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), false, true, false))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false)))), ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false))))) || false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))))), true), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.3)), float(1.0), bool(true))), 1.0, 1.0)), 1.0, 1.0))))), injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) - 0.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(938.368)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), float(vec2((injectionSwitch.x), 0.0))), (injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, vec2(3066.1287, 860.476))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.7))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), false))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((1.5 + -2.8)) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(47.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)], uint(2), 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (64) / 1))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
