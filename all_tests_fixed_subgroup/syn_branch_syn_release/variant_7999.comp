#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
          return;
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), true)), true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-988.451, -4.5)) : injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7590.7032) : injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9105.7905) : injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-649.882, -2.8)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_size))), uint(6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec2(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (uint(uvec2(subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (true ? 1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u | (_GLF_IDENTITY(uint(uvec2(subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_size))), uint(6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec2(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * 1u))))) | (uint(uvec2(subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (true ? 1u << _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 1, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (_GLF_IDENTITY(0 ^ (0), 0 | (0 ^ (0)))) + 0)) : _GLF_FUZZED(64683)))) + 0), 1, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY((0) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((0) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0) : _GLF_FUZZED(-97560)))), 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0))))) - ivec4(0, 0, 0, 0)))), clamp((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), max(ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21654))), 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), max(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ~ (~ ((ivec4(0, 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(44185) : _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)))), 0))))), (ivec4(0, 1, 0, 0))))) | ((ivec4(0, 1, 0, 0)))) >> ivec4(0, 0, 0, 0)))), (~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(ivec4(4), ivec4(4))) ^ (_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), min((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), min((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0))), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), clamp(_GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, max(0, 0)))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | ((0 << _GLF_IDENTITY(int(4), int(4))) & -12640)))) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(0, 0, 0, 0))))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | ((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(_GLF_IDENTITY(0, 1 * (0)), 0, 0, 0)))))) | ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), 0, 0)), (true ? (ivec4(0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), 0, 0)) : _GLF_FUZZED(ivec4(54243, -20890, 28945, 49628)))) >> ivec4(0, 0, 0, 0), clamp((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(49018))), 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)) | ((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(6.4)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(15.19) : _GLF_ONE(1.0, injectionSwitch.y)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0))))))), ((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(6.4)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(15.19) : _GLF_ONE(1.0, injectionSwitch.y)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))) | ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (_GLF_IDENTITY(0, (0) - 0))), 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ ((_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))))), (~ (~ (ivec4(0, 1, 0, 0)))) | ivec4(0, 0, 0, 0)))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, 0))), (~ (~ (ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)))) | ivec4(0, 0, 0, 0))))), ((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, 0))), (~ (~ (ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)))) | ivec4(0, 0, 0, 0)))))) - 0)), ((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))), (~ (~ (ivec4(0, 1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, max(0, 0)))))))) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), ~ (~ (ivec4(0, 0, 0, 0)))))))))) | 0)) - 0), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(1, (1) | (1)), 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0), 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))))))), ~ (~ ((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, 0, 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, 0, 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))) | (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, 0, 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)))))))))))), (~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) - 0))))))), min((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (~ (ivec4(0, 1, 0, 0))), ivec4(0, 0, 0, 0) ^ (~ (~ (ivec4(0, 1, 0, 0)))))))), (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))))))) | 0), ~ (~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16820) : 1)), 0, 0))))))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))))), 0, 0), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))))), 0, 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))))), 0, 0), ivec4(0, 0, 0, 0) + (ivec4(0, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))))), 0, 0))))))), ~ (~ (ivec4(0, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (max(0, 0)), int(_GLF_IDENTITY(ivec4(~ (max(0, 0)), 1, 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(~ (max(0, 0)), 1, 1, 1))))))))))))))))))), min(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 1, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)))))), clamp((~ (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ~ (~ ((ivec4(0, 1, 0, 0))))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ~ (~ ((ivec4(0, 1, 0, 0))))), ~ (~ (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ~ (~ ((ivec4(0, 1, 0, 0)))))))))), (ivec4(0, 1, 0, 0))))) | ((ivec4(0, 1, 0, 0)))) >> ivec4(0, 0, 0, 0)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(0, 1, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) - 0))), 0, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), clamp(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) ^ 0)), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), 0, 0)) >> ivec4(0, 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)) + ivec4(0, 0, 0, 0))) << ivec4(0, 0, 0, 0))))))) | ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, _GLF_IDENTITY(0, (0) ^ 0), 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))))) / ivec4(1, 1, 1, 1)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (_GLF_IDENTITY(ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) * 1)), (ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) * 1))) << (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0))))))) - ivec4(0, 0, 0, 0))), (~ (~ (ivec4(0, 1, 0, 0)))) | ivec4(0, 0, 0, 0)))))), (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, _GLF_IDENTITY(0, 0 ^ (0))))), _GLF_IDENTITY((~ _GLF_IDENTITY((~ (ivec4(0, 1, 0, 0))), ~ (~ (_GLF_IDENTITY((~ (ivec4(0, 1, 0, 0))), (_GLF_IDENTITY((~ (ivec4(0, 1, 0, 0))), ((~ (ivec4(0, 1, 0, 0)))) | ((~ (ivec4(0, 1, 0, 0)))))) | ((~ (ivec4(0, 1, 0, 0))))))))), ivec4(0, 0, 0, 0) | ((~ _GLF_IDENTITY((~ (ivec4(0, 1, 0, 0))), ~ (~ (_GLF_IDENTITY((~ (ivec4(0, 1, 0, 0))), (_GLF_IDENTITY((~ (ivec4(0, 1, 0, 0))), ((~ (ivec4(0, 1, 0, 0)))) | ((~ (ivec4(0, 1, 0, 0)))))) | ((~ (ivec4(0, 1, 0, 0))))))))))) | ivec4(0, 0, 0, 0)))))), ((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)), min(_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))))), (~ (~ (ivec4(0, 1, 0, 0)))) | ivec4(0, 0, 0, 0))))))) | 0)) - 0), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0), 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0), 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)))), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0), 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))))))))))), ~ (~ ((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, 0, _GLF_IDENTITY(0, max(0, 0)))), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, _GLF_IDENTITY(0, max(0, 0)), 0)))))))))), (~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))), min((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))), (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))))))) | 0), ~ (~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(16820) : 1), ((false ? _GLF_FUZZED(16820) : 1)) + 0)), 0, 0))))))), ~ (~ (int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)), 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))), 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (max(0, 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (max(0, 0)), (false ? _GLF_FUZZED(-85875) : _GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (max(0, 0)))))), 1, 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(~ (max(0, 0)), 1, 1, 1))))))))))))))))))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 1, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0))), ((ivec4(0, 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)))) >> ivec4(0, 0, 0, 0))))), clamp((~ (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, _GLF_IDENTITY(0, (0 | 0) ^ (0))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), max(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ~ (~ ((ivec4(0, 1, 0, 0))))), (ivec4(0, 1, 0, 0))))) | ((ivec4(0, _GLF_IDENTITY(1, (1) - 0), 0, 0)))) >> ivec4(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-30143) : 0)), 0)), 0, 0)))), (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, 0 | (0)), 1, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) + 0))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) - 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(0, 1, 0, 0), (_GLF_IDENTITY(ivec4(0, 1, 0, 0), clamp(ivec4(0, 1, 0, 0), ivec4(0, 1, 0, 0), ivec4(0, 1, 0, 0)))) - (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) | (0))), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), clamp(_GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(1, (1) - 0), 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) - 0)), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83718) : _GLF_IDENTITY(1, ~ (~ (1))))), 0, 0)) >> ivec4(0, 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), min((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))))) | ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), _GLF_IDENTITY((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY((ivec4(0, 1, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(89510) : ~ (0))))), _GLF_IDENTITY(int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1)), (_GLF_IDENTITY(int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1)), (int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))) | (int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))) / 1)))))) >> ivec4(0, 0, 0, 0), clamp((ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(0, 1, 0, 0)) >> ivec4(0, 0, 0, 0), (ivec4(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1, 0, 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))) / ivec4(1, 1, 1, 1)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (~ (ivec4(0, 1, 0, 0))) ^ ivec4(0, 0, 0, 0))) << ivec4(0, 0, 0, 0)), clamp(~ _GLF_IDENTITY((ivec4(0, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-65222))), 0)), ((ivec4(0, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-65222))), 0))) | ((ivec4(0, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-65222))), 0)))), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, _GLF_IDENTITY(0, max(0, 0))))))) - ivec4(_GLF_IDENTITY(0, (0) >> (0 | 0)), 0, 0, 0))), (~ (~ (ivec4(0, 1, 0, 0)))) | ivec4(0, 0, 0, 0)))))), (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (false ? _GLF_FUZZED(max(ivec4(95205, -89408, 41822, 22138), -99794)) : ~ (ivec4(0, 1, 0, 0)))), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0))), (~ (~ (ivec4(0, 1, 0, 0)))) | ivec4(0, 0, 0, 0)))))), ((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), (_GLF_IDENTITY(~ (ivec4(0, 1, 0, 0)), clamp(~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0)), ~ (ivec4(0, 1, 0, 0))))) - _GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), (_GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), clamp(_GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), (ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0)) | (ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0))), _GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), clamp(ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0))), ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0)))) | (_GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0), (ivec4(0, 0, _GLF_IDENTITY(0, 0 + (0)), 0)) - ivec4(0, 0, 0, 0)))))), (~ (~ (ivec4(0, 1, 0, 0)))) | ivec4(0, 0, 0, 0))))))) | 0)) - 0), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0), ~ (~ _GLF_IDENTITY((ivec4(0, 1, 0, 0)), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min((ivec4(0, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0), 0)), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0), max(ivec4(0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0), ivec4(0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)))))) >> 0)))))))), ~ (~ ((~ (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ivec4(0, 0, 0, 0) ^ ((ivec4(0, 1, 0, 0)))), (_GLF_IDENTITY((ivec4(0, 1, 0, 0)), min(_GLF_IDENTITY((ivec4(0, 1, 0, 0)), ivec4(1, 1, 1, 1) * ((ivec4(0, 1, 0, 0)))), (ivec4(0, 1, 0, 0))))) - ivec4(0, 0, 0, 0)))))))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))), min((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))), (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))))), (~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))), min((int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0)))))), (int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), ~ (~ (ivec4(0, 1, 0, 0))))))))) ^ (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) * 1)))))) | 0), ~ (~ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) >> 0), 1, 0, 0), ~ (~ (ivec4(0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16820) : 1)), 0, 0))))))), ~ (~ (int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY((~ (1)), ((~ (1))) / 1), (~ (1)), (~ (1))))), 0, 0), ~ (~ (ivec4(0, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), ~ (_GLF_IDENTITY(~ (max(0, 0)), int(_GLF_IDENTITY(ivec4(~ (max(0, 0)), 1, 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(~ (max(0, 0)), 1, 1, 1))))))))))))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(75348))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))))) >> _GLF_IDENTITY(int(3), int(3))), bool(bvec2(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u), ~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) + 0u))));
 buf[virtual_gid] = _GLF_IDENTITY(1, ~ (~ (1)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, sin(0.0), 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     int i = 0;
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(2), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(int(int(7)))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)))), false, false)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), 0.0, 0.0)))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.4)), bool(false))), 0.0, 1.0, sqrt(sin(0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), determinant(mat3(sin(0.0), 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, sqrt(1.0), 0.0)))), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(9.2))))), (false ? _GLF_FUZZED(-6072.6209) : float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.4)), bool(false))), 0.0, 1.0, sqrt(sin(0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), determinant(mat3(sin(0.0), 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, sqrt(1.0), 0.0)))), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(9.2)))))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       return;
      }
    }
  }
 else
  {
  }
}
