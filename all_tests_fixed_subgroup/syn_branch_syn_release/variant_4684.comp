#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u))))) - 0u)) | (gl_WorkGroupSize)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), min(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), min(vec2(mat2(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(step(1.6, -8.7)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.8)), float(0.0), bool(true))), 0.0)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.8)), float(0.0), bool(true)), min(mix(float(_GLF_FUZZED(-0.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-0.8)), float(0.0), bool(true))))), 0.0)))))))))) + vec2(0.0, 0.0)).y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), min(vec2(mat2(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))), (true ? mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))) : _GLF_FUZZED(mat2(mat2x3(-270.038, 2.6, -3.7, 5433.6927, -96.68, 328.926)))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61), min(true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61), true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))))), (true ? mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0), (mat4x2(0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0)) * mat4(1.0))))), bool(true))) : _GLF_FUZZED(28.61)))) : _GLF_FUZZED(mat2(mat2x3(-270.038, 2.6, -3.7, 5433.6927, -96.68, 328.926)))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))), (true ? mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))) : _GLF_FUZZED(mat2(mat2x3(-270.038, 2.6, _GLF_IDENTITY(-3.7, max(-3.7, -3.7)), 5433.6927, -96.68, 328.926)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))) ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))), (true ? mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6508.2669)), (float(_GLF_FUZZED(6508.2669))) - determinant(mat3(0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))) : _GLF_FUZZED(mat2(mat2x3(-270.038, 2.6, -3.7, 5433.6927, -96.68, 328.926)))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))) : _GLF_FUZZED(28.61)))), (true ? mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(6508.2669)), float(0.0), bool(true))))), float(_GLF_FUZZED(float(false))), bool(false)))) : _GLF_FUZZED(28.61)))) : _GLF_FUZZED(mat2(mat2x3(-270.038, 2.6, -3.7, 5433.6927, -96.68, 328.926)))))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), _GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(float(0.0), 1.0, tan(0.0), tan(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat4x3(float(0.0), 1.0, tan(0.0), tan(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(mat4x3(float(0.0), 1.0, tan(0.0), tan(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat4x3(float(0.0), 1.0, tan(0.0), tan(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(float(0.0), 1.0, tan(0.0), tan(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat4x3(float(0.0), 1.0, tan(0.0), tan(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0))))))), bool(true))) : _GLF_FUZZED(28.61)))), (true ? mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6508.2669)), float(0.0), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))) : _GLF_FUZZED(28.61)))) : _GLF_FUZZED(mat2(mat2x3(-270.038, 2.6, -3.7, 5433.6927, -96.68, 328.926))))))) * vec2(1.0, 1.0))) + vec2(0.0, 0.0))))))).y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), min(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec2(mat2(injectionSwitch, 1.0, 0.0))))).y), float(mat2x4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), min(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec2(mat2(injectionSwitch, 1.0, 0.0))))).y), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))), injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(packSnorm2x16(injectionSwitch))), ((_GLF_IDENTITY(true, ! (! (true))) ? workgroup_id : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))) | ((true ? workgroup_id : _GLF_FUZZED(packSnorm2x16(injectionSwitch))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base : _GLF_FUZZED(185019u))) + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED(946.509), _GLF_IDENTITY(_GLF_FUZZED(429.566), (_GLF_FUZZED(429.566)) + sin(0.0))), max(vec2(_GLF_FUZZED(946.509), _GLF_FUZZED(429.566)), vec2(_GLF_FUZZED(946.509), _GLF_FUZZED(429.566)))), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) + 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(171419u)))))) + 0u)))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u | 0u))) / 1u) + 1) % subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-84799)))) % subgroup_size, (false ? _GLF_FUZZED((subgroup_id % num_workgroup)) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ 0u))))))), clamp((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85990))), (true ? 1 : _GLF_FUZZED(89530))), _GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0))) % subgroup_size, (false ? _GLF_FUZZED((subgroup_id % num_workgroup)) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), clamp((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), clamp(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(1, min(1, 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), clamp((_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY(1, min(1, 1))))))))))))), (1) | (1))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) | (1))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_id % num_workgroup), ((subgroup_id % num_workgroup)) << 0u)) : _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), uint(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size, (false ? _GLF_FUZZED((subgroup_id % num_workgroup)) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u ^ 0u)), subgroup_local_id + 1))) >> 0u)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (subgroup_size)), min(subgroup_size, subgroup_size)))))))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) / 1)))) ^ (_GLF_IDENTITY(1, (1) * 1)))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, cos(0.0), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), max(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))))), mix(vec4(((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), max(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))))))[0], ((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), max(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))))))[1], ((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), max(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))))))[2], _GLF_FUZZED(float(false))), vec4(_GLF_FUZZED(0.5), _GLF_FUZZED(-2.1), _GLF_FUZZED(406.322), ((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), max(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))))))[3]), bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)))))), 1.0)), 1.0 * (determinant(mat2(1.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0) : _GLF_FUZZED(8.5))), 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(2.4))), 0.0, 0.0, 0.0)), 1.0)))), log(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(34.63)), float(injectionSwitch.y), bool(true))))) * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-428.206) : 1.0))))) - 0.0)), (sqrt(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-8.5) : _GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(1.0, (1.0) - 0.0))) * 1.0)))), clamp(float(mat3(0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY((cos(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))) : _GLF_FUZZED(distance(ceil(-6.0), 3.3)))))), mix(float(_GLF_FUZZED((+ (+ 2.4)))), float(_GLF_IDENTITY((cos(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))) : _GLF_FUZZED(distance(ceil(-6.0), 3.3)))))), min((cos(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))) : _GLF_FUZZED(distance(ceil(-6.0), 3.3)))))), _GLF_IDENTITY((cos(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))) : _GLF_FUZZED(distance(ceil(-6.0), 3.3)))))), ((cos(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))) : _GLF_FUZZED(distance(ceil(-6.0), 3.3))))))) - 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / abs(1.0)), 0.0, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), log(1.0), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, cos(0.0), 0.0, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), log(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) * 1.0, max(_GLF_IDENTITY((0.0), ((0.0)) + abs(0.0)) * 1.0, (0.0) * 1.0)), _GLF_IDENTITY(((0.0) * 1.0) - 0.0, mix(float(_GLF_FUZZED(5.7)), float(((0.0) * _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0), bool(true))))), 0.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-9188.8233 - -4.9))), float(0.0), bool(true))), cos(0.0), 0.0, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), log(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(((0.0) * 1.0) - 0.0, mix(float(_GLF_FUZZED(5.7)), float(((0.0) * 1.0) - 0.0), bool(true))))), 0.0, 0.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(float(mat3(0.0, cos(0.0), 0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7608.2608) : length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0)), log(1.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), clamp(float(_GLF_IDENTITY(mat3(0.0, cos(0.0), 0.0, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), log(1.0), 0.0, 0.0, 0.0, 1.0), mat3(mat3x4(mat3(0.0, cos(0.0), 0.0, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), log(1.0), 0.0, 0.0, 0.0, 1.0))))), float(mat3(0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), determinant(mat2(1.0, 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0)), log(1.0), 0.0, 0.0, 0.0, 1.0)), float(mat3(0.0, cos(0.0), 0.0, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), log(_GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(32.30))), float(mat3(0.0, cos(0.0), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), 0.0), vec4(0.0, 0.0, 0.0, 0.0)), min(max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))), 1.0)), log(1.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))), injectionSwitch.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) >> 0u)) - 0u)), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), float(_GLF_FUZZED(-5.5)), bool(false)))), float(mat4x2(float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), float(_GLF_FUZZED(-5.5)), bool(false)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ ((subgroup_local_id + 1) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2159.2414) : injectionSwitch.y))) * 1.0), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(min(subgroup_local_id, subgroup_local_id), 0u, 1u, 0u), ~ (~ (uvec4(min(subgroup_local_id, subgroup_local_id), 0u, 1u, 0u))))), ~ (~ (uint(_GLF_IDENTITY(uvec4(min(subgroup_local_id, subgroup_local_id), 0u, 1u, 0u), ~ (~ (uvec4(min(subgroup_local_id, subgroup_local_id), 0u, 1u, 0u)))))))))) << (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))))).y) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))))).y)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u + (uint(_GLF_IDENTITY(2, (2) - (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), int(ivec2(int(ivec4(0, 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), 0)))) | _GLF_IDENTITY(0, 0 ^ (0))))))), 4, _GLF_IDENTITY(64, (64) | 0), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(vec2(-2.1, 22.78))) : injectionSwitch)).y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.6) : injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-5.7) : injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
