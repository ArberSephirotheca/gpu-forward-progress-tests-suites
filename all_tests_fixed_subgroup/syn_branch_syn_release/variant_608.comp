#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, _GLF_IDENTITY(bool(bvec2((bool(false)) && true, true)), ! (! (bool(bvec2((bool(false)) && true, true)))))))), true && (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(false), false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(false), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(bool(false), false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(false), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(bool(false), false)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(133.489))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-3315.0319)), bool(false))), dot(vec4(0.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, length(0.0)))).x < injectionSwitch.y)), true)), (bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (true), ! (! (false || (true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, length(0.0)))).x < injectionSwitch.y)), true))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y))), false), true)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, true))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), false || (bool(bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))))[0], min((vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(856.686), max(_GLF_FUZZED(856.686), _GLF_FUZZED(856.686))) : 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0)))[0])), (vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * 1)]), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378)))), bvec2(false, false))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))), 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))), 0.0, 0.0)), (vec2(mat2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))), 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))), 0.0, 0.0))))))[0], min((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0)))[0])), (vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378)))), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))))), mix(vec2((mat2(1.0) * ((injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7920.6050)), _GLF_IDENTITY(bool(false), false || (bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))))[0], min((vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asin(4.9)) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.5)), float(0.0), bool(true))))), 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0)))[0])), (vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378)), (vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378))) / vec2(1.0, 1.0)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(_GLF_IDENTITY(642.378, 1.0 * (_GLF_IDENTITY(642.378, (642.378) - 0.0))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))[0], _GLF_FUZZED((false ? 1.8 : -2504.4109))), vec2(_GLF_FUZZED(-9.4), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_IDENTITY((vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED(9427.4883), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(814.991)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), injectionSwitch.x)))))[0], min((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), sin(0.0), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-685.267) : float(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), sin(0.0), 0.0))))), 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0)))[0])), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), float(mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), (_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y)) - 0.0), _GLF_FUZZED(642.378)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(vec3(-7.5, 4.0, -4.3).y), _GLF_FUZZED(642.378)))), bvec2(false, false)))))[1]), bvec2(false, _GLF_IDENTITY(true, (true) || false)))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (true ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) * vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), min((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))))), 1.0, 1.0), (false ? _GLF_FUZZED(mat2(-9.1, _GLF_IDENTITY(2.0, max(2.0, 2.0)), -7.8, -272.381)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0))))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat2(-9.1, 2.0, -7.8, -272.381)) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0))))))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / exp(0.0), float(mat3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, exp(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, exp(0.0), 0.0), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(dot(vec3(0.0, exp(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, exp(0.0), 0.0), vec3(0.0, 1.0, 0.0)))) + 0.0), 1.0))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(20.62))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0)))), 1.0, 1.0))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(20.62))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0)))), 1.0, 1.0)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(20.62))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))))), 1.0, 1.0)))))), false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(mat4x3(sqrt(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) / sqrt(1.0)), float(_GLF_FUZZED(126.488)), bool(false)))))))))), (true ? float(mat3x2(0.0, 1.0, 0.0, 0.0, sin(0.0), sqrt(0.0))) : _GLF_FUZZED(8917.5763)))), 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-306.375)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(float(1.0))))), 0.0, 0.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - tan(0.0))), ((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - tan(0.0)))) / 1.0) + 0.0)))), dot(vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec3(8.5, -214.482, -3922.0803)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0)))), 1.0, 1.0)))), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, true && (true))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), false)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), (false) || false)))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)) ^ 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)) ^ 0u)) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) || false), ! (! (bool(bvec2(false, false))))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), bool(bool((bool(bvec2(false, false))))))))))), _GLF_IDENTITY(bool(bvec3(bool(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))), _GLF_IDENTITY(! (! (bool(bvec2(false, false)))), true && (_GLF_IDENTITY(! (! (bool(bvec2(false, false)))), (! _GLF_IDENTITY((! (bool(bvec2(false, false)))), (_GLF_IDENTITY((! (bool(bvec2(false, false)))), bool(bvec2((! (bool(bvec2(false, false)))), false)))) || false)) && true))))))), true, true)), bool(bvec2(bool(bvec3(bool(! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), true, true)), false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), max(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + _GLF_IDENTITY((mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-86.85)), float(1.0), bool(true)))), float(_GLF_FUZZED(-2.0)), bool(false))), injectionSwitch.y)) * (injectionSwitch)), vec2(mat2((mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-86.85)), float(1.0), bool(true)))), float(_GLF_FUZZED(-2.0)), bool(false))), injectionSwitch.y)) * (injectionSwitch)), determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), 1.0)))))), 1.0, 0.0))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) * (injectionSwitch)))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)) || false), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u))))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, 0u | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y))) ^ _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(((0u | 0u)), max(_GLF_IDENTITY(((0u | 0u)), clamp(((0u | 0u)), ((0u | 0u)), ((0u | 0u)))), ((0u | 0u)))) - 0u)) >> 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y) ^ (0u | 0u))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)) + 0u)), (subgroup_size) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ subgroup_id)) : _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), min(~ (uint(0u)), ~ (uint(0u))))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)), subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) >> 0u)), (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-36536))), int(int(1)))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))), 1u * ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(int(1))), ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(int(1))))))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (subgroup_size)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) ^ 0u)), workgroup_base)) + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))) % subgroup_size)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(150297u)), min((true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), uint(uvec4(uint(subgroup_id), 1u, 1u, 0u)))))) - 0u) : _GLF_FUZZED(150297u)), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(150297u))))), (subgroup_id) + 0u) * subgroup_size + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) + 1) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) + 0), clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)), (1) + 0)) + 0), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0)))) + 0, (false ? _GLF_FUZZED((-40648 & 54640)) : (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0)))) + 0))), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((1) + 0, (_GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0))) | ((1) + 0)))) + 0)))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 1u))))), (~ ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 1u)))))) / 1u))) | 0u) % subgroup_size)))) / (0u | _GLF_IDENTITY(1u, (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)), subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) >> 0u)), (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-36536))), int(int(1)))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))), 1u * ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(int(1))), ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(int(1))))))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (subgroup_size)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) ^ 0u)), workgroup_base)) + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))) % subgroup_size)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(150297u)), min((true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), uint(uvec4(uint(subgroup_id), 1u, 1u, 0u)))))) - 0u) : _GLF_FUZZED(150297u)), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(150297u))))), (subgroup_id) + 0u) * subgroup_size + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) + 1) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) + 0), clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)), (1) + 0)) + 0), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0)))) + 0, (false ? _GLF_FUZZED((-40648 & 54640)) : (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0)))) + 0))), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((1) + 0, (_GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0))) | ((1) + 0)))) + 0)))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 1u))))), (~ ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 1u)))))) / 1u))) | 0u) % subgroup_size)))) / (0u | _GLF_IDENTITY(1u, (1u) | (1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))) + uvec2(0u, 0u))), clamp((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)) + uvec2(0u, 0u))) | (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), ~ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) << uvec2(0u, 0u))) | (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))))) + uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)) | uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))))) + uvec2(0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec2(38545u, 137411u) ^ GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)) : ~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), max(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))) << uvec2(0u, 0u)))) / uvec2(1u, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(4u), uvec2(4u))) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u))) | uvec2(1u, 1u)) * (uvec2(0u, 0u))))), min((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), (~ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), max(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), ~ (~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))))))) << uvec2(0u, 0u)))) / uvec2(1u, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), (~ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), max(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), ~ (~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))))))) << uvec2(0u, 0u)))) / uvec2(1u, 1u)))) + uvec2(0u, 0u)) | ((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), (~ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), max(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), ~ (~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))))))) << uvec2(0u, 0u)))) / uvec2(1u, 1u)))) + uvec2(0u, 0u))))), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)) - uvec2(0u, 0u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), uvec2(uvec4((~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), (~ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), max(~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))) << uvec2(0u, 0u)))) / uvec2(1u, 1u)))) + uvec2(0u, 0u)))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))) + uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)) / uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))), uvec2(1u, 1u) * (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))))))))), (uvec2(0u, 0u) | uvec2(1u, 1u)) * (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, uvec2(uvec3(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 1u)))), _GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), uvec2(0u, 0u) + (_GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), (true ? ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (_GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))) | uvec2(0u, 0u)))))))))), uvec2(uvec2((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))))))))) + uvec2(0u, 0u))), (true ? (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))), (uvec2(0u, 0u) | uvec2(1u, 1u)) * (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), _GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), uvec2(0u, 0u) + (_GLF_IDENTITY(~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), (true ? ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))))))))), uvec2(uvec2((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), ~ (~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))))))) + uvec2(0u, 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))))))).x + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, false, true))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), cos(sqrt(0.0)), 1.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat2x3(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), cos(sqrt(0.0)), 1.0, 1.0, 0.0, sqrt(0.0)))))), float(vec4(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), cos(sqrt(0.0)), 1.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat2x3(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), cos(sqrt(0.0)), 1.0, 1.0, 0.0, sqrt(0.0)))))), 1.0, 1.0, 0.0)))) / sqrt(1.0)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false))), false, false)))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false))), false, false))))))) || false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9.4 * -51.98)), _GLF_FUZZED(7.1)), bvec2(false, false))).x) / sqrt(1.0)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(1608.6429), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.y : _GLF_FUZZED(pow(-26.59, -6.7))))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u ^ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))), 4, _GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64), ((64)) | ((64)))), (~ (_GLF_IDENTITY((64), ((64)) | _GLF_IDENTITY(((64)), (((64))) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), (int(_GLF_IDENTITY(0, min(0, 0)))) | (int(_GLF_IDENTITY(0, min(0, 0))))), int(0))))))) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) ^ 0))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false), true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-6.6, 3299.8194, 8.9, 19.57))))))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY(transpose(transpose(transpose(mat2(1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? transpose(transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(6.0, -3.4, 8.4, -3.3)))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))) + vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), true, false, false))), true)))), true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), true, false, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bool(injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), true)))), true))))) && true))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), false || (false || (false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7)))) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))) < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(72.31)), float(injectionSwitch.y), bool(true)))) || false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8173.8176)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) && true))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * vec2(1.0, 1.0)) : injectionSwitch)))))).x > injectionSwitch.y)) || (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false))), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false)), true)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), (_GLF_IDENTITY(false, true && (false))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false))))))))) || false))) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), false, true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))))), transpose(transpose((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))))))))) - mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(mat2(75.29, -5989.4770, -6119.8956, _GLF_IDENTITY(-6.5, max(_GLF_IDENTITY(-6.5, (true ? -6.5 : _GLF_FUZZED(1.9))), -6.5)))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(75.29, -5989.4770, -6119.8956, _GLF_IDENTITY(-6.5, max(_GLF_IDENTITY(-6.5, (true ? -6.5 : _GLF_FUZZED(1.9))), -6.5)))), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat2(75.29, -5989.4770, -6119.8956, _GLF_IDENTITY(-6.5, max(_GLF_IDENTITY(-6.5, (true ? -6.5 : _GLF_FUZZED(1.9))), -6.5))))), (transpose(_GLF_FUZZED(mat2(75.29, -5989.4770, -6119.8956, _GLF_IDENTITY(-6.5, max(_GLF_IDENTITY(-6.5, (true ? -6.5 : _GLF_FUZZED(1.9))), -6.5)))))) - mat2(0.0, 0.0, 0.0, 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec4(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))).x > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))).x > injectionSwitch.y))))))), true, false, true))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
