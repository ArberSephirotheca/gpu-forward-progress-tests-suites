#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, false))))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), float(vec2(1.0, 0.0))), 1.0)))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(sqrt(1.0), 0.0, 0.0), (true ? vec3(sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(vec3(-1.3, 3.6, 2246.4047))))), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : 1.0))), 0.0, 0.0))), 0.0)))), mix(float(_GLF_FUZZED(-7.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), 0.0), mat4x3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(asin(vec4(4.2, 476.176, 22.92, 9.1))) : _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(4137.1152, -882.164, -0.4, 4463.5702)) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)))), 0.0, 0.0, abs(1.0)), (mat2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)))), 0.0, 0.0, abs(1.0))) * mat2(1.0)))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(sqrt(1.0), 0.0, 0.0))), 0.0))))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))), 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), clamp(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), vec3(sqrt(1.0), 0.0, 0.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-18.03, 3.2, -2.7, -37.47)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), max(_GLF_IDENTITY(vec3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? vec3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(vec3(-9.6, -3.5, 4.1)))), vec3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), 0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(14.24) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(15.63, -845.147, 2.0).t)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), mat3(1.0) * (vec3(sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(15.63, -845.147, 2.0).t)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), 0.0))))), 0.0))))), bool(true)), min(mix(float(_GLF_FUZZED(-7.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, length(0.0), _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), max(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, 1.0)), 0.0 + (float(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(sqrt(1.0), 0.0, 0.0), (false ? _GLF_FUZZED(cos(vec3(7.8, -190.027, 58.05))) : vec3(sqrt(1.0), 0.0, 0.0))))), 0.0))))), bool(true)), mix(float(_GLF_FUZZED(-7.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.6) : 1.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED((+ 3.9))), bool(false))))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(687.854)), bool(false))), 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.x, 0.0, length(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), 0.0))))), bool(true)))))) > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-9.5)), bool(false)))), false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false, false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-9.5)), bool(false)))), false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false, false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-9.5)), bool(false)))), false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false, false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-9.5)), bool(false)))), false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false, false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, length(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0)), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-9.5)), bool(false)))), false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false, false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), 0u | ((~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))) / 1u)))) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) / int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.8) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) / 1)) | 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))) : _GLF_FUZZED(7693)), 1 * ((true ? _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))) : _GLF_FUZZED(7693))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | 0), (true ? _GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, max(4, 4))), ~ (_GLF_IDENTITY(4, int(ivec2(4, 1)))), ~ (4))) : _GLF_FUZZED(7693))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | 0), (true ? _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))) : _GLF_FUZZED(7693))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-56522) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ (4), ~ (4)), (min(~ (4), ~ (4))) >> 0)), (true ? ~ (4) : _GLF_FUZZED(7693))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), (true ? ~ (4) : _GLF_FUZZED(7693))), 1))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ (4), ~ (4)), clamp(_GLF_IDENTITY(min(~ (4), ~ (4)), ~ (~ (_GLF_IDENTITY(min(~ (4), ~ (4)), (_GLF_IDENTITY(min(~ (4), ~ (4)), clamp(min(~ (4), ~ (4)), min(~ (4), ~ (4)), min(~ (4), ~ (4))))) | (min(~ (4), ~ (4))))))), _GLF_IDENTITY(min(~ (4), ~ (4)), (_GLF_IDENTITY(min(~ (4), ~ (4)), max(min(~ (4), ~ (4)), min(~ (4), ~ (4))))) | 0), min(~ (4), _GLF_IDENTITY(~ (4), (0 ^ 0) + (~ (4))))))), (true ? ~ (4) : _GLF_FUZZED(7693))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ (4), ~ (4)), (false ? _GLF_FUZZED(i) : min(~ (_GLF_IDENTITY(4, (4) | 0)), ~ (4)))))) ^ 0), (true ? ~ (4) : _GLF_FUZZED(7693))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(i)))) | 0), min(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (~ (4)) | (~ (4)))), int(ivec3(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | (~ (4)), (true ? (~ (4)) | (~ (4)) : _GLF_FUZZED(-25723))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ~ (~ ((4)))), (_GLF_IDENTITY(~ (4), (~ (4)) - 0)) | (~ (4)))), int(ivec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY((~ (4)) | (~ (4)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true))) && true) ? (~ (4)) | (~ (4)) : _GLF_FUZZED(-25723))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (4))), (true ? ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(69498, (69498) | 0))))) : _GLF_IDENTITY(_GLF_FUZZED(7693), (_GLF_IDENTITY(_GLF_FUZZED(7693), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), int(2))) | (_GLF_IDENTITY(int(2), int(2))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7693), max(_GLF_FUZZED(7693), _GLF_FUZZED(7693))), min(_GLF_FUZZED(7693), _GLF_IDENTITY(_GLF_FUZZED(7693), (_GLF_IDENTITY(_GLF_FUZZED(7693), (_GLF_FUZZED(7693)) >> 0)) >> (1 ^ 1))))))) | (_GLF_FUZZED(7693))))))), 1))), 0 | (false ? _GLF_IDENTITY(_GLF_FUZZED(-56522), (_GLF_FUZZED(-56522)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), (true ? ~ (4) : _GLF_FUZZED(7693))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), (true ? ~ (4) : _GLF_FUZZED(7693))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), min(~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ _GLF_IDENTITY((4), min((4), (4))), ~ _GLF_IDENTITY((4), ((4)) ^ 0)), (false ? _GLF_FUZZED(i) : min(~ (_GLF_IDENTITY(4, (4) | 0)), ~ (4)))))) ^ 0), (true ? ~ (4) : _GLF_FUZZED(7693))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))), ((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))) >> 0), int(ivec3(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | (~ (4)), (true ? (~ (4)) | (~ (4)) : _GLF_FUZZED(-25723))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (4))), (_GLF_IDENTITY(true, (true) && true) ? ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(69498)))) : _GLF_FUZZED(7693)))), int(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), min(~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ _GLF_IDENTITY((4), min((4), (4))), ~ _GLF_IDENTITY((4), ((4)) ^ 0)), (false ? _GLF_FUZZED(i) : min(~ (_GLF_IDENTITY(4, (4) | 0)), ~ (4)))))) ^ 0), (true ? ~ (4) : _GLF_FUZZED(7693))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))), ((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))) >> 0), int(ivec3(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | (~ (4)), (true ? (~ (4)) | (~ (4)) : _GLF_FUZZED(-25723))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (4))), (_GLF_IDENTITY(true, (true) && true) ? ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(69498)))) : _GLF_FUZZED(7693)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), min(~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ _GLF_IDENTITY((4), min((4), (4))), ~ _GLF_IDENTITY((4), ((4)) ^ 0)), (false ? _GLF_FUZZED(i) : min(~ (_GLF_IDENTITY(4, (4) | 0)), ~ (4)))))) ^ 0), (true ? ~ (4) : _GLF_FUZZED(7693))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))), ((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))) >> 0), int(ivec3(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | (~ (4)), (true ? (~ (4)) | (~ (4)) : _GLF_FUZZED(-25723))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (4))), (_GLF_IDENTITY(true, (true) && true) ? ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(69498)))) : _GLF_FUZZED(7693))))) * 1), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), (true ? ~ (4) : _GLF_FUZZED(7693))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((4), max((4), (4))), min(_GLF_IDENTITY((4), max((4), (4))), _GLF_IDENTITY((4), max((4), (4))))), _GLF_IDENTITY(min(~ (4), ~ (4)), (min(~ (4), ~ (4))) | (min(~ (4), ~ (4))))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), min((4), (_GLF_IDENTITY(4, 0 ^ (4))))), ~ _GLF_IDENTITY((4), ((4)) ^ 0)), (false ? _GLF_FUZZED(i) : min(~ (_GLF_IDENTITY(4, (4) | 0)), ~ (4)))))) ^ _GLF_IDENTITY(0, clamp(0, 0, 0))), (true ? ~ (4) : _GLF_FUZZED(7693))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) << 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | (~ (4)), ((~ (4)) | (~ (4))) << 0))), ((_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))) >> 0), int(ivec3(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | _GLF_IDENTITY((~ (4)), clamp((~ (4)), _GLF_IDENTITY((~ (4)), ((~ (4))) + 0), (~ (4)))), (true ? (~ (4)) | (~ (4)) : _GLF_FUZZED(-25723))))), 1, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-38.31), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-15.96)), bvec2(true, false))).y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0)))))))), ~ (4))), (_GLF_IDENTITY(true, (true) && true) ? ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(69498, ~ (~ (69498))))))) : _GLF_FUZZED(7693)))))) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6791.3171) : _GLF_ZERO(0.0, injectionSwitch.x))))), 1))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4((_GLF_IDENTITY(4, (4) | 0)), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4)))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
    {
     case 1:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     fract(vec2(-0.8, 2.7))[1];
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false))))))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))))))) && true))))))), false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     case 14:
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), float(_GLF_FUZZED(-85.83)), bool(false))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2x4(vec2(mat2(injectionSwitch, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))).y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2x4(vec2(mat2(injectionSwitch, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))).y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2x4(vec2(mat2(injectionSwitch, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))).y))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2x4(vec2(mat2(injectionSwitch, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), min(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2x4(vec2(mat2(injectionSwitch, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2x4(vec2(mat2(injectionSwitch, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))).y)))))))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))), 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, abs(0.0), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(6.6, -0.5)), min(_GLF_FUZZED(vec2(6.6, -0.5)), _GLF_FUZZED(vec2(6.6, -0.5)))), (true ? _GLF_FUZZED(vec2(6.6, _GLF_IDENTITY(_GLF_IDENTITY(-0.5, (-0.5) - 0.0), (false ? _GLF_FUZZED(599.747) : _GLF_IDENTITY(-0.5, (-0.5) - 0.0))))) : _GLF_FUZZED(vec2(-3.3, 30.53)))))), injectionSwitch)).y) || false)))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false, false, false)))))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       barrier();
      }
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 60:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))) && true), false, false, true))))), false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     while(_GLF_IDENTITY((mat3x2(474.436, -511.159, -5.2, 5.1, 3146.5310, _GLF_IDENTITY(6017.3287, mix(float(_GLF_IDENTITY(6017.3287, min(6017.3287, 6017.3287))), float(_GLF_FUZZED(6.6)), bool(false)))) == mat3x2(-8.5, 3.4, 8967.4301, -547.084, -327.384, 41.39)), bool(bvec3((mat3x2(474.436, -511.159, -5.2, 5.1, 3146.5310, 6017.3287) == mat3x2(-8.5, 3.4, 8967.4301, -547.084, -327.384, 41.39)), false, true))))
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), false || ((! (_GLF_IDENTITY(false, false || (false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), ! (! (! (false))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), ! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     case 26:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1282.3196)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     uvec2 _GLF_SWITCH_0_0v[83], _GLF_SWITCH_0_1v[13];
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), true)))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || ((! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true)))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-356.052 - 2132.6317))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}
