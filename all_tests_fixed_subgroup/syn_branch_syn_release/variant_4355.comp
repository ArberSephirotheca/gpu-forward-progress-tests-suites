#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7199.9606)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(119.894)), bool(false))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.5)), bool(false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.95))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.95)))) + 0.0), 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.95))), 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.95))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(float(_GLF_FUZZED(-4.4)), float(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.95))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), bool(true)))) - 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.95))), 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(42.00)), vec2(_GLF_FUZZED((- -5697.6862)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && true), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), uint(uvec3(uint(uint(workgroup_base)), 1u, 1u))))), 1u * (clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) >> 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), uint(uvec3(uint(uint(workgroup_base)), 1u, 1u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)), (true ? transpose(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat4x2(9.9, 517.970, -7834.1688, -1.6, -2098.3405, -50.51, 76.81, 7.0)))))))).x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u)))) * 1u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u)))) * 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), ((uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))) | ((uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))))), (subgroup_id) / 1u)))) * 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) / 1u)))) * 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), _GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) | ((subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec3(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (subgroup_id) / 1u)))) * 1u))))))))) | 0u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))))) : _GLF_FUZZED(subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))))) : _GLF_FUZZED(subgroup_size))) | 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))))) : _GLF_FUZZED(subgroup_size))) | 0u, 1u, 1u)))) / 1u))) | _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | _GLF_IDENTITY(0u, (0u) << 0u))) / 1u) * subgroup_size + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), min(uint(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(_GLF_IDENTITY(5u, ~ (~ (5u))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) + (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size, ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size) * 1u)), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uvec3(73910u, 90241u, 116686u)[0]) : _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), (subgroup_id * subgroup_size) ^ 0u), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) >> 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u))), (_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u)))) / 1u), _GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u)))))) >> 0u)) ^ 0u)))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) >> 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u))), (_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u)))) / 1u), _GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 0u, 1u)))))) >> 0u)) ^ 0u)))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) + _GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), (false ? _GLF_FUZZED(atomicMax(subgroup_id, num_workgroup)) : ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size))), 0u + (((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) | uvec2(0u, 0u)).x + 1) % subgroup_size))), _GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size), (((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> 0u), 1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))))))), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) / 1u)) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(163091u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> 0u), 1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))) + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size)));
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) | 0u)) / 1u);
 if(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, false || _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (1) | (_GLF_IDENTITY(1, 0 ^ (1)))) < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).x + 1 < subgroup_size))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), uvec2(0u, 0u) ^ (min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)))).x + 1 < subgroup_size)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(1u, 1u) * (uvec2(uvec4(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) : _GLF_FUZZED(uvec2(112788u, 115595u)))), min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).x + 1 < subgroup_size))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(1u, 1u) * (uvec2(uvec4(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) : _GLF_FUZZED(uvec2(112788u, 115595u)))), min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).x + 1 < subgroup_size))))))), true, true, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(1u, 1u) * (uvec2(uvec4(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) : _GLF_FUZZED(uvec2(112788u, 115595u)))), min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).x + 1 < subgroup_size))))))), true, true, true)), false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, false)), false)))) && (false)), false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), clamp((uint(2)), _GLF_IDENTITY((uint(2)), uint(uint(_GLF_IDENTITY((uint(2)), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0))), int(int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0)))))), _GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0))), (_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0)))))))))))))), (uint(2)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), clamp((_GLF_IDENTITY(uint(2), (uint(2)) + 0u)), _GLF_IDENTITY((uint(2)), uint(uint(_GLF_IDENTITY((uint(2)), 0u ^ ((uint(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0)))))))))), (uint(2)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), clamp(_GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))))), _GLF_IDENTITY((uint(2)), uint(uint(_GLF_IDENTITY((uint(2)), 0u ^ ((uint(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, (2) << 0)))))))))), (uint(2)))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), 0u | (uint(2)))), clamp((uint(2)), _GLF_IDENTITY((uint(2)), uint(uint(_GLF_IDENTITY((uint(2)), 0u ^ ((uint(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19350) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, min((2) << 0, _GLF_IDENTITY((2) << 0, int(int((2) << 0))))))))))))))), (uint(2))))) / 1u)))) / 1u) | (uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))))), 0 + ((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, ~ (~ (6)))))), int(6)))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), _GLF_IDENTITY(int(ivec3(~ (~ (64)), 1, 1)), (int(ivec3(~ (~ (64)), 1, 1))) - 0)))))), (64) | (64)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-35.98) : injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2((vec2(vec3(injectionSwitch, 1.0)))[0], _GLF_FUZZED(-9.6)), vec2(_GLF_FUZZED(-4.6), (vec2(vec3(injectionSwitch, 1.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false, false, true))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))), (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.0) : injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.0) : injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}
