#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), bool(bvec4(! (false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0))) * mat2(1.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x : _GLF_FUZZED(-2.2))), 1.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, false || (true)))), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, false, true)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, abs(0.0))), max(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, abs(0.0))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, abs(0.0))))))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(-223.608)), bool(false))))), float(injectionSwitch.y), bool(true)))))) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, abs(0.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.y), bool(true)))))) * 1.0) - 0.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))], mix(float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) >> (-80459 & 0))], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) >> (-80459 & 0))], (injectionSwitch[_GLF_IDENTITY(0, (0) >> (-80459 & 0))]) / 1.0), injectionSwitch[_GLF_IDENTITY(0, (0) >> (-80459 & 0))]))), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (-80459 & 0))]), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (-80459 & 0))]), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))))))), injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) + abs(vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), float(_GLF_FUZZED(9.7)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))) && true))), float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (_GLF_IDENTITY(-80459, ~ (~ (_GLF_IDENTITY(-80459, clamp(-80459, -80459, -80459))))))) & 0))]), max(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), _GLF_IDENTITY(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), float(mat4x3(float(injectionSwitch[_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(-80459, 0 ^ (-80459)) & 0))]), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), float(_GLF_FUZZED(9.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7)))), 1.0, 0.0))))) : _GLF_FUZZED(-2.9))), injectionSwitch[1])).x > injectionSwitch.y)))) && true), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))))), 1u)), 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))))), 1u)), 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : uint(1u))), min(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))))))), 1u)), 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))))), 1u)), 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))) * (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))))), 1u)), 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u & 80234u)), uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))))), 1u)), 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (gl_WorkGroupID)).x) | 0u)) << 0u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch))) * mat2(1.0)), injectionSwitch)).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) << 0u) + _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(1018u) : _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base)))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y) / 1.0))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))), false, false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bool(! (! (! (_GLF_DEAD(false)))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))))), ! (! (! (! (! (_GLF_DEAD(false)))))))), false, false), true)), false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, true)))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))), false, false), true)), false)))), false)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), false, false, false)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true)))), false, false), false)))))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), uint(uvec2(_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), clamp(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))))), 1u)))) << 0u), (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), uint(uvec2(_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), clamp(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))))), 1u)))) << 0u)) * 1u), min(~ (~ (~ (workgroup_base))), ~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base)))), 0u | ((~ (workgroup_base))))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ (~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), max(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (~ (~ (workgroup_base))))))))))) | (_GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) / 1u))), ~ (~ (~ (workgroup_base)))), max(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), min(~ (~ _GLF_IDENTITY((~ (workgroup_base)), uint(_GLF_IDENTITY(uvec2((~ (workgroup_base)), (0u | 0u)), max(uvec2((~ (workgroup_base)), (0u | 0u)), uvec2((~ (workgroup_base)), (0u | 0u))))))), ~ (~ (~ (workgroup_base))))))) | (min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))))))), min((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), max(min(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) ^ 0u))))), min(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, _GLF_IDENTITY(1u, 0u | (1u)), 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u)))))))), ~ (~ (~ (workgroup_base))))))) | _GLF_IDENTITY((min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ _GLF_IDENTITY((~ ((workgroup_base))), 0u ^ (_GLF_IDENTITY((~ ((workgroup_base))), max((~ ((workgroup_base))), (~ ((workgroup_base)))))))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base))))), max((min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), clamp(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ~ (~ (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))), _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))))))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base))))), (min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base)))))))))), (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ _GLF_IDENTITY((~ (~ (workgroup_base))), clamp((~ (~ (workgroup_base))), (~ (~ (workgroup_base))), _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) << 0u))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), (_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))) | 0u))), max(min(~ (~ (~ _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))))), ~ (~ (~ (workgroup_base)))), min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base))))))) | (min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ _GLF_IDENTITY((workgroup_base), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((workgroup_base)))))) | (~ (~ (~ (workgroup_base)))))))), (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base))))))))) | (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY((~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base)))), uint(uint((~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base))))))))))))))), ~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) / 1u))))))))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))))), (~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))) | (~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))))), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))))), max((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))))), min(~ (~ (~ (workgroup_base))), ~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) ^ 0u)), 0u ^ ((workgroup_base)))), 0u | ((~ (workgroup_base))))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ (~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), max(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (~ (~ (workgroup_base))))))))))) | (_GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) / 1u))), ~ (~ (~ (workgroup_base)))), max(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), min(~ (~ _GLF_IDENTITY((~ (workgroup_base)), uint(_GLF_IDENTITY(uvec2((~ (workgroup_base)), (0u | 0u)), max(uvec2((~ (workgroup_base)), (0u | 0u)), uvec2((~ (workgroup_base)), (0u | 0u))))))), ~ (~ (~ (workgroup_base))))))) | (min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))))))), min((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (1u ^ 1u))), (_GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), max(min(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) ^ 0u))))), min(~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base), uint(uvec3(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4(~ _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base)))), max((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base))))))))), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))), 1u, 1u, 0u)))))))), ~ (~ (~ (workgroup_base))))))) | _GLF_IDENTITY((min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ _GLF_IDENTITY(((workgroup_base)), 0u ^ (_GLF_IDENTITY(((workgroup_base)), max(_GLF_IDENTITY(((workgroup_base)), 0u ^ (((workgroup_base)))), ((workgroup_base)))))))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base))))), max((min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base))))), (min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base)))))))))), (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ _GLF_IDENTITY((~ (~ (workgroup_base))), clamp((~ (~ (workgroup_base))), (~ (~ (workgroup_base))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))))), ((~ (~ (workgroup_base)))) << 0u))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))), ((_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u)), max(min(~ (~ (~ _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | ((workgroup_base)), clamp(((workgroup_base)) | ((workgroup_base)), ((workgroup_base)) | ((workgroup_base)), ((workgroup_base)) | ((workgroup_base))))))))), ~ (~ (~ (workgroup_base)))), min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base))))))) | (min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), _GLF_IDENTITY(uint(uvec3(~ (~ (workgroup_base)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), max(uint(uvec3(~ (~ (workgroup_base)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec3(~ (~ (workgroup_base)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base)))))))), (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base)))))))), (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base))))))))) | (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))))))) | (~ (~ (~ (workgroup_base)))))))))))), ~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) / 1u))))))))), ~ _GLF_IDENTITY((~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))), max((~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))), (~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY((~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))), max((~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))), (~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))))), 0u, 1u, 1u))) ^ (0u | 0u))), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))))), (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) << 0u), 1u)))))), min(~ (~ (~ (workgroup_base))), ~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base)))), 0u | ((~ (workgroup_base))))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ (~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), max(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (~ (~ (workgroup_base))))))))))) | (_GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) / 1u))), ~ (~ (~ (workgroup_base)))), max(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), min(~ (~ _GLF_IDENTITY((~ (workgroup_base)), uint(_GLF_IDENTITY(uvec2((~ (workgroup_base)), (0u | 0u)), max(uvec2((~ (workgroup_base)), (0u | 0u)), uvec2((~ (workgroup_base)), (0u | 0u))))))), ~ (~ (~ (workgroup_base))))))) | (min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))))))), min((_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (workgroup_base))), (_GLF_IDENTITY((~ (~ (workgroup_base))), min((~ (~ (workgroup_base))), (~ (~ (workgroup_base)))))) >> 0u), ~ (~ (~ (~ (~ (workgroup_base))))))), (_GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base)))), max(min(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))), 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))) + (171804u & 0u))) + 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) ^ 0u))), clamp(_GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) ^ 0u))), _GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) ^ 0u))), _GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) ^ 0u))))))), min(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u), (uvec4(~ (~ (workgroup_base)), 1u, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (uvec4(~ (~ (workgroup_base)), 1u, 1u, 0u))))))))) >> uvec4(0u, 0u, 0u, 0u))))))))), ~ (~ (~ (workgroup_base))))))) | _GLF_IDENTITY((min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base))))), max((min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base))))), (min(~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), ((workgroup_base)) * 1u))), ~ (~ (~ (workgroup_base)))))))))), (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(min(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (~ (workgroup_base))), clamp((~ (~ (workgroup_base))), (~ (~ (workgroup_base))), _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) << 0u))), (_GLF_IDENTITY((~ (~ (workgroup_base))), clamp((~ (~ (workgroup_base))), (~ (~ (workgroup_base))), _GLF_IDENTITY((~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base))))), ((~ (~ (workgroup_base)))) << 0u)))) | (_GLF_IDENTITY((~ (~ (workgroup_base))), clamp((_GLF_IDENTITY(~ (~ (workgroup_base)), max(_GLF_IDENTITY(~ (~ (workgroup_base)), (false ? _GLF_FUZZED(num_workgroup) : ~ (~ (workgroup_base)))), ~ (~ (workgroup_base))))), (~ (~ (workgroup_base))), _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) << 0u))))), ~ (~ (~ (workgroup_base)))), (_GLF_IDENTITY(min(~ (~ (~ (workgroup_base))), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))), max(min(~ (~ (~ _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))))), ~ (~ _GLF_IDENTITY((~ (workgroup_base)), (true ? (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) : _GLF_FUZZED(subgroup_id))))), min(~ (~ (~ (workgroup_base))), ~ (~ (~ (workgroup_base))))))) | (min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY((~ (~ (~ (workgroup_base)))) | (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) + 0u)), ((~ (~ (~ (workgroup_base)))) | (~ (~ _GLF_IDENTITY((~ (workgroup_base)), 1u * ((~ (workgroup_base))))))) | ((~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base)))))))))), (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ (~ (workgroup_base)))))))), (~ (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (~ (~ _GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) * 1u), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (~ (~ (~ (workgroup_base)))) | (_GLF_IDENTITY(~ (~ (~ (workgroup_base))), (true ? ~ (~ (~ (workgroup_base))) : _GLF_FUZZED(71977u)))))))))))), ~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) / 1u))))))))), ~ (~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))))))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), max(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), max(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))))) - 0u)) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size) + 0u), (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))) << 0))) / (1u | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))), true))))))), bool(bvec2(false, false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(4, (4) + 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true, ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true) || false))) || false))
  return;
}
