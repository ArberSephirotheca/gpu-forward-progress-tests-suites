#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (false)), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, sqrt(0.0), 0.0), (mat2(1.0, 1.0, sqrt(0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, sqrt(0.0), 0.0), (mat2(1.0, 1.0, sqrt(0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), min(float(_GLF_IDENTITY(mat2(1.0, 1.0, sqrt(0.0), 0.0), (mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 1.0, sqrt(0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 1.0, sqrt(0.0), 0.0), (false ? _GLF_FUZZED(mat2(-4529.1240, -234.256, 8.6, 10.00)) : mat2(1.0, 1.0, sqrt(0.0), 0.0))), (mat2(1.0, 1.0, sqrt(0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 1.0, sqrt(0.0), 0.0), (mat2(1.0, 1.0, sqrt(0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))) - 0.0))))))) > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float((-1460 + -76045))), clamp(_GLF_IDENTITY(_GLF_FUZZED(float((-1460 + -76045))), clamp(_GLF_FUZZED(float((-1460 + -76045))), _GLF_FUZZED(float((-1460 + -76045))), _GLF_FUZZED(float((-1460 + -76045))))), _GLF_FUZZED(float((-1460 + -76045))), _GLF_IDENTITY(_GLF_FUZZED(float((-1460 + -76045))), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(float((-1460 + -76045))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), exp(0.0)), (mat4x3(_GLF_FUZZED(float((-1460 + -76045))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), exp(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), bool(false))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float((-1460 + -76045))), clamp(_GLF_IDENTITY(_GLF_FUZZED(float((-1460 + -76045))), clamp(_GLF_FUZZED(float((-1460 + -76045))), _GLF_FUZZED(float((-1460 + -76045))), _GLF_FUZZED(float((-1460 + -76045))))), _GLF_FUZZED(float((-1460 + -76045))), _GLF_IDENTITY(_GLF_FUZZED(float((-1460 + -76045))), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(float((-1460 + -76045))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), exp(0.0)), (mat4x3(_GLF_FUZZED(float((-1460 + -76045))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), exp(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), bool(false))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0) : _GLF_FUZZED(-2.0))) > injectionSwitch.y))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-1460 + -76045)))), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0) : _GLF_FUZZED(-2.0))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_IDENTITY(false, (false) && true))))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true))))))) && true), true, true, false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false))))))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_IDENTITY(false, bool(bool(false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7353.0019, -5.1)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), true, false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-573.876)), bool(false)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && true))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, true))))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-23.19 - -6053.0962)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 0.0, 0.0)), (true ? float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)) : _GLF_FUZZED(0.8)))) : _GLF_FUZZED(inversesqrt(937.582)))), 1.0)), float(float(float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bool(false))), true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bool(false))), true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, 0u | (subgroup_id * subgroup_size)), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))) - 0u)) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) * subgroup_size, 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, (0u & 59365u), 0u)), (uint(uvec3(subgroup_size, (0u & 59365u), 0u))) ^ 0u)))))) + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), true)))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(ldexp(_GLF_IDENTITY(-2.8, max(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat2(-2.8, 1.0, 1.0, 1.0)), min(float(_GLF_IDENTITY(mat2(-2.8, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat2(-2.8, 1.0, 1.0, 1.0), (true ? mat2(-2.8, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(8192.1988, -5658.6131, -4474.3547, -45.65))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(mat2(-2.8, 1.0, 1.0, 1.0))))), -2.8)), -11234)) : injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(ldexp(_GLF_IDENTITY(-2.8, max(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat2(-2.8, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), min(float(_GLF_IDENTITY(mat2(-2.8, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.0, 1.0, 1.0), (true ? mat2(-2.8, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(8192.1988, _GLF_IDENTITY(-5658.6131, (_GLF_IDENTITY(-5658.6131, (false ? _GLF_FUZZED(-4.5) : -5658.6131))) + 0.0), -4474.3547, -45.65))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(mat2(-2.8, 1.0, 1.0, 1.0))))), -2.8)), -11234)) : injectionSwitch.y)))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && true)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))))))))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), max(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (4) - 0)))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) ^ 0)))) - 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0)))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0)))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), max(int(int(4)), int(int(4)))))), (_GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), 0 | ((4)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1) : _GLF_FUZZED(38114))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) >> 0), ~ (~ (_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) / 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) >> 0), ~ (~ (_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) / 1))))))) * 1), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * 1)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * 1))) * 1) - 0)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * 1)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * 1))) * 1) - 0)))))), (max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * 1)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * 1))) * 1) - 0))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) >> 0, (((4)) >> _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0)))) / 1)) - 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))), int(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))), 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0)))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1)))) | ((4) - 0))))))))))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))))), (true ? max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), 1, 1), (ivec3((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) | (0))))))), 1, 1)) - ivec3(0, 0, 0)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), 0 + (~ (_GLF_IDENTITY(4, (4) - 0))))), 0 | ((~ (_GLF_IDENTITY(4, (4) - 0)))))))) : _GLF_FUZZED(21183)))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(bitCount(-5679)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | ((4))) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) >> 0))), (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) - 0)))) - 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (~ (_GLF_IDENTITY(4, (4) - 0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), min(_GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, min(64, 64)))))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((bool(bool(bool(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(_GLF_IDENTITY(bvec3((bool(bool(bool(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((bool(bool(bool(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-526.561), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(523.839)), bvec2(true, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.7) : 1.0)), 1.0))) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0))) * mat2(1.0))).x > injectionSwitch.y))))))))))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true, true)), true && (bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true, true))))), true && (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), true))))))))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
