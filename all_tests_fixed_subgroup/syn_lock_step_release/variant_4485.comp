#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-38109 & 0)); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))))), (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((_GLF_IDENTITY(! (false), true && (! (false)))))) && true)))))) || false)))))), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))))), (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((_GLF_IDENTITY(! (false), true && (! (false)))))) && true)))))) || false))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (false))))))))), false || (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), (! (! (false))) || false)), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true, false))), false, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true))))))))))) || false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && ((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec3((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false, false)))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true)))))), false))))))), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))), false, false)))))) && true), _GLF_IDENTITY((! (! (false))) || false, ((! (_GLF_IDENTITY(! (false), false || (! (false))))) || false) && true))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ! (! (_GLF_IDENTITY((false), true && ((false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), false || ((! _GLF_IDENTITY((false), true && ((false)))))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), false || (bool(bool(_GLF_IDENTITY((false), true && ((false))))))))))), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), (! (! (false))) || false)), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false)))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false)))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), false, false, true))))))) || false))))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), bool(bvec2(! (((false))), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) && true)), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) && true)), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) && true)), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))))))))))) && true)))) || false))))), false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), _GLF_IDENTITY((! (! (false))) || false, ((! (_GLF_IDENTITY(! (false), false || (! (false))))) || false) && true))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) || false)), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false, false))))))) && true))))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false)))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((false))), true && ((((false))))), bool(bvec2(! _GLF_IDENTITY((((false))), ! (! ((((false)))))), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! _GLF_IDENTITY((false), true && ((false)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))))) && true)))) || false))))))))))) || false)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))), mix(vec2((vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))))[0], _GLF_FUZZED(-124.420)), vec2(_GLF_FUZZED(-7.6), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))))[1]), bvec2(false, true)))).x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3841.5833), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3841.5833), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || ((! (false))), _GLF_IDENTITY(bool(bool(false || ((! (false))))), true && (bool(bool(false || ((! (false)))))))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), min(mat2(1.0) * (vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), mat2(1.0) * (vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))), mix(vec2((vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), bool(true))), 0.0, exp(0.0))))[0], _GLF_FUZZED(-124.420)), vec2(_GLF_FUZZED(-7.6), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8.3))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(479.140)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(3.3)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))))[1]), bvec2(false, true)))).x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), min(mat2(1.0) * (vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), mat2(1.0) * (vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))), mix(vec2((vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), bool(true))), 0.0, exp(0.0))))[0], _GLF_FUZZED(-124.420)), vec2(_GLF_FUZZED(-7.6), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -0.3)))), 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8.3))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(479.140)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(3.3)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(0.0))))[1]), bvec2(false, true)))).x, injectionSwitch.x)) > injectionSwitch.y)) && true), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3841.5833), (false ? _GLF_FUZZED(trunc(-79.50)) : _GLF_FUZZED(-3841.5833))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3841.5833), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || ((! (false))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true && (bool(bool(false || ((! (false)))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = (1 | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) | (0))), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-99631) : 0))), clamp(int(0), int(0), int(0)))) ^ 0)), min(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))), int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0), int(0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, ! (! (true)))) || false)))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), true && ((bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))))))), false || (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(11517, (11517) | (11517))), (_GLF_FUZZED(_GLF_IDENTITY(11517, (11517) | (11517)))) | 0), _GLF_IDENTITY(0 | (_GLF_FUZZED(_GLF_IDENTITY(11517, (11517) | (11517)))), ~ (~ (0 | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(11517, (11517) | (11517)), max(_GLF_IDENTITY(_GLF_IDENTITY(11517, (11517) | (11517)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(11517, (11517) | (11517)))), _GLF_IDENTITY(_GLF_IDENTITY(11517, (11517) | (11517)), int(ivec2(_GLF_IDENTITY(11517, (11517) | (11517)), 0))))))))))) : (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 | _GLF_IDENTITY((int(0)), (_GLF_IDENTITY((int(0)), ((int(0))) - (0 << _GLF_IDENTITY(int(8), int(8))))) ^ 0), _GLF_IDENTITY((0 | (int(0))) - 0, 0 | ((0 | (int(0))) - 0)))), int(_GLF_IDENTITY(0, (0) << 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))) - (0 >> _GLF_IDENTITY(int(7), int(7)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), vec2(1.0, 1.0) * (mat2(1.0) * (vec2(1.0, 1.0)))), (_GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), vec2(1.0, 1.0) * (mat2(1.0) * (vec2(1.0, 1.0))))) / vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-481.154), (true ? 0.0 : _GLF_FUZZED(-481.154)) / 1.0))), 0.0, 0.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch.y)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.5) : injectionSwitch.y)))), 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0)))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), ~ (~ (~ (~ (gl_NumWorkGroups))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), uvec3(uvec4((~ (gl_NumWorkGroups)), 1u))), ~ (~ (~ (~ (gl_NumWorkGroups)))))) - uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))));
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(71038u, 119849u, 64689u)), uvec3(uvec4(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(71038u, 119849u, 64689u)), min(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(71038u, 119849u, 64689u)), true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(71038u, 119849u, 64689u)))), 0u)))))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) << 0u))), 0u, 0u)) | uvec3(0u, 0u, 0u))))) / 1u))).x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-9140.4343)), 0.0 + (float(_GLF_FUZZED(-9140.4343)))), bool(false))), 1.0, 1.0, 0.0, 0.0)))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4x3(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))))), (float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4x3(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0)) > injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false))), false)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false))), false)))))), false, false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true), _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(45.04) : injectionSwitch.y))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(55.14, 594.968))))) * vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(55.14, 594.968))))) * vec2(1.0, 1.0), 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), mat3(1.0) * (mat4x3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(55.14, 594.968))))) * vec2(1.0, 1.0), 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(atan(-5059.1786, 577.499))))), (mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.1)), float(1.0), bool(true))))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-7349.6770 * -5.2))), vec2(_GLF_FUZZED(-10.26), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, true))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(25.80) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) | (uint(uvec2(0u, 0u)))))))))) * subgroup_size, (subgroup_id * subgroup_size) + 0u) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), max(_GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) << 0u), (subgroup_id) | (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u & 1u) * (subgroup_size))) << 0u) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), ((subgroup_local_id + 1)) * 1u) % subgroup_size), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7762.0603), _GLF_FUZZED(vec2(4.8, -7295.4665).x)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-94128) : _injected_loop_counter ++)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) / 1)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) ? _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) >> 0))), min(_GLF_IDENTITY(4, int(int(4))), 4)));
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) && true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0), (mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), clamp(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(76.00)), float(log(1.0)), bool(true))), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0), (mat4(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1464.4333)), float(1.0), bool(true))), 1.0)))), 1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y))))), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sqrt(2303.1657)) : 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0), (mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY((mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0), mat4x3(mat4((mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9739.0315)), bool(false))), 1.0), (_GLF_IDENTITY(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY((mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0), mat4x3(mat4((mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9739.0315)), bool(false))), 1.0), (true ? mat4(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY((mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0), mat4x3(mat4((mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9739.0315)), bool(false))), 1.0) : _GLF_FUZZED(mat4(-46.24, 5.4, 259.037, 330.095, 253.883, 33.47, -196.133, -1.8, 1.1, 3.7, 7.9, 48.04, -240.069, 198.632, -94.66, -4.8))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0), _GLF_IDENTITY((mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0)), ((mat4(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, exp(0.0), length(0.0), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0))) * mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.5) : 1.0))))), cos(0.0), 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.5) : 1.0))))), cos(0.0), 0.0))).x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
