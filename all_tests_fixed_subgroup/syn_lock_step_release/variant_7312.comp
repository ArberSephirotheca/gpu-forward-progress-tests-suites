#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, log(1.0))))) - vec2(0.0, 0.0)).y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(77.22), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(! (! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(! (! (false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), false || (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)), false))))))))), bool(bool(! (! (false))))))), bool(bvec3(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(! (! (false))))))), true, false))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)) || false))))))), false)), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), ((! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false))))))))), bool(bool(! (! (false)))))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || (bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) * 1.0))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(58.29)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x), bool(true))) : _GLF_FUZZED(481.108))))) > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false))))))), bool(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || (bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(58.29), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(58.29), mix(float(_GLF_FUZZED(58.29)), float(_GLF_FUZZED(vec2(-5334.0354, -8039.2452).x)), bool(false))), 1.0)))), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(481.108))))) > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false)))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))) || false)), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))) || false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(626.499)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false, true, true)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))) && true)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))), mix(vec2((vec2(mat2x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))))[0], _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED(6807.5680), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))))[1], max((vec2(mat2x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))))[1], (vec2(mat2x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-463.446)), bool(false))), injectionSwitch[1])), injectionSwitch))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))))[1]))), bvec2(false, true))))).x > injectionSwitch.y)), false))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0))), min(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0))), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0)))))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), true, true, false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5244.4700))), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), bool(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, true, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false)), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), false || (_GLF_IDENTITY(false, false || (false)))), true, true, false))) && true))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.7))))), false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))), injectionSwitch)) / vec2(1.0, 1.0)), max(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))), injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) + (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-5748.5037) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0) : _GLF_FUZZED(-805.778)))))))) * ((_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)), mat2(1.0) * (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))), mix(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))[0], 0.0 + ((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.3, mix(float(0.3), float(_GLF_FUZZED(-138.633)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -4264.4676)))[0])), _GLF_FUZZED(-710.030)), vec2(_GLF_FUZZED(-34.33), (true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true))))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? injectionSwitch : _GLF_FUZZED(vec2(0.3, -4264.4676))))) / cos(vec2(0.0, 0.0))))), injectionSwitch))))))) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) * mat2(1.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0)) / 1.0), _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED(-305.882), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y), sqrt(1.0), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), sqrt(1.0), 0.0, 0.0, 0.0)))))))) / 1.0)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))), true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), min(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)))), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), min(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)) * (injectionSwitch)).y), false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), false))))))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(513.887) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, true)))), true)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(5.3)), bool(false))) < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))))))), false)), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))))) && true, bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), true))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, true)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, true)))))))) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))) && true)) || false), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-991.849), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))[1]), vec2((cos(vec2(0.0, 0.0)))[0], _GLF_FUZZED(8.0)), bvec2(true, false))), min(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)))) * (injectionSwitch)).y), false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), false)))))))))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, exp(0.0), cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(9980.6970, 0.0)))).x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))))))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4055.6098, (-4055.6098) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.94)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(554.305, 3.8)))).x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(554.305, 3.8)))).x < injectionSwitch.y, false, true))))))), true)))))))), false)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4055.6098) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.94)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(554.305, 3.8)), mat2(1.0) * (_GLF_FUZZED(vec2(554.305, 3.8)))))).x < injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))))))), true)))))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4055.6098) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.94)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(554.305, 3.8)), mat2(1.0) * (_GLF_FUZZED(vec2(554.305, 3.8)))))).x < injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))))))), true)))))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4055.6098) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.94)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(554.305, 3.8)), mat2(1.0) * (_GLF_FUZZED(vec2(554.305, 3.8)))))).x < injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))))))), true)))))))), false)))), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, false)))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4055.6098) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.94)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(554.305, 3.8)))).x < injectionSwitch.y, false, true)))), true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4055.6098) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.94)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(554.305, 3.8)))).x < injectionSwitch.y, false, true)))), true))))))), false)))), false)), false)), false))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))))) && true, bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), true))))) && true))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(ldexp(-31.56, 68069)) : injectionSwitch.x)) < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-230.492)), vec2(_GLF_FUZZED(75.23), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).y))))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(float(3256u))), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.9) : 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-4291.4156, 1.0 * (-4291.4156)))), bool(false))))))), min(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(4.9) : 0.0))), float(_GLF_FUZZED(-4291.4156)), bool(false))))))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9995.1999))), min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.9) : 0.0))), float(_GLF_FUZZED(-4291.4156)), bool(false)))))))))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), true, true, false))))), false, false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec3(bool(bvec4(true, true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), false)), false, true)))) && _GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))), true))), ((bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED((-4.7 / 82.49))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED((-4.7 / 82.49))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED((-4.7 / 82.49))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED((-4.7 / 82.49))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true)))) || false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-47.86, -2303.0254)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0))), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7761.0985) : 0.0, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-7761.0985) : 0.0, max(false ? _GLF_FUZZED(-7761.0985) : 0.0, _GLF_IDENTITY(false ? _GLF_FUZZED(-7761.0985) : 0.0, mix(float(_GLF_FUZZED(-3.2)), float(false ? _GLF_FUZZED(-7761.0985) : 0.0), bool(true))))), false ? _GLF_FUZZED(-7761.0985) : 0.0, false ? _GLF_FUZZED(-7761.0985) : 0.0)))), 0.0))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7761.0985) : 0.0)), 0.0))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(1.0, exp(0.0)), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) || false))), false || (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) || false))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(29.15), _GLF_FUZZED(-2954.3351)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-9.7, -9.0)))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))), false, true, true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, true))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))))))), ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) | 0u))), subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-66.46)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.1) : injectionSwitch.x))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), ((virtual_gid) | (virtual_gid)) << 0u)), virtual_gid))))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, false, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) << 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))))) : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), max((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))))) : _GLF_FUZZED(workgroup_size), ~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))))) ^ 0u, (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))), ~ (~ (~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size)))))), ~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))))))) ^ 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), (max(next_virtual_gid, next_virtual_gid)) | (max(next_virtual_gid, next_virtual_gid))))))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), ~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))))) ^ 0u)), uint(uint((_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), ~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), ~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), (clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))) / 1u))) : _GLF_FUZZED(workgroup_size), ~ (~ (true ? (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) : _GLF_FUZZED(workgroup_size))))) ^ 0u)) - 0u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) << _GLF_IDENTITY(0u, (0u) | (0u)), max((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) >> 0u), next_virtual_gid))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) << 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid)), max(next_virtual_gid, next_virtual_gid))), min(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))) | (clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))))) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), max(max(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), uint(uint(max(next_virtual_gid, next_virtual_gid))))))), max(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) + 0u))) : _GLF_FUZZED(virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), max(max(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), uint(uint(max(next_virtual_gid, next_virtual_gid))))))), max(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) + 0u))) : _GLF_FUZZED(virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), max(max(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), uint(uint(max(next_virtual_gid, next_virtual_gid))))))), max(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) + 0u))) : _GLF_FUZZED(virtual_gid)) << 0u)))))))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uvec4(3u, 0u, 1u, 1u), clamp(uvec4(3u, 0u, 1u, 1u), _GLF_IDENTITY(uvec4(3u, 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(3u, 0u, 1u, 1u))), uvec4(3u, 0u, 1u, 1u))))))))), clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) << 0u, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), 0u | (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) / 1u)), _GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (_GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(num_workgroup)))))))))))))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))))), uint(uint(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), 0u ^ ((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), (max(next_virtual_gid, next_virtual_gid)) | (_GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), (max(next_virtual_gid, next_virtual_gid)) | (165114u & 0u)))))))))) << 0u))) | 0u), (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) << 0u, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))) << 0u))))))) - 0u)))))], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) / 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, min((64) / 1, (64) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, min((64) / 1, (64) / 1))))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, min((64) / 1, (64) / 1)))))) >> 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, min((64) / 1, (64) / 1))))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, min((64) / 1, (64) / 1)))))) >> 0))) | 0)))), (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) / 1))))) | (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) / 1)))))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) ^ 0))), 4, _GLF_IDENTITY(4, int(int(4))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), _GLF_IDENTITY(mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313))), clamp(mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313))), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313))), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)))))), bvec2(true, false))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)), mix(vec2((mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)))[0], _GLF_FUZZED(283.834)), vec2(_GLF_FUZZED(-3.3), (mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false)))[1]), bvec2(false, true)))))))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -7.1)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6389.1360), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(vec2(_GLF_FUZZED((-8.5 + -235.792)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((2.7))), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false))))), mix(vec2(_GLF_FUZZED(-769.931), _GLF_FUZZED(2428.1171)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(bvec2(true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(bvec2(true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(bvec2(true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))[0], _GLF_FUZZED(3519.8313)), bvec2(true, false))).y))) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, (false) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
