#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 mat4x3 _f0;
 ivec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 float _f1;
 mat2 _f2;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 int _f4;
 mat4x3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 uint subgroup_local_id;
 mat2x3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 float _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 ivec2 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 _GLF_struct_18 _f1;
 mat2 _f2;
 ivec4 _f3;
 uvec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 mat2 _f1;
 mat3 _f2;
 uint num_workgroup;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 uvec3 _f2;
 vec4 _f3;
 _GLF_struct_11 _f4;
 bvec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat3x4 _f1;
 int _f2;
 uvec3 _f3;
 ivec2 _f4;
 vec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_3 {
 uint _f0;
 float _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 _GLF_struct_3 _f1;
 ivec3 _f2;
 ivec3 _f3;
 _GLF_struct_4 _f4;
 float _f5;
 vec2 _f6;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat4x2 _f1;
 ivec4 _f2;
 uint _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(mat4x3(1.0), _GLF_struct_0(uvec3(1u), mat2(1.0)), _GLF_struct_1(1u, mat4x2(1.0), ivec4(1), 1u, ivec4(1)), bvec4(true)), _GLF_struct_5(bvec2(true), _GLF_struct_3(1u, 1.0, uvec3(1u)), ivec3(1), ivec3(1), _GLF_struct_4(mat4x2(1.0), mat3x4(1.0), 1, uvec3(1u), ivec2(1), vec3(1.0), vec2(1.0)), 1.0, vec2(1.0)), gl_SubgroupID);
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.y = _GLF_struct_replacement_6.subgroup_id;
uint subgroup_size = 16;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(uvec3(1u), _GLF_struct_18(mat2(1.0), 1.0, _GLF_struct_14(mat3(1.0), gl_SubgroupInvocationID, mat2x3(1.0), ivec2(1)), _GLF_struct_15(bvec4(true), mat2x3(1.0), uvec2(1u), mat4x3(1.0), 1, mat4x3(1.0), mat4x3(1.0)), _GLF_struct_16(bvec3(true), 1.0, mat2(1.0)), ivec2(1), _GLF_struct_17(mat4x3(1.0), ivec4(1), uvec3(1u))), mat2(1.0), ivec4(1), uvec2(1u), mat3x2(1.0));
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_8(_GLF_struct_7(vec4(1.0))), _GLF_struct_9(bvec2(true)), uvec3(1u), vec4(1.0), _GLF_struct_11(_GLF_struct_10(mat4x2(1.0), mat2(1.0), mat3(1.0), gl_NumWorkGroups.x), ivec3(1)), bvec4(true), bvec2(true));
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat3x4(1.0), gl_WorkGroupSize.x);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.z = _GLF_struct_replacement_13.workgroup_size;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.z * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.y * subgroup_size + _GLF_struct_replacement_19._f1._f2.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.y * subgroup_size + ((_GLF_struct_replacement_19._f1._f2.subgroup_local_id + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_size.x], uint(2), 4, 64, 4);
}
