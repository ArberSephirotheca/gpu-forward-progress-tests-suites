#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 bool _f0;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 mat2x4 _f1;
 bvec3 _f2;
 uvec2 _f3;
 bvec4 _f4;
 float _f5;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 bvec3 _f1;
 bvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 vec2 _f1;
 uint _f2;
 vec3 _f3;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 vec4 _f1;
 mat3 _f2;
 ivec2 _f3;
 int _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 uvec4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 bvec4 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 vec4 _f1;
 ivec2 _f2;
 mat4x3 _f3;
 mat2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), true)))))), false)))))))), true))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true))))))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat2x3(1.0), _GLF_struct_1(bvec3(true), _GLF_struct_0(mat2x4(1.0), vec4(1.0), ivec2(1), mat4x3(1.0), mat2(1.0), ivec4(1))), _GLF_struct_7(_GLF_struct_2(mat2x4(1.0), vec4(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3(mat4(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((true ? mat3(1.0) : _GLF_FUZZED(mat3(86.29, -528.043, -987.884, -5095.6735, -98.48, -143.459, -8.2, 1.8, -9.1))), ((true ? mat3(1.0) : _GLF_FUZZED(mat3(86.29, -528.043, -987.884, -5095.6735, -98.48, -143.459, -8.2, 1.8, -9.1)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), ivec2(1), 1, mat4x2(1.0)), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u)))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))))))), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))))) | (uvec4(1u))), _GLF_struct_3(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))) : _GLF_FUZZED(70352)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(-2010)) : (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))) : _GLF_FUZZED(70352))))))))), vec2(1.0), 1u, vec3(1.0)), _GLF_struct_4(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)))), uvec3(1u))), uvec4(1u)), _GLF_struct_5(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), false))))), true)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), false))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), false))))))))))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), false)))))))))), true)))), false))), bvec4(true), ivec2(1)), bvec4(true), _GLF_struct_6(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << (_GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))) & (_GLF_IDENTITY(ivec2(5850, 84750) - -4699, (ivec2(5850, 84750) - -4699) + ivec2(0, 0))))), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) << (_GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))) & (_GLF_IDENTITY(ivec2(5850, 84750) - -4699, (ivec2(5850, 84750) - -4699) + ivec2(0, 0)))))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat2x4(1.0), bvec3(true), uvec2(1u), bvec4(true), 1.0)), _GLF_struct_8(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), gl_SubgroupID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-21.79)), vec2(_GLF_FUZZED(-456.120), (injectionSwitch)[1]), bvec2(false, true))), length(0.0), sin(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-21.79)), vec2(_GLF_FUZZED(-456.120), (injectionSwitch)[1]), bvec2(false, true))), length(0.0), sin(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-21.79)), vec2(_GLF_FUZZED(-456.120), (injectionSwitch)[1]), bvec2(false, true))), length(0.0), sin(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0)))))) : injectionSwitch))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)).y, mix(float(_GLF_FUZZED(645.936)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)).y), bool(true))))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 119.405)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-93.27)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9801.2643)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(782.741) : injectionSwitch.y))), bool(true))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9801.2643), min(_GLF_FUZZED(-9801.2643), _GLF_FUZZED(-9801.2643)))), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(782.741) : injectionSwitch.y))), bool(true))), _GLF_IDENTITY(true, true && (true)), false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y)), mix(float(_GLF_FUZZED(-9801.2643)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(782.741) : injectionSwitch.y))), bool(true)))))), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y)), mix(float(_GLF_FUZZED(-9801.2643)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(782.741) : injectionSwitch.y))), bool(true)))))), false)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y)), mix(float(_GLF_FUZZED(-9801.2643)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(782.741) : injectionSwitch.y))), bool(true)))))), false)), true), false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.85)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-85.77), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.4))), bvec2(true, false)))) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(float(84884))), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, false)), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) || false), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-377.166)), float(injectionSwitch.x), bool(true))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-377.166)), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-377.166)), float(injectionSwitch.x), bool(true))))))), 0.0, 1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))) > injectionSwitch.y) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-3955.1340, -9.3)) : injectionSwitch)).x > injectionSwitch.y) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))) || false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, (gl_WorkGroupID.x) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, (gl_WorkGroupID.x) << 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, (gl_WorkGroupID.x) << 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))) : workgroup_id)), (true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(atomicExchange(workgroup_id, 159822u)))))));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_9.subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (_GLF_IDENTITY(~ ((subgroup_local_id) << 0u), (~ ((subgroup_local_id) << 0u)) - 0u))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (true ? _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | (_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(subgroup_local_id)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), 1u * (_GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))) ^ 0u)))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, (_GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u))) + 0u))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 1u, 1u, 1u))))) ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u + ((subgroup_size) | 0u)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uint(num_workgroup)), (uint(uint(num_workgroup))) * 1u)))))), max((true ? (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u + ((subgroup_size) | 0u)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uint(num_workgroup)), (uint(uint(num_workgroup))) * 1u)))))), (true ? (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u + ((subgroup_size) | 0u)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uint(num_workgroup)), (uint(uint(num_workgroup))) * 1u)))))))))) | ((1u & 1u) ^ 1u)) * ((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 1u * (5u))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(5u, 1u * (5u))), 0u, 1u)), (false ? _GLF_FUZZED(44511u) : uint(uvec3(uint(_GLF_IDENTITY(5u, 1u * (5u))), 0u, 1u))))))) & _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), 1u * (_GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), (uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))) | 0u))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))), (true ? (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_size), (1u & 1u)), clamp(uvec2((subgroup_size), (1u & 1u)), uvec2((subgroup_size), (1u & 1u)), uvec2((subgroup_size), (1u & 1u)))))) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), clamp((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) << 0u), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))) : _GLF_FUZZED(num_workgroup)))) | ((1u & 1u) ^ 1u)) * ((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), min(0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 1u * (5u))))) & _GLF_IDENTITY(1u, 0u ^ (1u)))))), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), 1u * (_GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))))) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), 1u, 0u, 1u)))))), (true ? (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(subgroup_size, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 1u))))) + 0u), 1u, 0u, 1u)))))) : _GLF_FUZZED(num_workgroup)))) | ((1u & 1u) ^ 1u)) * ((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_id) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), 0u, 0u)))) >> 0u)) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 1u * (5u))))) & _GLF_IDENTITY(1u, 0u ^ (1u)))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (false ? _GLF_FUZZED(187580u) : uint(uvec2(subgroup_local_id + 1, 1u)))))) % subgroup_size, 0u + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (false ? _GLF_FUZZED(187580u) : uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) + 0u))), 1u)) * uvec2(1u, 1u))))))) % subgroup_size)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (false ? _GLF_FUZZED(187580u) : uint(uvec2(subgroup_local_id + 1, 1u))))), max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(187580u), clamp(_GLF_FUZZED(187580u), _GLF_FUZZED(187580u), _GLF_FUZZED(187580u))) : uint(uvec2(subgroup_local_id + 1, 1u))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | (subgroup_local_id + 1)), 1u)), (false ? _GLF_FUZZED(187580u) : uint(uvec2(subgroup_local_id + 1, 1u)))))))) % subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(num_workgroup) : uint(0u))), (false ? _GLF_FUZZED(num_workgroup) : uint(0u)))) ^ 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) | (max(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(36945))), 1))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))), true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false))))))), false))))), (true) || false), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-69.90), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(95.10)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(bvec3(bvec2((! (_GLF_DEAD(false))), true), true)))), (bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(bvec3(bvec2((! (_GLF_DEAD(false))), true), true))))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(173.318), _GLF_FUZZED(3.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(float((injectionSwitch)[0])), (float(float((injectionSwitch)[0]))) + 0.0)), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(563.451), clamp(_GLF_FUZZED(563.451), _GLF_IDENTITY(_GLF_FUZZED(563.451), clamp(_GLF_IDENTITY(_GLF_FUZZED(563.451), min(_GLF_FUZZED(563.451), _GLF_FUZZED(563.451))), _GLF_FUZZED(563.451), _GLF_FUZZED(563.451))), _GLF_FUZZED(563.451))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-4550.8173, -37.20)) : injectionSwitch)))))[_GLF_IDENTITY(0, min(0, 0))], mix(float(_GLF_FUZZED(5.0)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-6.7)), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(563.451), clamp(_GLF_FUZZED(563.451), _GLF_IDENTITY(_GLF_FUZZED(563.451), clamp(_GLF_IDENTITY(_GLF_FUZZED(563.451), min(_GLF_FUZZED(563.451), _GLF_FUZZED(563.451))), _GLF_FUZZED(563.451), _GLF_FUZZED(563.451))), _GLF_FUZZED(563.451))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-4550.8173, -37.20)) : injectionSwitch)))))[_GLF_IDENTITY(0, min(0, 0))], mix(float(_GLF_FUZZED(5.0)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-6.7)), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false))), injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) * 1.0), 1.0))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), min(_GLF_IDENTITY(~ (uint(2)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (uint(2)), 1u, 1u, 0u), ~ (~ (uvec4(~ (uint(2)), 1u, 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(~ (uint(2)), 1u, 1u, 0u), ~ (~ (uvec4(~ (uint(2)), 1u, 1u, 0u)))))) | 0u)), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (uint(2)), 0u ^ (_GLF_IDENTITY(~ (uint(2)), max(~ (uint(2)), ~ (uint(2)))))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) / 1))), max((uint(_GLF_IDENTITY(2, (2) / 1))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) * 1), (2) / 1))), ~ (~ ((uint(_GLF_IDENTITY(2, (2) / 1))))))))), clamp(_GLF_IDENTITY(min(~ (uint(2)), ~ (uint(2))), (min(~ (uint(2)), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) + 0))), (_GLF_IDENTITY(true, ! (! (true))) ? (uint(_GLF_IDENTITY(2, (2) + 0))) : _GLF_FUZZED((subgroup_size & virtual_gid)))))) ^ 0u), min(~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | (2)))), ~ (uint(2))), min(~ (uint(2)), ~ (uint(2)))))))))), 0u ^ (uint(2))), 4, 64, 4);
}
