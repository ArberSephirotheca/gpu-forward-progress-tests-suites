#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat2x3 _f0;
 mat2 _f1;
 int _f2;
 mat3x4 _f3;
 uvec4 _f4;
 bvec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 _GLF_struct_4 _f3;
 uvec3 _f4;
 _GLF_struct_5 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_1 {
 uint _f0;
 bvec3 _f1;
 mat3 _f2;
 bvec2 _f3;
 ivec2 _f4;
 mat3x2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 ivec2 _f1;
 mat3 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 _GLF_struct_6 _f2;
 uint workgroup_id;
 mat2x4 _f3;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 mat2x3 _f0;
 vec3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(74.28)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-9516.2473))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)))))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupSize, mat2x3(1.0), vec3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-58.40) : injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))))))))))), true))))) && true))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false, ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (false)), (injectionSwitch.x > injectionSwitch.y)))))) || false) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))))) && true, false || (((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))))) && true)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))))) && true, false || (((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))))) && true)), true, false, false)))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))))) && true, false || (((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-893.660)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))))))) && true)))))))) || false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(53.84, 79.57)) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6240.6909))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0)), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6240.6909))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0)))))) < injectionSwitch.y)))), false, false))))), true, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(991.142)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(991.142)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(991.142)))), false, false, false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, false, false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.7, 5262.5707)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-5.3)), min((true ? 1.0 : _GLF_FUZZED(-5.3)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-5.3)), mix(float((true ? 1.0 : _GLF_FUZZED(-5.3))), float(_GLF_FUZZED(8691.9024)), bool(false)))))), abs(1.0), 0.0), (false ? _GLF_FUZZED(mat4x2(-9.7, -29.92, 360.100, -7.4, -892.050, 2.2, 431.884, -9149.1800)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.4))), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0), (false ? _GLF_FUZZED(mat4x2(2.3, 942.236, -87.24, -4171.5269, -7.2, 8.9, 9.5, 2222.3352)) : mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(-32.13, -7.3), 697.021)))).y, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 1.0, abs(1.0), 0.0)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))) ? gl_WorkGroupSize.x : _GLF_FUZZED((num_workgroup))))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(0.0))), (float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(0.0)))) - 0.0)) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.8)), float(injectionSwitch.y), bool(true))), true))))) ? gl_WorkGroupSize.x : _GLF_FUZZED((num_workgroup)))))))) + 0u);
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(bvec3(true), ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))))), mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_struct_1(1u, bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(mat3(1.0), mat3(mat3x4(mat3(1.0)))), bvec2(true), ivec2(1), mat3x2(1.0), ivec4(1))), mat4(1.0), _GLF_struct_6(_GLF_struct_3(bvec3(true)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), ~ (~ (uvec3(1u)))), uvec3(1u), uvec3(1u))), mat2x3(1.0), _GLF_struct_4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))), ivec2(1)), uvec3(1u), _GLF_struct_5(mat2x3(1.0), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.4) : 1.0))), 1, mat3x4(1.0), uvec4(1u), bvec4(true), mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0))), gl_WorkGroupID.x, mat2x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(448.201))), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-54.37)), float(injectionSwitch.x), bool(true)), mix(float(mix(float(_GLF_FUZZED(-54.37)), float(injectionSwitch.x), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), (true ? uint(uint(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) : _GLF_FUZZED(subgroup_id)))) * _GLF_struct_replacement_7.workgroup_id, min(workgroup_size * _GLF_struct_replacement_7.workgroup_id, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))) * _GLF_struct_replacement_7.workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8383.7468), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.7)), bvec2(true, false)))[1])).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch * vec2(8.4, 867.588))) : injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).y)) || false)), true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, true))))) && true))) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED((bvec3(true, false, true) , 270.489)) : injectionSwitch[0]))), float(_GLF_FUZZED(1.0)), bool(false))), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y)))))) || false)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED((bvec3(true, false, true) , 270.489)) : injectionSwitch[0]))), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x3(injectionSwitch[1], 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0), (mat4x3(injectionSwitch[1], 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0)) * mat4(1.0)))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y)))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y)))))) || false, bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y)))))) || false, bool(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])).y)))))) || false, false))), true)))))))))), true, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-844.521), _GLF_FUZZED((- -7.9))), bvec2(false, false))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), true && ((! (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) << 0u))) * _GLF_struct_replacement_0.subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u), _GLF_struct_replacement_0.subgroup_size))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(1556u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(62020u))), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, (false) && true))))))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec4(false, true, false, false))), bool(bvec4(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false, false))), _GLF_IDENTITY(((bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), false, false)))) || false, bool(bool(((bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), false, false)))) || false)))), true, false, false)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((bool(bvec4(false, true, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))), bool(bool(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))), bool(bvec3((bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))), false, true)))))), ((bool(bvec4(false, true, false, false)))) || false), true, false, _GLF_IDENTITY(false, true && (false))))))), true && (! (! (! _GLF_IDENTITY((bool(bvec4(false, true, false, false))), bool(bvec4(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))), ((bool(bvec4(false, true, false, false)))) || _GLF_IDENTITY(false, false || (false))), true, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)) * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), int(ivec4(int(ivec3(2, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0, 0, 0))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))) || false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-421.190, -598.265)), (_GLF_FUZZED(vec2(-421.190, -598.265))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(vec2(-421.190, -598.265)) : injectionSwitch))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-421.190, -598.265), mix(vec2((vec2(-421.190, -598.265))[0], (vec2(-421.190, -598.265))[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-6.2)), bvec2(false, false)))) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(vec2(-421.190, -598.265)) : injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-421.190, -598.265)) : injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_FUZZED(vec2(-421.190, -598.265)) : injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-421.190, _GLF_IDENTITY(-598.265, mix(float(_GLF_IDENTITY(-598.265, (-598.265) / 1.0)), float(_GLF_FUZZED(-0.8)), bool(false))))) : injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-421.190, -598.265)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2x3((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(5232.3981, 23.01))))), (false ? _GLF_FUZZED(vec2(-421.190, -598.265)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2x3((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(5232.3981, 23.01)))))) * mat2(1.0)))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(50.55), _GLF_FUZZED(-9513.2117)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.2) : 1.0))) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 1.0, abs(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)))))))))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), mix(vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(372.624)), vec2(_GLF_FUZZED(80.42), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), mix(vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(372.624)), vec2(_GLF_FUZZED(80.42), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, max(injectionSwitch.y, injectionSwitch.y)), 1.0), _GLF_IDENTITY(vec2(mat2x4(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), mix(vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(372.624)), vec2(_GLF_FUZZED(80.42), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, max(injectionSwitch.y, injectionSwitch.y)), 1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat2x4(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), mix(vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(372.624)), vec2(_GLF_FUZZED(80.42), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, max(injectionSwitch.y, injectionSwitch.y)), 1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0))))))))) : _GLF_FUZZED(1.7))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(atan(-7556.9810, 5764.3541)) : (1.0))))), 0.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 1.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-31.01 / 1.2))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), (true ? 1.0 : _GLF_FUZZED(1815.7000)))), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0, float(mat2x4((_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))))))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6225.9706), _GLF_FUZZED(-2.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true)))[_GLF_IDENTITY(1, max(1, 1))])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6225.9706), _GLF_FUZZED(-2.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true)))[_GLF_IDENTITY(1, max(1, 1))])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6225.9706), _GLF_FUZZED(-2.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true)))[_GLF_IDENTITY(1, max(1, 1))])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6225.9706), _GLF_FUZZED(-2.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true)))[_GLF_IDENTITY(1, max(1, 1))])))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), ((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))[0], _GLF_FUZZED(372.624)), vec2(_GLF_FUZZED(80.42), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 4.6)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 4.6)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))))[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (injectionSwitch.x < injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (injectionSwitch.x < injectionSwitch.y)))) && true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), false)))))).y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(1.7)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
