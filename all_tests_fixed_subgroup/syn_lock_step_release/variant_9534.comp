#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_36 {
 bvec3 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 vec4 _f4;
 mat2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_35 {
 mat4 _f0;
 bool _f1;
 mat4x3 _f2;
 ivec2 _f3;
 int _f4;
} ;

struct _GLF_struct_37 {
 _GLF_struct_35 _f0;
 mat4 _f1;
 mat2x4 _f2;
 bool _f3;
 mat2x3 _f4;
 _GLF_struct_36 _f5;
} ;

struct _GLF_struct_33 {
 mat3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_32 {
 uvec2 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 bvec3 _f3;
 mat3 _f4;
 float _f5;
 mat2 _f6;
} ;

struct _GLF_struct_31 {
 mat2x3 _f0;
 uvec2 _f1;
 ivec2 _f2;
 bvec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_30 {
 mat2 _f0;
 mat2x4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_29 {
 bvec2 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 mat4x2 _f3;
 mat2 _f4;
 uvec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_34 {
 _GLF_struct_29 _f0;
 _GLF_struct_30 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_32 _f3;
 _GLF_struct_33 _f4;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 vec4 _f5;
} ;

struct _GLF_struct_27 {
 uvec2 _f0;
} ;

struct _GLF_struct_26 {
 mat3 _f0;
 vec2 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 mat2x4 _f4;
 bvec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_25 {
 mat2 _f0;
 ivec4 _f1;
 uvec2 _f2;
 bvec2 _f3;
 vec3 _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_28 {
 vec3 _f0;
 mat3x4 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_27 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 mat4x3 _f1;
 mat4 _f2;
 vec4 _f3;
 bvec2 _f4;
 float _f5;
} ;

struct _GLF_struct_22 {
 vec2 _f0;
 uvec4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 _GLF_struct_23 _f3;
} ;

struct _GLF_struct_38 {
 ivec2 _f0;
 mat2x3 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_28 _f3;
 uint _f4;
 _GLF_struct_34 _f5;
 _GLF_struct_37 _f6;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 float _f1;
 uvec3 _f2;
 mat2x4 _f3;
 float _f4;
 mat2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 uvec4 _f1;
 ivec3 _f2;
 bvec2 _f3;
 mat3x2 _f4;
 mat2x3 _f5;
 float _f6;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 bvec4 _f1;
 vec4 _f2;
 mat3 _f3;
 int _f4;
 mat2x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 uvec3 _f3;
 vec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 vec4 _f1;
 vec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 uvec4 _f4;
 bvec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_20 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 mat2 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
} ;

struct _GLF_struct_11 {
 float _f0;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 bvec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_13 {
 bool _f0;
 mat4 _f1;
 uvec4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 bvec4 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_5 {
 int _f0;
 uint _f1;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat2x4 _f1;
 bool _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
 _GLF_struct_8 _f6;
} ;

struct _GLF_struct_21 {
 bool _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_13 _f2;
 mat4 _f3;
 vec2 _f4;
 mat2x3 _f5;
 uint workgroup_base;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 bvec2 _f1;
 mat3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 _GLF_struct_3 _f1;
 uint subgroup_local_id;
 vec2 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id;
 _GLF_struct_38 _GLF_struct_replacement_38;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_replacement_38._f5.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec2(1), _GLF_struct_3(_GLF_struct_0(uvec2(1u)), _GLF_struct_1(vec3(1.0), bvec2(true), mat3(1.0), bvec3(true)), _GLF_struct_2(vec2(1.0), true)), gl_SubgroupInvocationID, vec2(1.0), mat4x2(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z = workgroup_id;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(true, _GLF_struct_9(vec3(1.0), mat2x4(1.0), true, _GLF_struct_5(1, 1u), _GLF_struct_6(uvec3(1u), mat3x2(1.0)), _GLF_struct_7(mat3x2(1.0), ivec3(1)), _GLF_struct_8(uvec2(1u))), _GLF_struct_13(true, mat4(1.0), uvec4(1u), _GLF_struct_10(mat3x2(1.0), bvec4(true), bvec2(true)), _GLF_struct_11(1.0), bvec4(true), _GLF_struct_12(mat4x2(1.0))), mat4(1.0), vec2(1.0), mat2x3(1.0), GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.z * GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z, _GLF_struct_20(_GLF_struct_14(bvec3(true), mat3x4(1.0), ivec3(1), mat2x3(1.0), uvec4(1u), bvec2(true), mat4(1.0)), _GLF_struct_15(ivec2(1), vec4(1.0), vec4(1.0), mat3x4(1.0)), _GLF_struct_16(mat2x4(1.0), mat3x4(1.0), bvec4(true), uvec3(1u), vec4(1.0), 1u), mat2(1.0), _GLF_struct_17(mat2(1.0), bvec4(true), vec4(1.0), mat3(1.0), 1, mat2x4(1.0), mat3x4(1.0)), _GLF_struct_18(mat2(1.0), uvec4(1u), ivec3(1), bvec2(true), mat3x2(1.0), mat2x3(1.0), 1.0), _GLF_struct_19(ivec4(1), 1.0, uvec3(1u), mat2x4(1.0), 1.0, mat2(1.0), bvec4(true))));
 uint virtual_gid = _GLF_struct_replacement_21.workgroup_base + subgroup_id * _GLF_struct_replacement_38._f5.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + _GLF_struct_replacement_4.subgroup_local_id;
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_replacement_38._f5.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.y;
 uint next_virtual_gid = _GLF_struct_replacement_21.workgroup_base + subgroup_id * _GLF_struct_replacement_38._f5.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + ((_GLF_struct_replacement_4.subgroup_local_id + 1) % _GLF_struct_replacement_38._f5.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x);
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.x = next_virtual_gid;
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.x = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.x;
 buf[_GLF_struct_replacement_38._f5.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.x], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
