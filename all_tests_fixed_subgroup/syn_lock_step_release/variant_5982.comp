#version 460
struct _GLF_struct_7 {
 vec4 _f0;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 uvec2 _f1;
 uint subgroup_local_id;
 _GLF_struct_8 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 uint workgroup_id;
 bvec2 _f3;
 mat2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat2 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 float _f5;
 vec2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_6 {
 int _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 bvec3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(vec2(1.0), uvec2(1u), gl_SubgroupInvocationID, _GLF_struct_8(mat4x2(1.0), _GLF_struct_7(vec4(1.0))), vec2(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1, _GLF_struct_3(_GLF_struct_0(ivec2(1), mat2(1.0), mat3x2(1.0), mat3x4(1.0), uvec4(1u), 1.0, vec2(1.0)), _GLF_struct_1(bvec4(true), bvec4(true)), _GLF_struct_2(ivec4(1))), _GLF_struct_5(_GLF_struct_4(mat3x2(1.0), mat2x3(1.0), uvec3(1u), gl_WorkGroupID.x, bvec2(true), mat2(1.0), vec4(1.0))), bvec3(true));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6._f2._f0.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
