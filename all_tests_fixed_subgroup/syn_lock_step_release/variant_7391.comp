#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 mat3x4 _f0;
} ;

struct _GLF_struct_26 {
 ivec4 _f0;
 bvec2 _f1;
 _GLF_struct_25 _f2;
 float _f3;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 uvec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_22 {
 ivec3 _f0;
 ivec2 _f1;
 mat3 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 ivec2 _f1;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_24 {
 vec3 _f0;
 uvec4 _f1;
 int _f2;
 _GLF_struct_21 _f3;
 mat2x4 _f4;
 _GLF_struct_22 _f5;
 _GLF_struct_23 _f6;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 bool _f1;
 mat4x3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 bvec3 _f1;
 int _f2;
 int _f3;
 uvec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 vec4 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
} ;

struct _GLF_struct_14 {
 int _f0;
 mat3x2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_20 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 bvec2 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_27 {
 int _f0;
 _GLF_struct_20 _f1;
 uint next_virtual_gid;
 _GLF_struct_24 _f2;
 _GLF_struct_26 _f3;
} ;

struct _GLF_struct_11 {
 uint subgroup_id;
 mat2 _f0;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 vec2 _f1;
 bvec2 _f2;
 mat4 _f3;
 mat4x2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 ivec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 bvec3 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 vec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 float _f1;
 ivec2 _f2;
 uvec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 bool _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_8 _f0;
 _GLF_struct_12 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat3x4 _f1;
 vec4 _f2;
 vec2 _f3;
 mat4x2 _f4;
 float _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 _GLF_struct_0 _f1;
 uvec2 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_8(_GLF_struct_6(ivec4(1), 1.0, ivec2(1), uvec3(1u), mat2x4(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.1)), float(1.0), bool(true))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), _GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(8.0) : float(1.0))), bool(true)))), float(_GLF_FUZZED(6.8)), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) + 0.0)), 1.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.8))), 0.0)))))), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-63.07)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(78.46)))))))), _GLF_struct_7(mat2(1.0), vec2(1.0), _GLF_IDENTITY(1u, max(1u, 1u))), true, uvec2(1u)), _GLF_struct_12(_GLF_struct_9(ivec4(1), ivec3(1), bvec2(true)), _GLF_struct_10(mat4x3(1.0), vec2(1.0), bvec2(true), mat4(1.0), mat4x2(1.0), uvec3(1u)), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))))))))), _GLF_struct_11(gl_SubgroupID, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), ivec3(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), log(1.0), 0.0, abs(1.0), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), log(1.0), 0.0, abs(1.0), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))).x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false, false)))))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-8.0), (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))[1]), vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(1822.2250)), bvec2(true, false)))) : _GLF_FUZZED(log2(injectionSwitch)))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + 0.0) : _GLF_FUZZED(-688.498))), 1.0, 0.0, 0.0)), 1.0 * (float(mat2(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + 0.0) : _GLF_FUZZED(-688.498))), 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) / 1.0))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-521.266), _GLF_FUZZED(127.441)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > injectionSwitch.y), false)))), false, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) && true))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false, true, true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), (((false))) && true)), (! (_GLF_IDENTITY(((false)), (((false))) && true))) && true)))))))), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), (_GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY((false), false || ((false)))), true, false, true)), (bool(bvec4(false || (_GLF_IDENTITY((false), false || ((false)))), true, false, true))) || false)) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(-843.654, -99.73)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(mat4x2(1.0), _GLF_struct_0(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), min(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 1u), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), max(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), ~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))))))))) >> _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ (uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u)))))), uvec2(1u), _GLF_struct_1(mat4(1.0), mat3x2(1.0)), _GLF_struct_2(mat3x2(1.0), mat3x4(1.0), vec4(1.0), vec2(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.5)))), float(_GLF_FUZZED((false ? -1.6 : -1.4))), bool(false)))), 1.0, mat3x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_struct_3(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_IDENTITY(_GLF_FUZZED(-8133.4026), (false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(_GLF_FUZZED(-8133.4026), max(_GLF_FUZZED(-8133.4026), _GLF_IDENTITY(_GLF_FUZZED(-8133.4026), (_GLF_FUZZED(-8133.4026)) + 0.0)))))), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_5.workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base)), workgroup_base)), workgroup_base), (min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base)), workgroup_base)), workgroup_base)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (0u)), 0u, 0u)) + (min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id)))) ^ 0u))), workgroup_base))), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base), (min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), 0u | (uint(uint(workgroup_base))))))), workgroup_base)), workgroup_base)) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ 0u, ((workgroup_base) ^ 0u) | ((workgroup_base) ^ 0u))), workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))), (_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))))) | 0u))) - 0u, (true ? (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u))) - 0u : _GLF_FUZZED(workgroup_base)))), workgroup_base)), min((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ 0u, ((workgroup_base) ^ 0u) | ((workgroup_base) ^ 0u))), workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))), (_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))))) | 0u))) - 0u, (true ? (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u))) - 0u : _GLF_FUZZED(workgroup_base)))), workgroup_base)), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ 0u, ((workgroup_base) ^ 0u) | ((workgroup_base) ^ 0u))), workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))), (_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))))) | 0u))) - 0u, (true ? (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), min((clamp(workgroup_base, workgroup_base, workgroup_base)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u))) - 0u : _GLF_FUZZED(workgroup_base)))), workgroup_base))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u))) / 1u), workgroup_base)), 0u ^ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base)), (~ (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base))) | (~ (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base))))))), uint(uint(~ (~ (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, ((clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), (_GLF_IDENTITY(0u | (workgroup_base), (true ? 0u | (workgroup_base) : _GLF_FUZZED(14601u)))) | (0u | (workgroup_base)))), workgroup_base, workgroup_base)) | 0u) | (_GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, clamp((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, (clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, (clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u)))))), (clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)), ~ (~ ((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base))))) | 0u, max((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)) | 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)), ~ (~ (_GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)), uint(uvec3(_GLF_IDENTITY((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base)), ~ (~ ((clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, workgroup_base))))), 0u, 0u)))))) | 0u)))))), workgroup_base))))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), 1u * (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base)), clamp((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base)), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)) | 0u)), workgroup_base)), ((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base))) >> 0u), (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base)))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), 1u * (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base)), clamp((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base)), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)) | 0u)), workgroup_base)), ((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base))) >> 0u), (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base)))), ~ (~ (~ _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), 1u * (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base)), clamp((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base)), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)) | 0u)), workgroup_base)), ((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base))) >> 0u), (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base))))))), ~ _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), 1u * (clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base)), clamp((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base)), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)) | 0u)), workgroup_base)), ((min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) | 0u)), workgroup_base))) >> 0u), (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)), workgroup_base))))))))))) + _GLF_IDENTITY(_GLF_struct_replacement_13._f1._f3.subgroup_id, min(_GLF_struct_replacement_13._f1._f3.subgroup_id, _GLF_struct_replacement_13._f1._f3.subgroup_id)) * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) + subgroup_local_id;
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_IDENTITY(1, (1) | 0), _GLF_struct_20(_GLF_struct_14(1, mat3x2(1.0), bvec4(true)), _GLF_struct_15(mat2x4(1.0)), _GLF_struct_16(bvec4(true), vec4(1.0), mat2x3(1.0), mat3x4(1.0), mat3x2(1.0), mat4x2(1.0)), _GLF_struct_17(vec4(1.0), vec4(1.0)), _GLF_struct_18(ivec3(1), bvec3(true), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1, uvec3(1u), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.7)), float(1.0), bool(true)))) - 0.0))), bvec2(true), _GLF_struct_19(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true, mat4x3(1.0), mat4(1.0))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_13._f1._f3.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_13._f1._f3.subgroup_id * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_24(vec3(1.0), uvec4(1u), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(sign(-76441)) : _GLF_IDENTITY(1, (1) - 0))), _GLF_struct_21(mat3x2(1.0), ivec2(1), bvec3(true), bvec4(true)), mat2x4(1.0), _GLF_struct_22(ivec3(1), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))), mat3(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))), vec3(1.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))), mat3x2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), mat3(1.0)), _GLF_struct_23(_GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), mat4x3(1.0))), _GLF_struct_26(ivec4(1), bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_struct_25(mat3x4(1.0)), 1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_IDENTITY(bool(bvec4(bool(! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false, true)), (_GLF_IDENTITY(bool(bvec4(bool(! (! (false))), _GLF_IDENTITY(false, false || (false)), false, true)), ! (! (bool(bvec4(bool(! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, false || (false)), false, true)))))) && true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_27.next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (_GLF_IDENTITY(true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), abs(1.0), 0.0))), 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)), min(true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), abs(1.0), 0.0))), 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)), true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), abs(1.0), 0.0))), 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.1)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(1.0, length(0.0))), dot(_GLF_IDENTITY(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), (vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0))), length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec2(1.0, length(0.0)), _GLF_IDENTITY(vec2(vec2(vec2(1.0, length(0.0)))), (vec2(vec2(vec2(1.0, length(0.0))))) / vec2(1.0, 1.0)))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))))), 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), abs(1.0), log(1.0), 0.0, 1.0, 1.0, sqrt(abs(1.0)))), vec2(vec4(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), abs(1.0), log(1.0), 0.0, 1.0, 1.0, sqrt(abs(1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))).y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)))) * round(length(normalize(1.0))))) - 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))))))))) - _GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(758.391, -2655.8345))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), min(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-534.892 * 3.4))), bool(false))), injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0)), sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))).y))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.1)))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0)), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(630.451) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.9) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0))))))))), 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-4064.5481, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(0.1, -8.6)) : -4064.5481)), 661.634, 1634.6294, 612.709)))))), 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.5, -57.69)))).x))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)) * round(length(normalize(1.0))))) - 0.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(dot(vec2(8.7, 9.7), injectionSwitch)))), mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) / 1.0)) * round(length(normalize(1.0))))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1668.5501), min(_GLF_IDENTITY(_GLF_FUZZED(1668.5501), clamp(_GLF_FUZZED(1668.5501), _GLF_FUZZED(1668.5501), _GLF_FUZZED(1668.5501))), _GLF_FUZZED(1668.5501)))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)) * 1.0) : _GLF_FUZZED(5484.7261))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)) * round(length(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0)))))), float(_GLF_FUZZED(-665.955)), bool(false))))))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, -7900.1658)))).x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)) * round(length(normalize(1.0))))) - 0.0)))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY((float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))), false || (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(vec3(5.8, vec2(-6.0, -3.2)).y)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.1)))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), min(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), _GLF_IDENTITY(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), vec2(vec3(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))))))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-839.793) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))), 1.0, 0.0)))), max(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), min(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), _GLF_IDENTITY(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), vec2(vec3(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))))))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-839.793) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))), 1.0, 0.0)))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), min(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), _GLF_IDENTITY(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), vec2(vec3(vec2(1.0, length(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8955.6971) : 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))))))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))), (true ? vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-839.793) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, length(0.0))))) : _GLF_FUZZED(vec4(-4064.5481, 661.634, 1634.6294, 612.709)))))), 1.0, 0.0))))))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.6) : injectionSwitch.x))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)) * round(length(normalize(1.0))))) - 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.8)), bool(false))), 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x2(0.0, abs(1.0), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), 0.0)), injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), max((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x))), 0.0 + (_GLF_IDENTITY((float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))))), 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1668.5501, (false ? _GLF_FUZZED(62.32) : 1668.5501)))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))), false || (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), max((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), clamp((float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, sin(0.0))), _GLF_IDENTITY(float(vec3(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4871.6951) : 0.0)), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(1.0) * (vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, sin(0.0))), 1.0, tan(0.0))), float(vec3(float(vec3(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4871.6951) : 0.0)), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(1.0) * (vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, sin(0.0))), 1.0, tan(0.0))), 0.0, 1.0)))))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), injectionSwitch.x)) < injectionSwitch.y))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1668.5501)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1668.5501)), (float(_GLF_FUZZED(1668.5501))) / 1.0), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.1)))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) || false), false, false), false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false))), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false))), true, true))), false), false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).x)) > injectionSwitch.y, true), _GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true))), false))), true)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false)))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)))), false, true))), true)))))), false || ((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false)))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)))), false, true))), true))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false), bvec3(bvec4(bvec3(false, false, false), true))))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(65.18)))), float(_GLF_FUZZED(6.7)), bool(false))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.2, 6.2)) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -7.4))), bool(false)))), float(_GLF_FUZZED(50.89)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0)), dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0)), dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2901.1432)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED((-66.10))), bool(false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (false)), false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), (! (! (false))) && true)), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), (! (! (false))) && true)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), _GLF_IDENTITY(false, (false) || false), true)))))), _GLF_IDENTITY((! (! (false))) && true, bool(bvec2((! (! (false))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true))))), _GLF_IDENTITY(bool(bvec2(false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true))))), true)), true && (bool(bvec2(false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true))))), true))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))) && true)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), true, false, false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, false)), ! (! (bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))), true, false, false)))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bvec2(false, true)))))))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true), false, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(874.854)), vec2(_GLF_FUZZED(-94.53), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(874.854)), vec2(_GLF_FUZZED(-94.53), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(874.854)), vec2(_GLF_FUZZED(-94.53), _GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0)))[1]), bvec2(false, true))).x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(874.854)), vec2(_GLF_FUZZED(-94.53), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
