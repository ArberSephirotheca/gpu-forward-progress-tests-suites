#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6249.3474)), bvec2(true, false))).x < injectionSwitch.y)))))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0))))), false || (bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-45.76)), bool(false)))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), cos(_GLF_ZERO(0.0, injectionSwitch.x)), sin(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))).y) / 1.0))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(4.0, 7.4, -21.89, -9.0).p), _GLF_FUZZED(1575.7025)), bvec2(false, false))).y) * 1.0))))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acosh(7.1)))), 1.0 * (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch)))).x : _GLF_FUZZED(-73.12)))), float(_GLF_FUZZED(-3.1)), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.2)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.2)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.2)), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.2)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(871.675) : injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(871.675) : injectionSwitch.x)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(abs(1.0)), sqrt(0.0)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-424.968), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(faceforward(-8.5, 3117.8747, -0.6))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2930.0054)), bvec2(true, false))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-424.968), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(faceforward(-8.5, 3117.8747, -0.6))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2930.0054)), bvec2(true, false))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0) : _GLF_FUZZED(-7.8))) > injectionSwitch.y)))) || false)))) && true), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-96284))), bool(false))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), true && (bool(bvec2(! (false), false)))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(-9.7)), bvec2(false, false))))[1], (_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (injectionSwitch)[1]))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 0.0))), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((+ -28.69))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(8.3), _GLF_IDENTITY(_GLF_FUZZED(-9.7), (_GLF_FUZZED(_GLF_IDENTITY(-9.7, _GLF_IDENTITY(float(mat3x4(-9.7, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), 0.0 + (abs(1.0))), 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0 + (float(mat3x4(-9.7, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(998.567)), float(abs(1.0)), bool(true))), abs(1.0))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false)))))))))) - 0.0)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0, 1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), mix(vec2((vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))[0], _GLF_FUZZED(-8.9)), vec2(_GLF_FUZZED(-449.712), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)).y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || false)), true, false, true))))))))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || false)), true, false, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))) && (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) - abs(vec2(0.0, 0.0))).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), false))))), true, true))))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((false))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-20.60)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (true ? vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y)))) && true))))), true, false), true)), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x3((injectionSwitch.y) * 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0)))))))) - 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(-114.313, -6.5, 3.2, 3.0, 4.6, 3.6, -5884.7591, 1.5, 0.3))))), 1.0, 0.0, 1.0)))))), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(-114.313, -6.5, 3.2, 3.0, 4.6, 3.6, -5884.7591, 1.5, 0.3))))), 1.0, 0.0, 1.0)))))), float(mat4x3(float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(-114.313, -6.5, 3.2, 3.0, 4.6, 3.6, -5884.7591, 1.5, 0.3))))), 1.0, 0.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), log(1.0), 1.0, 0.0, 0.0, log(1.0)))))), float(vec2(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(-114.313, -6.5, 3.2, 3.0, 4.6, 3.6, -5884.7591, 1.5, 0.3))))), 1.0, 0.0, 1.0)))))), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(-114.313, -6.5, 3.2, 3.0, 4.6, 3.6, -5884.7591, 1.5, 0.3))))), 1.0, 0.0, 1.0)))))), float(mat4x3(float(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(-114.313, -6.5, 3.2, 3.0, 4.6, 3.6, -5884.7591, 1.5, 0.3))))), 1.0, 0.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), log(1.0), 1.0, 0.0, 0.0, log(1.0)))))), tan(0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))))).y), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(75.93)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3252.5181)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true))), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec3(7.0, 286.390, -6586.4487)) : vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0))))))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(75.93)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-33.61)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3252.5181)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true))), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0))))))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(75.93)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3252.5181)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true))), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (vec3(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)) * mat3(1.0)), 1.0, 0.0, 1.0))))))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), true), false)))))))), false))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)))) | (int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1))))))) - (0 & -24930))], injectionSwitch[0])), injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, false || (true))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, false || (true))), true, true), true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true, true, false)))))), ! (! (bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, clamp(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) + uvec2(0u, 0u)), (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) * uvec2(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) + uvec2(0u, 0u)), (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) * _GLF_IDENTITY(uvec2(1u, 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(1u, 1u)), (_GLF_IDENTITY(~ (uvec2(1u, 1u)), _GLF_IDENTITY((~ (uvec2(1u, 1u))), ((~ (uvec2(1u, 1u)))) >> uvec2(0u, 0u)) << uvec2(0u, 0u))) / uvec2(1u, 1u)), (~ (uvec2(1u, 1u))) | uvec2(0u, 0u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ (uvec2(1u, 1u) ^ uvec2(1u, 1u))), (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) + uvec2(0u, 0u)), (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) * uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (_GLF_IDENTITY(0u ^ (1u), 0u + (0u ^ (1u)))) - _GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, _GLF_IDENTITY(1u, (1u) | (1u)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(uvec2(0u, 1u)), 0u | (uint(uvec2(0u, 1u))))))), 0u)))), _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(max(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, ~ (~ (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), uvec2(uvec2(_GLF_IDENTITY(max(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, ~ (~ (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) ? max(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, ~ (~ (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))))))) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u)))).x + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = 1, 1u * (buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) - 0)) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0)), min(int(_GLF_IDENTITY(ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0), (_GLF_IDENTITY(ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0), clamp(ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0), ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0), ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0)))) >> ivec3(0, 0, 0))))), int(ivec3(1, (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | 1), 0)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), _GLF_IDENTITY(int(ivec3(~ (~ (2)), 1, 0)), clamp(int(ivec3(~ (~ (2)), 1, 0)), int(ivec3(~ (~ (2)), 1, 0)), _GLF_IDENTITY(int(ivec3(~ (~ (2)), 1, 0)), int(ivec2(int(ivec3(~ (~ (2)), 1, 0)), 1))))))), max(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), _GLF_IDENTITY(int(ivec3(~ (~ (2)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), int(int(int(ivec3(~ (~ (2)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))))))), _GLF_IDENTITY(2, ~ (~ (2)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true)))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))), _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false))), true), false, false))))), bool(bool((bool(bvec2(false, true)))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(7.2)), float(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1224.9321)), bool(false))), injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((_GLF_IDENTITY(true, (true) || false)) || false) && true))))) && (! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y))))))
      return;
     return;
    }
   return;
  }
}
