#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_DEAD(false), false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(-1.1)), bvec2(false, false))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))), (bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))) || false)) && (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(false)))), false || (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), bool(bool(_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))))))))) && true)))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))) || false), false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))) || false), false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))))))), true)))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.8, max(_GLF_IDENTITY(7.8, max(7.8, 7.8)), 7.8)), (_GLF_IDENTITY(7.8, max(_GLF_IDENTITY(7.8, max(7.8, 7.8)), 7.8))) * 1.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(2113.6247), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), max(vec2(_GLF_FUZZED(2113.6247), _GLF_IDENTITY((injectionSwitch), clamp((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(2113.6247), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.8, -9.7)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), vec2(_GLF_FUZZED(2113.6247), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true)), true))).x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.8, -9.7)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), vec2(_GLF_FUZZED(2113.6247), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)), true))).x, 0.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(7.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(2113.6247), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(2113.6247), mix(float(_GLF_FUZZED((-4.3 / 581.526))), float(_GLF_FUZZED(2113.6247)), bool(true))), 0.0), (vec2(_GLF_IDENTITY(_GLF_FUZZED(2113.6247), mix(float(_GLF_FUZZED((-4.3 / 581.526))), float(_GLF_FUZZED(2113.6247)), bool(true))), 0.0)) + vec2(0.0, 0.0)))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))))))), true)), (mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))), vec2(1.0, 1.0) * ((injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0))], _GLF_FUZZED(7.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(2113.6247), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(2113.6247), mix(float(_GLF_FUZZED((-4.3 / 581.526))), _GLF_IDENTITY(float(_GLF_FUZZED(2113.6247)), max(_GLF_IDENTITY(float(_GLF_FUZZED(2113.6247)), float(mat3x4(float(_GLF_FUZZED(2113.6247)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(2113.6247)))), bool(true))), 0.0))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))) * mat2(1.0))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.4, -444.243, 407.323, 6574.7545, -37.05, -68.24, 20.39, -0.8, -9.4)) : mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.0) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.0) : injectionSwitch.x)) > injectionSwitch.y), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.0) : injectionSwitch.x)) > injectionSwitch.y), false, false)), false), bvec2(bvec4(bvec2(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.0) : injectionSwitch.x)) > injectionSwitch.y), false, false)), false), true, true)))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), bool(bool(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (false ? _GLF_FUZZED(-801.437) : (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) / 1.0) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, 1.0, 1.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, 1.0, 1.0)), 0.0, 1.0))))), 1.0 * (float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), injectionSwitch)).y, 1.0, 1.0)))))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(exp(0.0), 0.0)), dot(_GLF_IDENTITY(vec2(cos(0.0), 0.0), (true ? vec2(cos(0.0), 0.0) : _GLF_FUZZED(vec2(-3.9, 2.6)))), vec2(exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false)))), 0.0))))), false, true)))))), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(79723u) : workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floatBitsToUint(-1.7)) : subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(degrees(86.32)) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false))))))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false)))))))))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false))))))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(64952u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.93)), bvec2(true, false))).x > injectionSwitch.y)), false, false)))))))))))) && true), false))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) + 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), min((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) + 0u, 1u, 1u)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) + 0u)) / 1u) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), ~ (~ (~ (subgroup_local_id + 1))))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), max(~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))), ~ (~ (~ (subgroup_local_id + 1))))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))))))) / 1u))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, subgroup_size), max(_GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec2(max(subgroup_size, subgroup_size), 0u))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))))), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, _GLF_IDENTITY(((max(subgroup_size, subgroup_size)) >> 0u) | 0u, ~ (~ (((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> _GLF_IDENTITY(0u, uint(uint(0u)))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (false ? _GLF_FUZZED(148723u) : _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (false ? _GLF_FUZZED(148723u) : _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (false ? _GLF_FUZZED(148723u) : _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))))) * 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (false ? _GLF_FUZZED(148723u) : _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, (_GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, 1u * ((max(subgroup_size, subgroup_size)) >> 0u))) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | _GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, _GLF_IDENTITY(((max(subgroup_size, subgroup_size)) >> 0u), clamp(((max(subgroup_size, subgroup_size)) >> 0u), ((max(subgroup_size, subgroup_size)) >> 0u), _GLF_IDENTITY(((max(subgroup_size, subgroup_size)) >> 0u), (((max(subgroup_size, subgroup_size)) >> 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((max(subgroup_size, subgroup_size)), uint(uvec4((max(subgroup_size, subgroup_size)), 1u, 1u, 0u))) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), ~ (~ (~ (subgroup_local_id + 1))))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), max(~ (~ (~ (subgroup_local_id + 1))), ~ _GLF_IDENTITY((~ (~ (subgroup_local_id + 1))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u) ^ ((~ (~ (subgroup_local_id + 1))))))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))))))) / 1u))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((max(subgroup_size, subgroup_size)), (_GLF_IDENTITY((max(subgroup_size, subgroup_size)), (_GLF_IDENTITY((max(subgroup_size, subgroup_size)), ((max(subgroup_size, subgroup_size))) | 0u)) - 0u)) + 0u) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, (_GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, uint(uvec2((max(subgroup_size, subgroup_size)) >> 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | ((max(subgroup_size, subgroup_size)) >> 0u)), ((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, _GLF_IDENTITY(((max(subgroup_size, subgroup_size)) >> 0u), clamp(((max(subgroup_size, subgroup_size)) >> 0u), _GLF_IDENTITY(((max(subgroup_size, subgroup_size)) >> 0u), (((max(subgroup_size, subgroup_size)) >> 0u)) ^ 0u), ((max(subgroup_size, subgroup_size)) >> 0u))) | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) ^ 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) ^ 0u)), uint(uint(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) ^ 0u)))))) - 0u))), ~ _GLF_IDENTITY((~ (~ (subgroup_local_id + 1))), 0u | ((~ (~ (subgroup_local_id + 1))))))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), max(~ (~ (~ (subgroup_local_id + 1))), ~ (~ (~ (subgroup_local_id + 1)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), max(~ (~ (~ (subgroup_local_id + 1))), ~ (~ (~ (subgroup_local_id + 1)))))), (true ? _GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), max(~ (~ (~ (subgroup_local_id + 1))), ~ (~ (~ (subgroup_local_id + 1)))))) : _GLF_FUZZED(subgroup_id)))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))))))) / 1u))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))) / 1u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u)))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY((max(subgroup_size, subgroup_size)) >> 0u, ((max(subgroup_size, subgroup_size)) >> 0u) | 0u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
