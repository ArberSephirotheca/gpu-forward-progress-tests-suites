#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(1753.4609), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09))))), bool(true))), 1.0, 0.0, 0.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09))))), bool(true))), 1.0, 0.0, 0.0))[0], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09))))), bool(true))), 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-666.388), _GLF_FUZZED(9.6)), vec4(_GLF_FUZZED(283.503), _GLF_FUZZED(2768.6897), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09))))), bool(true))), 1.0, 0.0, 0.0))[2], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09)))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(_GLF_FUZZED((5.3 + -97.09)), min(_GLF_FUZZED((5.3 + -97.09)), _GLF_FUZZED((5.3 + -97.09))))), bool(true))), 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true)))))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, ((false) || false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((false) || false) && true, bool(bool(((false) || false) && true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(((false) || false) && true, bool(bool(((false) || false) && true))), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), (! (_GLF_IDENTITY(false, (false) || false))) || false)), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))) || false)), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.003), _GLF_FUZZED((_GLF_IDENTITY(-6.5 - -7.9, (_GLF_IDENTITY(-6.5 - -7.9, min(-6.5 - -7.9, -6.5 - -7.9))) - 0.0)))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false), true)))))))))), false, true)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((3909.3961))), bool(false))))))).y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]) + 0.0))))).x > injectionSwitch.y), true, true)))))) || false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) | (gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | 0u) | (gl_WorkGroupID.x) : _GLF_FUZZED(subgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false), false, true, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, false))))) && true) && true), false, _GLF_IDENTITY(true, (true) && true), true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, false || (false))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((false))) && true)))) && true)), false, true, true)))))), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, false))), true, true))))) && true) && true), false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, bool(bool(_GLF_IDENTITY((false), true && ((false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, bool(bool(_GLF_IDENTITY((false), true && ((false))) && true)))))) && true)), false, true, true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, false))), true, true))))) && true) && true), false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, bool(bool(_GLF_IDENTITY((false), true && ((false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, bool(bool(_GLF_IDENTITY((false), true && ((false))) && true)))))) && true)), false, true, true)))))), false))), false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, true), false, true)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, true), false, true)))))), false)))))), false, false))))), (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))) : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))) : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)), min((true ? _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))) : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))) : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)))), (true ? _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))) : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size)))), uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size)))), 0u, 0u, (131952u & 0u))))) / 1u))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(147358u), uint(uvec2(_GLF_FUZZED(147358u), 0u))), (_GLF_IDENTITY(_GLF_FUZZED(147358u), uint(uvec2(_GLF_FUZZED(147358u), 0u)))) - 0u))), (workgroup_base + subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u)))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u)))) * subgroup_size) / ((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u))))))) - 0u)) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), ~ (~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))))))))))) * subgroup_size) / ((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))) | (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u))))))) - 0u)) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))))))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))))) % subgroup_size)) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), false))))), false)))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), _GLF_IDENTITY(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), bool(_GLF_IDENTITY(bvec2(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), true), bvec2(bvec4(bvec2(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), true), true, false))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false)))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 0.0), (vec3(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 0.0), (vec3(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))) / 1.0))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6309.6362, 2.3)))).y))))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6309.6362, 2.3)))).y)))))))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))), false), bvec2(bvec2(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))), false))))))))))), _GLF_IDENTITY(true, true && (true)), true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(9.0))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, 0.0)), log(1.0)), (false ? _GLF_FUZZED(trunc(vec3(-732.031, 3.1, 1026.2034))) : vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, 0.0)), log(1.0)))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))))))))))))))), true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))), false, false))))))), true, true, true)))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7082.1599))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, true)), true && (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, true))))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), false, false))))))), true, true, true)))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(50.02)), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), bool(true))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(50.02)), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), bool(true))), 0.0, abs(0.0), 0.0, 0.0, 0.0)))))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(degrees(injectionSwitch)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(488.634)), float(0.0), bool(true))), 0.0))))), 1.0, 0.0), (vec3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(2703.0792))), _GLF_IDENTITY(abs(0.0), float(mat4x2(abs(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0))))), 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 0.0), (vec3(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 0.0)) / vec3(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.3)), bool(false))), 1.0, 1.0)), 1.0)))) / 1.0))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(false, ! (! (false)))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6309.6362, 2.3)))).y))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6309.6362, 2.3)))).y)))))))))), ! (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6309.6362, 2.3)))).y))))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch[1]), bool(true))))).y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9212.6377)), float(injectionSwitch[1]), bool(true))))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0))))).y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), float(_GLF_FUZZED(8.2)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6309.6362, 2.3)))).y)))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))))), ! (! ((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))))))))), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x), float(_GLF_FUZZED(vec4(3015.8485, 18.67, 68.09, 9.9).r)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x), float(_GLF_FUZZED(vec4(3015.8485, 18.67, 68.09, 9.9).r)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))))))))), false), bvec2(bvec2(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, 73.37)))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))), false))))))))))), _GLF_IDENTITY(true, true && (true)), true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(9.0))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, 0.0)), log(1.0)), (false ? _GLF_FUZZED(trunc(vec3(-732.031, 3.1, 1026.2034))) : vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.5)), bool(false)))) + 0.0))), log(1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(424.131) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.1)), bool(false))) : _GLF_FUZZED(-71.86)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))), false)))))))))))))), true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! (false)))))) || (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bool(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(509.307) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7790.2991)), vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + log(vec2(1.0, 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))), false, false))))))), true, true, true)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ! (! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))))), ! (! (! (false))))))))) || (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7082.1599), mix(float(_GLF_FUZZED(vec3(5.8, 3.0, 7409.6988).y)), float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7082.1599), (true ? injectionSwitch.x : _GLF_FUZZED(-7082.1599)) / sqrt(1.0))), bool(true))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (true)))), true && (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, true))))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0), 1.0, 0.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0), 1.0, 0.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, 1.0)))))) < injectionSwitch.y)) && (! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(82.10), (vec2(vec4(injectionSwitch, 1.0, 0.0)))[1]), vec2((vec2(vec4(injectionSwitch, 1.0, 0.0)))[0], _GLF_FUZZED(-3.1)), bvec2(true, false)))), injectionSwitch)).y))))))), false)))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false))))))), true, true, true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6818.7911)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) * 1), (buf[virtual_gid] = 1) + 0u) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base), _GLF_IDENTITY((0u | 0u), clamp(_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (0u | 0u), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))))) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base))), 0u | (_GLF_IDENTITY(false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base), (0u | 0u) | _GLF_IDENTITY((false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)), (true ? (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)) : _GLF_FUZZED(147011u))))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? num_workgroup : _GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), ~ (~ (_GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), ~ (~ (atomicAdd(subgroup_id, workgroup_base))))))), _GLF_IDENTITY((0u | 0u) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((0u | 0u) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)), ((0u | 0u) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base))) >> 0u) : _GLF_FUZZED(workgroup_id))))) : _GLF_FUZZED((virtual_gid / workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : (true ? (_GLF_IDENTITY(false ? num_workgroup : _GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), (atomicAdd(subgroup_id, workgroup_base)) / 1u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | 0u) | (false ? num_workgroup : _GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), 0u | (_GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), (0u | 0u) + (atomicAdd(subgroup_id, workgroup_base)))))))) : _GLF_FUZZED((virtual_gid / workgroup_base))))))), (true ? _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) * 1), (buf[virtual_gid] = 1) + 0u) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base), _GLF_IDENTITY((0u | 0u), clamp(_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (0u | 0u), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))))) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base))), 0u | (_GLF_IDENTITY(false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base), (0u | 0u) | _GLF_IDENTITY((false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)), (true ? (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)) : _GLF_FUZZED(147011u))))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? num_workgroup : _GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), ~ (~ (_GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), ~ (~ (atomicAdd(subgroup_id, workgroup_base))))))), _GLF_IDENTITY((0u | 0u) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((0u | 0u) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base)), ((0u | 0u) | (false ? num_workgroup : atomicAdd(subgroup_id, workgroup_base))) >> 0u) : _GLF_FUZZED(workgroup_id))))) : _GLF_FUZZED((virtual_gid / workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : (true ? (_GLF_IDENTITY(false ? num_workgroup : _GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), (atomicAdd(subgroup_id, workgroup_base)) / 1u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | 0u) | (false ? num_workgroup : _GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), 0u | (_GLF_IDENTITY(atomicAdd(subgroup_id, workgroup_base), (0u | 0u) + (atomicAdd(subgroup_id, workgroup_base)))))))) : _GLF_FUZZED((virtual_gid / workgroup_base)))))))) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.1)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, cos(0.0), 1.0, 1.0, tan(0.0), 0.0, abs(0.0), 1.0, 0.0)))))) / 1.0))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mix(-2.4, -6.8, false)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), 0u, (0u | 0u)), (true ? uvec3(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), 0u, (0u | 0u)) : _GLF_FUZZED(uvec3(45642u, 157650u, 171732u)))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), true))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), ! (! (_GLF_DEAD(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(false, true))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, true, true)))))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
