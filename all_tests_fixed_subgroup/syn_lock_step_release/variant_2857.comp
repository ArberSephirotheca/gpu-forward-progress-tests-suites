#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (false))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && true, ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && true))))) && true))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))), true, true), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))))), true, true))))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2(false, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), true, true, true)))), true, true, false)))) || false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, true))))))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))) && true), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true)))))))), ! (_GLF_IDENTITY(! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), true, true, true)))), true, true, false)))) || false))))))))), (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false || (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))), bool(bvec4((false), true, true, true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true, false)))) || false)))))))))) || false)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), true, false))))))), bool(bvec4((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), true, true)))), true, true, false)))) || false)))))))))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), true, false))))))), bool(bvec4((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), true, true)))), true, true, false)))) || false)))))))))))), true, false)), false || (bool(bvec3((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), true, false))))))), bool(bvec4((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), true, true)))), true, true, false)))) || false)))))))))))), true, false))))))))))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2(false, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), true, true, true)))), true, true, false)))) || false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, true))))))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))) && true), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! ((_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true)))))))), ! (_GLF_IDENTITY(! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), true, true, true)))), true, true, false)))) || false))))))))), (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false || (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))), bool(bvec4((false), true, true, true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true, false)))) || false)))))))))) || false)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), true, false))))))), bool(bvec4((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), true, true)))), true, true, false)))) || false)))))))))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), true, false))))))), bool(bvec4((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), true, true)))), true, true, false)))) || false)))))))))))), true, false)), false || (bool(bvec3((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), true, false))))))), bool(bvec4((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, true)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), true, true)))), true, true, false)))) || false)))))))))))), true, false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(768.363), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1995.9851)), bvec2(true, false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0))), (true ? determinant(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, abs(0.0), 1.0, 0.0))) : _GLF_FUZZED(308.137)))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))), float(mat3x4(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), 0.0)))))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(118.036)), float(_GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0)), bool(true))), _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))))))), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), bool(true)))) > injectionSwitch.y, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))), 1.0 * (_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, length(0.0)), (vec3(0.0, 0.0, length(0.0))) * mat3(1.0)))), 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(54.50) : 1.0)))), 1.0, 1.0))))))) > injectionSwitch.y, true))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), bool(true)))) > injectionSwitch.y, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))), 1.0 * (_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y, tan(sin(0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, abs(0.0), 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, length(0.0)), (vec3(0.0, 0.0, length(0.0))) * mat3(1.0)))), 1.0)) * (float(mat2x4(injectionSwitch.y, tan(sin(0.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), float(mat4(max(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-2.7)), bool(false))), abs(1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(54.50) : 1.0)))), 1.0, 1.0))))))) > injectionSwitch.y, true))))), false, true, true))) || _GLF_IDENTITY(false, (false) || false))), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.7)), float(1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), (! (_GLF_IDENTITY(! (false), (! (false)) && true))) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))))))), true)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2351.3784), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4((injectionSwitch)[0], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))), _GLF_FUZZED((-4790.3460 * 35.29))), bvec2(true, false))).y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))))))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2351.3784), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4((injectionSwitch)[0], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))), _GLF_FUZZED((-4790.3460 * 35.29))), bvec2(true, false))).y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))))))), true)), false)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))))))), true)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, false)), false, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, false)), false, false), false))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! ((injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), min(vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))))).y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))))))), true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x < injectionSwitch.y))))))))))), true)), false))))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), false, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-7516.7936 * 828.007, _GLF_IDENTITY(float(mat2x3(-7516.7936 * 828.007, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), mix(float(float(mat2x3(-7516.7936 * 828.007, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))), float(_GLF_FUZZED(-2.5)), bool(false))))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))) && true), true, true))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))), true && (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((injectionSwitch.x < injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED((uvec3(153862u, 25164u, 196975u))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize)).x))) ^ 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), bool(true))))) > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bvec2((_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false)))))))))))), false || (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))), min(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u | 0u)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) - 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), max(subgroup_size, subgroup_size))))) << (_GLF_IDENTITY(179689u & 0u, (179689u & 0u) | _GLF_IDENTITY((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(179689u & _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), (true ? _GLF_IDENTITY(179689u & 0u, (179689u & 0u) >> 0u) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(179689u & 0u, (_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id))))))) : _GLF_FUZZED(subgroup_size)))) | 0u)) | (_GLF_IDENTITY(((_GLF_IDENTITY(179689u & 0u, (_GLF_IDENTITY(true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id), (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)) | (true ? 179689u & _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY((((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))) >> 0u, ((((_GLF_IDENTITY(179689u & _GLF_IDENTITY(0u, (0u) * 1u), (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))) >> 0u) | ((((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))) >> 0u))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))) | (~ ((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))), (false ? _GLF_FUZZED(workgroup_id) : (~ ((_GLF_IDENTITY(179689u & 0u, (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))) | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(179689u & 0u, (179689u & 0u) | (179689u & 0u)), (true ? 179689u & 0u : _GLF_FUZZED(subgroup_local_id)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base)) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (0u | 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (0u | 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) * (0u | 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (0u | 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) * (0u | 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) * (0u | 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))))) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))), true, true, false))) || false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (1))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (1))))))) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(32872) : (1)))) | 0)), (buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))), ((_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))) ^ 0) / 1))), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1))))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) - 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (1))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (1))))))) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(32872) : (1)))) | 0)), (buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))), ((_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))) ^ 0) / 1))), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1))))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) - 0u)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false || (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1]), bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true))), mat2(1.0) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0))], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)))) + sin(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))))[0], _GLF_FUZZED(99.71)), vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-37.29), max(_GLF_IDENTITY(_GLF_FUZZED(-37.29), min(_GLF_FUZZED(-37.29), _GLF_FUZZED(-37.29))), _GLF_IDENTITY(_GLF_FUZZED(-37.29), min(_GLF_FUZZED(-37.29), _GLF_FUZZED(-37.29))))), (injectionSwitch)[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(330.166)), vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(330.166)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), vec2(mat2(vec2(_GLF_FUZZED(-37.29), (injectionSwitch)[1]), 0.0, 1.0))))), bvec2(false, true))), mat2(1.0) * (injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0))))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
}
