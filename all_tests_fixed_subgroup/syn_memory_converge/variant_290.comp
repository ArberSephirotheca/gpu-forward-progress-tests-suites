#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 vec4 _f0;
 uint _f1;
 float _f2;
 ivec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_27 {
 ivec3 _f0;
 uvec4 _f1;
 bool _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_26 {
 ivec3 _f0;
 mat4x3 _f1;
 int _f2;
} ;

struct _GLF_struct_25 {
 uvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_29 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 mat3x2 _f3;
 bvec3 _f4;
 _GLF_struct_28 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 int _f1;
 vec4 _f2;
 ivec2 _f3;
 uvec3 _f4;
 mat4x2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_22 {
 mat4x2 _f0;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 ivec4 _f1;
 _GLF_struct_23 _f2;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 float _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 vec3 _f1;
 vec4 _f2;
 _GLF_struct_20 _f3;
 float _f4;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 mat2 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
 uvec3 _f1;
 bvec4 _f2;
 uvec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_14 {
 float _f0;
 vec3 _f1;
 vec3 _f2;
 bool _f3;
 vec2 _f4;
 ivec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_13 {
 uint _f0;
 mat2 _f1;
 mat2x3 _f2;
 uvec2 _f3;
 vec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 ivec3 _f1;
 uvec3 _f2;
 uvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 uvec4 _f1;
 bool _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 vec4 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_15 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 ivec3 _f3;
 _GLF_struct_21 _f4;
 uint workgroup_size;
 _GLF_struct_24 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 mat2 _f1;
 vec3 _f2;
 vec4 _f3;
 mat3x2 _f4;
 ivec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 vec3 _f3;
 mat3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 vec2 _f1;
 mat2 _f2;
 vec4 _f3;
 int _f4;
 bvec4 _f5;
 float _f6;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 bvec2 _f1;
 mat4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 vec4 _f1;
 uvec2 _f2;
 uvec2 _f3;
 ivec3 _f4;
 uint _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 mat4 _f3;
 vec4 _f4;
 ivec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 vec2 _f2;
 mat4x2 _f3;
 int _f4;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
} ;

struct _GLF_struct_10 {
 uint workgroup_base;
 _GLF_struct_0 _f0;
 bool _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_7 _f3;
 uvec4 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))) || (false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1647.3948)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(89993, 74688))) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x), ((false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x)) ^ 0u)), _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | 0u) : gl_NumWorkGroups.x)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) + 0u)) ^ 0u), _GLF_FUZZED(subgroup_size))), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : gl_NumWorkGroups.x))) ^ 0u), (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, true))), (true && _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true && ((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) && true))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))) || false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_15(mat4(1.0), vec4(1.0), _GLF_struct_11(mat2x4(1.0), uvec4(1u), true, mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(476.051, float(mat4(476.051, 0.0, log(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))))))))), uvec2(_GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_struct_12(mat3(1.0), _GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) | (ivec3(1)), ((ivec3(1)) | (ivec3(1))) | (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(5), ivec3(5))))), (_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1)))) | (ivec3(1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)))), (ivec3(1)) | (ivec3(1))))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) + (ivec3(0, 0, 0) | ivec3(0, 0, 0))), ivec3(1))), uvec3(1u), uvec3(1u), mat4x3(1.0)), _GLF_struct_13(1u, mat2(1.0), mat2x3(1.0), uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), vec2(_GLF_IDENTITY(mat2(vec2(1.0), 1.0, 1.0), transpose(transpose(mat2(vec2(1.0), 1.0, 1.0)))))), vec2(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec3(_GLF_FUZZED(injectionSwitch), 0.0), mat3(1.0) * (vec3(_GLF_FUZZED(injectionSwitch), 0.0)))))), vec2(mat3x2(_GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), vec2(_GLF_IDENTITY(mat2(vec2(1.0), 1.0, 1.0), transpose(transpose(mat2(vec2(1.0), 1.0, 1.0)))))), vec2(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec3(_GLF_FUZZED(injectionSwitch), 0.0), mat3(1.0) * (vec3(_GLF_FUZZED(injectionSwitch), 0.0)))))), ((true ? _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), vec2(_GLF_IDENTITY(mat2(vec2(1.0), 1.0, 1.0), transpose(transpose(mat2(vec2(1.0), 1.0, 1.0)))))), vec2(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec3(_GLF_FUZZED(injectionSwitch), 0.0), mat3(1.0) * (vec3(_GLF_FUZZED(injectionSwitch), 0.0))))))) * vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-132.457)))) - 0.0))), vec2(mat4(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, exp(0.0), 0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(3830.4599))))))), tan(0.0), 0.0, 0.0))), 1u), _GLF_struct_14(1.0, vec3(1.0), vec3(1.0), true, vec2(1.0), ivec2(1), bvec3(true))), _GLF_struct_17(_GLF_struct_16(vec4(1.0), uvec3(1u), bvec4(true), uvec2(1u), mat2x4(1.0))), _GLF_struct_18(mat3(1.0), mat2(1.0), _GLF_IDENTITY(ivec3(1), ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) ^ 0)), 0, 0) + (ivec3(1))), mat2x3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED((+ -467.413))))), vec3(1.0)), ivec3(1), _GLF_struct_21(_GLF_struct_19(mat2(1.0)), vec3(1.0), vec4(1.0), _GLF_struct_20(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u)))), uvec2(0u, 0u) ^ (min(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))))), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(195418u, 39138u)))))))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))))))) ^ uvec2(0u, 0u))), 1.0, uvec4(1u), ivec3(1)), 1.0), gl_WorkGroupSize.x, _GLF_struct_24(_GLF_struct_22(mat4x2(1.0)), ivec4(1), _GLF_struct_23(bvec3(true), 1, vec4(1.0), ivec2(1), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED((uint(43962) | uvec3(79663u, 72751u, 110253u))) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))))) << uvec3(0u, 0u, 0u)))))), mat4x2(1.0), mat3(1.0))), _GLF_struct_29(_GLF_struct_25(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), vec4(vec4(vec4(1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))), _GLF_struct_26(ivec3(1), mat4x3(1.0), 1), _GLF_struct_27(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))), uvec4(1u), true, mat4x3(1.0)), mat3x2(1.0), bvec3(true), _GLF_struct_28(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(determinant(mat2(-95.22, 92.35, -452.426, -3.7)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), min((uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1u), max((1u), (1u))), clamp(_GLF_IDENTITY((1u), max((1u), (1u))), _GLF_IDENTITY((1u), max((1u), (1u))), _GLF_IDENTITY(_GLF_IDENTITY((1u), max((1u), (1u))), (_GLF_IDENTITY((1u), max((1u), (1u)))) - 0u)))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1u), max((1u), (1u)))), min(~ (~ _GLF_IDENTITY((1u), max((1u), (1u)))), ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))))) - 0u)), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), ((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, 1u))))), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) << 0u))), (uint(uvec2(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1u), max((1u), (1u)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((1u), max((1u), (1u))), max(~ _GLF_IDENTITY((1u), max((1u), (1u))), ~ _GLF_IDENTITY((1u), max((1u), (1u))))))) ^ (85165u & 0u))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), min((uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1u), max((1u), (1u))), clamp(_GLF_IDENTITY((1u), max((1u), (1u))), _GLF_IDENTITY((1u), max((1u), (1u))), _GLF_IDENTITY(_GLF_IDENTITY((1u), max((1u), (1u))), (_GLF_IDENTITY((1u), max((1u), (1u)))) - 0u)))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1u), max((1u), (1u)))), min(~ (~ _GLF_IDENTITY((1u), max((1u), (1u)))), ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))))) - 0u)), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((1u), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), ((uint(uvec2(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max((_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, 1u))))), (1u))))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) << 0u))), (uint(uvec2(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1u), max((1u), (1u)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((1u), max((1u), (1u))), max(~ _GLF_IDENTITY((1u), max((1u), (1u))), ~ _GLF_IDENTITY((1u), max((1u), (1u))))))) ^ (85165u & 0u))), 1u))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))), 1.0, ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | 0))))) >> 0), 0, 1)))))) : _GLF_FUZZED(78683)))), 1u), uvec2(1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_replacement_30.workgroup_size * workgroup_id, _GLF_struct_0(ivec3(1)), true, _GLF_struct_3(_GLF_struct_1(mat3x4(1.0), mat3x4(1.0), ivec2(1), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), vec4(1.0), ivec3(1), ivec2(1)), _GLF_struct_2(mat3(1.0), vec4(1.0), uvec2(1u), uvec2(1u), ivec3(1), 1u, ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1)), _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, 0 | ((1) / 1))) * 1)))))), vec2(1.0), mat4x2(1.0), _GLF_IDENTITY(1, (1) | (1))), _GLF_struct_7(_GLF_struct_4(uvec4(1u), bvec2(true), mat4(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec3(_GLF_FUZZED(-6396.3423), _GLF_IDENTITY((vec3(1.0))[1], mix(float((vec3(1.0))[1]), float(_GLF_FUZZED(63.76)), bool(false))), (vec3(1.0))[2]), vec3((vec3(1.0))[0], _GLF_FUZZED(278.788), _GLF_FUZZED(-813.637)), bvec3(true, false, false)))), _GLF_struct_5(vec4(1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-1.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-49.97, min(-49.97, _GLF_IDENTITY(-49.97, 0.0 + (-49.97)))), 5.8, 1.1, -533.440)) : vec4(1.0, 1.0, 1.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-49.97, min(-49.97, _GLF_IDENTITY(-49.97, 0.0 + (-49.97)))), 5.8, 1.1, -533.440)) : vec4(1.0, 1.0, 1.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-91.67)))), 1.0, 1.0, 0.0))).y)))))))), _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (false ? _GLF_FUZZED(-5644.3762) : float(float(1.0))))))))) * mat2(1.0)), vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(46520) : 1)), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, 1), max(ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 1 * (1)))), 0, 1, 1), ivec4(1, 0, 1, 1))))))), bvec4(true), 1.0), bvec4(true), mat4x2(1.0), _GLF_struct_6(uvec2(1u), mat3x4(1.0), uvec3(1u), vec3(1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))) * mat3(1.0)), mat4(1.0))), uvec4(1u), _GLF_struct_9(mat2x4(1.0), _GLF_struct_8(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (1))) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (1) | 0)) | (1))) >> 0) / 1))), mat2(1.0), vec3(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), mat3x2(1.0), ivec4(1), true)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(vec2(0.0, 0.0)) + (vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))), float(_GLF_FUZZED(0.0)), bool(false))))), max(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(635.002)), float(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_IDENTITY(false, bool(bool(false))), true, false))))) || false)), (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = _GLF_struct_replacement_10.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))) || false))))), bool(bvec4(false, false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))), false, true), true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, false || ((false) || false))), ! (! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))))))) && true), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true, bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)))), true)), false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))), true && (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))), true && (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))), true && (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))))))))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))) || false)), true && (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))))))))))) && true), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))) && true)))))), (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(write_val)), (uint(subgroupAllEqual(write_val))) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.9) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + vec2(0.0, 0.0))), dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)))), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(6.2) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))))))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, false, true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
