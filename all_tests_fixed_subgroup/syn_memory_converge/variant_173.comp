#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec3(false, false, _GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), true && (! (false)))), true))))))))) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), true && (! (false)))), true))))))))) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), true && (! (false)))), true))))))))) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), true, false)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (false ? _GLF_FUZZED(-491.802) : dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(-9873.4987, 2994.8472, 6866.5697, -3.4)) : _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), transpose(transpose(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.5) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7148.0452)), bool(false))), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 1.0))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec3(false, false, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))))))) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))))))) && true)), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))))))) && true)), true)))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), false, false, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), true, true), false))))))), true && (bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, false, false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), false || (bool(bvec4(! (_GLF_DEAD(false)), false, false, false)))))), true, true), false))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))))), float(_GLF_FUZZED(7294.2116)), bool(false))), 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(5.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(58.92)), vec2(_GLF_FUZZED(-2787.8059), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), false)))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)))), true))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false)))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))) && true)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))) - 0u)) + 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | 0u)))) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) + 0u) - 0u)), _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u), 0u + (~ (workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), max(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (workgroup_size))), 0u + (~ (workgroup_size)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> 0u))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))))))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), (_GLF_IDENTITY(uint(uint(subgroup_id)), clamp(uint(uint(subgroup_id)), uint(uint(subgroup_id)), uint(uint(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 0u), uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 0u)))))))))) << 0u)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), min(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : ((subgroup_id * subgroup_size))))) >> 0u) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMax(subgroup_id, num_workgroup))))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), max(((subgroup_id * subgroup_size)), ((subgroup_id * subgroup_size)))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), max(((subgroup_id * subgroup_size)), ((subgroup_id * subgroup_size)))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))) + 0u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u)))))), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))) << 0u))))))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) ^ (subgroup_id * subgroup_size))))))))) >> 0u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (1u ^ 1u) + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), max((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id))))) >> 0u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), (_GLF_IDENTITY(uint(uint(subgroup_id)), clamp(uint(uint(subgroup_id)), uint(uint(subgroup_id)), uint(_GLF_IDENTITY(uint(subgroup_id), clamp(uint(subgroup_id), uint(subgroup_id), uint(subgroup_id))))))) << 0u)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, max(((subgroup_id * subgroup_size)) + 0u, _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, clamp(((subgroup_id * subgroup_size)) + 0u, ((subgroup_id * subgroup_size)) + 0u, ((subgroup_id * subgroup_size)) + 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))))))))))), ~ (~ (~ (subgroup_id * subgroup_size))))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(subgroup_id)), clamp(uint(uint(subgroup_id)), uint(uint(subgroup_id)), uint(uint(subgroup_id))))), ((_GLF_IDENTITY(uint(uint(subgroup_id)), clamp(uint(uint(subgroup_id)), uint(uint(subgroup_id)), uint(uint(subgroup_id)))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) << 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) << 0u)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)))) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u, (false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u, uint(uvec3(((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u, 1u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)))))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (((subgroup_id * subgroup_size)) + 0u) | (_GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (((subgroup_id * subgroup_size)) + 0u) ^ 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, 0u, 0u, 1u)))), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))) + 0u)) / 1u))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) : _GLF_FUZZED(write_val))) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) : _GLF_FUZZED(write_val))) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))) - 0u))) >> 0u), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))))) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (false ? _GLF_FUZZED((183474u / num_workgroup)) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, clamp((subgroup_id) + 0u, (subgroup_id) + 0u, (subgroup_id) + 0u))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)))) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (subgroup_id * subgroup_size)))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))))), ~ (~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (((subgroup_id * subgroup_size)) + 0u) * 1u)) | 0u))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))))) >> 0u))))))), ~ (~ (~ (subgroup_id * subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), (uint(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u))) | 0u)))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : ((subgroup_id * subgroup_size)))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size))))) + 0u)) / 1u)))))), ~ (~ (~ (subgroup_id * subgroup_size)))), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))))))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) >> 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, (0u & 10570u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))), (((_GLF_IDENTITY(subgroup_id * subgroup_size, (0u & 10570u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, (0u & 10570u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))), (((_GLF_IDENTITY(subgroup_id * subgroup_size, (0u & 10570u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))))) << 0u))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u))), 0u | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))))))), ~ (~ (~ (subgroup_id * subgroup_size)))))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (((subgroup_id * subgroup_size)) + 0u) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, min(((subgroup_id * subgroup_size)) + 0u, ((subgroup_id * subgroup_size)) + 0u))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size) - 0u)), (_GLF_IDENTITY((subgroup_id * subgroup_size), (true ? (subgroup_id * subgroup_size) : _GLF_FUZZED(uvec2(69097u, 157211u).y)))) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u)))))), ~ (~ (~ (subgroup_id * subgroup_size)))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((false ? workgroup_base : workgroup_id)) : subgroup_id)) * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((false ? workgroup_base : workgroup_id)) : subgroup_id)) * subgroup_size)) * 1u), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) + 0u, max(((subgroup_id * subgroup_size)) + 0u, ((subgroup_id * subgroup_size)) + 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) + 0u)) / 1u)))))), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))))) + 0u)))) >> 0u)) - 0u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u), (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (subgroup_local_id)))), min(max((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u))) + (subgroup_local_id)))))), max((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id))))))) >> 0u)) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-631.992)), float(1.0), bool(true))), 1.0) * (injectionSwitch)).y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-779.733) : injectionSwitch.y))))), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-779.733) : injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (! (injectionSwitch.x > injectionSwitch.y)))))))) && true), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), true)))), true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), vec2(_GLF_IDENTITY(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0), max(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0), vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))))).x > injectionSwitch.y)))), false, false), true)), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), true))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0))))))).x > injectionSwitch.y)))), false, false), true)), true))), false))), false)))))), true)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(virtual_gid)))), (1u ^ 0u), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(virtual_gid)))), (1u ^ 0u), 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))))))), (1u ^ 0u), 0u, 1u))) / 1u), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(virtual_gid)))), (1u ^ 0u), 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))))))), (1u ^ 0u), 0u, 1u))) / 1u), 0u, 0u, 0u)))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0), (mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, abs(1.0), 0.0, 0.0)) - mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0), (mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(false), true, true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))) && _GLF_IDENTITY(true, false || (true))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
