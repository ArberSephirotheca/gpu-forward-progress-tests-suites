#version 460
struct _GLF_struct_22 {
 float _f0;
 mat2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_21 {
 float _f0;
 vec2 _f1;
 ivec2 _f2;
 mat3 _f3;
 vec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 mat3x4 _f1;
 _GLF_struct_22 _f2;
 mat2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_19 {
 mat4x2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_16 {
 float _f0;
 bvec3 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 float _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 uvec3 _f3;
 mat3 _f4;
 mat2x4 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 vec2 _f3;
 float _f4;
 mat3 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_12 {
 bool _f0;
 ivec2 _f1;
 ivec4 _f2;
 ivec3 _f3;
 mat4 _f4;
 ivec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 ivec3 _f1;
 mat3x2 _f2;
 mat3 _f3;
 mat2x4 _f4;
 int _f5;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat2x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 vec2 _f3;
 _GLF_struct_12 _f4;
 uvec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_24 {
 uint subgroup_local_id;
 _GLF_struct_13 _f0;
 mat4x3 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_23 _f4;
 mat2x3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_7 {
 float _f0;
 vec2 _f1;
 vec2 _f2;
 mat4x3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 mat3 _f1;
 bvec4 _f2;
 bvec3 _f3;
 mat2 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 mat2x3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 uvec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat3x4 _f1;
 int _f2;
 float _f3;
 ivec4 _f4;
 mat3x2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 vec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat2 _f2;
 mat2x3 _f3;
 vec2 _f4;
 bvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 float _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
 uint workgroup_size;
 vec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y = subgroup_id;
uint subgroup_size = 16;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(gl_SubgroupInvocationID, _GLF_struct_13(uvec2(1u), _GLF_struct_10(1, mat2x4(1.0), ivec2(1)), _GLF_struct_11(uvec2(1u), ivec3(1), mat3x2(1.0), mat3(1.0), mat2x4(1.0), 1), vec2(1.0), _GLF_struct_12(true, ivec2(1), ivec4(1), ivec3(1), mat4(1.0), ivec3(1), mat2(1.0)), uvec2(1u), vec4(1.0)), mat4x3(1.0), _GLF_struct_15(_GLF_struct_14(vec2(1.0), mat4x2(1.0), uvec3(1u), vec2(1.0), 1.0, mat3(1.0))), _GLF_struct_20(_GLF_struct_16(1.0, bvec3(true), mat3x2(1.0), ivec4(1), 1.0, ivec3(1)), _GLF_struct_17(bvec4(true), mat3x4(1.0)), _GLF_struct_18(bvec3(true), vec4(1.0)), uvec3(1u), mat3(1.0), mat2x4(1.0), _GLF_struct_19(mat4x2(1.0), vec4(1.0))), _GLF_struct_23(_GLF_struct_21(1.0, vec2(1.0), ivec2(1), mat3(1.0), vec2(1.0), mat2x4(1.0)), mat3x4(1.0), _GLF_struct_22(1.0, mat2(1.0), ivec2(1)), mat2(1.0), mat4(1.0)), mat2x3(1.0), mat2x4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.x = num_workgroup;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.x = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_4(mat3x2(1.0), 1.0, _GLF_struct_0(mat3x2(1.0), mat4x2(1.0), mat2(1.0), mat2x3(1.0), vec2(1.0), bvec2(true), vec2(1.0)), _GLF_struct_1(bvec3(true), vec2(1.0), true), _GLF_struct_2(ivec2(1)), _GLF_struct_3(ivec2(1), mat3x4(1.0), 1, 1.0, ivec4(1), mat3x2(1.0), ivec2(1))), _GLF_struct_8(_GLF_struct_5(mat4x2(1.0), mat2x3(1.0), vec2(1.0)), _GLF_struct_6(vec4(1.0), mat3(1.0), bvec4(true), bvec3(true), mat2(1.0), true), _GLF_struct_7(1.0, vec2(1.0), vec2(1.0), mat4x3(1.0), vec4(1.0)), uvec3(1u), mat3x2(1.0)), gl_WorkGroupSize.x, vec3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_9.workgroup_size * GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.z;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.w + GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y + _GLF_struct_replacement_24.subgroup_local_id;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
 atomicStore(write_val, uint(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.z), 4, 64, 0);
 buf[GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.z] = uint(subgroupAllEqual(write_val));
}
