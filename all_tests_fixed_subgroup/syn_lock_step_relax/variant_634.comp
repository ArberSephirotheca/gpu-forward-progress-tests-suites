#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))))), bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(vec2(-4.6, 7.0)) : injectionSwitch)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-88.27, 710.362)))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-88.27, 710.362)))).y)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1816.9552, 898.036)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.76)), vec2(_GLF_FUZZED(31.19), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(49.67))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), bool(bvec3(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), false, true))))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-8536.1103)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4574.0957) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4574.0957) : injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-13.26))), round(length(normalize(1.0))), 0.0))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-13.26))), round(length(normalize(1.0))), 0.0))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false || (false))) && true), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))), 0.0))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), (bool(bool((_GLF_IDENTITY(false, false || (false)))))) || false)) && true), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(8.6))) > injectionSwitch.y))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) << 0u)))))) + (gl_NumWorkGroups), (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), uvec3(1u))), ((uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, (1u) >> 0u))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (82703u & 0u)), 0u)), uvec3(1u)))) | ((uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), uvec3(1u))))) + (gl_NumWorkGroups)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-123.129)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(74.01)), _GLF_IDENTITY(float((injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y))))), mix(float((_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y)))))), float(_GLF_FUZZED(-0.8)), bool(false))), (_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y))))), max((_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y))))), (_GLF_IDENTITY(float((injectionSwitch.y)), (false ? _GLF_FUZZED(573.154) : float((injectionSwitch.y))))))))) / 1.0), bool(true)))))))))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), (bool(bool((_GLF_IDENTITY(false, false || (false)))))) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3378.4880)), vec2(_GLF_FUZZED((true ? -20.40 : 5.7)), (injectionSwitch)[1]), bvec2(false, true))).y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4563.9339, 3.6)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), (! ((! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size) ^ uvec3(0u, 0u, 0u)).x + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(max(18009, -69216), _GLF_IDENTITY((max(18009, -69216)) - 0, ~ (~ ((max(18009, -69216)) - 0))))) : _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(max(18009, -69216), (max(18009, -69216)) - 0)) : _GLF_IDENTITY(1, 0 ^ (1))) | (false ? _GLF_FUZZED(_GLF_IDENTITY(max(18009, -69216), (max(18009, -69216)) - 0)) : _GLF_IDENTITY(1, 0 ^ (1))))));
 for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), (true ? (1 << _GLF_IDENTITY(int(7), int(7))) : _GLF_FUZZED(-91045))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? _GLF_IDENTITY(int(7), 1 * (int(7))) : _GLF_FUZZED(50682))), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7))))), ~ (~ (_GLF_IDENTITY(int(7), int(7)))))), 0 | (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 0))), 1))), _GLF_IDENTITY(int(7), int(7)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) + 0) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 0 ^ (_GLF_IDENTITY(0, (0) | (0))))) | _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) | 0))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-58491))), bool(false))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(true, false || (true)))))), bvec2(bvec3(bvec2(false, true), true)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-62.02, -3.3)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y)), injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), false)))) || false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))) - 0.0)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0, exp(0.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0, exp(0.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 1.0, 0.0, 0.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(65.62), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0, exp(0.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), max(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (true ? float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-9269.3337)))))) : _GLF_FUZZED(1.6))))))))).y), bool(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.9)), float(0.0), bool(true))), exp(0.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))), 1.0)), 1.0, 1.0, 0.0, 0.0)))).y), true, false))))))))) || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(0, 0 ^ (0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(576.081, max(_GLF_IDENTITY(576.081, clamp(576.081, 576.081, 576.081)), 576.081)))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))))), transpose(_GLF_IDENTITY(transpose(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(576.081), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(576.081), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) - 0.0)))), 0.0, 0.0)), mix(float(float(mat2x4(_GLF_FUZZED(576.081), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0)), abs(0.0), 0.0, cos(0.0)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(122.735)), float(0.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(122.735)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(122.735)), float(0.0), bool(true))) / 1.0), mix(float(_GLF_FUZZED(122.735)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(122.735)), float(0.0), bool(true)))))) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), 0.0, 0.0))), float(_GLF_FUZZED(-747.519)), bool(_GLF_IDENTITY(false, false || (false))))))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))))), transpose(transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), max(true ? 1.0 : _GLF_FUZZED(576.081), true ? 1.0 : _GLF_FUZZED(576.081))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), _GLF_IDENTITY(float(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-58.70 * 60.01))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))), 1.0 * (float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))))), bool(true)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(217.552) : 1.0)))), 0.0 + (float(float(1.0))))) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))))))))))))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(576.081, max(_GLF_IDENTITY(576.081, clamp(576.081, 576.081, 576.081)), 576.081)))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))))), transpose(_GLF_IDENTITY(transpose(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(576.081), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(576.081), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) - 0.0)))), 0.0, 0.0)), mix(float(float(mat2x4(_GLF_FUZZED(576.081), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, cos(0.0)))), _GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-606.217))))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(122.735)), float(0.0), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), 0.0, 0.0))), float(_GLF_FUZZED(-747.519)), bool(_GLF_IDENTITY(false, false || (false))))))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))))), transpose(transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), _GLF_IDENTITY(float(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-58.70 * 60.01))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))), 1.0 * (float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))))), bool(true)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), 0.0 + (float(float(1.0))))) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), _GLF_IDENTITY(float(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-58.70 * 60.01))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))), 1.0 * (float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))))), bool(true)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), 0.0 + (float(float(1.0))))) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), _GLF_IDENTITY(float(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-58.70 * 60.01))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))), 1.0 * (float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))))), bool(true)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), 0.0 + (float(float(1.0))))) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), _GLF_IDENTITY(float(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-58.70 * 60.01))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))), 1.0 * (float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))))), bool(true)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), 0.0 + (float(float(1.0))))) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))))))))))))))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(576.081, max(_GLF_IDENTITY(576.081, clamp(576.081, 576.081, 576.081)), 576.081)))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(576.081, max(_GLF_IDENTITY(576.081, clamp(576.081, 576.081, 576.081)), 576.081)))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))))))), transpose(_GLF_IDENTITY(transpose(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(576.081), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(576.081), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) - 0.0)))), 0.0, 0.0)), mix(float(float(mat2x4(_GLF_FUZZED(576.081), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(exp(0.0), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(vec4(vec4(exp(0.0), 0.0, 0.0, 0.0)))), vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, cos(0.0)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(122.735)), float(0.0), _GLF_IDENTITY(bool(true), true && (bool(true)))))) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), 0.0, 0.0))), float(_GLF_FUZZED(-747.519)), bool(_GLF_IDENTITY(false, false || (false))))))))), mat2(mat2x3(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))))), transpose(transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081)))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.5)), bool(false))) : _GLF_FUZZED(576.081), _GLF_IDENTITY(float(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-58.70 * 60.01))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))), 1.0 * (float(float(_GLF_IDENTITY(vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0), (vec4(true ? 1.0 : _GLF_FUZZED(576.081), 1.0, 0.0, 1.0)) * mat4(1.0)))))), bool(true)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(576.081))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), 0.0 + (float(float(1.0))))) : _GLF_FUZZED(576.081))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), float(mat3(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(576.081), mix(float(_GLF_FUZZED(4.2)), float(true ? 1.0 : _GLF_FUZZED(576.081)), bool(true))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, tan(0.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, tan(0.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))))))))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))) - 0.0), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(74.59), _GLF_FUZZED(669.621)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), (false ? _GLF_FUZZED(vec2(-185.904, -2.6)) : min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false)))))) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), (false ? _GLF_FUZZED(vec2(-185.904, -2.6)) : min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false)))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)))) + 0.0), injectionSwitch.y, injectionSwitch.y))))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2810.8151)), bvec2(true, false))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(dot(injectionSwitch, vec2(1255.7221, -2.5)))) : injectionSwitch.y)))))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (false ? _GLF_FUZZED(ceil(vec2(-7.2, -9.8))) : false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))))))).y)), false)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, log(1.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))), float(_GLF_FUZZED(93.66)), bool(false))), injectionSwitch[1])).y, 0.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) - 0.0)))), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 0.0, 1.0)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
