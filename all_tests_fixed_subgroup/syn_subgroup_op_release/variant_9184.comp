#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id)))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))))) + uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))), ~ _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) * ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))), ((~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) * ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (workgroup_base), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), uint(uvec2((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))) | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size)))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u))) << 0u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), max(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))))), 1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u))) << 0u, ((uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u))) << 0u) >> (188982u & (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) % subgroup_size), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), max(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))))), 1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u))) << 0u, ((uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u))) << 0u) >> (188982u & (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) % subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> (0u | 0u))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / (1u & ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) + 1)))))), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), clamp(~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))))), 1u, 1u, 1u))) << 0u)) % subgroup_size, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), (1u ^ 1u) | (clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))), 1u, 1u, 1u))) << 0u)) % subgroup_size, 1u, 0u))))), (_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1), (subgroup_local_id + 1))) % subgroup_size) << 0u));
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(num_workgroup)))) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))))) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) * 1u)))), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))), uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, max(1u, 1u))), 1u, 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), min(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), uint(uvec3(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), 0u, 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))) + 0u)), 1u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), 0u + (~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, (0u | 0u)), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, (0u | 0u)))))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)))) / 1u)) / 1u), 1u, 0u))))), 0u | ((~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)))) / 1u)) / 1u), 1u, 0u))))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x))))), max(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), uint(uvec4(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), 0u, (1u & 1u), 0u)))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), max(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), ~ (~ (~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (1u)), 0u)))))))) : _GLF_FUZZED(uvec2(46025u, 41353u).s)))))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))) - 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))))), 0u, 0u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), 0u, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) ^ 0u)))), 1u, 0u)))), 0u, 0u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), 0u, 0u, 1u))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))))))) >> 0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u ^ (1u ^ 0u))), ~ (~ (uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u ^ (1u ^ 0u)))))))))))))))), bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))))) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) * 1u)))), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))), uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, max(1u, 1u))), 1u, 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), min(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), uint(uvec3(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), 0u, 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))) + 0u)), 1u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), 0u + (~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, (0u | 0u)), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, (0u | 0u)))))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)))) / 1u)) / 1u), 1u, 0u))))), 0u | ((~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)))) / 1u)) / 1u), 1u, 0u))))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x))))), max(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), uint(uvec4(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), 0u, (1u & 1u), 0u)))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), max(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), ~ (~ (~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (1u)), 0u)))))))) : _GLF_FUZZED(uvec2(46025u, 41353u).s)))))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))) - 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))))), 0u, 0u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), 0u, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) ^ 0u)))), 1u, 0u)))), 0u, 0u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), 0u, 0u, 1u))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 0u)))))))) >> 0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u ^ (1u ^ 0u))), ~ (~ (uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u ^ (1u ^ 0u)))))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.078)), vec2(_GLF_FUZZED(4.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.078)), vec2(_GLF_FUZZED(4.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.6))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.078)), vec2(_GLF_FUZZED(4.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.6))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, true))))) || false), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.078)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-384.078)) : _GLF_FUZZED(max(vec2(-14.44, -92.18), injectionSwitch)))), vec2(_GLF_FUZZED(4.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sin(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), true, false, true)))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(64.26, 1675.9866)) : injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-960.390), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(64.26, 1675.9866)) : injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-960.390), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, false), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), (injectionSwitch.x > injectionSwitch.y))) && true))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), (injectionSwitch.x > injectionSwitch.y))) && true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))), false, true, false)))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))), false, true, false)))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))), false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
