#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y = subgroup_id;
uint subgroup_size = 16;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + ((GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x);
 buf[virtual_gid] = 1;
 if(GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z + 1 < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)
  {
   switch(_GLF_SWITCH(0))
    {
     case 48:
     if(true)
      {
       atomicOr(virtual_gid, GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z);
       {
        while(false)
         {
          vec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ;
          ;
          bitCount(-39568);
          ;
          ;
         }
        int _GLF_SWITCH_0_3v[29], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
        if((mat2x4(-68.55, 9.6, -31.91, 1.2, 27.90, -7.4, -625.014, 3.2) == mat2x4(mat4x2(9.1, 5488.7188, 2.4, -8026.9148, -3.7, 7.7, 9.0, 5.1))))
         {
          uvec3 _GLF_SWITCH_0_6v[76], _GLF_SWITCH_0_7v;
          uvec3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
          ivec4(44633, 62483, 13205, -13618).t;
         }
        else
         {
          bvec4(true, true, false, true);
          ;
          vec2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
          ;
         }
        {
         mat4x2(8.1, -800.341, -580.371, 9804.9650, 723.019, -9091.9602, 5813.3563, -743.715);
         true;
         mat3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[31];
        }
        mat3(392.362, -858.849, 2079.2084, 82.16, 6.5, -9.4, 540.326, -90.02, -4.4);
       }
       ivec4(98540, -93587, 29987, 51946);
       ;
      }
     else
      {
       mat3x4 _GLF_SWITCH_0_15v;
       mat2x4(668.400, 7.8, 9070.6499, 423.758, -2189.3850, -540.273, 10.80, -8.7);
      }
     case 52:
     mat4x3 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[61];
     case 0:
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     case 31:
     subgroupAll(false);
     break;
     default:
     1;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}
