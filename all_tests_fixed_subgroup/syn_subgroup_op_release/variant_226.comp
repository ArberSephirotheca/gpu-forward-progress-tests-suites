#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8161.7149))), 1.0, 1.0))), (false ? _GLF_FUZZED(-604.123) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8161.7149))), 1.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8161.7149))), 1.0, 1.0))) : _GLF_FUZZED(-6.6))))), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_ONE(1.0, injectionSwitch.y))))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, true, false))))))), true && (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), false || ((! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), false || ((! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y))))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), false || ((! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))))))))) || false), true, false, true))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bool(bvec2(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), true)))))))))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, true && (false)), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), false || (! (bool(bool(true)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (! (! (false))) && true), true)))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) - 0)))], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[1]), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[1])) >> 0u)), gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-16390))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-16390))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8)))), max(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8)))), mix(float(_GLF_FUZZED(-6.7)), float(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8))))), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ((! (_GLF_IDENTITY(false, true && (false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true, true, true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, (true) || false))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7386.8695) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) || false))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) || false))), false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), true))))))), true))))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true))), true))))))))))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-9.5, min(-9.5, -9.5)), max(-9.5, _GLF_IDENTITY(-9.5, mix(float(-9.5), float(_GLF_FUZZED(-4715.0504)), bool(false)))))) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, false)), false || (bool(bvec3(! (_GLF_DEAD(false)), true, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, false)), false || (bool(bvec3(! (_GLF_DEAD(false)), true, false))))), true)), false || (bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, false)), false || (bool(bvec3(! (_GLF_DEAD(false)), true, false))))), true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true && (false)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, (false) || false) || (bool(false))), bool(bvec4(bool(false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3((true), false, true))))))), true && (bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3((true), false, true)))))))))) || (false)), true, false)))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, (false) || false) || (bool(false))), bool(bvec4(bool(false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3((true), false, true))))))), true && (bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3((true), false, true)))))))))) || (false)), true, false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), false || ((! (false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true))))))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch))[1]))) + vec2(0.0, 0.0)).y))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ (1u ^ 1u)) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) ^ _GLF_IDENTITY(0u, (0u) >> 0u)), 1u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(-899.714)) : injectionSwitch.x))), bool(true))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-0.0)), bool(false)))), injectionSwitch.x))) + 0.0) : _GLF_FUZZED(acos(9.4)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), bool(bvec3(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), true, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), bool(bvec3(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), true, true)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), (! (false)) && true))) || false)), bool(bvec3(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), true, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, exp(0.0), 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x)) > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(38.19)), bool(false))), 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(38.19)), bool(false))), 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true), false)))))))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4.2, float(vec3(_GLF_IDENTITY(-4.2, float(vec4(_GLF_IDENTITY(-4.2, min(-4.2, -4.2)), 0.0, 0.0, 0.0))), 0.0, 1.0))), (-4.2) + 0.0)), _GLF_FUZZED(-787.869)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), _GLF_FUZZED(-787.869)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), tan(0.0) + (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-787.869)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (-4.2) + 0.0)), _GLF_FUZZED(-787.869)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.2, _GLF_IDENTITY((-4.2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.2) : (-4.2))) + 0.0)), _GLF_FUZZED(-787.869)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), bvec2(true, true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4406.5078)), bool(_GLF_IDENTITY(false, false || (false))))), abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), mix(vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, _GLF_IDENTITY(min(-787.869, -787.869), 0.0 + (min(-787.869, -787.869)))), -787.869, _GLF_IDENTITY(_GLF_IDENTITY(-787.869, float(mat4x3(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-851.887)), float(_GLF_IDENTITY(-787.869, min(-787.869, -787.869))), bool(true)))))), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))])), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(8.6)), bool(false)))) + 0.0)), max(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))])), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(8.6)), bool(false)))) + 0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))])), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(8.6)), bool(false)))) + 0.0)))), float(_GLF_FUZZED(813.446)), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- _GLF_IDENTITY(2.0, (2.0) / 1.0)))), float(_GLF_FUZZED(813.446)), bool(_GLF_IDENTITY(true, true && (true)))))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)))) : _GLF_FUZZED(-9136.8562)))), (injectionSwitch)[1]), bvec2(true, true))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, _GLF_IDENTITY(min(-787.869, -787.869), 0.0 + (min(-787.869, -787.869)))), -787.869, _GLF_IDENTITY(-787.869, mix(float(_GLF_FUZZED(-851.887)), float(_GLF_IDENTITY(-787.869, min(-787.869, -787.869))), bool(true)))))), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 0.0)))[0]) + 0.0)), float(_GLF_FUZZED(813.446)), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)), mix(float(_GLF_FUZZED(vec2(-9.9, -6318.2958).r)), float(mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true))), bool(true))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], ((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(813.446)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)))))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)))) : _GLF_FUZZED(-9136.8562)))), (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-787.869, (false ? _GLF_FUZZED(-7092.4709) : -787.869)), clamp(_GLF_IDENTITY(-787.869, _GLF_IDENTITY(min(-787.869, -787.869), 0.0 + (min(-787.869, -787.869)))), -787.869, _GLF_IDENTITY(-787.869, mix(float(_GLF_FUZZED(-851.887)), float(_GLF_IDENTITY(-787.869, min(-787.869, -787.869))), bool(true)))))), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (true ? (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0] : _GLF_FUZZED(-82.60)))) - 0.0), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), ((injectionSwitch)[0]) + 0.0)), float(_GLF_FUZZED(813.446)), bool(false))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, 1)))], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.7)), max(float(_GLF_FUZZED(-5.7)), float(_GLF_FUZZED(-5.7)))), float((injectionSwitch)[0]), bool(true)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) / 1.0)) < injectionSwitch.y)) ? clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), 0 ^ ((~ (0)))))]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(813.446)), bool(_GLF_IDENTITY(true, true && (true)))))), bool(false))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) << (1 ^ 1))], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)))) : _GLF_FUZZED(-9136.8562)))), (injectionSwitch)[1]), bvec2(true, true))).y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, _GLF_IDENTITY(min(-787.869, -787.869), min(min(-787.869, -787.869), min(-787.869, -787.869)))), -787.869, -787.869))), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - sin(0.0)))), 0.0)), clamp(float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - sin(0.0)))), 0.0)), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - sin(0.0)))), 0.0)), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - sin(0.0)))), 0.0)))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3((injectionSwitch)[0], 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))), 1.0, 0.0, 0.0, sin(0.0))), (false ? _GLF_FUZZED(-2271.1002) : float(mat3((injectionSwitch)[0], 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, sqrt(1.0) * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(3.8))), 1.0, 0.0, 0.0, sin(0.0)))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_FUZZED(813.446)), bool(false)), (true ? mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.5, min(9.5, 9.5)))), float((injectionSwitch)[0]), bool(true))), (_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 1.0)))[0]) + 0.0)), float(_GLF_FUZZED(813.446)), bool(false)) : _GLF_FUZZED(-9.5)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true))), float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true))), 1.0, 1.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(813.446)), _GLF_IDENTITY(bool(true), bool(bool(bool(true))))))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(813.446)), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(813.446)), bool(true))))) * 1.0), 1.0, 0.0, sqrt(0.0), abs(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)), (mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true))) + tan(0.0)))) : _GLF_FUZZED(-9136.8562)))), (injectionSwitch)[1]), bvec2(true, true))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_FUZZED(813.446)), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(true)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(813.446)), bool(true)))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.7, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(-5.7, 1.0 * (-5.7)), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), float(vec2(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), 1.0)))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(-5.7, 1.0 * (-5.7)), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), float(vec2(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), 1.0)))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4(_GLF_IDENTITY(-5.7, 1.0 * (-5.7)), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), float(vec2(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), 1.0)))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4(_GLF_IDENTITY(-5.7, 1.0 * (-5.7)), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), float(vec2(dot(vec2(0.0, 1.0), vec2(1.0, sqrt(0.0))), 1.0)))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), float((injectionSwitch)[0]), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), false, true, true)), bool(bool(bool(bvec4(bool(true), false, true, true))))))))) : _GLF_FUZZED(-9136.8562)))), (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.2), (false ? _GLF_FUZZED(939.035) : _GLF_FUZZED(-4.2))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))), float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)), clamp(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)), _GLF_IDENTITY(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)), mix(float(_GLF_FUZZED(-6817.1829)), float(_GLF_IDENTITY(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)), min(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)), _GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)), (true ? _GLF_IDENTITY(-787.869, clamp(_GLF_IDENTITY(-787.869, min(-787.869, -787.869)), -787.869, -787.869)) : _GLF_FUZZED(3960.1339)))))), tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_FUZZED(813.446)), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0]), bool(_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) ? clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(813.446, min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), bool(true)))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true))))))))))))) : _GLF_FUZZED(-9136.8562)), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) ? clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(813.446, min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), bool(true)))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true))))))))))))) : _GLF_FUZZED(-9136.8562)), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) ? clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(813.446, min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), bool(true)))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true))))))))))))) : _GLF_FUZZED(-9136.8562))) * 1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) ? clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(813.446, min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), bool(true)))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true))))))))))))) : _GLF_FUZZED(-9136.8562)))), max((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(813.446, min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), bool(true)))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))))))))), min(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))))))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0))))))))) : _GLF_FUZZED(-9136.8562)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) ? clamp((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6126.2560)), vec2(_GLF_FUZZED(44.31), (injectionSwitch)[1]), bvec2(false, true))))[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(813.446), mix(float(_GLF_FUZZED((- 2.0))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(_GLF_IDENTITY(813.446, min(_GLF_IDENTITY(813.446, clamp(813.446, 813.446, _GLF_IDENTITY(813.446, mix(float(_GLF_FUZZED(16.74)), float(813.446), bool(true))))), 813.446)), min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), (_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(_GLF_IDENTITY(813.446, min(_GLF_IDENTITY(813.446, clamp(813.446, 813.446, _GLF_IDENTITY(813.446, mix(float(_GLF_FUZZED(16.74)), float(813.446), bool(true))))), 813.446)), min(813.446, 813.446)) : _GLF_FUZZED(2456.5233))))), (float(_GLF_FUZZED(_GLF_IDENTITY(813.446, (true ? _GLF_IDENTITY(_GLF_IDENTITY(813.446, min(_GLF_IDENTITY(813.446, clamp(813.446, 813.446, _GLF_IDENTITY(813.446, mix(float(_GLF_FUZZED(16.74)), float(813.446), bool(true))))), 813.446)), min(813.446, 813.446)) : _GLF_FUZZED(2456.5233)))))) + 0.0)) - 0.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false))))), bool(false))), _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, true))))), true))), true, false, true))))))))))))) : _GLF_FUZZED(-9136.8562)))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))) + vec2(0.0, 0.0))).y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.86)), float(injectionSwitch.y), bool(true)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.86)), float(injectionSwitch.y), bool(true)))))))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0)), clamp(float(mat2x3(injectionSwitch.y, 1.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 1.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 1.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(22897u) : subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((false)))))))))))
    return;
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))))).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))))).x, 1.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0), mat3x2(mat3x2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))))).x, 1.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), false), bvec2(bvec3(bvec2((false), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), bvec2(bvec3(bvec2((false), false), true))))) || false)))), bool(bvec2((false), true))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), false), true)))), (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), _GLF_IDENTITY(false, (false) && true)), true))))) || false)))), bool(bvec2((false), true)))) || false)) || false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) || false))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, false, true)))) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true, true, true)))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2434.7628, 0.9)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), (bool(_GLF_IDENTITY(bvec3((false), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))))))))) || false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.3)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))))))))), false || (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y)))), false)))))), false)), true))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) && true))) && _GLF_IDENTITY(true, true && (true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.8)), bool(false))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))))) ^ 0u), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))))) ^ 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))))) ^ 0u))) < subgroup_size, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))))) ^ 0u), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))))) ^ 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))))) ^ 0u))) < subgroup_size, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, sqrt(1.0), 1.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, sqrt(1.0), 1.0), (true ? mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, sqrt(1.0), 1.0) : _GLF_FUZZED(mat4(523.420, -0.9, -51.33, 6.9, 47.03, 6.3, -0.9, -4656.6421, -9.0, 922.146, 33.20, 5.4, -0.6, -57.42, -9291.2389, -4133.0788))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y) || false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y)), true)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), false, true, false)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0), (mat2(injectionSwitch.x, 1.0, 1.0, 0.0)) * mat2(1.0))), max(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, 0.0), (mat2(injectionSwitch.x, 1.0, 1.0, 0.0)) * mat2(1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, 0.0), (mat2(injectionSwitch.x, 1.0, 1.0, 0.0)) * mat2(1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-292.820), _GLF_FUZZED(-9840.8140)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 1.0, sin(0.0)), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-292.820), _GLF_FUZZED(-9840.8140)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - tan(sin(0.0))), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))) : _GLF_FUZZED(mat2x3(-69.92, -17.21, 9808.1374, 48.71, -694.781, -4687.1861)))))).y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(5.3)), max(_GLF_IDENTITY(float(_GLF_FUZZED(5.3)), (float(_GLF_FUZZED(5.3))) - sqrt(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(5.3)), mix(float(_GLF_FUZZED(-0.3)), float(float(_GLF_FUZZED(5.3))), bool(true))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y), 0.0, 1.0, 1.0, 0.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y), 0.0, 1.0, 1.0, 0.0, 1.0))))), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-69.27)), float(injectionSwitch.x), bool(true)))) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(5.3)), max(_GLF_IDENTITY(float(_GLF_FUZZED(5.3)), (float(_GLF_FUZZED(5.3))) - sqrt(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, _GLF_IDENTITY(5.3, max(5.3, 5.3)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.3)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-0.3)), (false ? _GLF_FUZZED(5272.3648) : float(_GLF_FUZZED(-0.3)))), float(_GLF_FUZZED(-0.3)))), float(float(_GLF_FUZZED(5.3))), bool(true))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y), (false ? _GLF_FUZZED(-99.05) : float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y)))) * 1.0), 0.0, 1.0, 1.0, 0.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.5))), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))))).y), 0.0, 1.0, 1.0, 0.0, 1.0))))), bool(true)))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.y), bool(true)))))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.65), _GLF_FUZZED(69.89)), bvec2(false, false))).y, float(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.65), _GLF_FUZZED(69.89)), bvec2(false, false))).y, log(exp(0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), sqrt(1.0)))))) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true)))))), bool(bool((bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true))))))))))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.65), _GLF_FUZZED(69.89)), bvec2(false, false))).y, float(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.65), _GLF_FUZZED(69.89)), bvec2(false, false))).y, log(exp(0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), sqrt(1.0)))))) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true)))))), bool(bool((bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true))))))))))))))), _GLF_IDENTITY(false, (false) || false), true, false)), bool(bvec2(bool(bvec4((bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.65), _GLF_FUZZED(69.89)), bvec2(false, false))).y, float(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.65), _GLF_FUZZED(69.89)), bvec2(false, false))).y, log(exp(0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), sqrt(1.0)))))) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true)))))), bool(bool((bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true))))))))))))))), _GLF_IDENTITY(false, (false) || false), true, false)), false))))), ((! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.7))), (injectionSwitch.y) - abs(0.0))), bool(true)))))), bool(bool(_GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true)))))), bool(bvec3(_GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true)))))), ! (! (_GLF_IDENTITY((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true)))))), ((bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(true))))))) && true)))), false, false)))))))))))))) && true) && true))))) || false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-91.25, _GLF_IDENTITY(clamp(-91.25, -91.25, -91.25), min(_GLF_IDENTITY(clamp(-91.25, -91.25, -91.25), (true ? clamp(-91.25, -91.25, -91.25) : _GLF_FUZZED(8759.6531))), clamp(-91.25, -91.25, -91.25)))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(false, true)), max(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), mix(vec2((mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((5481 >> -44244))))], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))[1] : _GLF_FUZZED(-8220.6009)))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))).y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, true, false)), false)), false || (bool(bvec2(bool(bvec4(false, true, true, false)), false)))))) || false)) || (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), max(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-8.5, clamp(-8.5, -8.5, -8.5)))), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)))))).y)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (injectionSwitch.x < injectionSwitch.y)))))), true && (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), max(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)))))).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), max(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(8241.1009), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-8220.6009)))), bvec2(false, true)))))).y))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (injectionSwitch.x < injectionSwitch.y)))))))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])), injectionSwitch)), injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])), injectionSwitch)), injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])), injectionSwitch)), injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)), true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, length(vec2(0.0, 0.0)) + (injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) << 0u), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 0 ^ (_GLF_IDENTITY(64, min(64, 64)))), max(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 1 * (64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-784.356)), vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)))), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))))), (mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)))))) - vec2(0.0, 0.0)))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))))).y)))) || false)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(9.1)), bool(false))), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.6), _GLF_FUZZED(6224.6171)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY(max(min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), clamp(max(min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), max(min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(max(min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), mix(float(max(min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) : _GLF_FUZZED(-521.601))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5166.8186))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * 1.0), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(0.0), tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 0.0))), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(50.94)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-12.55, max(-12.55, _GLF_IDENTITY(-12.55, (-12.55) + 0.0)))) : float(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (0.0))))), 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), (injectionSwitch) - vec2(0.0, 0.0)).y)))) || false)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(6076.2834)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), bool(true))), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), (true ? float(vec3(injectionSwitch.x, 1.0, 1.0)) : _GLF_FUZZED(-87.67)))), 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(6076.2834)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), bool(true))), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), (true ? float(vec3(injectionSwitch.x, 1.0, 1.0)) : _GLF_FUZZED(-87.67)))), 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x))))) - log(1.0)) : _GLF_FUZZED(-521.601))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))), false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false || ((_GLF_DEAD(false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), 1.0, 0.0, 1.0, exp(0.0), 0.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), 1.0, 0.0, 1.0, exp(0.0), 0.0))) - log(1.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(924.499, -277.568)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(625.268), _GLF_FUZZED(826.768)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, determinant(mat2(1.0, tan(0.0), 1.0, 1.0)), 0.0)), (vec2(mat4x3((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, determinant(mat2(1.0, tan(0.0), 1.0, 1.0)), 0.0))) / vec2(1.0, 1.0))), vec2(mat2(mat2(1.0) * (injectionSwitch), 1.0, 1.0))))) + vec2(0.0, 0.0)).y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, sqrt(1.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.6), min(_GLF_IDENTITY(_GLF_FUZZED(-4.6), clamp(_GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), _GLF_FUZZED(-4.6))), _GLF_FUZZED(-8.5)), vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, sqrt(1.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)))[0], ((vec2(mat3(injectionSwitch, sqrt(1.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)))[0]) - 0.0), (vec2(mat3(injectionSwitch, sqrt(1.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (true && (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true && (! (_GLF_DEAD(false)))), false || (! (true && (! (_GLF_DEAD(false))))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.6) : injectionSwitch.x)) > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.1)))))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && ((false))))), false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.8))) > injectionSwitch.y)), false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3))), _GLF_IDENTITY(mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((vec2(injectionSwitch)) / vec2(1.0, 1.0), clamp((vec2(injectionSwitch)) / vec2(1.0, 1.0), (vec2(injectionSwitch)) / vec2(1.0, 1.0), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-25.08, 5.3)))), _GLF_IDENTITY(_GLF_IDENTITY(max(mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3)))), mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3))))), mix(vec2((max(mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3)))), mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3))))))[0], (max(mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3)))), mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3))))))[1]), vec2(_GLF_FUZZED(7630.8274), _GLF_FUZZED(5.7)), bvec2(false, false))), (max(mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3)))), mat2(1.0) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-25.08, 5.3)))))) * vec2(1.0, 1.0))))))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), 1.0, 0.0, length(0.0)))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(649.520))))))))))))))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))) || false))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-789.187) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(2400) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))))])).y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(691.541)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(false || (false)), (bool(false || (false))) && true))))), (_GLF_DEAD(false)) && true), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true), true)))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y, false, false, true)))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-7.1, -19.22, 900.318, 3123.5403).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false, true))))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), true && (_GLF_IDENTITY((false), bool(bvec3((false), true, true))))), false, true, true))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-7.1, -19.22, 900.318, 3123.5403).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false, true))))))), false, true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) && true) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false, true, true)))) || (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true && (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))) || false))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), ! (! (true && (_GLF_IDENTITY(false, (false) || false))))))), bool(_GLF_IDENTITY(bvec2(! (true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), ! (! (true && (_GLF_IDENTITY(false, (false) || false))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), ! (! (true && (_GLF_IDENTITY(false, (false) || false))))))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(! (true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), ! (! (true && (_GLF_IDENTITY(false, (false) || false))))))), true), true, false)), false, false)))))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true))) || false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), (bool(bool(_GLF_DEAD(false)))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) && true), true), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]) * 1.0)), vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(-28.72)), bvec2(false, false))).x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false))))) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false))))) && true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false))))) && true))))) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false))))) && true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false))))) && true))))) && true), true, false))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), (bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))) || false)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), 0u, 0u)))) - 0u)))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(_GLF_IDENTITY(2, (2) - 0))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) * 1u), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) << 0u), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u, max(_GLF_IDENTITY((~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u, ((~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u) ^ 0u), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), ((~ ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), max(_GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uint(clamp(0u, 0u, 0u)))), clamp(0u, 0u, 0u)))), (0u ^ 0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), max(_GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uint(clamp(0u, 0u, 0u)))), clamp(0u, 0u, 0u)))))))) - 0u) * 1u))), _GLF_IDENTITY(uint(uint(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u ^ (clamp(0u, 0u, 0u))))), (~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u)), ~ (~ ((_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u ^ (clamp(0u, 0u, 0u))))), (~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u))))))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), clamp(0u, 0u, 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), clamp(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), 0u, 0u)))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(2)), 1u * ((uint(2)))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), 1u * (~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))) | (~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))), ~ (~ _GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), max((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))), min(~ (_GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), max((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))), ~ (_GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), max((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))))))))))))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), clamp(0u, 0u, 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), clamp(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), 0u, 0u)))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(2)), 1u * ((uint(2)))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), 1u * (~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))) | (~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))), ~ (~ _GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), max((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))), min(~ (_GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), max((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))), ~ (_GLF_IDENTITY((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), max((uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (uint(uint(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), _GLF_IDENTITY(0u, 0u | (0u))))), clamp(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))))), ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))))))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))))))))))))))))) : _GLF_FUZZED(subgroup_id)))) | ((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)), 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) * 1u)) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), clamp(_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) - 0u), clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))), ~ (_GLF_IDENTITY(~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), (_GLF_IDENTITY(~ (uint(uint(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), (~ ((uint(2)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uvec3(clamp(0u, 0u, 0u), 1u, 1u)))))) - 0u))))), (~ (uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u)))))) / 1u)) - 0u))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((uint(2)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)))) - 0u)))), ~ (~ (uint(uint(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(2), 0u ^ (_GLF_IDENTITY(uint(2), (uint(2)) | 0u)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (~ _GLF_IDENTITY(((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : ((uint(2)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u))))))))))))) + 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, min(-5.8, _GLF_IDENTITY(-5.8, (_GLF_IDENTITY(-5.8, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(-5.8, (false ? _GLF_FUZZED(length(6973.6854)) : -5.8)), (-5.8) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) - 0.0)))), _GLF_FUZZED(-65.49)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))) + length(vec2(0.0, 0.0)), (true ? (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0]))) + length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) : _GLF_FUZZED(distance(vec4(5161.3632, -4.0, -0.2, -1.3), vec4(0.1, -954.475, 673.664, -88.28)))))), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), min(vec2((injectionSwitch)[1], 1.0), _GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), clamp(vec2((injectionSwitch)[1], 1.0), vec2((injectionSwitch)[1], _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2((injectionSwitch)[1], 1.0)))))))), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(7049)))], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, min(-5.8, _GLF_IDENTITY(-5.8, (_GLF_IDENTITY(-5.8, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(-5.8, (false ? _GLF_FUZZED(length(6973.6854)) : -5.8)), (-5.8) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) - 0.0)))), _GLF_FUZZED(-65.49)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))) + length(vec2(0.0, 0.0)), (true ? (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0]))) + length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) : _GLF_FUZZED(distance(vec4(5161.3632, -4.0, -0.2, -1.3), vec4(0.1, -954.475, 673.664, -88.28)))))), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), min(vec2((injectionSwitch)[1], 1.0), _GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), clamp(vec2((injectionSwitch)[1], 1.0), vec2((injectionSwitch)[1], _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2((injectionSwitch)[1], 1.0)))))))), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(7049)))], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x > injectionSwitch.y)) && true)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, min(-5.8, _GLF_IDENTITY(-5.8, (_GLF_IDENTITY(-5.8, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(-5.8, (false ? _GLF_FUZZED(length(6973.6854)) : -5.8)), (-5.8) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) - 0.0)))), _GLF_FUZZED(_GLF_IDENTITY(-65.49, 1.0 * (-65.49)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))) + length(vec2(0.0, 0.0))), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), min(vec2((injectionSwitch)[1], 1.0), _GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), clamp(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))))[1], 1.0), vec2((injectionSwitch)[1], 1.0), vec2((injectionSwitch)[1], 1.0)))))))), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, min(-5.8, _GLF_IDENTITY(-5.8, (_GLF_IDENTITY(-5.8, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(-5.8, (false ? _GLF_FUZZED(length(6973.6854)) : -5.8)), (-5.8) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) - 0.0)))), _GLF_FUZZED(_GLF_IDENTITY(-65.49, 1.0 * (_GLF_IDENTITY(-65.49, clamp(-65.49, -65.49, -65.49)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[0]))) + length(vec2(0.0, 0.0))), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), min(vec2((injectionSwitch)[1], 1.0), _GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), clamp(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))))[1], 1.0), vec2((injectionSwitch)[1], 1.0), vec2(_GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0)))))))), (vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec4(1, (0 << _GLF_IDENTITY(int(6), int(6))), (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)))))])) * mat2(1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(false, (false) || false))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(false, (false) || false))), true)))))))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), false, true)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
