#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x)), uint(uvec2(gl_WorkGroupSize.x, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, max(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x)), uint(uvec2(gl_WorkGroupSize.x, 1u)))) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(35264u, 185032u, 123139u)))).x, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(35264u, 185032u, 123139u)))).x));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ~ (~ ((int(2))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), min(int(2), int(2)))) << 0)), (0 | 0) ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), (_GLF_IDENTITY(int(2), min(int(2), int(2)))) ^ 0)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-992.407)), bool(false))) > injectionSwitch.y))))
        return;
      }
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), ! (! (! (false))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size * workgroup_id), 0u ^ (uint(workgroup_size * workgroup_id)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)) * workgroup_id), 0u ^ (uint(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)), (uint(true) & 0u) + (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))) * workgroup_id), 0u ^ (uint(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)) * workgroup_id), 0u ^ (uint(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) * 1u))) : _GLF_FUZZED(workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))))), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))
          continue;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u))), (true ? ~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u))) : _GLF_FUZZED(clamp(workgroup_id, subgroup_local_id, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(7864u))), subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))))))), (false ? _GLF_FUZZED(uint(true)) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u))))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size))))))) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))), 1u))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1)))))), max(_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1)))))), ~ (_GLF_IDENTITY(~ (clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), min(~ (clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), ~ (clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))))))), _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1)))))), (clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))) / 1)))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1)))), 1u)))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u, (true ? (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u : _GLF_FUZZED(subgroup_local_id)))) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u)))))))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 0u ^ (subgroup_local_id + 1)), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u)) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED(_GLF_IDENTITY((- clamp(-53933, -43955, 68487)), 1 * ((- clamp(-53933, -43955, 68487)))))))) : ~ (1))))))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, uint(uint(0u)))))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) % subgroup_size))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) | (uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (false ? _GLF_FUZZED(-64979) : _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_local_id) / 1u)))) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), ~ _GLF_IDENTITY((~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u)))), ((~ (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))) | 0u)), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) ^ 0), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-3.0 + 98.92))), bool(false))), injectionSwitch.x)))))) | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) | (uvec3(subgroup_local_id + 1, 0u, 0u))))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), clamp(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1)))))))) + 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1))))))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20951, (true ? -20951 : _GLF_FUZZED((- clamp(-53933, -43955, 68487)))))) : ~ (1)))))))) - 0u))), subgroup_local_id + 1))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))) << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (uint(uint(subgroup_local_id))))) + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size)))), (0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))) - 0u)), ((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) * 1u);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 0), min(ivec4(int(1), 0, 0, 0), _GLF_IDENTITY(ivec4(int(1), 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 | (_GLF_IDENTITY(0, max(0, 0))))), (true ? _GLF_IDENTITY(ivec4(int(1), 0, 0, _GLF_IDENTITY(0, max(0, 0))), ivec4(0, 0, 0, 0) + (ivec4(int(1), 0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) * 1)))))))) : _GLF_FUZZED(ivec4(22017, -97009, 29541, 69694))))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
        return;
      }
     if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) ^ 1)), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) ^ 1))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) ^ 1)))))))); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          break;
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           return;
                           if(_GLF_DEAD(false))
                            return;
                          }
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))
                        return;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
                      break;
                    }
                   else
                    {
                    }
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
                      return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               else
                {
                }
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       subgroupAll(false);
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           subgroupAll(true);
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - length(vec2(0.0, 0.0)), max((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - length(vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - length(vec2(0.0, 0.0)))))))));
    }
  }
}
