#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false), false)))))))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false)))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))), 1), ~ (~ (ivec2(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))), 1)))))) != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, sqrt(0.0), 1.0, 1.0)), mix(float(float(mat2(injectionSwitch.x, sqrt(0.0), 1.0, 1.0))), float(_GLF_FUZZED(1156.6175)), bool(false)))) > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - determinant(mat2(0.0, 0.0, 0.0, 0.0))), clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-3644.7485)), vec2(_GLF_FUZZED(-8.2), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true), bvec2(bvec2(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true), bvec2(bvec2(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true))))), true, true)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * cos(vec2(0.0, 0.0)))).y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), _GLF_IDENTITY(0u, 0u | (0u))))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)))) | (gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size))), 0u ^ (~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))))))), ~ (~ (~ (workgroup_size)))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-68797) : int(4))), min(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-68797) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-68797) : int(4)))))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) - 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) / 1u) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec3(1, 0, 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), _GLF_IDENTITY(bool(bool(bool(bvec3(false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(bool(bvec3(false, true, false)))))))))) && true))))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec3(bvec3(bvec3(false, true, false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (! (false))))))) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) : _GLF_FUZZED(atanh(-8.1)))))))))), bool(bool(bool(bvec3(false, true, false)))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(true, true)))) || false)))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), false || (! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) || false)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, (false ? _GLF_FUZZED(97270) : _GLF_IDENTITY(-66234, (-66234) * 1))), -66234, -66234)))), max((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) - 0))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, (false ? _GLF_FUZZED(97270) : _GLF_IDENTITY(-66234, (-66234) * 1))), -66234, -66234)))), max((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) - 0))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, (false ? _GLF_FUZZED(97270) : _GLF_IDENTITY(-66234, (-66234) * 1))), -66234, -66234)))), max((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) - 0))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, (false ? _GLF_FUZZED(97270) : _GLF_IDENTITY(-66234, (-66234) * 1))), -66234, -66234)))), max((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) - 0))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, (false ? _GLF_FUZZED(97270) : _GLF_IDENTITY(-66234, (-66234) * 1))), -66234, -66234)))), max((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) - 0))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, (false ? _GLF_FUZZED(97270) : _GLF_IDENTITY(-66234, (-66234) * 1))), -66234, -66234)))), max((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) - 0))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))))) ^ 0)) ^ 0)))) ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))) < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0, ((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0) | ((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, 0, 0)))) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-66234), (true ? 1 : _GLF_FUZZED(-66234)) / 1)), max((true ? 1 : _GLF_FUZZED(-66234)), (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(-66234)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) >> 0) : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1))))), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, (_GLF_IDENTITY(-66234, ~ (~ (-66234)))) | (_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, int(int(-66234))), -66234, -66234)))))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25437) : _GLF_IDENTITY(1, int(int(1))))), 0, 1, 1))))), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, (_GLF_IDENTITY(-66234, ~ (~ (-66234)))) | (_GLF_IDENTITY(-66234, clamp(_GLF_IDENTITY(-66234, int(int(-66234))), -66234, -66234)))))))))) | 0))))) ^ 0) < subgroup_size), false || (! (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-66234))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(2))) + (_GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-66234))), (((true ? 1 : _GLF_FUZZED(-66234)))) | (((true ? 1 : _GLF_FUZZED(-66234))))))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, min((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y)))))) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(-66234, -66234, -66234)))))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), ~ (~ ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))))))) | 0)), ~ (~ (int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), ~ (~ ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))))))) | 0)))))))) ^ 0) < subgroup_size), false || (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1))))) + 0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ! (! ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1))))) + 0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))), bool(bvec2(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(-36928) : _GLF_IDENTITY(1, ~ (~ (1))))), 1)))) : _GLF_FUZZED(-66234)), int(int((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(-36928) : _GLF_IDENTITY(1, ~ (~ (1))))), 1)))) : _GLF_FUZZED(-66234))))), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, max(-66234, -66234)))), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bool((! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, min((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) << 0))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y)))))) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), max((true ? 1 : _GLF_FUZZED(-66234)), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, clamp(-66234, -66234, -66234)))))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), ~ (~ ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))))))) | 0)), ~ (~ (int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))), ~ (~ ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))))))) | 0)))))))) ^ 0) < subgroup_size), false || (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1))))) + 0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ! (! ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) / 1), 1, 1))))) + 0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))), bool(bvec2(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) : _GLF_FUZZED(-66234)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-66234)), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(-36928) : _GLF_IDENTITY(1, ~ (~ (1))))), 1)))) : _GLF_FUZZED(-66234)), int(int((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(-36928) : _GLF_IDENTITY(1, ~ (~ (1))))), 1)))) : _GLF_FUZZED(-66234))))), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-66234, max(-66234, -66234)))), ((true ? 1 : _GLF_FUZZED(-66234))) | 0), (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234))), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))))) | 0), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66234)))) | 0))))) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 4.8))))[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-2.0) : injectionSwitch[0])))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-17.97, -16.37, -0.5, 285.027).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(true, false)))[0], float(mat4x2(injectionSwitch[0], 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), vec2(mat3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 4.8))))[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-2.0) : injectionSwitch[0])))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-17.97, -16.37, -0.5, 285.027).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(true, false)))[0], float(mat4x2(injectionSwitch[0], 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec3(1.0, abs(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, abs(0.0), 0.0), vec3(1.0, 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.5, clamp(5.5, _GLF_IDENTITY(5.5, clamp(_GLF_IDENTITY(5.5, (5.5) + 0.0), _GLF_IDENTITY(5.5, mix(float(_GLF_FUZZED(7701.6893)), float(5.5), bool(true))), 5.5)), _GLF_IDENTITY(5.5, (false ? _GLF_FUZZED(97.18) : 5.5)))))), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], injectionSwitch[0])), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), float(mat4x2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))))), mix(float(_GLF_FUZZED(-3745.0344)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0) : _GLF_FUZZED(-24.59))), float(mat4x2(injectionSwitch[0], 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))))), bool(true)))), injectionSwitch[1])).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false)))), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false)))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false)))), false, true))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY(((bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))), true && (((bool(bvec3(false, false, true)))))))), false || (! (bool(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))), ! (! (bool(_GLF_IDENTITY(true, (true) || false)))))))))))))))), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))))))))), false, true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY(((bool(bvec3(false, false, true)))), true && (((bool(bvec3(false, false, true)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY(((bool(bvec3(false, false, true)))), true && (((bool(bvec3(false, false, true))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY(((bool(bvec3(false, false, true)))), true && (((bool(bvec3(false, false, true)))))))))), (! (! (_GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY(((bool(bvec3(false, false, true)))), true && (((bool(bvec3(false, false, true))))))))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY(((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || false))))), true && (((bool(bvec3(false, false, true))))))))))))), false || (! _GLF_IDENTITY((bool(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)) || false)), ! (! (bool(_GLF_IDENTITY(true, (true) || false)))))))))), bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)) || false)), ! (! (bool(_GLF_IDENTITY(true, (true) || false))))))))))), (bool((bool(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)) || false)), ! (! (bool(_GLF_IDENTITY(true, (true) || false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))))) || false)));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y) || false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(false))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false))), true, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, log(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / exp(0.0)), 1.0)), 0.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, log(1.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.14)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-184.833))))), 0.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.14)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-184.833))))), 0.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.14)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-184.833))))), 0.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.14)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-184.833))))), 0.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)))))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))); _injected_loop_counter --)
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)), bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (_GLF_IDENTITY((1.0) / 1.0, min((1.0) / 1.0, (1.0) / 1.0))) - 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0))), (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0)))) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (_GLF_IDENTITY((1.0) / 1.0, min((1.0) / 1.0, (1.0) / 1.0))) - 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0))), (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0)))) + vec2(0.0, 0.0))).x, float(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (_GLF_IDENTITY((1.0) / 1.0, min((1.0) / 1.0, (1.0) / 1.0))) - 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0))), (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0)))) + vec2(0.0, 0.0))).x, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 1.0)))) + 0.0) > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, 1, _GLF_IDENTITY(1, 0 ^ (1)))))])).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), max((~ (0)), (~ (0))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ ((~ (0)))), max((~ (0)), (~ (0)))))))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) << 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec4(int(0), 0, 1, 0)), (false ? _GLF_FUZZED(-29474) : int(ivec4(int(0), 0, 1, 0)))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) << 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec4(int(0), 0, 1, 0)), (false ? _GLF_FUZZED(-29474) : int(ivec4(int(0), 0, 1, 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) << 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec4(int(0), 0, 1, 0)), (false ? _GLF_FUZZED(-29474) : int(ivec4(int(0), 0, 1, 0)))))), int(ivec3((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) << 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec4(int(0), 0, 1, 0)), (false ? _GLF_FUZZED(-29474) : int(ivec4(int(0), 0, 1, 0)))))), 0, 0))))))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4645.7764)), float(1.0), bool(true))), 1.0))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(1.0), 0.0), min(_GLF_IDENTITY(vec4(injectionSwitch, log(1.0), 0.0), clamp(vec4(injectionSwitch, log(1.0), 0.0), vec4(injectionSwitch, log(1.0), 0.0), vec4(injectionSwitch, log(1.0), 0.0))), vec4(injectionSwitch, log(1.0), 0.0))))).x > injectionSwitch.y)), false), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), min((injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false)))) && true)))), false), true))))), false, true)))), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, true, true))), true)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false), true), true)), false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-8684 & 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (! ((_GLF_DEAD(false))))) && true)) || false, true)), true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(bool(! (! ((_GLF_DEAD(false)))))))) || false) && true), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, true)), true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(bool(! (! ((_GLF_DEAD(false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(bool(! (! ((_GLF_DEAD(false)))))))), true, true))) || false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true), false)))))))))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
}
