#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), ! (! (_GLF_IDENTITY(! ((! ((false)))), ! (! (! ((! ((false))))))))))))), true && ((false))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))))))) || false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))), false, true, true)), false)))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))))))) || false)))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5652.7642)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5652.7642)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5652.7642)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))))), 0.0, 1.0, abs(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))) * 1.0))) > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.1, -21.38)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(175.107) : 1.0)), 0.0))).x > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(175.107) : 1.0)), 0.0))).x > injectionSwitch.y))) && true)))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat4x3(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, 0.0)), (transpose(mat2(injectionSwitch, 1.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y))))))))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0)))).x > injectionSwitch.y)))))))))))))) || false)))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x)) > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x)) > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))) && true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))) && true))))), (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))) && true)))))) || false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x)) > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))).x)) > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))) && true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))) && true))))), (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))) && true)))))) || false))))))))) || _GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(mat2(869.071, 1574.8859, -8907.0740, 9.8)) : mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))) && true)))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))))), false, true, true)), false)))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, abs(0.0), 1.0, 0.0))) < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)))))))))))))) || false))))))))))))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) / 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) / 1u)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) / 1u))), 0u ^ (min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) / 1u)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) / 1u)))))), max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u * (workgroup_id), max(1u * (workgroup_id), 1u * (workgroup_id))))), max((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u * (workgroup_id), max(1u * (workgroup_id), 1u * (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u * (workgroup_id), max(1u * (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) - (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u * (workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), _GLF_IDENTITY(max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))), (false ? _GLF_FUZZED(555u) : max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED((workgroup_id ++)) : subgroup_local_id + 1))))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1)) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) - 0u) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(10.94, 9.6)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, determinant(mat3(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, sin(0.0)))))), cos(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))) && true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))) : _GLF_FUZZED(workgroup_base))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), (! (! (! (subgroup_local_id + 1 < subgroup_size)))) || false), true && (! (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! (_GLF_IDENTITY(! (! (! (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(31111))), 1)) < subgroup_size))), true && (! (! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))))), ! (! (! (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! (_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), true && (! (! (! (subgroup_local_id + 1 < subgroup_size))))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)) < subgroup_size))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), false || (! (subgroup_local_id + 1 < subgroup_size))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size))))) || false)))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY((! (! (subgroup_local_id + 1 < subgroup_size))), ((! (! (subgroup_local_id + 1 < subgroup_size)))) && true)) || false), _GLF_IDENTITY(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(true && (! (! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, true)))))))))), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! (_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(bool(bvec4(true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), true && (! (! (subgroup_local_id + 1 < subgroup_size))))))))), false || ((! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), true && (! (! (subgroup_local_id + 1 < subgroup_size))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(true && (_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), bool(bvec2(! (! (! (subgroup_local_id + 1 < subgroup_size))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id + 1))))) < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | 0u)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(1344.0694))))), false, true)), true && (bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | 0u)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(1344.0694))))), false, true)), true && (bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true)))))))), true && (! ((_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | 0u)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(1344.0694))))), false, true)), true && (bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true))))))))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < subgroup_size))), ! (! ((! (! (subgroup_local_id + 1 < subgroup_size)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), true), false))), true))))))), _GLF_IDENTITY(bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))))), ((! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < subgroup_size))), ! (! ((! (! (subgroup_local_id + 1 < subgroup_size)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), true), false))), true))))))), _GLF_IDENTITY(bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(true && (! (! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))))) || false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))))) / 1u))) < subgroup_size, ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 1u))))))))) && true)))))))))))) || false), false || _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)), bool(bvec2(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)), false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size)), ! (_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), true && (! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) || false))))))))))))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) || false))))))))))))))), false, false, false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)), bool(bvec2(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)), false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size)), ! (_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), true && (! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) || false))))))))))))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) || false))))))))))))))), false, false, false)))))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)), bool(bvec2(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)), false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size)), ! (_GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), true && (! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) || false))))))))))))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) || false))))))))))))))), false, false, false)))))))))))) && true)))))), bool(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(clamp(1, 1, 1), 1, 0, 1), (ivec4(clamp(1, 1, 1), 1, 0, 1)) ^ _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) - ivec4(0, 0, 0, 0)))), int(int(int(_GLF_IDENTITY(ivec4(clamp(1, 1, 1), 1, 0, 1), (ivec4(clamp(1, 1, 1), 1, 0, 1)) ^ ivec4(0, 0, 0, 0)))))))) < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-68820) : 1))))) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), true, true, true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-68820) : 1))))) < subgroup_size, ! _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, true, true, true)), (bool(bvec4(subgroup_local_id + 1 < subgroup_size, true, true, true))) || false)))), bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), true, true, true))))), bool(bvec2(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-68820) : 1))))) < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4((! (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec3(subgroup_local_id, 0u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec3(0u, 0u, 0u)))) + 1 < subgroup_size)), true, true, true))))), false)))))), ! (! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1 < subgroup_size)), ! (! ((! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1 < subgroup_size))))))))))))))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(-490.720)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) + 0), 0 ^ (64)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(6104) : _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), int(ivec4(64, 0, 0, 0))))), 64))) - 0), 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) * 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0))))) : _GLF_FUZZED(80378))), min(int(int(0)), int(int(0))))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, _GLF_IDENTITY(int(int((0) / 1)), max(int(int((0) / 1)), int(int((0) / 1)))))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-20691) : 0)), clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) / 1)))))))), 4);
   subgroupAll(true);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
