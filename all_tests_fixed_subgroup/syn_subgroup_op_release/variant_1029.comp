#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9.9))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9))), (false ? _GLF_FUZZED(-8900.5789) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-9.9, min(-9.9, _GLF_IDENTITY(-9.9, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (-9.9)))), mix(float(_GLF_FUZZED((+ 6.3))), float(_GLF_IDENTITY(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(_GLF_IDENTITY(-9.9, max(-9.9, -9.9)), max(_GLF_IDENTITY(_GLF_IDENTITY(-9.9, max(-9.9, -9.9)), clamp(_GLF_IDENTITY(-9.9, max(-9.9, -9.9)), _GLF_IDENTITY(-9.9, max(-9.9, -9.9)), _GLF_IDENTITY(-9.9, max(-9.9, -9.9)))), _GLF_IDENTITY(-9.9, max(-9.9, -9.9))))) - 0.0), min(-9.9, -9.9))), _GLF_IDENTITY(bool(true), (bool(true)) || false))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, mix(float(-9.9), float(_GLF_FUZZED(vec3(1.2, 80.17, 263.601).p)), bool(false))), _GLF_IDENTITY(-9.9, min(-9.9, -9.9)))))), (true ? (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-9.9, (-9.9) / cos(0.0)), float(mat3(_GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, max(-9.9, -9.9)), -9.9)), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, round(length(normalize(1.0)))))), min(-9.9, -9.9)) : _GLF_FUZZED(-8.2))))) : _GLF_FUZZED(7.0))), ((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, min(-9.9, -9.9))))) / 1.0)) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(mat2(_GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, cos(0.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(asinh(-5.0), (false ? _GLF_FUZZED(-81.54) : asinh(-5.0)))), mix(float(_GLF_FUZZED(vec3(-6.6, -4.4, 40.73).r)), float(_GLF_IDENTITY(true, true && (true)) ? (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9.9, min(-9.9, -9.9))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(_GLF_IDENTITY(-9.9, min(-9.9, -9.9))), abs(1.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), (true ? mat3(_GLF_FUZZED(_GLF_IDENTITY(-9.9, min(-9.9, -9.9))), abs(1.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(18.67, -68.17, -0.7, -902.763, 9.6, 81.44, 5.0, 6.4, -3.5))))))) : _GLF_FUZZED(asinh(-5.0))), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9), mix(float(_GLF_FUZZED(313.789)), float(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 8.9)))).y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 8.9)))).y, 0.0, 0.0, 0.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 8.9)))).y, 0.0, 0.0, 0.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0 * ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9)))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.8)), bool(false)))), float(_GLF_FUZZED(-764.122)), bool(false))))))))))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9), mix(float(_GLF_FUZZED(313.789)), float(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 8.9)))).y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 8.9)))).y, 0.0, 0.0, 0.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 8.9)))).y, 0.0, 0.0, 0.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0 * ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9)))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.51)), float(1.0), bool(true))))))))))) : _GLF_FUZZED(9.6))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) ? injectionSwitch.y : _GLF_FUZZED(-9.9))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), min((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)).y : _GLF_FUZZED(-9.9)))))), max(min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, true), bvec3(bvec3(bvec3(! (true), false, true))))))))) || false) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(28.56), _GLF_FUZZED(436.463)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))))).y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_FUZZED(9947.6377)), bool(false)))), min(float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_FUZZED(9947.6377)), bool(false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_FUZZED(9947.6377)), bool(false)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_FUZZED(9947.6377)), bool(false))))) + 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_IDENTITY(_GLF_FUZZED(-9.9), (true ? _GLF_FUZZED(-9.9) : _GLF_FUZZED(263.403)))) / 1.0), _GLF_FUZZED(-9.9), _GLF_FUZZED(-9.9)))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(411.825)), float(-9.9), bool(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))))))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sqrt(1.0), 1.0, 1.0, log(cos(0.0)), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), 0.0 + (_GLF_FUZZED(-9.9)))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), 0.0 + (_GLF_FUZZED(-9.9)))))))), min(float(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), clamp(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), (false ? _GLF_FUZZED(96.79) : true ? injectionSwitch.y : _GLF_FUZZED(-9.9))), true ? injectionSwitch.y : _GLF_FUZZED(-9.9), true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))), 1.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), 0.0 + (_GLF_FUZZED(-9.9)))))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), 0.0 + (_GLF_FUZZED(-9.9)))))))), float(mat4x3(float(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.9), max(_GLF_FUZZED(-9.9), _GLF_FUZZED(-9.9))), 0.0 + (_GLF_FUZZED(-9.9)))))))), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), 1.0 * (_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) / 1.0)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) / 1.0)), min(float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) / 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) / 1.0)))), float(_GLF_FUZZED((4.0 + 25.69))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), float(mat3x2(_GLF_FUZZED(-9.9), 1.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0], (true ? injectionSwitch[0] : _GLF_FUZZED(53.39))), injectionSwitch[1])).y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0)))))), clamp(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(19.38)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y : _GLF_FUZZED(-9.9)), clamp((true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(19.38)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y : _GLF_FUZZED(-9.9)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(19.38)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y : _GLF_FUZZED(-9.9)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(19.38)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y : _GLF_FUZZED(-9.9)))), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8164.4341) : 0.0)), 1.0, 1.0))), 1.0)))))), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), max(_GLF_FUZZED(-9.9), _GLF_FUZZED(-9.9)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0)))))))), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0)))))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(-9.9, float(mat4(-9.9, 1.0, 0.0, sqrt(sqrt(0.0)), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))))))), ((min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, float(mat2(-9.9, 1.0, 0.0, 0.0)))) + 0.0)))), float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, float(mat2(-9.9, 1.0, 0.0, 0.0)))) + 0.0)), max(_GLF_FUZZED(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, float(mat2(-9.9, 1.0, 0.0, 0.0)))) + 0.0)), _GLF_FUZZED(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, float(mat2(-9.9, 1.0, 0.0, 0.0)))) + 0.0))))), sin(0.0) + ((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, float(mat2(-9.9, 1.0, 0.0, 0.0)))) + 0.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(39021)), (_GLF_IDENTITY(_GLF_FUZZED(float(39021)), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(float(39021)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0), (false ? _GLF_FUZZED(mat2x3(3.4, -6.1, 0.2, 323.763, -71.20, 1.2)) : mat2x3(_GLF_FUZZED(float(39021)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0)))))) - 0.0)), float((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, float(mat2(-9.9, 1.0, 0.0, 0.0)))) + 0.0)))), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), clamp((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), min(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) - 0.0)), float(_GLF_IDENTITY(mat2x3((true ? injectionSwitch.y : _GLF_FUZZED(-9.9)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, sin(0.0), 1.0, 1.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-33.22) : 1.0))))) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))))) * (injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.3)), float(0.0), bool(_GLF_IDENTITY(true, bool(bool(true)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))))).y)) : _GLF_FUZZED(-9.9)), float(mat3((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, sin(0.0), 1.0, 1.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))))).y)) : _GLF_FUZZED(-9.9)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) || false) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0))))).y : _GLF_IDENTITY(_GLF_FUZZED(-9.9), min(_GLF_FUZZED(-9.9), _GLF_IDENTITY(_GLF_FUZZED(-9.9), (false ? _GLF_FUZZED(98.95) : _GLF_IDENTITY(_GLF_FUZZED(-9.9), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.9), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_FUZZED(-9.9), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))))) - 0.0) - 0.0)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), min(true ? injectionSwitch.y : _GLF_FUZZED(-9.9), true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat3x2(mat3x2(mat3x2(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ((! _GLF_IDENTITY((false), ((false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, false, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))), true, true)))), bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) / 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u))), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) << 0u)) * 1u))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u)) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(16883u))), bool(false))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))) + 1, 0u))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, 0u))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uvec4(uint(2), 1u, 0u, 1u)), clamp(uint(_GLF_IDENTITY(uvec4(uint(2), 1u, 0u, 1u), min(uvec4(uint(2), 1u, 0u, 1u), uvec4(uint(2), 1u, 0u, 1u)))), _GLF_IDENTITY(uint(uvec4(uint(2), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(uint(2), 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(uint(2), 1u, 0u, 1u), ~ (~ (uvec4(uint(2), 1u, 0u, 1u)))), uvec4(uint(2), 1u, 0u, 1u), uvec4(uint(2), 1u, 0u, 1u))))) >> 0u), uint(uvec4(uint(2), 1u, 0u, 1u))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0)), float(float(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0)), (float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0))) * 1.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, true, _GLF_IDENTITY(false, ! (! (false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) || false)), false, false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.8)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, true))))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), true), true, false))), true, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), false))))))))), false, true, false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
