#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2x3 _f0;
 float _f1;
 mat3 _f2;
 uint workgroup_base;
 bvec2 _f3;
} ;

struct _GLF_struct_6 {
 int _f0;
 vec3 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 ivec3 _f4;
 float _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 mat3x4 _f1;
 _GLF_struct_7 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 mat4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 ivec4 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 float _f1;
 vec3 _f2;
 uint _f3;
 mat3x2 _f4;
 mat2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 ivec4 _f1;
 uint _f2;
 mat4x2 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
 float _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_8 _f1;
 mat3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))) || false)) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), true))), true, true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false)))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + sin(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(((-2777.2180 * 51.71) * 76.96)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + sin(vec2(0.0, 0.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + sin(vec2(0.0, 0.0))))[0], _GLF_FUZZED(-6.1)), bvec2(true, false))).x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec3(! (! (! (_GLF_DEAD(false)))), false, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false)), false, true))))))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), 1u * ((gl_WorkGroupID.x))) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) ^ (0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x) ^ 0u), (gl_WorkGroupID.x) + 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(exp(84.83))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), float(mat3x4(float(vec3(injectionSwitch.y, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), float(vec3(injectionSwitch.y, 1.0, 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), mix(float(_GLF_FUZZED(840.025)), float(float(vec3(injectionSwitch.y, 1.0, 1.0))), bool(true))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-17.17, -41.95)))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, true), false))))))))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, true), true)))), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_5(_GLF_struct_0(bvec2(true), ivec4(1), 1u, mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), ivec2(1), mat2x4(1.0), _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))))), _GLF_struct_1(mat2(1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED((+ (-0.3)))), bool(false))))))), vec3(1.0), 1u, mat3x2(1.0), mat2(1.0), vec4(1.0)), ivec2(1), 1.0, _GLF_struct_2(bvec2(true), ivec4(1), mat2x4(1.0), mat2x3(1.0)), _GLF_struct_3(bvec4(true), mat4x2(1.0), mat2x4(1.0), mat4(1.0)), _GLF_struct_4(mat4(1.0))), _GLF_struct_8(_GLF_struct_6(1, vec3(1.0), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3x4(1.0), ivec3(1), 1.0, bvec4(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true))))))), mat3x4(1.0), _GLF_struct_7(mat2x3(1.0), 1.0, mat3(1.0), workgroup_size * workgroup_id, bvec2(true)), mat2x4(1.0), mat3x2(1.0), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), transpose(transpose(transpose(transpose(transpose(mat4(1.0))))))), (transpose(transpose(transpose(mat4(1.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, clamp(_GLF_IDENTITY((1.0) + 0.0, float(mat4((1.0) + 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(-2.8)), float((1.0) + 0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((bool(true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true && (_GLF_IDENTITY((bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((bool(true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))), (1.0) + 0.0))))), _GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), _GLF_IDENTITY((transpose(transpose(transpose(mat4(1.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(transpose(transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))), transpose(transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), (transpose(transpose(transpose(mat4(1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(true ? transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((transpose(transpose(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(transpose(transpose(mat4(1.0)))))))), ((transpose(transpose(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(transpose(transpose(mat4(1.0))))))))) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-3.4, -9241.8771, -422.640, -3.2, 8583.8467, 87.93, -8277.4185, -8747.0264, -10.04, -93.03, -88.75, -4.9, 375.797, -920.001, -7.3, -70.08)) : _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-8644.0939, 9.6, _GLF_IDENTITY(8.6, mix(float(_GLF_FUZZED(9548.3425)), float(8.6), bool(true))), 4046.6322, -291.074, 19.85, 3068.8333, 107.402, 11.00, -3.5, 0.6, 94.90, 6.0, 7.4, 8.8, 8611.1622)), (_GLF_IDENTITY(true ? _GLF_FUZZED(mat4(-8644.0939, 9.6, _GLF_IDENTITY(8.6, mix(float(_GLF_FUZZED(9548.3425)), float(8.6), bool(true))), 4046.6322, -291.074, 19.85, 3068.8333, 107.402, 11.00, -3.5, 0.6, 94.90, 6.0, 7.4, 8.8, 8611.1622)) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-557.566, 9.9, 4.2, 22.48, 5.8, 580.529, 9.5, 2305.6762, -8.7, 8420.9083, 3232.0682, -4236.1917, -2.4, 37.52, 6.5, 836.370)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(mat4(-557.566, 9.9, 4.2, 22.48, 5.8, 580.529, 9.5, 2305.6762, -8.7, 8420.9083, 3232.0682, -4236.1917, -2.4, 37.52, 6.5, 836.370)), (_GLF_FUZZED(mat4(-557.566, 9.9, 4.2, 22.48, 5.8, 580.529, 9.5, 2305.6762, -8.7, 8420.9083, 3232.0682, -4236.1917, -2.4, 37.52, 6.5, 836.370))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(_GLF_IDENTITY(true ? _GLF_FUZZED(mat4(-8644.0939, 9.6, _GLF_IDENTITY(8.6, mix(float(_GLF_FUZZED(9548.3425)), float(8.6), bool(true))), 4046.6322, -291.074, 19.85, 3068.8333, 107.402, 11.00, -3.5, 0.6, 94.90, 6.0, 7.4, 8.8, 8611.1622)) : _GLF_FUZZED(mat4(-557.566, 9.9, 4.2, 22.48, 5.8, 580.529, 9.5, 2305.6762, -8.7, 8420.9083, 3232.0682, -4236.1917, -2.4, 37.52, 6.5, 836.370)), (true ? true ? _GLF_FUZZED(mat4(-8644.0939, 9.6, _GLF_IDENTITY(8.6, mix(float(_GLF_FUZZED(9548.3425)), float(8.6), bool(true))), 4046.6322, -291.074, 19.85, 3068.8333, 107.402, 11.00, -3.5, 0.6, 94.90, 6.0, 7.4, 8.8, 8611.1622)) : _GLF_FUZZED(mat4(-557.566, 9.9, 4.2, 22.48, 5.8, 580.529, 9.5, 2305.6762, -8.7, 8420.9083, 3232.0682, -4236.1917, -2.4, 37.52, 6.5, 836.370)) : _GLF_FUZZED(mat4(4.3, 71.23, 6.0, 88.91, 4.6, 5.9, 0.6, -90.55, 3.5, 5.1, 9875.1999, -3655.4846, 6.9, 469.441, -6.8, 210.920))))))))), (true ? true ? transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(transpose(transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))))), (transpose(transpose(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(transpose(transpose(mat4(1.0)))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-8644.0939, 9.6, _GLF_IDENTITY(8.6, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9548.3425)), mix(float(_GLF_FUZZED(-549.033)), float(_GLF_IDENTITY(float(_GLF_FUZZED(9548.3425)), max(_GLF_IDENTITY(float(_GLF_FUZZED(9548.3425)), clamp(float(_GLF_FUZZED(9548.3425)), float(_GLF_FUZZED(9548.3425)), float(_GLF_FUZZED(9548.3425)))), float(_GLF_FUZZED(9548.3425))))), bool(true))), float(8.6), bool(true))), 4046.6322, -291.074, 19.85, _GLF_IDENTITY(3068.8333, max(3068.8333, 3068.8333)), 107.402, 11.00, -3.5, 0.6, 94.90, 6.0, 7.4, 8.8, 8611.1622)), (true ? _GLF_FUZZED(mat4(-8644.0939, 9.6, _GLF_IDENTITY(8.6, mix(float(_GLF_FUZZED(9548.3425)), float(8.6), bool(true))), 4046.6322, -291.074, 19.85, 3068.8333, 107.402, 11.00, -3.5, 0.6, 94.90, 6.0, 7.4, 8.8, 8611.1622)) : _GLF_FUZZED(mat4(-557.566, 9.9, 4.2, 22.48, 5.8, 580.529, 9.5, _GLF_IDENTITY(2305.6762, clamp(2305.6762, 2305.6762, 2305.6762)), -8.7, 8420.9083, 3232.0682, -4236.1917, -2.4, 37.52, 6.5, 836.370)))) : _GLF_FUZZED(mat4(-721.480, -8.7, -96.06, -8093.1650, 6.6, 152.426, 26.03, -1.0, -53.82, -5.9, -8.5, -8.1, -2.4, 1.1, 3.3, 68.35))))))) + mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(55.52), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(92.84), (_GLF_IDENTITY(vec2(_GLF_FUZZED(55.52), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(55.52), (injectionSwitch)[1])) * mat2(1.0)))[1]), vec2((vec2(_GLF_FUZZED(55.52), (injectionSwitch)[1]))[0], _GLF_FUZZED(-11.47)), bvec2(true, false))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (true ? _GLF_IDENTITY(float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) + 0.0) : _GLF_FUZZED(degrees(3372.2333))))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)))))), uvec2(1u)), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-257.826)), float(1.0), bool(true)))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4104.5354)), float(1.0), bool(true)))), mat3(mat3x4(mat3(1.0))))) - _GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(64.99))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / cos(sqrt(0.0))), 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0, 0.0)) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0))))), (true ? _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0))))), (false ? _GLF_FUZZED(mat3(-3.4, -6.3, 5.9, -1.3, 9.3, 55.46, 670.206, -554.549, 4.7)) : mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0))))))) : _GLF_FUZZED(mat3(2.1, 1.7, -58.74, -7.4, -6.2, 887.645, 5.6, -2.8, 18.85)))), (false ? _GLF_IDENTITY(_GLF_FUZZED((mat3(85.26, -2058.4984, 4.2, -6.6, -5009.0242, -8209.4812, 83.01, _GLF_IDENTITY(-7469.4564, min(-7469.4564, -7469.4564)), 997.356) + 39.62)), (true ? _GLF_FUZZED((mat3(85.26, -2058.4984, 4.2, -6.6, -5009.0242, -8209.4812, 83.01, _GLF_IDENTITY(-7469.4564, min(-7469.4564, -7469.4564)), 997.356) + 39.62)) : _GLF_FUZZED(mat3(-505.807, 5.3, 9899.9801, 6.0, 7.7, 872.155, 1548.3400, 0.5, 2.5)))) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (false ? _GLF_FUZZED(1.9) : length(normalize(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), mat3(mat4x3(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0)))))))))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED((mat3(85.26, -2058.4984, 4.2, -6.6, -5009.0242, -8209.4812, 83.01, _GLF_IDENTITY(-7469.4564, min(-7469.4564, -7469.4564)), 997.356) + 39.62)), (true ? _GLF_FUZZED((mat3(85.26, -2058.4984, 4.2, -6.6, -5009.0242, -8209.4812, 83.01, _GLF_IDENTITY(-7469.4564, min(-7469.4564, -7469.4564)), 997.356) + 39.62)) : _GLF_FUZZED(mat3(-505.807, 5.3, 9899.9801, 6.0, 7.7, 872.155, 1548.3400, 0.5, 2.5)))) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), mat3(mat4x3(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0)))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_struct_replacement_9._f1._f2.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_9._f1._f2.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u)))) - 0u)) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), (~ (~ (~ (subgroup_local_id + 1)))) >> (uvec2(191548u, 149754u).g & 0u))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))), 1u)))) % subgroup_size) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-67031)))))) % subgroup_size, _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(uint(uint((subgroup_local_id + 1) % subgroup_size)), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) % subgroup_size))), max(min(uint(uint((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) % subgroup_size), 0u | (uint((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) % subgroup_size))))), min(uint(uint((subgroup_local_id + 1) % subgroup_size)), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) % subgroup_size)))))))) >> 0u), _GLF_IDENTITY((((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), min(uint(uint((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), (uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))) % subgroup_size))) >> 0u)) | (uint(uint((subgroup_local_id + 1) % subgroup_size)))))))) >> 0u)), ((((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), min(uint(uint((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), (uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))) % subgroup_size))) >> 0u)) | _GLF_IDENTITY((uint(uint((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(clamp((uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size)))), (clamp((uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size))))) | (_GLF_IDENTITY(clamp((uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size)))), ~ (~ (clamp((uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size))), (uint(uint((subgroup_local_id + 1) % subgroup_size))))))))))))))) >> 0u))) * 1u) << 0u) * 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid))), (_GLF_IDENTITY(0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | 0u), ((next_virtual_gid)) / 1u), (next_virtual_gid))), (0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid)))) / (1u & 1u))) | (_GLF_IDENTITY(0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid))), (_GLF_IDENTITY(0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid))), max(0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid))), 0u | _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0u)) | 0u), max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), 0u | (next_virtual_gid)))))) | 0u)) << 0u)) | 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u))), min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u), clamp(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) << 0u)) | 0u))))))))))], uint(2), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) / 1))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7679.9384))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 0u + (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | 0u, clamp(_GLF_IDENTITY((uint(2)) | 0u, ((uint(2)) | 0u) | 0u), _GLF_IDENTITY((uint(2)) | 0u, uint(_GLF_IDENTITY(uint((uint(2)) | 0u), (true ? uint((uint(2)) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (uint(2)) | 0u))))), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
