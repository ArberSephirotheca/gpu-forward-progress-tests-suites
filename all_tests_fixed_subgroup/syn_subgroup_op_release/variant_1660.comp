#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))), mix(vec2(_GLF_FUZZED(-8.5), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))))))[0], _GLF_FUZZED(-3.9)), bvec2(true, false))), injectionSwitch)))), mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))), injectionSwitch), (false ? _GLF_FUZZED(min(injectionSwitch, -7.9)) : min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))), injectionSwitch))))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))), injectionSwitch)))) - vec2(0.0, 0.0))), mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), (vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6))) + vec2(0.0, 0.0)), bvec2(false, _GLF_IDENTITY(false, true && (false))))), injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2((exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(8757.5568)), vec2(_GLF_FUZZED(-864.943), (exp(vec2(0.0, 0.0)))[1]), bvec2(false, true))))).y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(6.9, min(6.9, 6.9))), _GLF_FUZZED(-4.6)), (vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6))) + vec2(0.0, 0.0)), bvec2(false, _GLF_IDENTITY(false, true && (false))))), injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * exp(vec2(0.0, 0.0)))).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false)), vec2(0.0, 0.0) + (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED((- -4.7))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(-9.0), _GLF_FUZZED(62.82)), bvec2(false, false))), bvec2(true, true))))[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))))), mix(vec2(_GLF_FUZZED(-153.597), _GLF_FUZZED(5.6)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-241.749)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false)), vec2(0.0, 0.0) + (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED((- -4.7))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), 0.0, 0.0)), vec2(vec2(vec2(vec4((injectionSwitch), 0.0, 0.0)))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))[1]), bvec2(true, true))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))[0], min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-241.749)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false)), vec2(0.0, 0.0) + (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED((- -4.7))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), 0.0, 0.0)), vec2(vec2(vec2(vec4((injectionSwitch), 0.0, 0.0)))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))[1]), bvec2(true, true))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-241.749)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false)), vec2(0.0, 0.0) + (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED((- -4.7))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), 0.0, 0.0)), vec2(vec2(vec2(vec4((injectionSwitch), 0.0, 0.0)))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))[1]), bvec2(true, true))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false)), vec2(0.0, 0.0) + (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_IDENTITY(_GLF_FUZZED((- -4.7)), min(_GLF_FUZZED((- -4.7)), _GLF_IDENTITY(_GLF_FUZZED((- -4.7)), 1.0 * (_GLF_FUZZED((- -4.7))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-4.6)), bvec2(false, false))))))[1]), bvec2(true, true))), injectionSwitch)))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))).y))))) && _GLF_IDENTITY(true, bool(bool(true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-31.56)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-31.56)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-31.56)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-31.56)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0)) * mat3(1.0)))) * 1.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u))))))))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))))), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, subgroup_id, workgroup_size)))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), 0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), max(~ ((subgroup_size)), ~ ((subgroup_size))))))))), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))))))) + subgroup_local_id) * 1u)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(198843u) : _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(num_workgroup, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -3046.9993))), float(injectionSwitch.y), bool(true)))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-3046.9993, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(-3046.9993, (-3046.9993) / 1.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(-3046.9993, (-3046.9993) / 1.0)), (true ? float(_GLF_IDENTITY(-3046.9993, (-3046.9993) / 1.0)) : _GLF_FUZZED(-4001.2297)))) / 1.0), float(_GLF_FUZZED(-0.2)), bool(false)))))), float(injectionSwitch.y), bool(true))))))) / cos(0.0)))), workgroup_size)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : 0u | (subgroup_size)))))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), vec2(_GLF_FUZZED((3130.9834)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.7) : injectionSwitch.y))))))))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.5) : injectionSwitch.y))), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false))))), false))))))))))))), true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(494.101)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)), true))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y) && true)), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)), false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4066.3391)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), false)))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false)))))))))))), true)), false)))))))))))) || false), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))) > injectionSwitch.y))) && true))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (workgroup_base) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | 0u)), uint(1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) - 0u), 0u, 0u, 1u))))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((9.6 + _GLF_IDENTITY(-4.9, min(_GLF_IDENTITY(-4.9, mix(float(-4.9), float(_GLF_FUZZED(8.7)), bool(false))), _GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9))))))), float(0.0), bool(true))), injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u), min(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u), max(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u), uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1u), uint(1u))), clamp(~ (_GLF_IDENTITY(uint(1u), uint(1u))), ~ (_GLF_IDENTITY(uint(1u), uint(1u))), ~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))) >> ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(1u)))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u, 0u ^ (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) * 1u), uint(1u))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) * 1u), uint(1u))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) * 1u), uint(1u))))), 1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(_GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1u), uint(1u)), 1u, (36618u & 0u)), (uvec3(_GLF_IDENTITY(uint(1u), uint(1u)), 1u, (36618u & 0u))) | uvec3(0u, 0u, 0u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u))))), max((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(1u), uint(1u))))))) + 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u)))))) + subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)) / 1u)) >> 0u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)) / 1u)) >> 0u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(num_workgroup))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + subgroup_id * subgroup_size) | 0u)))) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 1u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u)) + 1) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 1u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u)) + 1) % subgroup_size)) | (max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 1u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u)) + 1) % subgroup_size)))) | (max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), uint(6u)))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min((max((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) | (max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (true ? _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_base)))) | 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) | (max(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 1u))) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))));
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
    }
   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))))
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) + 0u, min((uint(2)) + 0u, (uint(2)) + 0u))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y) || false))))), false, false)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), bool(_GLF_IDENTITY(bvec2(true && (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true && (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true), false), bvec3(bvec4(bvec3(bvec2(true && (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true), false), false)))))))))), (false) || _GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((72.76)), _GLF_FUZZED(6.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), false), _GLF_IDENTITY(true, (true) && true), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-4.3) : float(vec3(injectionSwitch.x, abs(1.0), 0.0))))) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), _GLF_IDENTITY(vec2(mat2x3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), bvec2(true, false)))[0], float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED((936.023 / -7.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED((936.023 / -7.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED((936.023 / -7.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1])), clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(5), int(5))))], injectionSwitch[1]))))), 1.0, 1.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), 1.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-84.42, -6.7)) : vec2(mat2x3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), 1.0, 1.0, 0.0, 0.0)))), mix(vec2(_GLF_FUZZED(-8356.4120), _GLF_FUZZED(0.7)), vec2((vec2(mat2x3(vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 0, (1 & 1)))) : _GLF_FUZZED(-8851)))]))))), _GLF_IDENTITY(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) * (1.0)), 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), 1.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))))), 0.0))).y)), false, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
