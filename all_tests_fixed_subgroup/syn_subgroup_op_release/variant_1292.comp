#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size;
 uvec4 GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
  }
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((7312 + 23277))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), clamp(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))))))
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         continue;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch) / vec2(1.0, 1.0)), false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-728.218, 2.9)) : false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)))))).y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-3116.7941, 27.77), (vec2(-3116.7941, 27.77)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : injectionSwitch)).y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true && (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3116.7941, 27.77)) : injectionSwitch)).y) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))), true, true))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-454.101) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-454.101) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-454.101) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))) && true, ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true))))) || false)), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) || false)), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) && true) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6518.5508), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * (injectionSwitch.y))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true)))) || false)))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = subgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.x = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.x = GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.x;
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.x = GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.x;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = subgroup_size;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 91982)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       return;
      }
    }
  }
 else
  {
  }
 GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.w, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.w) >> 0u);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                }
               return;
               if(_GLF_DEAD(false))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))) && true)); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) | (0 | 0)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))))).x;
 GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.z = workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.z;
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y = workgroup_base;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false))) || false)))
        continue;
       do
        {
         GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), min((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), min((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, clamp(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, max(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy))) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, clamp(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, max(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy))) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), (true ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), clamp(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), uint(uint((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) >> 0u), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), 1u * (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) : _GLF_FUZZED(135366u))))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) * 1u)), uint(5u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), 1u * ((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), min((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, clamp(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) / 1u), GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))) | (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)).xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, uvec2(1u, 1u) * (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), _GLF_IDENTITY((true ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy) / uvec2(1u, 1u)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), clamp(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), ((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) >> 0u), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) : _GLF_FUZZED(135366u)), ((true ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy) / uvec2(1u, 1u)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), clamp(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), ((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) >> 0u), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) : _GLF_FUZZED(135366u))) + (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (5u) ^ 0u))))))), 0u | (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), 1u * ((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), min((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, clamp(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) / 1u), GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))) | (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)).xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, uvec2(1u, 1u) * (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), _GLF_IDENTITY((true ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy) / uvec2(1u, 1u)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), clamp(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), ((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) >> 0u), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) : _GLF_FUZZED(135366u)), ((true ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy) / uvec2(1u, 1u)).y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), clamp(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), ((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) >> 0u), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y), (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))))), max(~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y))), ~ (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)))))))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.xy.y)) : _GLF_FUZZED(135366u))) + (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (5u) ^ 0u))))))))))) | 0u);
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(16.21))) > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
                break;
              }
             else
              {
               return;
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = ((0 | int(_GLF_ONE(1.0, injectionSwitch.y))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y + GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.y = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, min(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)) + (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1), 1u), (false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) : uvec2((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)))).zw.y + 1), 1u)))), clamp(uint(_GLF_IDENTITY(uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1), 1u), (false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) : uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1), 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1), 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) : uvec2((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw, clamp(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw) | uvec2(0u, 0u)), GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw, GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw)).y + 1), 1u)), ((false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) : uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(53146) : 1))))), 1u))) + uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) >> uvec4(0u, 0u, 0u, 0u)).zw.y + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))) ? _GLF_FUZZED(59376) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) ^ 0)))) / 1)))) | (GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1))), 1u), (false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) : uvec2((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1, uint(uint(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1)))), 1u))))) >> 0u), uint(_GLF_IDENTITY(uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1), 1u), (false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) : uvec2((GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(1, max(1, 1))) / 1)), 1u))))))) % GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y);
 if(_GLF_DEAD(false))
  return;
 buf[GLF_merged4_0_1_11_1_1_11_2_1_12_3_1_14subgroup_idvirtual_gidworkgroup_idworkgroup_size.y] = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(63625) : _GLF_IDENTITY(1, clamp(1, 1, 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(-9517.4797)), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(-9517.4797)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(-9517.4797)))), vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) && true)))).y))))
    {
     do
      {
       return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(GLF_merged2_0_2_50_2_2_53GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.zw.y + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)))); _injected_loop_counter --)
      {
       do
        {
         subgroupAll(false);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5370.8002) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y)))) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(6.5)), _GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), (float(_GLF_ONE(1.0, injectionSwitch.y))) + 0.0), bool(true)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               do
                {
                 return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))) ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(false), true, true)))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     return;
                    }
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))));
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), (! (true && (_GLF_WRAPPED_IF_TRUE(true)))) || false)))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-0.4 - -692.723))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-726.467, 6.9, -5.2).p, _GLF_IDENTITY(float(mat2(vec3(-726.467, 6.9, -5.2).p, sqrt(1.0), 1.0, 1.0)), max(_GLF_IDENTITY(float(mat2(vec3(-726.467, 6.9, -5.2).p, sqrt(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(53.36)), float(float(mat2(vec3(-726.467, 6.9, -5.2).p, sqrt(1.0), 1.0, 1.0))), bool(true))), float(mat2(vec3(-726.467, 6.9, -5.2).p, sqrt(1.0), 1.0, 1.0))))))), float(mix(float(_GLF_FUZZED((-0.4 - -692.723))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(true, (true) || false))))) > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
              {
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(9.8))) > injectionSwitch.y))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), false, true, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))), false)))))))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, true && (true)), true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), false, false, false)))))))))))), false || ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), false, false, false))))))))))))))))))))
                break;
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) && true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     subgroupAll(true);
    }
  }
}
