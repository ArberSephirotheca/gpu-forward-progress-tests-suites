#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
              {
               return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-94911 & 0)); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(7), int(7))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1826.3469, -0.2)))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), 0 | ((~ (0))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              break;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(23.23) : injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(23.23) : injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(23.23) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(23.23) : injectionSwitch.x))), float(_GLF_FUZZED(5717.2117)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(23.23) : injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))), _GLF_IDENTITY(0u, 0u | (0u)) + ((workgroup_base + subgroup_id * subgroup_size))) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) | (uint((subgroup_local_id + 1)))), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (subgroup_local_id))) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (subgroup_local_id))) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (subgroup_local_id))) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size)))) | 0u) : _GLF_FUZZED(uvec4(11726u, 39468u, 172162u, 184364u)[1]))))) : _GLF_FUZZED(subgroup_id)))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / (0u ^ 1u)), 0u, 1u)) / uvec3(1u, 1u, 1u))))))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), min(uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (~ (uint((subgroup_local_id + 1))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u), uvec2(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))), 1u))))) : _GLF_FUZZED(subgroup_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (true ? _GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), _GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + 0u)), (~ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + 0u))) - 0u)))) + 1)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(_GLF_IDENTITY(mat3x2((injectionSwitch.x) - 0.0, sqrt(exp(0.0)), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat4x2(673.591, -7862.3387, 6.7, 309.522, -86.13, -2062.9250, -983.782, -7.6) * mat3x4(-71.19, 9.6, -7358.8518, -7.0, -7.8, 554.357, -9308.1831, -231.684, -3496.1083, 851.913, -445.202, 8074.9199))) : mat3x2((injectionSwitch.x) - 0.0, sqrt(exp(0.0)), 0.0, 0.0, 0.0, 1.0))))))), float(_GLF_FUZZED(5.1)), bool(false))) < injectionSwitch.y)) ? uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_local_id)), subgroup_local_id), min(min(_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_local_id)), subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_local_id)), subgroup_local_id)))), (subgroup_local_id) | (subgroup_local_id)))) + 1)) : _GLF_FUZZED(workgroup_size))))) : _GLF_FUZZED(subgroup_id))))))) % subgroup_size);
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1))) >> 0u), 0u | (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1))) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8058.5010)), float(0.0), bool(true))), 0.0))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8058.5010)), float(0.0), bool(true))), 0.0))) > injectionSwitch.y)))) || false))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bool(! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((ivec4(35185, -68876, 95648, -24585) >> ivec4(77414, 20328, -11348, 3295)).y & 0)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))))
          {
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8731.5042), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(785.063)), bvec2(true, false))).x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         break;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(1615.6340)), bvec2(false, false))).y)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), true)))))))) && true) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(96.90, -5.2, -22.42).p), _GLF_FUZZED(8.4)), bvec2(false, false))).y) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (true)) && true)), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(96.90, -5.2, -22.42).p), _GLF_FUZZED(8.4)), bvec2(false, false))).y) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (true)) && true)), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))))))))), false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), 1u * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) | (64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
          return;
         return;
        }
       return;
      }
     else
      {
      }
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     subgroupAll(true);
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
}
