#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(mat2(float(float(injectionSwitch.x)), 0.0, 0.0, 0.0), transpose(transpose(mat2(float(float(injectionSwitch.x)), 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(18521u)))) | (_GLF_FUZZED(subgroup_size))) : gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)))).x), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), ((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-30.29), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), bvec2(true, false))).y), (false ? _GLF_FUZZED(584.407) : _GLF_ONE(1.0, injectionSwitch.y)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1))))])))).y)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).y)) && true))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 1.0 * (injectionSwitch[1])))).y)) && true))), false, false, false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, length(0.0), 0.0, 0.0, 1.0, 1.0))))), injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, subgroup_id, subgroup_id)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packHalf2x16(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(86.92)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch))), min(packHalf2x16(injectionSwitch), _GLF_IDENTITY(packHalf2x16(injectionSwitch), max(packHalf2x16(injectionSwitch), packHalf2x16(injectionSwitch))))), (_GLF_IDENTITY(packHalf2x16(injectionSwitch), min(_GLF_IDENTITY(packHalf2x16(injectionSwitch), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (packHalf2x16(injectionSwitch))), _GLF_IDENTITY(packHalf2x16(injectionSwitch), max(packHalf2x16(injectionSwitch), packHalf2x16(injectionSwitch)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, _GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)) || false), true, false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))) || false))), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false))), false || (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)))))))))), false), true, true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) && true)) || false), true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bool(bool((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true) || false), true, false))))))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)))))), false), true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))) || false), _GLF_IDENTITY(true, ! (! (true))), false)))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.3, -4979.1093)) : injectionSwitch))) + vec2(0.0, 0.0)).y)) || ((false)))) || false, false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), false)))) || false)))), bool(bvec4(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), false)))) || false)))), false, true, false)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), false)))) || false)))), bool(bvec4(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false))))))), true), true, false))))))))))))) || _GLF_IDENTITY(false, false || (false)))))))) || false)), true, false)), false)))) || false)))), false, true, false))))) && true)))), false), true, true)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))))))))), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))) || false), true, false)), false || (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))) || false, (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))) || false) && true)), true, false)))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((! (false)))) || false, false || ((! (false)) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((! (false)))) || false, false || ((! (false)) || false))))))))) || false)), true, false)))))), false), true, true))))) && true)) && true)))) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false))) || false), ! (! (_GLF_IDENTITY(! ((false) || false), bool(bvec3(! ((false) || false), false, true))))))), ((! ((false) || false))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), (workgroup_id) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))), uint(6u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(162862u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(true, true && (true)) ? workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) >> 0u) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec4((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)) << 0u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u)) | (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u)))) ^ 0u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), 1u, 0u, 1u)), 1u * (uint(uvec4((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))), uint(6u)), 1u, 0u, 1u))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) : _GLF_IDENTITY(_GLF_FUZZED((11568u << atomicAnd(workgroup_size, workgroup_id))), (_GLF_FUZZED((11568u << atomicAnd(workgroup_size, workgroup_id)))) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))), true), false))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), (subgroup_id) << 0u) * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id, subgroup_local_id)), 0u, (1u | 1u)))) + 1), (subgroup_local_id + 1))) % subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(workgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(79154) : 1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) - _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true))))), bool(bvec4(bool(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true))))), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false)))) || false) || false, bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (! (false)))) || false)), (! (((_GLF_IDENTITY(false, ! (! (false)))) || false))) && true))) || false)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id))) | (subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(_GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), mix(vec2((max(vec2(1.0, 1.0), vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.6)), vec2(_GLF_FUZZED(19.07), (max(vec2(1.0, 1.0), vec2(1.0, 1.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0))).y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) >> 0)), 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
            barrier();
           break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false)))))) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool((false))))))))))))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           break;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      break;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))).x)), 0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))).x)), (true ? int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))).x)) : _GLF_FUZZED(_injected_loop_counter)))))))
      {
       case 19:
       vec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), false || (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))
        barrier();
       case 45:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
            continue;
           barrier();
          }
         break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(false))
        barrier();
       for(       mat3x2(5.0, 82.88, -4.2, -207.423, -3.6, 892.547);
 (_GLF_IDENTITY(_GLF_SWITCH_0_1v == _GLF_SWITCH_0_0v, (_GLF_SWITCH_0_1v == _GLF_SWITCH_0_0v) || false)); mat3x4(mat2(3164.4715, 6070.1383, -85.74, 3011.4977)))
        {
         if(_GLF_DEAD(false))
          continue;
         mat4x3(-4289.9163, 106.897, -8.5, 311.998, _GLF_IDENTITY(-2.8, (-2.8) - 0.0), -83.66, -472.904, -8.7, 3.0, -694.449, -4.7, -337.518);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         (mat3x4(5.1, 9.5, 2.6, 673.361, 69.07, -7.2, -24.46, -773.750, -5.0, _GLF_IDENTITY(8.1, mix(float(8.1), float(_GLF_FUZZED(-9.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -8114.8890, -889.195) + mat3x4(-28.70, -3325.6974, -89.10, 569.650, 5070.8646, _GLF_IDENTITY(8.6, _GLF_IDENTITY(float(mat2(8.6, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat2(8.6, 1.0, 0.0, 1.0)), max(float(mat2(8.6, 1.0, 0.0, 1.0)), float(mat2(8.6, 1.0, 0.0, 1.0))))) / 1.0)), 70.07, -7639.7151, -231.855, -65.23, _GLF_IDENTITY(7985.0124, max(_GLF_IDENTITY(7985.0124, (_GLF_IDENTITY(7985.0124, float(_GLF_IDENTITY(mat3x2(7985.0124, 1.0, 0.0, 0.0, 0.0, cos(0.0)), mat3x2(mat3x2(mat3x2(7985.0124, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))))) / _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0)))), _GLF_IDENTITY(7985.0124, float(mat4x3(7985.0124, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec3(0.0, 1.0, sqrt(0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))))), 9.1));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.6) : injectionSwitch.x)))) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
       case 0:
       case 38:
       case 15:
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       case 81:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(614.847)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.1))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.1))))))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.1))))))), false, true, true)))))))))
            continue;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter)) < (1 & 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) << 0))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-2.7, 637.415) / vec2(2.2, 8368.0529))) : injectionSwitch)).y))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))))))) && true))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
          return;
        }
       case 33:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       case 74:
       if(_GLF_DEAD(false))
        break;
       case 88:
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), ! (! (bool(bvec3(bool(false), true, false))))))), true, false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4(bool(bool(false)), true, false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(1.6))), 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(1.6))), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(1.6))), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0)), min(float(mat4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.x, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
             break;
            }
           continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-75.26))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((vec3(14.26, -4.4, 0.9) - 9721.6179).g)), bool(false))) > injectionSwitch.y)), true)), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), ! (! ((! _GLF_IDENTITY((true), ((true)) && true))))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           barrier();
          }
         atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))) - 0, (_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))) - 0) | 0)), 64, 4);
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6686.0744)), vec2(_GLF_FUZZED(-593.317), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat3x2(80.96, -656.565, -1806.7274, -7337.2568, 8055.0539, 186.580))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat3x2(80.96, -656.565, -1806.7274, -7337.2568, 8055.0539, 186.580))))), (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat3x2(80.96, -656.565, -1806.7274, -7337.2568, 8055.0539, 186.580)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat3x2(80.96, -656.565, -1806.7274, -7337.2568, 8055.0539, 186.580))))))))[1], (injectionSwitch)[1]), _GLF_IDENTITY(min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_0v) : injectionSwitch)))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(false, true))), injectionSwitch)).y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
        }
       case 28:
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(true);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       break;
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), 1))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), _GLF_IDENTITY(ivec3(0, 0, 0) ^ (ivec3(1, 0, 1)), (ivec3(0, 0, 0) ^ (ivec3(1, 0, 1))) | (ivec3(0, 0, 0) ^ (ivec3(1, 0, 1))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false || (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))))) || false))), (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false || (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1))))), (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(true && (_injected_loop_counter < 1), bool(bvec2(_GLF_IDENTITY(true && (_injected_loop_counter < 1), ! (! (true && (_injected_loop_counter < 1)))), false))))))) || false)))) || false)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))) / 1.0) : _GLF_FUZZED(4.4))) > injectionSwitch.y))))
          barrier();
        }
       case 54:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       ;
       default:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       1;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)))) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(847.025)), bool(false))) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(847.025)), bool(false))) < injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(847.025)), bool(false))) < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(-4934.0644)), bool(false))) < injectionSwitch.y)))) || false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))) || false)) && true))), true))))))
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_injected_loop_counter) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, 1 * (0))))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) ^ _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(_injected_loop_counter < 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)))) || false) || (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)))) || false) || (true)))), false || (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)))) || false) || (true)))))))) && true), true))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)), false || (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(_injected_loop_counter < 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true))) && true)), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(_injected_loop_counter < 1, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true))) && true))))), true, false)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), false, false)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))) || false)))))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))) / vec2(1.0, 1.0)).y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(152.280) : injectionSwitch.x))) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(4.4)), bool(false))))))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(152.280) : injectionSwitch.x))) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(4.4)), bool(false))))))))) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
  barrier();
}
