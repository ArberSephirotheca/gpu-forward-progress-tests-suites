#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), max(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), (true && (_GLF_IDENTITY(true, ! (! (true))))) && true)))), false, true))), false), true, true))))), false))), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), false))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false))))))), false, false), true)), false))), false))), true)))))))))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))) || false))), false, _GLF_IDENTITY(false, ! (! (false)))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), false, false), true)))))))), false))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, ! (! (false)))))), false, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(abs(6.4)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.4)), bool(false))))), 1.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(9476.8498, -7.7)))).x > injectionSwitch.y, true, false))), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))), injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), false || (! (false || (true))))))), false))), false, false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))), injectionSwitch.y)), (false ? _GLF_FUZZED(length(-3221.0667)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, abs(0.0), 0.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))), injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), false || (! (false || (true))))))), false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))), false))))))), true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (bool(false)) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) - vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch.y) - sqrt(0.0), clamp(_GLF_IDENTITY((injectionSwitch.y) - sqrt(0.0), mix(float((injectionSwitch.y) - sqrt(0.0)), float(_GLF_FUZZED(-9.4)), bool(false))), (injectionSwitch.y) - sqrt(0.0), (injectionSwitch.y) - sqrt(0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.8) : injectionSwitch.x)) < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))) && (false)))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(386.445), _GLF_FUZZED(-46.87)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 1u)), (uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size) >> 0u))) + subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) - (0u | 0u))), 1u))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))))) / _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-91466)), 0 | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-91466)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-91466)), min((true ? 1 : _GLF_FUZZED(-91466)), (true ? 1 : _GLF_FUZZED(-91466)))))))))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), min((1), (1))), 1), max(ivec2(_GLF_IDENTITY((1), min((1), (1))), 1), ivec2(_GLF_IDENTITY((1), min((1), (1))), 1))))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))), (1) / 1)))) << (180550u & 0u)))))) : _GLF_FUZZED(46852u)))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (_GLF_IDENTITY(180550u & 0u, (false ? _GLF_FUZZED(num_workgroup) : 180550u & 0u)))))))) : _GLF_FUZZED(46852u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))), min(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))), subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (180550u & 0u), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (180550u & 0u), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (180550u & 0u)) - 0u)) / 1u)))))) : _GLF_FUZZED(46852u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(packUnorm2x16(vec2(-9.4, 1.2))) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((1), int(ivec3((1), 0, 1))) / 1)) << (180550u & 0u)))))) : _GLF_FUZZED(46852u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))) : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(int(-496.473)) : (1))) / 1)) << (180550u & 0u)))))) : _GLF_FUZZED(46852u)))))))))) % subgroup_size)) + 0u), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))))) / _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-91466)), 0 | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-91466)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-91466)), min((true ? 1 : _GLF_FUZZED(-91466)), (true ? 1 : _GLF_FUZZED(-91466)))))))))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), min((1), (1))), 1), max(ivec2(_GLF_IDENTITY((1), min((1), (1))), 1), ivec2(_GLF_IDENTITY((1), min((1), (1))), 1))))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))), (1) / 1)))) << (180550u & 0u)))))) : _GLF_FUZZED(46852u)))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (_GLF_IDENTITY(180550u & 0u, (false ? _GLF_FUZZED(num_workgroup) : 180550u & 0u)))))))) : _GLF_FUZZED(46852u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))), min(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))), subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (180550u & 0u), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (180550u & 0u), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(1, _GLF_IDENTITY(1, (1) - 0))), (1) / 1)) << (180550u & 0u)) - 0u)) / 1u)))))) : _GLF_FUZZED(46852u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(packUnorm2x16(vec2(-9.4, 1.2))) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((1), int(ivec3((1), 0, 1))) / 1)) << (180550u & 0u)))))) : _GLF_FUZZED(46852u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91466)))))))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))) : _GLF_FUZZED(-91466)))))))))), (true ? ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(int(-496.473)) : (1))) / 1)) << (180550u & 0u)))))) : _GLF_FUZZED(46852u)))))))))) % subgroup_size)) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), true, false, false)))), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), (mat4x2(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(-5734.5504)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-822.715 * _GLF_IDENTITY(-3.4, (true ? -3.4 : _GLF_FUZZED(atan(7391.8729, -45.63)))))) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), (mat4x2(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-809.961), _GLF_FUZZED(-80.41)), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], 0.0, 0.0, abs(0.0)), (false ? _GLF_FUZZED(vec4(1.7, 538.664, 8613.4482, -5.4)) : vec4((injectionSwitch)[0], 0.0, 0.0, abs(0.0)))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-809.961), _GLF_FUZZED(-80.41)), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], 0.0, 0.0, abs(0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(1.7, 538.664, 8613.4482, -5.4), (vec4(1.7, 538.664, 8613.4482, -5.4)) / vec4(1.0, 1.0, 1.0, 1.0))) : vec4((injectionSwitch)[0], 0.0, 0.0, abs(0.0)))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))).y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, max(4, 4)))), min(int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4))), (false ? _GLF_FUZZED(17149) : int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4)))))), int(int(_GLF_IDENTITY(4, max(4, 4)))))), 1 * (int(int(4))))))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, max(4, 4)))), min(int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4)))), int(int(_GLF_IDENTITY(4, max(4, 4)))))), 1 * (int(int(4)))))))), (0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, max(4, 4)))), min(int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4)))), int(int(_GLF_IDENTITY(4, max(4, 4)))))), 1 * (int(int(4))))))))) + 0)), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 + (4)), 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), exp(0.0), 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), exp(0.0), 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), exp(0.0), 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), exp(0.0), 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), exp(0.0), 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), exp(0.0), 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8735.1918)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sin(length(vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) / 1.0)), 0.0))) + (injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-10.29, -7673.4092, -3.2, -5.6, -6064.8293, -885.877, -20.82, 8.6, -69.71, -9.8, -3523.9798, -2895.6596, -2.5, -1.7, 56.55, -88.53)) : mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))), (true ? vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-10.29, -7673.4092, -3.2, -5.6, -6064.8293, -885.877, -20.82, 8.6, -69.71, -9.8, -3523.9798, -2895.6596, -2.5, -1.7, 56.55, -88.53)) : mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-10.29, -7673.4092, -3.2, -5.6, -6064.8293, -885.877, -20.82, 8.6, -69.71, -9.8, -3523.9798, -2895.6596, -2.5, -1.7, 56.55, -88.53)) : mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))), (true ? vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-10.29, -7673.4092, -3.2, -5.6, -6064.8293, -885.877, -20.82, 8.6, -69.71, -9.8, -3523.9798, -2895.6596, -2.5, -1.7, 56.55, -88.53)) : mat4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 0.0, 1.0))) > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), false, true, false))))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), true && (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(false, (false) && true), true, false))))))))))) || false)), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec4(! (false), false, true, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), true && (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(false, (false) && true), true, false))))))))))) || false)))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)) : _GLF_FUZZED(vec2(47.93, -378.232)))))), vec2(mat4x3(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)) : _GLF_FUZZED(vec2(47.93, -378.232)))))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))).y)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), true, true, true)), bool(bool(bool(bvec4((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), true, true, true)))))), true, false))))) || false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, clamp((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mat3(1.0) * (vec3(0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mat3(1.0) * (vec3(0.0, 1.0, 1.0))))) * 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 1.0, 0.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x3(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, sqrt(1.0), 1.0, 1.0))), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0)))) + 0.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), true && (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(false, (false) && true), true, false))))))))))) || false)), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec4(! (false), false, true, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), true && (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(false, (false) && true), true, false))))))))))) || false)))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)) : _GLF_FUZZED(vec2(47.93, -378.232)))))), vec2(mat4x3(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)) : _GLF_FUZZED(vec2(47.93, -378.232)))))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))).y)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), true, true, true)), bool(bool(bool(bvec4((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), true, true, true)))))), true, false))))) || false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, clamp((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mat3(1.0) * (vec3(0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mat3(1.0) * (vec3(0.0, 1.0, 1.0))))) * 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 1.0, 0.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x3(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, sqrt(1.0), 1.0, 1.0))), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0)))) + 0.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), true))), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && true)), true, true, true))) && (false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), false, false))))))))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), false, false))))))))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))), false))))) || false)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-813.477)), float((injectionSwitch.y) + 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3123.8340)), float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), bool(true))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), false, false, false))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), false || (bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))))))), true, false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false, false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, false)), true && (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, false)))), false || (_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), false || (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))), true, true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30595) : _GLF_IDENTITY(2, (2) ^ 0)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-489.695)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.7) : injectionSwitch.y))), bool(true)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))) && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true))))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(1.0))), exp(0.0), length(vec3(0.0, 0.0, 0.0)))), min(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(1.0))), exp(0.0), length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(1.0))), exp(0.0), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat4(4.7, -55.04, 8.7, 8.4, 446.727, 1.3, -717.249, -0.3, 20.59, -8126.3897, 9.0, -8.8, -4.5, 7.0, 8371.6356, -56.13))))))))), (vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(1.0))), exp(0.0), length(vec3(0.0, 0.0, 0.0))))) / vec2(1.0, 1.0))))).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), vec4(mat2x3(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) && true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
}
