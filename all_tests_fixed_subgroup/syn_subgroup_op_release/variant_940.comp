#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 57:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 5:
         do
          {
           bvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
           ;
          }
         while(true);
         case 36:
         greaterThanEqual(vec3(979.338, 873.823, 44.07), vec3(83.66, -3.0, 164.049));
         case 0:
         case 35:
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 27:
         case 60:
         barrier();
         break;
         case 75:
         if(true)
          {
          }
         else
          {
           mat4x2(-2450.0990, -8088.7360, -3.7, -40.32, 9.3, -136.670, 4.7, 8.4);
           (-17.51 / mat2x3(mat3x4(3640.8392, 57.28, 65.21, 3.0, 630.445, -744.803, -7934.1981, _GLF_IDENTITY(-914.189, (-914.189) / _GLF_ONE(1.0, injectionSwitch.y)), 459.074, 899.001, -5896.0424, -1.7)));
           ;
           ;
           inversesqrt(vec4(-6.7, -49.11, -5.8, -3.6));
           vec4(0.3, -24.60, 2.5, -79.28);
           bool _GLF_SWITCH_4_2v[61];
           ivec2 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
          }
         case 24:
         mat3x2(mat4(-7.2, -7241.6602, 94.86, 32.11, -34.88, -371.775, 7273.7287, -7.7, -0.8, 18.57, -224.313, -7.2, 12.05, 553.247, -83.25, -9.5));
         default:
         1;
        }
      }
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     case 36:
     case 9:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(false);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))
      barrier();
     case 11:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 92:
     if(true)
      {
       if(_GLF_DEAD(false))
        return;
       switch(_GLF_SWITCH(0))
        {
         case 42:
         {
          (ivec4(-34005, 4192, 14069, 25039) | -12546);
          mat3x4 _GLF_SWITCH_3_0v[20], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
          ;
          mat4 _GLF_SWITCH_3_3v[6], _GLF_SWITCH_3_4v[51], _GLF_SWITCH_3_5v;
         }
         if(_GLF_DEAD(false))
          return;
         case 25:
         do
          {
           notEqual(ivec2(29979, 42549), ivec2(15009, 37430));
           mat4 _GLF_SWITCH_3_6v;
           mat2x3 _GLF_SWITCH_3_7v[77], _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v[23];
          }
         while(((virtual_gid * 134272u) != next_virtual_gid));
         case 0:
         for(         (+ mat2x3(3802.4614, -0.0, _GLF_IDENTITY(_GLF_IDENTITY(-25.18, clamp(-25.18, -25.18, -25.18)), min(-25.18, -25.18)), 8.6, -4.8, 138.412));
 true; mat2x3(75.30, -5.1, 2865.0794, 34.29, 7.0, 9.2))
          {
           ivec2(30324, -31797);
           if(true)
            {
             mat3x2(-7.4, 666.731, -1.1, 45.94, -99.82, -0.3);
            }
           else
            {
             switch(_GLF_SWITCH((((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(8), int(8)))))
              {
               case 69:
               mat3x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
               case 2:
               equal(uvec3(30638u, 117719u, 31831u), uvec3(144992u, 167042u, 5846u)).zyx;
               case 0:
               case 77:
               case 75:
               case 48:
               case 22:
               case 32:
               case 25:
               case 71:
               case 54:
               case 72:
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                barrier();
               break;
               case 19:
               ivec2 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[9];
               case 93:
               mat2(88.02, -69.94, 3005.6925, -2191.9260);
               default:
               1;
              }
            }
           notEqual(bvec4(true, false, true, false), bvec4(true, true, true, true));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           {
            ;
            uvec4(129089u, 140423u, 108306u, 54600u);
            uvec4(181349u, _GLF_IDENTITY(185061u, max(185061u, 185061u)), 134702u, 24950u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            ;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            do
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  barrier();
                 }
                continue;
               }
              mat4x2(-8.2, -38.31, -2.1, -57.75, -13.85, 8.0, -856.304, -2.0);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 58:
                  ;
                  case 67:
                  transpose(mat2x4(-86.46, 5852.6458, 0.1, 109.006, -40.46, -739.784, 4.7, 2.8));
                  case 0:
                  case 47:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 64:
                  case 42:
                  case 57:
                  continue;
                  case 56:
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  if(_GLF_DEAD(false))
                   continue;
                  case 51:
                  mat4(98.56, 6832.3930, -95.01, 531.393, -92.45, -807.237, 91.44, -96.36, -390.115, -82.70, 5.0, -6.9, -2738.6309, 299.864, -742.298, -19.93);
                  default:
                  1;
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))))))))))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
               break;
              if(_GLF_DEAD(false))
               break;
              continue;
             }
            if(_GLF_DEAD(false))
             {
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, abs(0.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5644.6112)), float(1.0), bool(true))), 1.0)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, abs(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))
                 barrier();
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               continue;
             }
            (mat2x4(4.7, -8686.1144, 2.5, -7.3, 8.2, 792.746, 4745.8465, 3591.2966) , mat3x4(-7422.0976, -232.796, 73.80, -3.0, -10.92, -787.854, _GLF_IDENTITY(-3.3, clamp(-3.3, -3.3, -3.3)), 7499.2980, 72.79, 0.0, _GLF_IDENTITY(-248.545, (_GLF_IDENTITY(-248.545, 1.0 * (-248.545))) / 1.0), 8555.0124));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              barrier();
             }
           }
           ;
          }
         case 73:
         case 89:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = (0 & 4295); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 36:
             case 30:
             case 76:
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             case 1:
             do
              {
               vec2 _GLF_SWITCH_0_0v[82];
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               vec4 _GLF_SWITCH_0_1v[51];
               uvec2 _GLF_SWITCH_0_2v;
               if(_GLF_DEAD(false))
                continue;
               lessThanEqual(ivec4(14527, -22099, 41028, 53206), (ivec4(-1312, ivec2(88106, 82316), 82976) ^ -72274));
               if(false)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (false))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    return;
                   barrier();
                  }
                 mat2x4 _GLF_SWITCH_0_3v[90], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                 do
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 0:
                     if(_GLF_DEAD(false))
                      break;
                     case 26:
                     case 28:
                     case 35:
                     case 53:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       barrier();
                      }
                     (ivec3(-69899, 17937, -78546) + ivec3(-29047, -93142, _GLF_IDENTITY(-63844, (1 & 1) * (-63844))));
                     break;
                     default:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                     1;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                }
               else
                {
                 ivec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                 (uvec2(164990u, 164057u) ^ _GLF_SWITCH_0_2v);
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
                    barrier();
                   return;
                  }
                 _GLF_IDENTITY((mat4x3(-0.7, 13.99, 461.761, 9758.5730, -2.8, -7633.4731, -6189.6188, 3949.2325, 82.89, -3.7, -5.1, 30.75) * mat3x4(_GLF_IDENTITY(192.318, min(192.318, 192.318)), 9.9, -0.2, 89.46, 71.89, _GLF_IDENTITY(2512.8541, mix(float(_GLF_FUZZED(vec3(-150.073, 54.51, 17.76).s)), float(2512.8541), bool(true))), -2.6, 9.8, 6.3, _GLF_IDENTITY(-776.475, mix(float(-776.475), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_FUZZED(1.1)) / 1.0)), bool(false))), 925.752, -750.648)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(mat4x3(-0.7, 13.99, 461.761, 9758.5730, -2.8, -7633.4731, -6189.6188, 3949.2325, 82.89, -3.7, -5.1, 30.75) * mat3x4(192.318, 9.9, -0.2, 89.46, 71.89, _GLF_IDENTITY(2512.8541, mix(float(_GLF_FUZZED(vec3(-150.073, 54.51, 17.76).s)), float(2512.8541), bool(true))), -2.6, 9.8, 6.3, _GLF_IDENTITY(-776.475, mix(float(-776.475), float(_GLF_FUZZED(1.1)), bool(false))), 925.752, -750.648), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(-0.7, 13.99, 461.761, 9758.5730, -2.8, -7633.4731, -6189.6188, 3949.2325, 82.89, -3.7, -5.1, 30.75) * mat3x4(192.318, 9.9, -0.2, 89.46, 71.89, _GLF_IDENTITY(2512.8541, mix(float(_GLF_FUZZED(vec3(-150.073, 54.51, 17.76).s)), float(2512.8541), bool(true))), -2.6, 9.8, 6.3, _GLF_IDENTITY(-776.475, mix(float(-776.475), float(_GLF_FUZZED(1.1)), bool(false))), 925.752, -750.648)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (mat4x3(-0.7, 13.99, 461.761, 9758.5730, -2.8, -7633.4731, -6189.6188, 3949.2325, 82.89, -3.7, -5.1, 30.75) * mat3x4(192.318, 9.9, -0.2, 89.46, 71.89, _GLF_IDENTITY(2512.8541, mix(float(_GLF_FUZZED(vec3(-150.073, 54.51, 17.76).s)), float(2512.8541), bool(true))), -2.6, 9.8, 6.3, _GLF_IDENTITY(-776.475, mix(float(-776.475), float(_GLF_FUZZED(1.1)), bool(false))), 925.752, -750.648)) : _GLF_FUZZED((-596.267 + mat3(349.291, 9237.5694, 1.6, -4.1, 3.0, 6560.4087, 1.7, 909.376, 7440.2661))))) : _GLF_FUZZED(mat3(-61.12, -5.7, -7419.8824, 9.9, 5.9, -1.6, -5.8, -44.81, 3.6))));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))))
                    {
                     case 39:
                     mat3 _GLF_SWITCH_4_0v;
                     case 0:
                     case 88:
                     case 7:
                     case 75:
                     case 91:
                     case 19:
                     case 28:
                     mat2x4(-55.99, -9.2, 9517.9588, 3739.5618, 3.3, 3.5, -8.1, -89.01);
                     break;
                     case 65:
                     uvec3 _GLF_SWITCH_4_1v;
                     default:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     1;
                    }
                  }
                 else
                  {
                  }
                 bvec3(true, false, false);
                 mat3x4(-6.9, -605.174, 1.3, 0.9, -0.4, 48.60, 9.5, -1.6, -5.3, -5168.5947, -2.8, 1.4);
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   (26.67 + (mat2(532.754, -581.764, 5.0, 5131.9066) / mat2(-19.80, _GLF_IDENTITY(-3136.6992, min(-3136.6992, -3136.6992)), 62.46, -687.229)));
                  }
                 else
                  {
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), true))))))
                  continue;
                 mat3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             case 51:
             case 6:
             case 27:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(335.082)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
          return;
         case 39:
         uvec2 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
         if(_GLF_DEAD(false))
          return;
         case 96:
         case 70:
         if(_GLF_DEAD(false))
          return;
         ivec3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[90], _GLF_SWITCH_0_15v;
         case 32:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         default:
         1;
        }
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) && true)))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         case 47:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           while(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             switch(_GLF_SWITCH(0))
              {
               case 9:
               vec4(-489.963, _GLF_IDENTITY(246.905, clamp(246.905, 246.905, _GLF_IDENTITY(246.905, max(246.905, 246.905)))), -616.535, 884.537);
               if(_GLF_DEAD(false))
                barrier();
               case 97:
               mat2(167.864, 8.3, 6777.6564, -5.2);
               case 0:
               case 7:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               case 54:
               case 89:
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 34:
                  ;
                  case 96:
                  notEqual(uvec4(48521u, 110499u, 145640u, 59713u), uvec4(29782u, 159041u, 52253u, 11991u));
                  case 0:
                  case 94:
                  case 79:
                  case 19:
                  case 23:
                  case 86:
                  case 29:
                  case 22:
                  case 87:
                  case 37:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  break;
                  default:
                  1;
                 }
               }
               break;
               if(_GLF_DEAD(false))
                barrier();
               default:
               if(_GLF_DEAD(false))
                return;
               do
                {
                 1;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         case 59:
         if(_GLF_DEAD(false))
          barrier();
         {
          float _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[20], _GLF_SWITCH_0_18v;
          for(          uvec3(138509u, 106321u, 65287u);
 false; (_GLF_IDENTITY(83457, max(83457, 83457)) & ivec2(-82780, 74245)))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x), float(_GLF_FUZZED(8.5)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0)))).y))))
             barrier();
           }
          for(int _injected_loop_counter = ((1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) | int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            -5154.1248;
            if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
             barrier();
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) && true))))
           return;
          if(_GLF_DEAD(false))
           return;
          (mat4(-2.6, -113.112, 9.6, -144.153, -5728.5521, _GLF_IDENTITY(-802.720, mix(float(_GLF_FUZZED(vec3(0.4, -411.529, 5.3).y)), float(_GLF_IDENTITY(-802.720, mix(float(-802.720), float(_GLF_FUZZED(-9.8)), bool(false)))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), 4857.2180, 36.54, 3833.0393, 10.09, 5.9, 1.1, 3.8, -4.1, 7810.8138, _GLF_IDENTITY(-2.9, mix(float(_GLF_IDENTITY(-2.9, min(-2.9, -2.9))), float(_GLF_FUZZED(6845.1717)), bool(false)))) / (ivec4(99599, 80951, -56258, 70347) , mat4(_GLF_IDENTITY(44.48, 1.0 * (44.48)), -0.4, _GLF_IDENTITY(9.1, clamp(9.1, 9.1, _GLF_IDENTITY(9.1, 1.0 * (9.1)))), 33.50, 541.829, 651.860, _GLF_IDENTITY(5.7, min(5.7, _GLF_IDENTITY(_GLF_IDENTITY(5.7, max(5.7, 5.7)), max(5.7, 5.7)))), -6.1, -51.25, 0.8, -5.6, 1.4, 9715.0983, -9.4, _GLF_IDENTITY(-7.3, _GLF_IDENTITY(clamp(-7.3, -7.3, -7.3), clamp(clamp(-7.3, -7.3, -7.3), _GLF_IDENTITY(clamp(-7.3, -7.3, -7.3), max(_GLF_IDENTITY(clamp(-7.3, -7.3, -7.3), clamp(clamp(-7.3, -7.3, -7.3), clamp(-7.3, -7.3, -7.3), clamp(-7.3, -7.3, -7.3))), clamp(-7.3, -7.3, -7.3))), _GLF_IDENTITY(clamp(-7.3, -7.3, -7.3), (false ? _GLF_FUZZED(_GLF_SWITCH_0_18v) : clamp(-7.3, -7.3, -7.3)))))), -8522.9500)));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
           barrier();
          uvec4(19264u, 163454u, 71004u, 88943u).ggrg;
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          mat3 _GLF_SWITCH_0_19v[7], _GLF_SWITCH_0_20v;
          vec2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
         }
         {
          uvec2 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          do
           {
            bvec4(true, true, false, true).grb;
           }
          while(_GLF_WRAPPED_LOOP(false));
          mat2x4(mat4x2(-7.1, 93.95, 41.59, -252.838, 2.8, -15.05, 1.9, 329.151));
          while(true)
           {
            mat3x4(8629.7662, 52.30, 6857.7860, 479.206, 7391.9979, -970.937, 6.9, -51.22, 6.5, _GLF_IDENTITY(_GLF_IDENTITY(-84.31, mix(float(_GLF_FUZZED(119.163)), float(-84.31), bool(true))), (-84.31) * 1.0), -2.6, -8.1);
            do
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
               break;
             }
            while(_GLF_WRAPPED_LOOP(false));
            uvec4 _GLF_SWITCH_0_25v[69];
            uvec4(79446u, 72479u, 105206u, 99869u);
            do
             {
              ;
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
             return;
            if(_GLF_DEAD(false))
             break;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, true && (false)))) && true))))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 44:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4))), bool(bool(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           uvec3(73546u, 121904u, 185538u);
          }
         if(_GLF_DEAD(false))
          return;
         break;
         case 75:
         atomicCompSwap(workgroup_size, workgroup_size, 31484u);
         case 58:
         (false ? (mat4x3(422.660, -0.1, _GLF_IDENTITY(1.2, (_GLF_IDENTITY(1.2, min(1.2, 1.2))) - 0.0), -465.236, -7.7, 1.6, -8911.5006, -5.0, 944.869, -7.3, 53.08, 7305.5118) + 1662.0180) : (mat4x3(0.7, 677.401, 6.3, -60.57, 80.21, 769.239, 2.4, 7.7, 8401.9999, -620.403, 71.48, 2.6) + mat4x3(-6.2, -9.9, 0.4, -62.36, 1.5, 4363.7817, 6.2, -85.74, -1.8, 4.1, 549.419, 97.90)));
         default:
         1;
        }
      }
     case 46:
     (mat3(-7973.4179, -3.5, 3147.4557, 8064.8102, 487.711, -572.965, -7.7, -22.20, _GLF_IDENTITY(9919.7406, (true ? _GLF_IDENTITY(9919.7406, clamp(9919.7406, 9919.7406, 9919.7406)) : _GLF_FUZZED(-39.87)))) + 0.1);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     default:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))) && true))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH((0 | 0)))
        {
         case 60:
         mat4x3(-5.3, -8752.5587, 69.49, -542.972, 7347.9083, -169.798, -6.5, -85.60, -2.5, -711.486, -93.80, 372.739);
         case 0:
         if(_GLF_DEAD(false))
          continue;
         case 27:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))))))
          return;
         break;
         case 58:
         false;
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))
    {
     case 0:
     case 84:
     case 88:
     case 2:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 77:
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     switch(_GLF_SWITCH(_GLF_IDENTITY((int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, max((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, ((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0) * 1.0))))), injectionSwitch.x)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))), ((int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, _GLF_IDENTITY(max((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, ((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0) * 1.0)), (max((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0, ((float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) - 0.0) * 1.0))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), injectionSwitch.x)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))
      {
       case 91:
       {
        if(_GLF_DEAD(false))
         return;
        (mat2(13.82, 0.7, -603.014, 27.08) / mat2(54.90, -0.9, -9.7, 9.9));
        if(_GLF_DEAD(false))
         return;
        for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, ~ (~ (0)))))); _injected_loop_counter ++)
         {
          switch(_GLF_SWITCH((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, (0 & 39525) | (6)))) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ~ (~ ((0 << _GLF_IDENTITY(int(1), int(1)))))))), (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> (0 << _GLF_IDENTITY(int(1), int(1)))))) ^ 0)) | (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> (0 << _GLF_IDENTITY(int(1), int(1))))))))))
           {
            case 0:
            case 46:
            case 65:
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
             barrier();
            case 21:
            case 75:
            case 9:
            ;
            break;
            case 97:
            ivec4 _GLF_SWITCH_3_0v[88];
            default:
            1;
           }
         }
        {
         switch(_GLF_SWITCH(0))
          {
           case 13:
           if(_GLF_DEAD(false))
            return;
           ivec2(17938, -20042);
           case 0:
           case 52:
           if(_GLF_DEAD(false))
            barrier();
           case 90:
           case 40:
           case 61:
           case 35:
           if(_GLF_DEAD(false))
            barrier();
           case 48:
           case 4:
           case 59:
           switch(_GLF_SWITCH(0))
            {
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             max(ivec2(6238, -80423), _GLF_IDENTITY(ivec2(48009, -36629), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(ivec2(48009, -36629), _GLF_IDENTITY(ivec2(ivec3(ivec2(48009, -36629), 0)), (_GLF_IDENTITY(ivec2(ivec3(ivec2(48009, -36629), 0)), ~ (~ (ivec2(ivec3(ivec2(48009, -36629), 0)))))) - (ivec2(1, 1) ^ ivec2(1, 1)))))));
             case 74:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(mat2 _GLF_SWITCH_1_0v; _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))); ivec3(9003, 58995, -29027))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.6, 2.6)) : injectionSwitch)).x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
                  return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 35:
                   case 87:
                   case 65:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)))))))
                      {
                       case 25:
                       _GLF_IDENTITY(uvec3(194851u, 92440u, 34407u), clamp(_GLF_IDENTITY(uvec3(194851u, 92440u, 34407u), (uvec3(194851u, 92440u, 34407u)) << uvec3(0u, 0u, 0u)), uvec3(194851u, 92440u, 34407u), uvec3(194851u, 92440u, 34407u)));
                       case 10:
                       uvec3(106132u, 43101u, 44328u);
                       case 0:
                       case 2:
                       if(_GLF_DEAD(false))
                        break;
                       case 72:
                       case 11:
                       case 80:
                       case 42:
                       case 24:
                       case 93:
                       case 4:
                       case 79:
                       barrier();
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                       default:
                       1;
                      }
                    }
                   break;
                   case 10:
                   mat2 _GLF_SWITCH_4_0v;
                   case 82:
                   mat4x3 _GLF_SWITCH_4_1v;
                   default:
                   1;
                  }
                }
               mat3x2(-5.6, 1.4, 12.85, -3.9, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0);
              }
             if(_GLF_DEAD(false))
              barrier();
             case 1:
             do
              {
               findLSB(virtual_gid);
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 for(mat2 _GLF_SWITCH_1_1v[82], _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v; true; mat3x4(-363.320, 1.3, -12.40, 3.4, -6.4, _GLF_IDENTITY(_GLF_IDENTITY(-71.37, _GLF_ZERO(0.0, injectionSwitch.x) + (-71.37)), clamp(_GLF_IDENTITY(-71.37, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (-71.37)), _GLF_IDENTITY(-71.37, _GLF_ZERO(0.0, injectionSwitch.x) + (-71.37)), _GLF_IDENTITY(-71.37, _GLF_ZERO(0.0, injectionSwitch.x) + (-71.37)))), 3.8, 6.4, _GLF_IDENTITY(-842.415, max(-842.415, -842.415)), 6.5, -9851.9497, 67.83))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3x4(injectionSwitch, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))).y)), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x < injectionSwitch.y)))))))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         barrier();
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   mat2x3(mat4x2(-43.37, -71.27, -1.1, -79.80, 0.5, 272.212, -0.6, -2.3));
                   (-35812 - ivec4(36523, -85105, -6120, 59912));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   next_virtual_gid;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3x2(_GLF_IDENTITY(-8682.5895, (-8682.5895) / 1.0), 3.5, _GLF_IDENTITY(-5.1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0)), min(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? -5.1 : _GLF_FUZZED(5.9))), _GLF_IDENTITY(134.500, 0.0 + (134.500)), 47.42, 2.1);
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     ;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5008.2663) : injectionSwitch.y))))))));
                  }
                }
              }
             break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))), true && (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))))))))
              barrier();
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 67:
           (mat2(2401.4403, -8455.2534, -9.4, 47.68) / mat2(-733.742, 1.4, -5.4, 7.3));
           default:
           1;
          }
        }
        if(_GLF_DEAD(false))
         barrier();
        for(        mat2x4(-1.3, -1.9, 6527.3249, _GLF_IDENTITY(-9397.0660, (_GLF_IDENTITY(-9397.0660, min(-9397.0660, -9397.0660))) - sin(0.0)), -2303.5753, -1267.0163, -969.490, 32.91);
 false; mat3x4(4.5, _GLF_IDENTITY(2.9, (true ? _GLF_IDENTITY(2.9, mix(float(_GLF_FUZZED(6658.3158)), float(_GLF_IDENTITY(_GLF_IDENTITY(2.9, min(2.9, _GLF_IDENTITY(2.9, max(_GLF_IDENTITY(2.9, mix(float(2.9), float(_GLF_FUZZED(3104.6953)), bool(false))), 2.9)))), clamp(2.9, 2.9, 2.9))), bool(true))) : _GLF_FUZZED(0.1))), 3.3, -522.352, -909.618, 8.0, -579.136, _GLF_IDENTITY(92.40, (_GLF_IDENTITY(92.40, (92.40) / 1.0)) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 27.13, _GLF_IDENTITY(-873.600, (_GLF_IDENTITY(-873.600, clamp(-873.600, _GLF_IDENTITY(-873.600, (false ? _GLF_FUZZED(42.16) : -873.600)), -873.600))) / 1.0), -48.24, 58.74))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              return;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))))
             barrier();
            break;
           }
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          vec4 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           break;
         }
        if(_GLF_DEAD(false))
         barrier();
       }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
            {
             case 0:
             case 72:
             if(_GLF_DEAD(false))
              return;
             case 4:
             if(_GLF_DEAD(false))
              barrier();
             case 17:
             case 47:
             barrier();
             break;
             case 60:
             mat2(74.72, -6.0, -839.552, 93.99);
             case 82:
             ivec2(-20336, _GLF_IDENTITY(81469, (81469) + 0));
             default:
             1;
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)))))))))))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
        }
       case 10:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       case 81:
       subgroupAll(true);
       break;
       case 76:
       for(       -3.4;
 false; mat2x3(mat2x4(28.03, 9.8, 9.7, _GLF_IDENTITY(-6165.4305, max(-6165.4305, -6165.4305)), 37.17, -3.1, -7.2, 3.5)))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             mat3x4(-5.9, 128.341, -777.950, 3952.0910, -110.329, 9.8, 788.146, 9290.8074, -3786.2567, -791.264, 72.79, 1725.2767);
            }
          }
         bvec3 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v[11];
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       default:
       if(_GLF_DEAD(false))
        barrier();
       1;
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(4.5)), bvec2(false, false))).y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     break;
     case 72:
     do
      {
       switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)))
        {
         case 37:
         bool(662.354);
         case 0:
         case 98:
         case 6:
         case 41:
         case 15:
         case 12:
         case 93:
         case 28:
         mat3x2(-71.02, -8606.9088, 511.297, 84.07, 7.5, -535.591);
         break;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     case 19:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(     _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))), max((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))))));
 (mat4x2(8958.0217, 5.6, 3540.2272, 172.006, 25.83, 646.859, _GLF_IDENTITY(37.99, min(_GLF_IDENTITY(37.99, clamp(37.99, 37.99, 37.99)), _GLF_IDENTITY(37.99, min(37.99, 37.99)))), -4.8) == mat4x2(7342.0578, 17.72, 509.369, -16.35, -5521.2906, -0.6, -2116.0726, _GLF_IDENTITY(-286.951, mix(float(_GLF_FUZZED(41.82)), float(-286.951), bool(true))))); (mat3x2(-0.5, -17.22, -5.2, 60.73, 27.57, -171.396) / (- 11.97)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        break;
       for(       (+ mat2x3(338.247, -96.15, -427.559, -6907.6043, 2.9, 1762.1994));
 isnan(25.88); mat3(803.176, 7687.5786, 353.007, 18.44, 321.192, 60.06, 78.53, 5406.3408, 661.102))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           switch(_GLF_SWITCH(0))
            {
             case 29:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              continue;
             ;
             case 0:
             case 83:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             case 98:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             case 45:
             for(             ivec3(_GLF_IDENTITY(-13108, clamp(-13108, -13108, -13108)), 65699, 54871);
 true; ceil(vec3(95.71, _GLF_IDENTITY(9303.4575, min(9303.4575, 9303.4575)), 6.0)))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 5:
                     if(_GLF_DEAD(false))
                      break;
                     uvec2 _GLF_SWITCH_3_0v[5];
                     case 48:
                     mat4x2(_GLF_IDENTITY(102.113, float(_GLF_IDENTITY(mat4x2(102.113, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0, abs(1.0), 0.0), mat4x2(mat4x3(mat4x2(102.113, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0, abs(1.0), 0.0)))))), 75.01, -412.554, -2965.1226, -807.257, -5.6, 5.4, -52.29);
                     case 0:
                     case 50:
                     case 57:
                     case 34:
                     barrier();
                     break;
                     case 31:
                     ivec4(18302, 62040, -11441, -80253);
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))), false)))))
                barrier();
               mat3x4 _GLF_SWITCH_2_0v[56], _GLF_SWITCH_2_1v;
               if(_GLF_DEAD(false))
                barrier();
               ivec3 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[19], _GLF_SWITCH_2_4v;
               _GLF_IDENTITY(mat4(-9.9, 594.287, 473.146, -322.433, 1068.3438, 8.8, 580.609, -421.501, -7696.6931, -5.9, 755.130, 36.50, -5.0, -4022.7548, 0.4, 3.2), (true ? mat4(_GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, (_GLF_IDENTITY(-9.9, (-9.9) * 1.0)) * 1.0), -9.9)), 594.287, 473.146, -322.433, 1068.3438, 8.8, 580.609, -421.501, -7696.6931, -5.9, 755.130, 36.50, -5.0, -4022.7548, 0.4, 3.2) : _GLF_FUZZED(mat4(mat4x2(5.6, 3.2, -65.71, -7.9, -808.769, -235.446, 5249.6765, -7.4)))));
               (workgroup_id + uvec2(199261u, 73405u));
               uvec3(uvec4(100496u, _GLF_IDENTITY(24655u, uint(uvec3(24655u, 1u, 1u))), 26100u, 97086u));
               (mat2x3((mat4x2(-6.9, 4.0, 49.29, 7.5, -868.904, -2.3, -5.4, 248.227) - mat4x2(-1610.8246, -5722.8843, 81.89, 0.5, _GLF_IDENTITY(67.05, (true ? _GLF_IDENTITY(67.05, _GLF_IDENTITY((67.05) / 1.0, clamp(_GLF_IDENTITY((67.05) / 1.0, max((67.05) / 1.0, (67.05) / 1.0)), _GLF_IDENTITY((67.05) / 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + ((67.05) / 1.0)), (67.05) / 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8.8, (_GLF_IDENTITY(-8.8, float(vec2(-8.8, 0.0)))) + tan(0.0))))), -179.444, 37.78, -85.71))) * mat3x2(-3910.2731, 260.209, -5.2, -0.8, 5316.3367, 37.44));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 57:
                   case 84:
                   case 55:
                   case 24:
                   (mat3(92.52, -3085.3840, 76.92, -302.335, 5.0, -3607.4515, 1.2, -896.790, -5.1) / inverse(mat3(-875.063, 387.967, -3.7, -8795.9146, -8.5, 2.9, 88.99, 8.5, 17.22)));
                   break;
                   case 29:
                   mat3x4 _GLF_SWITCH_3_0v;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             case 70:
             case 2:
             if(_GLF_DEAD(false))
              barrier();
             case 84:
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 86:
             case 10:
             while(false)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 barrier();
                }
               uvec4(31197u, 175301u, 25993u, 127537u);
               if(_GLF_DEAD(false))
                break;
               mat2x3 _GLF_SWITCH_2_5v[31], _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
                continue;
              }
             break;
             default:
             1;
             if(_GLF_DEAD(false))
              return;
            }
           case 18:
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 97:
           vec3(-5.1, 0.6, 145.266);
           case 96:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           mat3(-450.637, 0.2, 776.585, _GLF_IDENTITY(-9476.8372, min(_GLF_IDENTITY(-9476.8372, clamp(_GLF_IDENTITY(-9476.8372, mix(float(-9476.8372), float(_GLF_FUZZED(-5.7)), bool(false))), _GLF_IDENTITY(-9476.8372, max(-9476.8372, -9476.8372)), -9476.8372)), _GLF_IDENTITY(-9476.8372, 1.0 * (-9476.8372)))), 3952.0986, _GLF_IDENTITY(533.445, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(533.445, mix(float(533.445), float(_GLF_FUZZED(-6.4)), bool(false)))), bool(true))), 1016.0540, -65.74, 8.3);
           default:
           1;
          }
        }
       _GLF_IDENTITY(findLSB(uvec3(1500u, 167059u, 167185u)), ivec3(ivec4(_GLF_IDENTITY(findLSB(uvec3(1500u, 167059u, 167185u)), ivec3(0, 0, 0) | (findLSB(uvec3(1500u, 167059u, 167185u)))), 1)));
       if(true)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           ivec4(89761, -51373, 89615, _GLF_IDENTITY(-68053, ~ (~ (_GLF_IDENTITY(-68053, (false ? _GLF_FUZZED(-45059) : -68053))))));
          }
         if(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))
          {
           uvec3(37567u, _GLF_IDENTITY(103582u, (103582u) | (103582u)), 151515u);
           mat2 _GLF_SWITCH_2_8v;
           _GLF_SWITCH_2_8v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             ;
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat2x4 _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            return;
           3021.1887;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           uint _GLF_SWITCH_2_11v, _GLF_SWITCH_2_12v[78];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            break;
          }
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false)), (bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false))) || false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), vec2(_GLF_FUZZED((- -5.9)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, 0 ^ (8)))), _GLF_IDENTITY(8, (8) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) ^ (0 | 0))))))))), int(8)))); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               continue;
             }
            barrier();
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            (uvec2(138666u, 143184u) / uvec2(116156u, _GLF_IDENTITY(_GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))))), 0u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))))), 0u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))))), 0u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(121693u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(121693u, uint(uvec3(_GLF_IDENTITY(121693u, min(121693u, 121693u)), 0u, 1u))), 1u, 0u), max(uvec3(_GLF_IDENTITY(121693u, _GLF_IDENTITY(uint(uvec3(121693u, 0u, 1u)), ~ (~ (uint(uvec3(121693u, 0u, 1u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(121693u, uint(uvec3(121693u, 0u, 1u))), 1u, 0u))))))), 0u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))));
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
               barrier();
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
            if(_GLF_DEAD(false))
             break;
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
             {
              do
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  return;
                 }
                return;
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               break;
             }
           }
          mat3x4(9.2, _GLF_IDENTITY(8.2, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))) * (8.2)), 878.986, 5567.2536, 8.9, -7.6, -60.55, -52.56, 7.4, 4.2, 1107.0563, 5.5);
          if(_GLF_DEAD(false))
           barrier();
          mat2x4((215.774 + mat2x3(161.236, 9390.0031, -5.8, 55.39, -0.5, -89.16)));
          if(_GLF_DEAD(false))
           return;
          bvec4 _GLF_SWITCH_2_13v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          uvec4 _GLF_SWITCH_2_14v[69], _GLF_SWITCH_2_15v;
          if(_GLF_DEAD(false))
           return;
          uvec4 _GLF_SWITCH_2_16v[94];
          if(_GLF_DEAD(false))
           barrier();
          ivec4 _GLF_SWITCH_2_17v, _GLF_SWITCH_2_18v;
          if(_GLF_DEAD(false))
           continue;
          mat4x2 _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v[60];
         }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), int(0)))))
            {
             case 21:
             ivec4(-19766, -38171, -41286, -33351)[1];
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((465.808 + -2.3))), bool(false)))) / 1.0) > injectionSwitch.y))))
              return;
             case 70:
             greaterThan(bitCount(min(uvec2(8163u, 67001u), subgroup_size)), ivec2(9675, 85407));
             case 0:
             case 45:
             case 20:
             case 2:
             case 59:
             case 23:
             if(_GLF_DEAD(false))
              return;
             case 42:
             case 10:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 64:
             bvec3 _GLF_SWITCH_4_0v[96];
             default:
             1;
            }
          }
         for(ivec2 _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v[36], _GLF_SWITCH_2_23v[36]; false; bvec2(true, _GLF_IDENTITY(false, bool(bool(false)))))
          {
           mat3x2(-463.309, 565.781, 843.470, 64.19, -7453.0846, 38.44);
           mat4x2(858.314, 4421.2328, 8.5, -1821.8362, _GLF_IDENTITY(55.26, max(55.26, 55.26)), _GLF_IDENTITY(-17.07, (_GLF_IDENTITY(-17.07, max(-17.07, -17.07))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), max((0.0), (0.0))))) + 0.0)), 4254.8227, 19.03);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           (-79.03 + mat3x4(-2785.0970, 2.3, -10.99, 7.8, -8.2, -7259.2921, -4.3, -456.873, -386.201, 42.65, -41.31, -948.086));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           _GLF_IDENTITY(max(vec4(6.6, 72.43, -6.4, 41.31), vec4(-3782.6492, -7244.8566, 2.8, -9.6)), min(max(vec4(6.6, 72.43, -6.4, 41.31), vec4(_GLF_IDENTITY(-3782.6492, max(-3782.6492, _GLF_IDENTITY(-3782.6492, mix(float(_GLF_IDENTITY(-3782.6492, mix(float(_GLF_FUZZED(-9.0)), float(-3782.6492), bool(true)))), float(_GLF_FUZZED(2.3)), bool(false))))), -7244.8566, 2.8, -9.6)), max(vec4(6.6, 72.43, -6.4, 41.31), vec4(-3782.6492, -7244.8566, 2.8, -9.6))));
           mat4x3(-5.6, -908.182, -0.2, -8.2, -363.280, -3.7, 8.3, _GLF_IDENTITY(1184.4341, float(mat3x4(_GLF_IDENTITY(1184.4341, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7057.7298) : 1184.4341)), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0))), 3252.4745, -813.116, -499.131, 803.133);
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             (_GLF_IDENTITY(uvec4(86111u, 156700u, 17328u, 85339u), (true ? uvec4(86111u, 156700u, 17328u, 85339u) : _GLF_FUZZED(max(uvec4(166824u, 184811u, 99518u, 184661u), uvec4(42244u, 186585u, 71830u, 155737u))))) << uvec4(95610u, 34892u, 86298u, 114455u));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH(0))
            {
             case 1:
             -2730.0134;
             case 0:
             case 74:
             case 43:
             case 46:
             case 90:
             if(_GLF_DEAD(false))
              break;
             case 56:
             case 2:
             case 91:
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
          }
         if(((9537.4771 / mat3x4(-276.682, 411.035, -6.8, -4.9, -35.61, 8.5, _GLF_IDENTITY(-946.392, max(-946.392, _GLF_IDENTITY(-946.392, float(vec2(-946.392, 1.0))))), 12.74, 6.0, 864.997, 462.484, 760.860)) == mat3x4(-3.4, _GLF_IDENTITY(-7185.9746, max(_GLF_IDENTITY(-7185.9746, (-7185.9746) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-87.80)))), -7185.9746)), 5.9, _GLF_IDENTITY(-1831.4688, mix(float(_GLF_FUZZED(16.74)), float(_GLF_IDENTITY(-1831.4688, (false ? _GLF_FUZZED(-1540.6932) : -1831.4688))), _GLF_IDENTITY(bool(true), true && (bool(true))))), 8.2, -6.7, _GLF_IDENTITY(6.2, (_GLF_IDENTITY(6.2, clamp(6.2, 6.2, 6.2))) * 1.0), 61.17, 92.41, -3.7, -5833.8210, -5400.4106)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(false, true, false, false)), true, false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           bvec4 _GLF_SWITCH_2_24v, _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v;
           if(_GLF_DEAD(false))
            break;
           ivec2 _GLF_SWITCH_2_27v[63], _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v;
           normalize(vec4(-6170.9781, -4.0, 867.042, 316.175));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(49600) : int(3)))))))
              {
               case 0:
               case 30:
               case 89:
               mat2x4(-7236.9463, -6707.2371, -5164.2900, -38.11, -4019.7543, -6.7, -62.93, -96.18);
               break;
               default:
               1;
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             (57298 * ivec3(32338, 71525, 38266));
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           (_GLF_IDENTITY(any(_GLF_SWITCH_2_25v), _GLF_IDENTITY(bool(bool(any(_GLF_SWITCH_2_25v))), ! (_GLF_IDENTITY(! (bool(bool(any(_GLF_SWITCH_2_25v)))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(any(_GLF_SWITCH_2_25v), (any(_GLF_SWITCH_2_25v)) && true)))), true)))))) ? usubBorrow(workgroup_size, subgroup_local_id, workgroup_size) : next_virtual_gid);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false))))))))
            return;
           ivec3 _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v, _GLF_SWITCH_2_32v;
          }
         (-7.1 - mat4x3(84.65, 4.3, 1.6, -9152.3842, 5.7, 9348.9484, _GLF_IDENTITY(3.6, mix(float(3.6), float(_GLF_FUZZED(-3984.4990)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -5.4, 67.61, 51.03, -7284.9418, 7145.4776));
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
          barrier();
         while(true)
          {
           mat3(-6399.4062, 231.594, 5.9, -38.11, 716.365, -1.4, 3.6, -243.183, -7.6);
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           mat2(-523.676, 9.0, -5.6, -101.276);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           uvec3 _GLF_SWITCH_2_33v, _GLF_SWITCH_2_34v[20];
           (- mat4(-573.576, 173.766, 9250.1916, 6.0, -270.431, _GLF_IDENTITY(2.3, clamp(2.3, 2.3, 2.3)), 3194.8483, 34.78, 140.709, 9280.8297, -99.04, -8.4, 43.09, -760.300, -747.228, -471.472));
           uint _GLF_SWITCH_2_35v, _GLF_SWITCH_2_36v[56], _GLF_SWITCH_2_37v[98];
           ;
           if(_GLF_DEAD(false))
            barrier();
           mat4 _GLF_SWITCH_2_38v[45], _GLF_SWITCH_2_39v[67], _GLF_SWITCH_2_40v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
            {
             workgroup_size;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          barrier();
         ;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-116.117, _GLF_IDENTITY(float(vec3(-116.117, 0.0, sqrt(0.0))), max(_GLF_IDENTITY(float(vec3(-116.117, 0.0, sqrt(0.0))), max(float(vec3(-116.117, 0.0, sqrt(0.0))), float(vec3(-116.117, 0.0, sqrt(0.0))))), float(vec3(-116.117, 0.0, sqrt(0.0))))))))), injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))))))
          {
           ivec4 _GLF_SWITCH_2_41v, _GLF_SWITCH_2_42v;
          }
         uvec3 _GLF_SWITCH_2_43v[24], _GLF_SWITCH_2_44v, _GLF_SWITCH_2_45v[78];
         for(vec3 _GLF_SWITCH_2_46v, _GLF_SWITCH_2_47v; false; notEqual(bvec4(true, _GLF_IDENTITY(true, true && (true)), false, false), bvec4(false, false, false, true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2x3(-44.96, 76.25, -6.8, -489.744, 2.7, 8.9);
           if(_GLF_DEAD(false))
            return;
           ;
           mat3x2(mat2(9.6, -8.1, 8.8, -74.99));
          }
         mat3x4 _GLF_SWITCH_2_48v, _GLF_SWITCH_2_49v[74];
         if(_GLF_DEAD(false))
          barrier();
        }
       (uvec3(59609u, 97216u, 149924u) - uvec3(7978u, 18683u, 124512u));
       ivec4 _GLF_SWITCH_2_50v[23];
      }
     default:
     1;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
