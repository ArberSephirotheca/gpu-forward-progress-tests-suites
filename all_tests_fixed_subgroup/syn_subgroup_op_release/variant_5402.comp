#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))) || false)))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true)), bool(bvec2(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))), true)), bool(bvec2(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(230.233)), float(0.0), bool(true))))))), float(mat3x2(_GLF_IDENTITY(float(mat4(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(57855))), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true)))) * 1.0), sqrt(0.0), 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8660.1709)), bool(false))), 1.0), mix(float(_GLF_FUZZED(65.44)), float(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8660.1709)), bool(false))), 1.0)), bool(true)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1739.4932)), float(1.0), bool(true))), 0.0, 1.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4(injectionSwitch.y, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atan(1523.7988, -6.3)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0 + (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))), min(0.0 + (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))), _GLF_IDENTITY(0.0 + (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))), max(0.0 + (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))), 0.0 + (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0)))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-9.4, max(-9.4, _GLF_IDENTITY(-9.4, (-9.4) / 1.0))))), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(39.49)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(774.796, 5414.8071)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3((_GLF_DEAD(false)), true, true)))))))))))), true, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.x = num_workgroup, (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.x = num_workgroup) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(1819.3482, 2.9))), mix(vec2(_GLF_FUZZED(-625.875), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(vec2(1819.3482, 2.9))))[_GLF_IDENTITY(1, 0 ^ (1))], (((true ? injectionSwitch : _GLF_FUZZED(vec2(1819.3482, 2.9))))[1]) / 1.0)), vec2(((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(1819.3482, clamp(1819.3482, 1819.3482, 1819.3482)), 2.9))))[0], _GLF_FUZZED(-1888.0100)), bvec2(true, false)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(1819.3482, 2.9))), mix(vec2(_GLF_FUZZED(-625.875), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(vec2(1819.3482, 2.9))))[_GLF_IDENTITY(1, 0 ^ (1))], (((true ? injectionSwitch : _GLF_FUZZED(vec2(1819.3482, 2.9))))[1]) / 1.0)), vec2(((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1819.3482, clamp(1819.3482, 1819.3482, 1819.3482)), 2.9), mat2(1.0) * (vec2(_GLF_IDENTITY(1819.3482, clamp(1819.3482, 1819.3482, 1819.3482)), 2.9))))))[0], _GLF_FUZZED(-1888.0100)), bvec2(true, false)))))).x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(bool(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch))))), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch))))), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch))))), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) || false)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))), (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x) * 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(-304.819, min(_GLF_IDENTITY(-304.819, mix(float(_GLF_FUZZED(-2.8)), float(-304.819), bool(true))), -304.819))) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-7669.4027) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, true)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, true)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, true))))))))))))))))) ? false ? _GLF_FUZZED(-7669.4027) : injectionSwitch.x : _GLF_FUZZED(floor(70.59))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(23110))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(23110))), min(float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110))))), float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110)))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(23110))), min(float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110))))), float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110)))), min(clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(23110)), (false ? _GLF_FUZZED(7418.7303) : _GLF_FUZZED(float(23110))))), min(float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110))))), float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110)))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(23110))), min(float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110))))), float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110)))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(23110))), min(float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110))))), float(_GLF_FUZZED(float(23110))), float(_GLF_FUZZED(float(23110))))))), _GLF_IDENTITY(float((_GLF_IDENTITY(false ? _GLF_FUZZED(-7669.4027) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(46.70) : injectionSwitch.x)))), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))))) < injectionSwitch.y)) ? false ? _GLF_FUZZED(-7669.4027) : injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(floor(70.59), (floor(70.59)) + 0.0)))))), float(_GLF_IDENTITY(mat3x2(float((_GLF_IDENTITY(false ? _GLF_FUZZED(-7669.4027) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(46.70) : injectionSwitch.x)))), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))))) < injectionSwitch.y)) ? false ? _GLF_FUZZED(-7669.4027) : injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(floor(70.59), (floor(70.59)) + 0.0)))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0), transpose(transpose(mat3x2(float((_GLF_IDENTITY(false ? _GLF_FUZZED(-7669.4027) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(46.70) : injectionSwitch.x)))), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))))) < injectionSwitch.y)) ? false ? _GLF_FUZZED(-7669.4027) : injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(floor(70.59), (floor(70.59)) + 0.0)))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)))))), bool(_GLF_IDENTITY(true, ! (! (true))))))))) > injectionSwitch.y))), bvec2(bvec3(bvec2(bool(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : injectionSwitch)))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true, true), true))))))), true))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) && true))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) && true))), true, false, true)), true && (bool(bvec4(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) && true))), true, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) / 1.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec3(43094u, 111106u, 173095u)) : GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id)).z, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec3(43094u, 111106u, 173095u)) : GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id)).z, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))) * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) ? _GLF_FUZZED(uvec3(43094u, 111106u, 173095u)) : GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id)).z) / 1u, ((workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)))))) ? _GLF_FUZZED(uvec3(43094u, 111106u, 173095u)) : GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id)).z) / 1u) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(0.8)), bool(false))))))) >> 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, abs(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-824.442)), bool(false))), 1.0))), (false ? _GLF_FUZZED(mat2(7858.8034, -3042.7468, -94.23, 2.3)) : mat2(injectionSwitch, abs(1.0), 1.0))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, abs(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-824.442)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), 1.0))), (false ? _GLF_FUZZED(mat2(7858.8034, -3042.7468, -94.23, 2.3)) : mat2(injectionSwitch, abs(1.0), 1.0))))).x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) && true), false)))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u + (subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> _GLF_IDENTITY(0u, (0u) << 0u), clamp((subgroup_local_id) >> 0u, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) | ((subgroup_local_id) >> 0u)), (subgroup_local_id) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) ^ (workgroup_base), _GLF_IDENTITY(0u ^ (workgroup_base), uint(uvec2(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) - 0u), 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), (_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)))) ^ 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, 1u * (4u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), _GLF_IDENTITY(0u ^ (workgroup_base), ~ (~ (_GLF_IDENTITY(0u ^ (workgroup_base), min(_GLF_IDENTITY(0u ^ (workgroup_base), 0u | (0u ^ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), 0u ^ (workgroup_base))), (_GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), 0u ^ (workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), 0u ^ (workgroup_base))), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), 0u ^ (workgroup_base))), _GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), 0u ^ (workgroup_base)))))))))))))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), (_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base)))) / 1u), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) << 0u)) | 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), uint(uvec3(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), 1u, 0u))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) << 0u)) | 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), uint(uvec3(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), 1u, 0u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u))), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), 0u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), (_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base)))) / 1u), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) << 0u)) | 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), uint(uvec3(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), 1u, 0u))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) << 0u)) | 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), uint(uvec3(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), 1u, 0u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u))), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), 0u, 1u, 0u))) | 0u)), 0u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), 0u, 1u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), 0u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), 0u, 1u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), 0u, 1u, 0u)))) << 0u))), 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), (1u | 1u), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), (1u | 1u), 0u)))))))) ^ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))), uint(uvec4((_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), clamp(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), _GLF_IDENTITY(min(0u ^ (workgroup_base), 0u ^ (workgroup_base)), ~ (_GLF_IDENTITY(~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : ~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base)))))))), 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), clamp(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), _GLF_IDENTITY(min(0u ^ (workgroup_base), 0u ^ (workgroup_base)), ~ (_GLF_IDENTITY(~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : ~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base)))))))), 0u, 1u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), clamp(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), _GLF_IDENTITY(min(0u ^ (workgroup_base), 0u ^ (workgroup_base)), ~ (_GLF_IDENTITY(~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : ~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base)))))))), 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), clamp(max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (workgroup_base), max(_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | (0u ^ (workgroup_base))), 0u ^ (workgroup_base))), 0u ^ (workgroup_base))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), _GLF_IDENTITY(min(0u ^ (workgroup_base), 0u ^ (workgroup_base)), ~ (_GLF_IDENTITY(~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : ~ (min(0u ^ (workgroup_base), 0u ^ (workgroup_base)))))))), 0u, 1u))))))) ^ 0u))), 0u, 1u, 0u))), 0u, 0u))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u)), (_GLF_IDENTITY(true, (true) && true) ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u)) : _GLF_FUZZED(virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) - 0u)), 0u ^ (uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) - 0u))))), (_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base), (_GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), _GLF_IDENTITY(0u ^ (workgroup_base), uint(uvec2(0u ^ (workgroup_base), 0u)))))) | (_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u ^ (workgroup_base), uint(uvec3(_GLF_IDENTITY(0u ^ (workgroup_base), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u, 0u, 0u))), (1u ^ 1u) ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u, 0u, 0u)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u)))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base), (_GLF_IDENTITY(0u ^ (workgroup_base), max(0u ^ (workgroup_base), _GLF_IDENTITY(0u ^ (workgroup_base), uint(uvec2(0u ^ (workgroup_base), 0u)))))) | (_GLF_IDENTITY(0u ^ (workgroup_base), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u ^ (workgroup_base), uint(uvec3(_GLF_IDENTITY(0u ^ (workgroup_base), min(0u ^ (workgroup_base), 0u ^ (workgroup_base))), 0u, 1u)))))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(subgroup_id, subgroup_id)) * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u)))))))) << 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-47484))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, (1 ^ 1) ^ (1)), 1), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) | ((1)))), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(62076)))) * (1 & 1)), 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), 0 | (0 ^ (1)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), max((1), (1)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(91966) : (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) ^ (0u & 145540u)), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-47484)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-47484)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-47484)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-47484))))) << 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))))), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) | (_GLF_IDENTITY(1, 0 ^ (1)))))), (~ (~ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 1 * (1))))))) * 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 ^ (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 ^ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat2(-79.89, -729.154, 4.4, -3.2)) : _GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat2(59.68, -5.9, -6.3, 5.4)) : mat2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))) * (injectionSwitch)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(74837, (74837) / 1)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) | (_GLF_IDENTITY(1, 0 ^ (1)))), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), _GLF_IDENTITY((true ? _GLF_IDENTITY((1), ((1)) / 1) : _GLF_FUZZED(-85552)), ((true ? _GLF_IDENTITY((1), ((1)) / 1) : _GLF_FUZZED(-85552))) - 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 ^ (0)) ^ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))) : _GLF_FUZZED(-43896))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (1) >> 0))), 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ (0u & 145540u))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (1), (0 ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) + 0), (_GLF_IDENTITY(0 ^ (1), (0 ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) + 0)) ^ 0)))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), 1u * (subgroup_size))) ^ (0u & 145540u))) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u), min(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u)))) << 0u, 0u ^ ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u)))) << 0u))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) << 0u)))) * 1u))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (_GLF_DEAD(false)), false, true)), false), bvec2(bvec4(bvec2(bool(bvec3(! (_GLF_DEAD(false)), false, true)), false), true, true)))))), ! (! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (_GLF_DEAD(false)), false, true)), false), bvec2(bvec4(bvec2(bool(bvec3(! (_GLF_DEAD(false)), false, true)), false), true, true)))))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (_GLF_DEAD(false)), false, true)), false), bvec2(bvec4(bvec2(bool(bvec3(! (_GLF_DEAD(false)), false, true)), false), true, true))))))))), ! (! (! (_GLF_DEAD(false)))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))))))), true, true))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))))), true, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))), true, true))), true, false), true))), true)))))), ! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_DEAD(false), false, true))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))) && true), _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), true && (bool((false) || false)))))))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false || (false), true && (false || (false)))), true))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))), false)))), true, true, true)), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), true, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false || (false), true && (false || (false)))), true))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))), false)))), true, true, true)), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), true, false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false || (false), true && (false || (false)))), true))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) || false))))))))))), false)))), true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))), false)))), true, true, true)), true, false), true)))))))))))) || false))), true, false, _GLF_IDENTITY(false, (false) || false))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(min(_GLF_IDENTITY(2, (2) >> 0), 2), 0 | (min(_GLF_IDENTITY(2, (2) >> 0), 2))))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 0), clamp(ivec3(4, 1, 0), ivec3(4, 1, 0), ivec3(4, 1, 0))))), 4)), 4), (min(4, 4)) | (_GLF_IDENTITY(min(4, 4), (min(4, 4)) >> 0)))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), 1.0, 0.0, 1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797)), transpose(transpose(_GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797))))) : mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0)))), min(vec2(_GLF_IDENTITY(mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797)) : mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-7.2)) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(8.6))))))), 1.0, 0.0), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797)), _GLF_IDENTITY(mat3(mat4(_GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797)))), mat3(mat3x4(mat3(mat4(_GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797)))))))) : mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-36.01)), bool(false))), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.7)), float(0.0), bool(true)))) / 1.0), length(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, sin(0.0))), (float(mat4(1.0, 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, sin(0.0)))) / 1.0)), 0.0), (false ? _GLF_FUZZED(mat3(1.1, -5.9, -4438.6169, 34.62, -28.53, 8295.9010, 5.9, -99.82, -5706.7797)) : mat3(min(injectionSwitch, injectionSwitch), abs(1.0), sqrt(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0))))) / vec2(1.0, 1.0)))))))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5232.3620) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.7) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(57.90)), float(1.0), bool(true))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))), float(_GLF_FUZZED((+ 26.81))), bool(false))), mix(float(_GLF_FUZZED(-4015.5655)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), determinant(mat3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.9), mix(float(_GLF_FUZZED(9023.3929)), float(_GLF_FUZZED(_GLF_IDENTITY(-8.9, mix(float(-8.9), float(_GLF_FUZZED(-6.8)), bool(false))))), bool(true))) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0))), round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0 * (length(normalize(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0), vec4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-91.72)), float(1.0), bool(true)))) - sqrt(0.0)), 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))))), 0.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), float(_GLF_FUZZED(3794.4743)), bool(_GLF_IDENTITY(false, false || (false))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))), true, false, false)))), (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))))) && true))) || false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, false)), true)), false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-20.84)), bool(false))))) : _GLF_FUZZED(_GLF_IDENTITY(6.4, clamp(6.4, 6.4, 6.4))))) : _GLF_FUZZED(7343.9507))) > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-2.4), min(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4)))), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true))), false, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(false, false || (false)))), true, false, true)), ! (! (bool(bvec4(((_GLF_IDENTITY(false, false || (false)))), true, false, true)))))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false)))))), ! (! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)))) || false), false, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(false, false || (false)))), true, false, true)), ! (! (bool(bvec4(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false))), false || (false)))), true, false, true)))))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false)))))), ! (! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
