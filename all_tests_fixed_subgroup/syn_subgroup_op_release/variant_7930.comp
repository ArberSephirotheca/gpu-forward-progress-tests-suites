#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 float _f0;
 bvec3 _f1;
 mat4 _f2;
 bool _f3;
 ivec3 _f4;
 vec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 vec4 _f1;
 ivec4 _f2;
 vec2 _f3;
 mat3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 mat4x2 _f4;
 bvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4 _f2;
 _GLF_struct_10 _f3;
 ivec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 int _f1;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 mat4 _f1;
 mat2 _f2;
 mat2x3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 mat3x2 _f1;
 vec4 _f2;
 ivec2 _f3;
 mat4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
 vec2 _f3;
 mat2x4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 uint workgroup_id;
 float _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat3x2 _f1;
 _GLF_struct_0 _f2;
 uint _f3;
 int _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 uvec4 _f4;
 ivec2 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true)))))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = subgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   else
    {
    }
  }
uint subgroup_size = 16;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x;
 for(int _injected_loop_counter = (1 | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 36236)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 91:
         case 86:
         case 75:
         case 41:
         case 40:
         case 35:
         case 72:
         case 33:
         return;
         break;
         case 85:
         bvec3 _GLF_SWITCH_4_0v[86], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y = subgroup_local_id;
 GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.w = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.w;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x = num_workgroup;
 GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.z = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.z;
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(vec2(1.0), mat3x2(1.0), _GLF_struct_0(mat3x4(1.0), mat2(1.0), mat2x4(1.0)), 1u, 1), _GLF_struct_2(ivec2(1), gl_WorkGroupID.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-8.0)))) / 1.0), bvec4(true)), _GLF_struct_7(_GLF_struct_3(mat2x3(1.0), mat3x2(1.0), mat4x2(1.0)), ivec3(1), _GLF_struct_4(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (1) / 1)), mat3x2(1.0), vec4(1.0), _GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), mat4(1.0), bvec2(true)), vec2(1.0), mat2x4(1.0), _GLF_struct_5(ivec2(1), mat4(1.0), mat2(1.0), mat2x3(1.0), mat4(1.0)), _GLF_struct_6(ivec3(1), 1)), _GLF_struct_11(_GLF_struct_8(mat2x4(1.0), mat4(1.0), mat3x2(1.0), mat4x2(1.0), mat4x2(1.0), bvec2(true), vec2(1.0)), _GLF_struct_9(mat2x4(1.0)), mat4(1.0), _GLF_struct_10(mat3x4(1.0), vec4(1.0), ivec4(1), vec2(1.0), mat3(1.0), mat3x4(1.0)), ivec2(1), mat3(1.0)), uvec4(1u), ivec2(1), _GLF_struct_14(_GLF_struct_12(ivec3(1), mat2x4(1.0)), _GLF_struct_13(1.0, bvec3(true), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)), true, ivec3(1), vec3(1.0), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(192814u, 179717u, 15947u))))))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u), min(_GLF_IDENTITY(uvec4(uvec3(1u), 0u), (uvec4(uvec3(1u), 0u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(uvec3(1u), 0u)))) - uvec4(0u, 0u, 0u, 0u))))) / uvec3(1u, 1u, 1u))), mat2x4(1.0)));
 GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy.y = _GLF_struct_replacement_15._f1.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(557.815)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.3, -850.821)))).y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.6, 68.12)) : injectionSwitch)).y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
      {
       case 0:
       case 21:
       case 55:
       case 60:
       case 36:
       case 46:
       case 91:
       case 75:
       case 8:
       case 50:
       return;
       break;
       default:
       1;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy.y;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))) << 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w) - (0u | 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))) << 0u)), min(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (false ? _GLF_FUZZED(bitfieldReverse(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x)) : GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))) << 0u)), ~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))) << 0u)))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, 1u * (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))) << 0u))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy.x = virtual_gid;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y);
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = next_virtual_gid;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     buf[GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy.x] = 1;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 7:
       vec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       case 97:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))) && true)))))
          break;
         return;
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           while(false)
            {
             do
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 case 6:
                 case 65:
                 case 44:
                 do
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                          {
                          }
                         else
                          {
                           bvec4(true, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y > GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), bvec2(true, false));
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 66:
                 case 17:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 66:
                       case 39:
                       case 96:
                       while(false)
                        {
                         uvec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                         if(_GLF_DEAD(false))
                          return;
                         for(bvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v; false; GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)
                          {
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               (-3.7 / mat2x3(-90.53, 6.3, -4.8, 5.1, -7.5, 7044.5492));
                              }
                            }
                           mat4x2(_GLF_IDENTITY(-61.67, min(_GLF_IDENTITY(-61.67, min(-61.67, -61.67)), -61.67)), -26.00, 6282.8547, 6356.0296, 864.810, -511.917, -689.349, -3425.2249);
                           _GLF_IDENTITY(mat4(1968.1632, -2.5, 23.64, 594.065, 2.3, -5.1, 8.7, 3.4, _GLF_IDENTITY(-677.685, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(_GLF_IDENTITY(-82.30, (_GLF_IDENTITY(-82.30, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(602.328) : -82.30))) + 0.0))) : -677.685)), -26.60, 18.73, -9.6, -9790.9248, -5435.2552, 4734.8801, 772.049), mat4(1.0) * (mat4(1968.1632, -2.5, 23.64, 594.065, _GLF_IDENTITY(2.3, float(vec2(2.3, 1.0))), -5.1, 8.7, 3.4, _GLF_IDENTITY(-677.685, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(-82.30)) : -677.685)), -26.60, 18.73, -9.6, -9790.9248, -5435.2552, 4734.8801, 772.049)));
                           (ivec4(87560, -34093, -48473, -69899) * findLSB(11072));
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             return;
                            }
                           mat4(-22.79, -6.4, 4444.6680, -5.5, -4.9, 392.720, 91.77, 82.43, 9105.1936, -7.3, -8.4, -4.3, 3673.8514, -4.7, -4.9, -5.9);
                           uvec3(144533u, 31435u, 114307u);
                           mat4x2 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           bvec4(true, _GLF_IDENTITY(true, ! (! (true))), true, false);
                          }
                         if(((mat3(2.6, _GLF_IDENTITY(-1.8, mix(float(_GLF_IDENTITY(-1.8, min(-1.8, -1.8))), float(_GLF_FUZZED(-257.100)), bool(false))), -0.7, 5.0, 12.86, 8983.7119, -701.032, -123.793, 45.23) / -6253.1962) == mat3(77.36, 0.4, 0.3, 8.5, 98.77, -4.3, -2.4, -6327.4161, 8.4)))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 34:
                               bvec3 _GLF_SWITCH_4_0v[66];
                               case 64:
                               bool _GLF_SWITCH_4_1v[70], _GLF_SWITCH_4_2v[82], _GLF_SWITCH_4_3v[94];
                               case 0:
                               case 23:
                               case 52:
                               if(_GLF_DEAD(false))
                                continue;
                               case 93:
                               case 17:
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 return;
                                }
                               break;
                               case 48:
                               mat2x4 _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v;
                               default:
                               1;
                              }
                            }
                          }
                         while((true && true))
                          {
                           bvec4(true, true, false, false);
                           do
                            {
                             ;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           bvec4 _GLF_SWITCH_0_11v;
                          }
                        }
                       break;
                       case 58:
                       vec2 _GLF_SWITCH_4_0v;
                       case 90:
                       ;
                       default:
                       1;
                      }
                    }
                  }
                 case 46:
                 case 16:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(                   mat2x4(7.3, -7687.0040, -4533.5323, 32.58, 0.1, -0.1, 32.70, 73.81);
 (bvec4(false, false, true, true) != bvec4(true, false, true, false)); _GLF_SWITCH_0_2v)
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(false))
                        continue;
                       continue;
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       else
                        {
                         for(float _GLF_SWITCH_0_12v[4]; (mat2(mat3x4(6669.5916, -41.59, -0.3, 2.4, -84.49, -3985.3968, 2.0, -2527.2088, 9.0, -616.567, 4.4, -61.48)) != mat2(-476.488, -285.989, -8480.0206, -0.9)); mat3x2(9725.5352, 1.9, 159.318, 8.7, 9.0, 3.8))
                          {
                           switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))) | (0))))
                            {
                             case 76:
                             _GLF_SWITCH_0_1v;
                             case 0:
                             bvec2(false, true);
                             uvec4 _GLF_SWITCH_0_13v[53], _GLF_SWITCH_0_14v[48];
                             mat3(mat3x4(7008.3970, 7.0, -29.22, 3411.2715, -1.7, 6543.3277, -82.05, -737.479, 17.00, -35.01, 291.400, _GLF_IDENTITY(-1343.9809, _GLF_IDENTITY(float(mat3(-1343.9809, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat3(-1343.9809, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0)), max(float(mat3(-1343.9809, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0)), float(mat3(-1343.9809, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(length(vec2(0.0, 0.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0))))) / 1.0))));
                             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(false))
                                return;
                              }
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 _GLF_SWITCH_0_2v;
                                }
                               else
                                {
                                }
                              }
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               mat2x4(mat2(-309.233, -4132.3762, -727.411, 318.012));
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), true, true))), false)))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), true, true))), false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2872.9355)), vec2(_GLF_FUZZED(69.97), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))).y, false), true, true))), false)))))), ! (! ((! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2872.9355)), vec2(_GLF_FUZZED(69.97), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))).y, false), true, true))), false)))))))))))))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
                                continue;
                              }
                             else
                              {
                               outerProduct(vec3(394.184, -8316.5091, -5.5), vec2(-4.0, 9.1));
                              }
                             for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   return;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             vec4 _GLF_SWITCH_0_15v;
                             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             do
                              {
                               uvec3(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w);
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             (mat3x4(_GLF_IDENTITY(2059.5244, (2059.5244) - 0.0), 5195.0320, -589.950, -3.5, 7803.9540, 852.974, 3.3, -613.672, 5568.3082, 5.0, 87.31, 3.6) != mat3x4(499.249, 9.5, 1.1, -1690.7539, 345.802, 75.14, 2.2, -5133.1612, -5.9, 285.037, 6.9, 2.8));
                             break;
                             if(_GLF_DEAD(false))
                              continue;
                             case 48:
                             isinf(mod(vec3(70.82, 7810.9991, 0.8), 2.3));
                             case 16:
                             mat3x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[9], _GLF_SWITCH_2_2v;
                             default:
                             1;
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        break;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     do
                      {
                       while(true)
                        {
                         ((- 7.5) - mat4(0.3, 6.1, -567.186, 694.541, -3.5, 2431.1377, _GLF_IDENTITY(-473.066, float(_GLF_IDENTITY(vec4(-473.066, 0.0, 0.0, sin(sqrt(0.0))), (vec4(-473.066, 0.0, 0.0, sin(sqrt(0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))), 4167.0496, 366.177, -4277.6712, 7.6, 42.18, -95.02, -8627.6950, -5046.1540, -45.21));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 64:
                        uvec3(87561u, 158536u, 97314u);
                        if(_GLF_DEAD(false))
                         continue;
                        case 0:
                        case 42:
                        bvec2(false, true);
                        if(_GLF_DEAD(false))
                         break;
                        case 54:
                        case 88:
                        ivec3 _GLF_SWITCH_0_16v;
                        case 44:
                        case 31:
                        vec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[80];
                        case 12:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        case 3:
                        for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) & 1)); _injected_loop_counter ++)
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 5:
                              ivec4(-87106, 90392, -37017, 63763);
                              case 0:
                              case 65:
                              case 74:
                              case 90:
                              case 36:
                              case 47:
                              case 32:
                              (mat2x4(mat4x3(44.45, -0.7, -9.7, -447.867, 55.05, _GLF_IDENTITY(337.687, (337.687) - 0.0), 6.7, 2.8, -3.5, -316.430, -3.9, -52.19)) - mat2x4(-76.19, 8.9, 7.5, 5264.2847, 945.086, 24.35, 9.4, -6.2));
                              break;
                              case 77:
                              do
                               {
                                vec3(-7.8, -9.4, -789.963);
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              default:
                              1;
                             }
                           }
                          else
                           {
                           }
                         }
                        break;
                        case 21:
                        uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                        default:
                        1;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                         break;
                       }
                     }
                     mat2(683.302, mix(8313.4160, 173.237, 1996.4096), vec2(8.2, -90.80)[_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 >> _GLF_IDENTITY(int(6), int(6))), (1 & int(_GLF_ONE(1.0, injectionSwitch.y))))))], 90.42);
                     if((vec2(-640.807, -3685.2147) != injectionSwitch))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(36958) : 1))); _injected_loop_counter ++)
                        {
                         ivec2(-67649, 9556);
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       virtual_gid;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         (+ mat3(13.76, -34.96, -409.922, 689.603, 2.6, 157.945, 56.13, 95.75, -4.1));
                        }
                       else
                        {
                        }
                       (mat3(6.1, 8686.4869, -12.77, 9.0, 3.7, -2.8, -0.8, 7951.3936, 7.9) , ivec4(95503, 46756, -65751, _GLF_IDENTITY(23060, (false ? _GLF_FUZZED(_injected_loop_counter) : 23060))));
                       bvec3(true, false, false);
                       uvec4 _GLF_SWITCH_0_20v;
                       mat3(mat3x2(-10.40, -2.1, 4.8, 7.1, 990.808, 8051.5811));
                       do
                        {
                         mat2(71.43, 43.17, 9.5, 4.8);
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     mat4x3(mat3x4(-245.712, -4.3, -7.0, 806.673, 7.6, -683.387, _GLF_IDENTITY(-6.5, clamp(_GLF_IDENTITY(-6.5, (-6.5) - 0.0), -6.5, -6.5)), 18.54, -7513.9238, 32.55, 9.4, 49.32));
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(uint _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v; true; mat2(mat4x2(6720.5612, -6776.1666, 9.8, -6996.1453, -4.2, 8.1, 51.90, -2.1)))
                        {
                         bvec3 _GLF_SWITCH_0_24v;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                          {
                          }
                         else
                          {
                           uvec3(90840u, 96327u, 129151u);
                          }
                         ;
                         ;
                         if(_GLF_DEAD(false))
                          break;
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                 case 15:
                 vec2 _GLF_SWITCH_0_25v;
                 case 32:
                 (uvec3(28132u, 80631u, 94287u) & uvec3(20935u, 162947u, 13217u));
                 break;
                 case 4:
                 bvec3 _GLF_SWITCH_3_0v;
                 case 53:
                 mat4x2(_GLF_IDENTITY(5245.1855, 1.0 * (5245.1855)), 4835.1494, 8.1, -185.257, -3.8, -57.38, 7.6, 0.1);
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       case 0:
       case 63:
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
        return;
       case 24:
       atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(2), 4, 64, 4);
       case 96:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       case 30:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH(_GLF_IDENTITY((0 ^ 0), clamp((0 ^ 0), (0 ^ 0), _GLF_IDENTITY((0 ^ 0), int(ivec2((0 ^ 0), 0)))))))
              {
               case 60:
               GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
               case 0:
               subgroupAll(false);
               break;
               case 65:
               mat2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
               case 85:
               (_injected_loop_counter != _injected_loop_counter);
               default:
               1;
              }
            }
           else
            {
            }
          }
        }
       break;
       case 17:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        for(vec3 _GLF_SWITCH_0_26v[36], _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v; bool(refract(1.9, -924.929, -590.073)); (- smoothstep(6.9, -91.99, injectionSwitch)))
         {
          mat3x4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[65];
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            do
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    return;
                   }
                 }
               }
              else
               {
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          (_GLF_IDENTITY(-8.0, clamp(-8.0, -8.0, -8.0)) - mat3(106.284, -0.4, -2.9, 28.67, -10.54, 652.480, _GLF_IDENTITY(13.37, clamp(13.37, _GLF_IDENTITY(13.37, (false ? _GLF_FUZZED(234.439) : 13.37)), 13.37)), 96.32, -24.37));
          {
           bvec4(false, true, false, false);
           bvec4 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v[91];
           matrixCompMult((_GLF_SWITCH_0_29v), _GLF_SWITCH_0_29v);
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 70:
               case 4:
               case 8:
               case 99:
               case 14:
               case 44:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (1 ^ 1))); _injected_loop_counter --)
                {
                 return;
                }
               break;
               case 63:
               (_GLF_SWITCH_0_0v * _GLF_SWITCH_0_28v.y);
               case 40:
               ((-6.8 - injectionSwitch) != injectionSwitch);
               default:
               1;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             uvec4(175217u, 134649u, 64140u, 98208u);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           vec2 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             uvec3(188698u, 177912u, 71324u);
            }
           ivec2(-5367);
           mat4x2 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
          }
          true;
         }
        _GLF_IDENTITY((mat2(mat2x4(-4082.4340, 2.8, 5.7, -61.39, 79.99, 9570.5441, 9.3, -8.5)) / mat2(121.665, -97.69, -7.9, -1.0)), (false ? _GLF_FUZZED(mat2(93.94, 992.970, 10.80, 1.0)) : _GLF_IDENTITY((mat2(mat2x4(-4082.4340, 2.8, 5.7, -61.39, 79.99, 9570.5441, 9.3, -8.5)) / mat2(121.665, -97.69, -7.9, -1.0)), mat2(1.0) * ((mat2(mat2x4(-4082.4340, 2.8, _GLF_IDENTITY(5.7, max(5.7, 5.7)), -61.39, 79.99, 9570.5441, 9.3, -8.5)) / mat2(121.665, -97.69, -7.9, -1.0))))));
        uvec3 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
        if(_GLF_DEAD(false))
         continue;
        mat2x4 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
        ;
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
         continue;
        bitCount(ivec2(87722, 54012));
        for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
         {
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            _GLF_IDENTITY(atomicMin(virtual_gid, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), (true ? atomicMin(virtual_gid, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)));
           }
          else
           {
           }
         }
        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
         {
          ;
         }
        else
         {
         }
       }
       case 42:
       while((sign(ivec2(5690, _GLF_IDENTITY(-94136, (-94136) ^ 0))) != ivec2(-12915, 48128)))
        {
         (756.062 * vec2(281.920, -966.206));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         {
          while(notEqual(bvec2(true, true), bvec2(true, false)).s)
           {
            -38173;
            if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x;
             }
            mat2x3 _GLF_SWITCH_0_43v[45], _GLF_SWITCH_0_44v;
           }
          mat3x2 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            switch(_GLF_SWITCH((0 ^ 0)))
             {
              case 73:
              mat4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
              case 39:
              vec3 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
              case 0:
              case 32:
              case 49:
              case 89:
              case 26:
              mat4x2(-0.0, -4.6, -0.7, 7.4, -0.5, 7551.8552, -18.98, -633.630);
              break;
              case 93:
              (uvec3(102456u, 101363u, 154954u) / uvec3(106506u, 17992u, 80150u).xzy);
              case 67:
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                mat2x3(953.084, 457.357, _GLF_IDENTITY(653.410, (653.410) - 0.0), 8920.3285, 38.57, 4.6)[0];
               }
              default:
              1;
             }
           }
          else
           {
           }
          mat4x2(mat2x3(_GLF_IDENTITY(45.59, mix(float(45.59), float(_GLF_FUZZED(7.8)), bool(false))), -7.5, 6.1, -3223.2293, 958.170, -5.7));
          if(_GLF_DEAD(false))
           break;
          isinf(_GLF_SWITCH_0_1v);
          if(_GLF_DEAD(false))
           break;
          mat2x4 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
          if(_GLF_DEAD(false))
           break;
          while((false ^^ false))
           {
            uvec4(33375u, 143147u, 181905u, 15209u);
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 15:
                    bvec4(false, true, true, true);
                    case 2:
                    ;
                    case 0:
                    case 26:
                    case 69:
                    case 23:
                    case 93:
                    case 94:
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      return;
                     }
                    break;
                    case 51:
                    lessThan(vec3(-20.28, 2.9, 70.82), vec3(-9.7, -88.62, 889.532));
                    case 45:
                    mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[38];
                    default:
                    1;
                   }
                 }
               }
              else
               {
               }
             }
            else
             {
             }
            ivec3(-59570, -44567, -63651);
            mat4x2 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v;
            mat3(-6369.4707, -4.8, -0.9, -4.0, -2.2, -69.09, 5.9, 670.114, 4.9);
            do
             {
              vec2(-1.1, -5.4);
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             return;
            mat4x3 _GLF_SWITCH_0_53v;
            _GLF_SWITCH_0_48v;
            mat3 _GLF_SWITCH_0_54v;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_DEAD(false))
           break;
          ;
         }
        }
       default:
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))) && true))
                  break;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))))))))
        {
        }
       else
        {
         1;
        }
      }
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       switch(_GLF_SWITCH(0))
        {
         case 12:
         {
          equal(ivec3(16775, 27262, 25054), ivec3(-19218, _GLF_IDENTITY(-29249, (true ? -29249 : _GLF_FUZZED(_GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), 0 | (_GLF_IDENTITY(min(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), _injected_loop_counter), (min(_injected_loop_counter, _injected_loop_counter)) / 1)))))), -60141));
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             return;
           }
          else
           {
           }
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) && true)), (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) && true)), (injectionSwitch.x > injectionSwitch.y)))))) && true)))
           {
            if(_GLF_DEAD(false))
             break;
            do
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                return;
               }
              else
               {
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          do
           {
            if(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(329.475), _GLF_FUZZED(42.75)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(4.8))), (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
               continue;
              do
               {
                ivec2(-99691, 76431);
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              if(_GLF_DEAD(false))
               break;
              bvec2(false, true);
              max(vec4(651.042, -8.9, -702.841, 5.8), vec4(-4.1, -8.7, 0.5, -6.9));
              mat2x3 _GLF_SWITCH_1_0v[21];
              if(_GLF_DEAD(false))
               break;
             }
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                return;
               }
             }
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              switch(_GLF_SWITCH(0))
               {
                case 86:
                mat3 _GLF_SWITCH_3_0v[12], _GLF_SWITCH_3_1v[20];
                case 0:
                case 97:
                case 99:
                case 20:
                case 61:
                case 8:
                41055;
                break;
                case 96:
                mat4x3(45.61, -8.5, _GLF_IDENTITY(-6.5, mix(float(-6.5), float(_GLF_FUZZED(-2.2)), bool(false))), 627.228, -3.3, 9.6, -7.3, -8.1, -4080.6425, 99.51, 1413.6402, 8165.9845);
                default:
                1;
               }
             }
            else
             {
             }
            GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy.xy;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              notEqual(uvec3(169299u, 24986u, 149084u), uvec3(27454u, 73097u, 43245u));
             }
            else
             {
             }
            while(true)
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                do
                 {
                  asin(vec3(2.0, 7478.7346, 53.73));
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              else
               {
               }
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                uvec3(164227u, 140032u, 31080u);
               }
              if(_GLF_DEAD(false))
               continue;
              unpackHalf2x16(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y);
              uint _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
              do
               {
                mat4x2(-642.171, -622.473, -0.9, -7.1, -874.377, 399.156, -8.8, -5.4);
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    return;
                   }
                  else
                   {
                   }
                 }
                continue;
               }
              do
               {
                GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x;
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               break;
              for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                mat4x3(5162.8189, 2.5, 5.6, -3811.8958, 65.36, -8940.5916, -3.2, -553.053, _GLF_IDENTITY(-9.2, mix(float(_GLF_FUZZED(52.62)), float(-9.2), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -66.28, -7375.8119, -44.45);
               }
              mat4 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 return;
               }
              else
               {
               }
             }
            int _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
           }
          while(bool(47994));
          for(          (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x & _GLF_IDENTITY(uvec3(49208u, 74067u, 19602u), (uvec3(49208u, 74067u, 19602u)) | (uvec3(49208u, 74067u, 19602u))));
 true; (bvec3(true, false, false) == bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false)))
           {
            mat4x3(800.272, 3.0, 7.4, 4.9, -58.94, -0.9, -2121.6834, 4.4, -2.8, -2.0, -8184.2776, _GLF_IDENTITY(150.230, clamp(150.230, 150.230, 150.230)));
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               return;
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
             continue;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              do
               {
                uint _GLF_SWITCH_1_9v[8], _GLF_SWITCH_1_10v;
                mat4x2(3.3, 4.8, -2944.7907, -8.9, -432.072, -1.8, 31.94, -6.2);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                (-72733 % ivec3(-41521, -50687, -45669));
                mat2x3 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v[36];
                vec2 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                mat2x4 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v;
                mat4x2((mat2(-6560.7656, 261.919, 47.78, 7.5) + _GLF_IDENTITY(7835.7102, (true ? 7835.7102 : _GLF_FUZZED(7647.2848)))));
                if(_GLF_DEAD(false))
                 break;
               }
              while(false);
             }
            else
             {
             }
            for(            (true ? mat3x2((mat2(1.6, 959.987, -6.7, -3023.3514) * mat4x2(-6.7, 91.13, 1.1, -9.0, -7726.7762, 96.31, -8.8, -3481.7177))) : mat3x2(-5.5, -920.541, -3.0, -7.0, 7.4, 58.93));
 (-30183 > -9984); mat4x2(-0.7, -8087.2516, -151.159, -3.8, 1.5, 4.0, -1.8, 35.73))
             {
              equal(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), false || (! (! (_GLF_IDENTITY(true, true && (true))))))))))), bvec2(true, false));
              ;
              true;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                do
                 {
                  switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
                   {
                    case 0:
                    case 49:
                    case 69:
                    case 13:
                    case 53:
                    return;
                    break;
                    default:
                    1;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))));
               }
              ((mat2x3(75.93, -9.7, 7856.3525, 1620.0826, 76.24, -134.347) * mat2(mat2x3(1666.3706, 1575.0988, 8.7, -62.58, 7.1, 8316.5489))) - asin(-750.114));
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
                 {
                  case 0:
                  do
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 10:
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        ;
                       }
                      else
                       {
                       }
                      case 0:
                      case 89:
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        mat3x4(mat2(2.1, -777.556, _GLF_IDENTITY(283.360, max(283.360, _GLF_IDENTITY(283.360, mix(float(_GLF_FUZZED(_GLF_IDENTITY(477.803, 0.0 + (477.803)))), float(283.360), bool(true))))), 66.16));
                       }
                      else
                       {
                       }
                      break;
                      default:
                      1;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  break;
                  default:
                  1;
                 }
               }
              else
               {
                if(_GLF_DEAD(false))
                 break;
               }
              (36983 | (ivec3(-26662, 84790, 21432) & ivec3(-14138, -41988, -58406)));
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
               {
                ;
               }
              else
               {
               }
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))
                 return;
                vec2(18.93, -9.1);
               }
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x * (GLF_merged3_0_2_48_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_local_id.xy --));
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
            do
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 81:
                bool _GLF_SWITCH_4_0v[23], _GLF_SWITCH_4_1v[23], _GLF_SWITCH_4_2v;
                case 0:
                case 22:
                case 88:
                case 70:
                case 31:
                determinant(mat4(-12.74, -5.7, -49.84, 753.527, 3068.5252, -2.5, -2.4, 4962.1219, 5426.2946, -51.54, 661.465, 1180.3145, 3.4, -6119.2794, -40.03, -0.6));
                break;
                case 75:
                _injected_loop_counter;
                case 13:
                ivec3(3691, 74067, -35767);
                default:
                1;
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(bvec4(true, false, false, false).a)
             {
              float _GLF_SWITCH_1_17v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              mat3x4 _GLF_SWITCH_1_18v[60], _GLF_SWITCH_1_19v;
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
               }
              mat3x4 _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v[41];
              if(_GLF_DEAD(false))
               continue;
              ivec2 _GLF_SWITCH_1_22v;
             }
            {
             if(_GLF_DEAD(false))
              continue;
             mat4x3 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v;
             mat4 _GLF_SWITCH_1_26v;
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
              {
               bvec4(true, true, true, false).zz;
              }
             mat3x2 _GLF_SWITCH_1_27v[29], _GLF_SWITCH_1_28v[22], _GLF_SWITCH_1_29v;
             ivec2(-89456, -7264);
             mat4 _GLF_SWITCH_1_30v;
             mat4x3 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v;
            }
            if(_GLF_DEAD(false))
             continue;
            ;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              while(true)
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  vec2(694.184, 73.63);
                 }
                else
                 {
                 }
                ;
                29790u;
                uvec3 _GLF_SWITCH_1_33v, _GLF_SWITCH_1_34v;
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                vec4(-79.48, -7.3, -7.8, -656.369);
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  do
                   {
                    workgroup_size;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), true)))))))
                 return;
                uvec2 _GLF_SWITCH_1_35v, _GLF_SWITCH_1_36v, _GLF_SWITCH_1_37v;
               }
             }
            else
             {
             }
            while(false)
             {
              if(_GLF_DEAD(false))
               break;
              mat3x4(_GLF_IDENTITY(-6.9, (-6.9) / 1.0), -3.3, 7.5, 6591.5618, 32.91, _GLF_IDENTITY(6.7, (false ? _GLF_FUZZED(-58.80) : 6.7)), 2013.8937, 7.4, -7998.8382, -644.034, -75.45, -6.3);
              ;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 77:
                    GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
                    case 0:
                    case 52:
                    case 98:
                    case 70:
                    case 12:
                    case 78:
                    case 91:
                    case 41:
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      return;
                     }
                    break;
                    case 22:
                    mat3x4 _GLF_SWITCH_4_0v[97];
                    default:
                    1;
                   }
                 }
               }
              else
               {
               }
              mat3(mat2x3(2.5, 3.2, -1.7, 9.4, -29.63, _GLF_IDENTITY(-2.5, max(_GLF_IDENTITY(-2.5, (-2.5) - 0.0), -2.5))));
              mat2x4(mat2(-68.48, 360.240, 7998.0782, 1.3));
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                   {
                    mat3(-1.4, -38.15, -487.426, 40.57, -3.0, -297.798, 0.9, 857.126, -2243.1746);
                   }
                 }
                else
                 {
                 }
               }
              else
               {
               }
              uvec4 _GLF_SWITCH_1_38v[56], _GLF_SWITCH_1_39v[19], _GLF_SWITCH_1_40v;
              mat3 _GLF_SWITCH_1_41v, _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v[23];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
           }
          if(bool(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))
           {
            ;
            mat4x2 _GLF_SWITCH_1_44v, _GLF_SWITCH_1_45v;
            uint _GLF_SWITCH_1_46v[68], _GLF_SWITCH_1_47v;
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
             return;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
               {
                case 0:
                asinh(-4.5);
                break;
                case 80:
                mat4x3 _GLF_SWITCH_4_0v[73], _GLF_SWITCH_4_1v;
                default:
                1;
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            uvec2 _GLF_SWITCH_1_48v, _GLF_SWITCH_1_49v, _GLF_SWITCH_1_50v[96];
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               equal((ivec3(69071, -77095, 20404) & 41681), (ivec3(3530, -34330, -74786) / ivec3(48619, -61528, -78037)));
              }
             else
              {
              }
             clamp(vec4(-171.676, 9762.5386, -257.481, -934.759), vec4(-80.87, -553.333, -44.89, 4.7), vec4(70.24, 49.87, -4.1, 0.9));
             ivec4 _GLF_SWITCH_1_51v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               ;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 69:
                     (virtual_gid , mat2(-310.517, _GLF_IDENTITY(-62.06, float(vec2(-62.06, 1.0))), -1422.5459, 4.3));
                     case 61:
                     int _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                     case 0:
                     case 83:
                     case 74:
                     case 67:
                     case 23:
                     return;
                     break;
                     case 97:
                     mat2 _GLF_SWITCH_3_2v[97], _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
                     case 94:
                     4.2;
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                }
               break;
              }
             (mat3(3487.3177, 45.07, -2857.6771, -3.7, 9.7, -1307.2620, 952.237, -47.77, 289.027) / (_GLF_IDENTITY(2.3, mix(float(2.3), float(_GLF_FUZZED(vec4(-385.448, -2.1, 6.0, _GLF_IDENTITY(6513.6426, mix(float(6513.6426), float(_GLF_FUZZED(-1.2)), bool(false)))).g)), bool(false))) - mat3(-9132.8713, 38.48, -6182.0857, 752.913, -575.177, -52.48, 69.11, _GLF_IDENTITY(-52.04, min(-52.04, -52.04)), -9.3)));
             (_GLF_SWITCH_1_45v ++);
             length(vec3(7.3, 2.3, 2.4));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 (- mat3x2(-4.8, 113.107, 8.7, -0.8, 8.0, -720.113));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             (mat3(8428.4309, -226.512, 98.93, -1640.8621, -16.92, 183.309, 7795.5988, 977.493, -3952.6754) * mat2x3(1025.4009, _GLF_IDENTITY(_GLF_IDENTITY(493.705, (false ? _GLF_FUZZED(43.16) : 493.705)), clamp(_GLF_IDENTITY(493.705, (false ? _GLF_FUZZED(43.16) : 493.705)), _GLF_IDENTITY(493.705, (false ? _GLF_FUZZED(43.16) : 493.705)), _GLF_IDENTITY(493.705, (false ? _GLF_FUZZED(43.16) : 493.705)))), 0.5, 1971.9196, 69.69, -400.268));
            }
            if(_GLF_DEAD(false))
             return;
            if((-3.9 < -0.1))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                do
                 {
                  do
                   {
                    do
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 26:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          mat3x4(761.061, -4098.0065, 85.55, 2090.9849, 5.2, 684.270, -7.1, -6484.8699, -8.4, -1670.3087, -0.5, 172.967);
                         }
                        else
                         {
                         }
                        case 0:
                        case 30:
                        case 12:
                        ivec4(-84005, 40779, -8625, 22289);
                        break;
                        case 80:
                        ;
                        case 34:
                        vec2 _GLF_SWITCH_3_0v;
                        default:
                        1;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              else
               {
               }
              mat2x3(mat2(-8331.2195, -9.9, -28.95, 8.1));
              ivec2 _GLF_SWITCH_1_52v, _GLF_SWITCH_1_53v, _GLF_SWITCH_1_54v;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    case 38:
                    case 97:
                    _GLF_IDENTITY(step(vec2(8.3, -7220.2687), vec2(30.43, -962.373)), min(step(vec2(8.3, -7220.2687), vec2(30.43, -962.373)), step(vec2(8.3, -7220.2687), vec2(30.43, -962.373))));
                    break;
                    default:
                    1;
                   }
                 }
               }
              else
               {
               }
              false;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  _GLF_SWITCH_1_53v;
                 }
               }
              else
               {
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.1))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), length(0.0), abs(0.0), 0.0))).y))))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                       {
                        case 87:
                        bool _GLF_SWITCH_4_0v[17], _GLF_SWITCH_4_1v;
                        case 44:
                        mat4x3 _GLF_SWITCH_4_2v;
                        case 0:
                        case 5:
                        case 17:
                        case 71:
                        case 64:
                        case 45:
                        case 61:
                        case 43:
                        case 53:
                        case 83:
                        return;
                        break;
                        default:
                        1;
                       }
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(false))
                   break;
                 }
                else
                 {
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
               return;
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 41:
                  bvec4(false, false, false, true);
                  case 0:
                  case 43:
                  case 24:
                  case 62:
                  case 33:
                  case 15:
                  case 92:
                  case 18:
                  case 76:
                  case 64:
                  clamp((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z & _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) / 1u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x, min(virtual_gid, _GLF_SWITCH_1_47v));
                  break;
                  default:
                  1;
                 }
               }
              uvec2 _GLF_SWITCH_1_55v, _GLF_SWITCH_1_56v, _GLF_SWITCH_1_57v;
              do
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 82:
                  mat3x4(-8.5, -6.9, 43.15, -7.5, -81.07, -4285.7165, -7.9, 6.2, 603.672, -89.64, -7809.8164, -5315.8900);
                  case 43:
                  atomicMin(_injected_loop_counter, (~ 88244));
                  case 0:
                  case 50:
                  case 80:
                  case 52:
                  case 42:
                  case 20:
                  case 97:
                  case 57:
                  case 47:
                  case 49:
                  bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))).tpss;
                  break;
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              return;
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    case 14:
                    case 82:
                    case 2:
                    case 4:
                    case 84:
                    case 24:
                    return;
                    break;
                    default:
                    1;
                   }
                 }
                else
                 {
                 }
               }
             }
           }
          mat2x3 _GLF_SWITCH_1_58v;
         }
         case 0:
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         case 68:
         case 73:
         case 72:
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          continue;
         case 47:
         atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          continue;
         case 74:
         subgroupAll(true);
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
         break;
         default:
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           1;
          }
        }
       break;
       case 33:
       {
        mat3(2565.2514, -97.70, -56.09, 2.9, 0.1, -1.0, -5943.0944, -2.3, 6.8);
        greaterThan(uvec3(89641u, 85455u, 170470u), uvec3(100162u, 109575u, 100302u));
        ivec2(-12753, 98684);
        uvec4 _GLF_SWITCH_3_0v[59];
        ;
        ;
        mat2(-750.848, -0.9, 2183.5805, -70.55);
        mat4 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
       }
       default:
       1;
      }
    }
  }
}
