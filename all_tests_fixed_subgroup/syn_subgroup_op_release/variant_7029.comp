#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y))) || false, false, true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), true, true, false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-37.54), _GLF_FUZZED((0.4 / -920.455))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3485.1369) : (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch)).y, 1.0, 1.0)))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-37.54), _GLF_FUZZED((0.4 / -920.455))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3485.1369) : (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch)).y, 1.0, 1.0))))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY((~ (workgroup_size)) ^ 0u, max((~ (workgroup_size)) ^ 0u, (~ (workgroup_size)) ^ 0u))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-688.680, 0.0 + (-688.680))) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat4x3(0.0, determinant(mat3(0.0, sqrt(0.0), 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) / exp(vec3(0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | ((workgroup_base) / 1u))) | ((workgroup_base) / 1u))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))) : subgroup_id, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), max(false ? _GLF_FUZZED(workgroup_id) : subgroup_id, false ? _GLF_FUZZED(workgroup_id) : subgroup_id)), false ? _GLF_FUZZED(workgroup_id) : subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id) | 0u)) - 0u), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id) | 0u)) - 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id) | 0u)) - 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id) | 0u)) - 0u))))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), 0 | (~ (_GLF_IDENTITY(1, max(1, 1)))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), 0 | (~ (_GLF_IDENTITY(1, max(1, 1)))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) - 0u), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 1u * (4u)), 4u, _GLF_IDENTITY(4u, 0u | (4u))))), _GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))), _GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u))))), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) | (4u)))), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | 0u))))), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u)), ((1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))) * (1u | 1u))))), (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), uint(4u)))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))) ^ 0u), (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), max((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_base) : uint(4u)))), (1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)), clamp((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), max((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_base) : uint(4u)))), (1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | (0u)))))), (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), max((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_base) : uint(4u)))), (1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)), (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), max((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_base) : uint(4u)))), (1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (_GLF_IDENTITY((1u & 1u), clamp((1u & 1u), (1u & 1u), _GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & _GLF_IDENTITY(1u, ~ (~ (1u))))) | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, max(4u, 4u)), 4u, _GLF_IDENTITY(4u, (4u) << 0u))))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u))), uint(4u)), _GLF_IDENTITY(min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (73572u & 0u) | (1u))) | (1u))), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))), (0u | 0u) ^ (min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, _GLF_IDENTITY(1u, (1u) | (1u))), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))) | (uint(4u))), uint(4u))), min((_GLF_IDENTITY((1u & 1u), min((1u & 1u), _GLF_IDENTITY((1u & 1u), ((1u & 1u)) * (1u | 0u)))) << _GLF_IDENTITY(uint(4u), uint(4u))), ((_GLF_IDENTITY(1u & 1u, (1u & 1u) - 0u)) << _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u)))), (1u ^ 1u) ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), max(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u)))) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 0u, 1u), (false ? _GLF_FUZZED(uvec3(82217u, 115038u, 143263u)) : uvec3(1u, 0u, 1u))), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))))))))) << 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))) - 0u)) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_size) : 4u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec2(4u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))))) / 1u)), uint(4u))), clamp(((_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec2(4u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))))) / 1u)), uint(4u))), ((_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec2(4u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))))) / 1u)), uint(4u))), ((_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec2(4u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))))) / 1u)), uint(4u))))), max((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))) | 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u + _GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))))), (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))))), (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))) << 0u), ~ (~ (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))))), (((_GLF_IDENTITY(1u & 1u, 0u ^ (1u & 1u))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec2(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(0u, 0u))))), _GLF_IDENTITY(uint(4u), min(uint(_GLF_IDENTITY(4u, min(4u, 4u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))) << 0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) ^ 0u)), uint(4u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - 0u))) & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))), (min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u)))) >> 0u), ~ (~ (min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u & 1u, uint(uvec4(1u & 1u, 1u, 1u, 1u))), (1u & 1u) + 0u)) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), (0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u)), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u))))))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), clamp(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), 0u | (~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), (~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))) >> 0u)))))), uint(4u))), _GLF_IDENTITY(min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), clamp(min((_GLF_IDENTITY((1u & 1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((1u & 1u), 0u ^ (_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), min(((1u & _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))))), ((1u & _GLF_IDENTITY(1u, (1u) ^ 0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) << 0u)), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uint(uint(4u))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uint(uint(4u)))))))))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) | (0u ^ 0u)), 4u)), _GLF_IDENTITY(4u, 1u * (4u))))))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))), uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), ~ (~ (_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, _GLF_IDENTITY(8u, max(8u, 8u))))), ~ (~ (uint(8u))))))), (uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) ^ uvec3(0u, 0u, 0u)))))))))))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(min(4u, 4u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(min(4u, 4u), (min(4u, 4u)) * 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), 0u | (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) >> 0u))), ~ (~ (_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), (uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) ^ uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), 0u | (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) >> 0u))), ~ (~ (_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), (uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) ^ uvec3(0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), 0u | (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) >> 0u))), ~ (~ (_GLF_IDENTITY(uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), (uvec3(4u, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) ^ uvec3(0u, 0u, 0u))))))))) / 1u)) ^ 0u))))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (1u & 1u) - 0u)) >> 0u)) | (_GLF_IDENTITY(1u & 1u, (1u & 1u) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (~ (~ (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, _GLF_IDENTITY(1u, 1u * (1u))))))))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), (_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u)) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), _GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u))))))), min(((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (true ? _GLF_IDENTITY(4u, uint(uvec3(4u, 0u, 0u))) : _GLF_FUZZED(174456u)))), uint(4u))), (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(4u), uint(4u))))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) - 0u)) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(4u), (uint(4u)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(((workgroup_base & virtual_gid) ^ 97685u)))), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))), uint(4u))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u)))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) : (1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(subgroup_size)))), clamp(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), _GLF_IDENTITY(uint(4u), 0u | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u))))) | (_GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 0u, 1u))), (uvec3(uvec3(uvec3(1u, 0u, 1u)))) >> uvec3(0u, 0u, 0u)))))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), ((_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))))) * 1u) | (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), (uvec3(uvec3(uvec3(1u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))) | (uvec3(uvec3(uvec3(1u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))))))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) - 0u)) << 0u)))), (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))) | (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), max((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), (1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(4u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(4u))))))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u + (4u))) ^ 0u)), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u + (4u))) ^ 0u)), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) / uvec3(1u, 1u, 1u))))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, uint(uint(4u))), 4u))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, 4u))), uint(4u))) - 0u)) | 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))))))) | 0u)) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(uvec3(uvec3(1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(4u), uint(4u))))), ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), _GLF_IDENTITY((1u & 1u), ~ (~ ((1u & 1u)))))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_local_id)))))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), uint(4u))), min(_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), uint(4u))), _GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), uint(4u)))))) | (_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), uint(4u))))))))), max(((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), uint(4u))))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))), uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))))))))))), ((1u & _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((~ workgroup_id))))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), max(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), ~ (~ ((1u & 1u)))) << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), 0u + ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 0u, 1u)), (_GLF_IDENTITY(uvec3(uvec3(1u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ((1u)) | (117374u & 0u)))) ^ 0u))), (uvec3(uvec3(1u, 0u, 1u))) | (uvec3(uvec3(1u, 0u, 1u))))) << uvec3(0u, 0u, 0u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, 0u | (4u))))))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), _GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), min(min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), min(((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))))), ((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) | 0u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) - 0u)) | 0u))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (false)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)), (buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(1, 1))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)), (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, 1, 1)))))) / 1)))) ^ 0u, 0u | ((buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, 1, 1)))))) / 1)))) ^ 0u))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(uint(-830.474)) : subgroup_local_id + 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(virtual_gid))) + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(-830.474), (uint(-830.474)) * (1u & 1u))) : subgroup_local_id + 1)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(uint(-830.474)) : subgroup_local_id + 1))))))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(virtual_gid))) + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(-830.474), (uint(-830.474)) * (1u & 1u))) : subgroup_local_id + 1)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(uint(-830.474)) : subgroup_local_id + 1))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(virtual_gid))) + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(-830.474), (uint(-830.474)) * (1u & 1u))) : subgroup_local_id + 1)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(uint(-830.474)) : subgroup_local_id + 1))))))) / 1u)))) / 1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))), (false ? _GLF_FUZZED((workgroup_id / workgroup_size)) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) / 1u, 1u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(20555)))) | (1))) / 1u, 1u, 0u, 0u))) ^ 0u, max(_GLF_IDENTITY((uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))) ^ 0u, ((uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))) ^ 0u) / _GLF_IDENTITY(1u, (1u) << 0u)), (uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u)), (uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))) | (uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))))) ^ 0u, _GLF_IDENTITY(min((uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))) ^ 0u, (uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))) / 1u, 1u, 0u, 0u))) ^ 0u), (true ? min((uint(uvec4((subgroup_local_id + 1) / 1u, 1u, 0u, 0u))) ^ 0u, (uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u)))))), max(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) / 1u, 1u, 0u, 0u))) ^ 0u) : _GLF_FUZZED(subgroup_size))))) / 1u)))), _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4221.5932) : injectionSwitch.x)) < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4221.5932) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4221.5932) : injectionSwitch.x)) < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))))))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4221.5932) : injectionSwitch.x)) < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))))), (false ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))))))) : _GLF_FUZZED(-66.40)))))) || false))) || false)) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || ((false))))), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), false || (_GLF_IDENTITY((false), false || ((false))))), bool(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(72.05, -7739.1490, -616.240, 3529.8129, 518.112, -5.6, -813.644, -9350.5951)) : mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(72.05, -7739.1490, -616.240, 3529.8129, 518.112, -5.6, -813.644, -9350.5951)) : mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))) / vec2(1.0, 1.0))), 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0))).x > injectionSwitch.y))))))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true)))) || (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bool((false))))))))), ! (! (bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))))))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))) && true)))) || false))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(91.37)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(511.052))))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false))))))) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false))))))) && true, bool(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false))))))) && true, true, true)))), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false)))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false)))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false)))))))))))) && true, bool(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(true, true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(bvec4(true, true, true, true)))))))) || false))))))) && true, true, true))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false))))))) && true, bool(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false))))))) && true, true, true)))), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false)))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false)))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) || false)))))))))))) && true, bool(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(true, true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(bvec4(true, true, true, true)))))))) || false))))))) && true, true, true))))) && true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false)))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(1u, 1u) * (uvec2(0u, 1u)))))), (false ? _GLF_FUZZED(uvec2(83712u, 75573u)) : uvec2(next_virtual_gid, 0u))))), (next_virtual_gid) | (next_virtual_gid))], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false)), true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))) || false), false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))) || false), false))), false, true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true && (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), true && (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))), false || (_GLF_DEAD(false)))))), bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(! (bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), true && (! (bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))))), true && (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false), bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (_GLF_DEAD(false)), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))), true && (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))), bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
}
