#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! _GLF_IDENTITY((false), ! (! ((false)))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) && true)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || false))) && ((! (false))))) && true)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, true))), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))), false, false)), bool(bvec4(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))), false, false)), true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) && true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-948.493) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), bool(bvec3(! _GLF_IDENTITY(((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) || false), true, true))))), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && ((! (false))))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && ((! (false))))) && true))) || false))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && ((! (false))))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && ((! (false))))) && true))) || false))), true, true))))) || false))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) || false), bool(bool(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (_GLF_IDENTITY(! (bool(! (false))), false || (! (bool(! (false)))))))), ! (! (bool(_GLF_IDENTITY(bool(! (false)), ! (_GLF_IDENTITY(! (bool(! (false))), false || (! (bool(! (false)))))))))))))))))), _GLF_IDENTITY(false, true && (false)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false, ((! (false)) || false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false)))))))))), ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((! (false))), (((! (false)))) || false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) && true)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) : _GLF_FUZZED(faceforward(-594.027, 0.3, 30.62)))))) && ((! (false))))) && true)), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, true))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, true))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, false)))))) && true), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))))))))) && true)))))))) || false)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0))) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, true))))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true, true))) && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))))) | ((_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))), ~ (~ (_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))))) | ((subgroup_id)), ((_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))))) | ((subgroup_id))) | 0u)))))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), uint(_GLF_IDENTITY(uvec4((((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 0u, (1u | 1u), 0u), min(uvec4((((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 0u, (1u | 1u), 0u), uvec4((((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 0u, (1u | 1u), 0u))))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0))).y))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(587.244), _GLF_FUZZED(-1321.9099)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.22), _GLF_FUZZED(3.3)), bvec2(false, _GLF_IDENTITY(false, true && (false))))).y)), 1u, 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.7) : 1.0)), injectionSwitch.y)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), injectionSwitch.y)), 1u, 1u)))), ~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + abs(0.0))), float(_GLF_FUZZED(-4.9)), bool(false))), injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)))))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)))))), 1u, 1u))), min(uvec4(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u, (0u) | 0u) ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), _GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))), (uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u))))) - uvec4(0u, 0u, 0u, 0u)))))), 1u), min(_GLF_IDENTITY(uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)))))), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u), clamp(uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)))))), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0)))))).y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u), uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(float(24307)) : min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)))))), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8313.4290, -291.971)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-236.618), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4675.2015)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u), uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)))))), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), uvec4(uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, min(2, 2))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u))), uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED(55.05)), bvec2(false, false))).y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), max(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ -459.018))), float(1.0), bool(true))))))))), 1u, 1u), _GLF_IDENTITY(min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u))))), (false ? _GLF_FUZZED((~ uvec4(87685u, 99776u, 162827u, 136882u))) : _GLF_IDENTITY(min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u))))), (false ? _GLF_FUZZED(floatBitsToUint(vec4(29.97, -2.2, 6.3, 3638.0747))) : min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))))))), 1u)))), clamp(uint(uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u)), uint(uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u)), uint(uvec2((uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), 1u))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) | 0)))) : _GLF_FUZZED(128084u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(uint(2), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), 1u), min(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, uint(uint(1u))), 1u))))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, 0u)), uint(uint(uint(uvec4(0u, 1u, 0u, 0u)))))))) ^ (~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), 1u, 1u), min(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u))))))), _GLF_IDENTITY(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), uvec4(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) / 1u), 1u, 1u) * (_GLF_IDENTITY(uvec4(uint(2), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), 1u, 1u), (uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0), min(0 << _GLF_IDENTITY(int(7), int(7)), 0 << _GLF_IDENTITY(int(7), int(7))))) | (2))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), min(uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, min(1u, 1u))), uvec4(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))))))))) - 0u))), ~ (~ (uint(2)))) : _GLF_FUZZED(workgroup_size))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), ! (! ((_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))), ! (! ((false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! ((false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) || false), bool(bool(! ((false))))))))) && true, ! (! ((_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! ((false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, true)), true, false, true))))))) && true), (_GLF_IDENTITY(false, false || (false))) && true), false, false), true)), _GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(injectionSwitch)) : injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.4)), bool(false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0), min(_GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0), ((vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), (vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-371.794), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9964.8375)), bvec2(true, false))).x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) + 0.0)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0), min(_GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0), ((vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), (vec4(injectionSwitch.x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-371.794), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9964.8375)), bvec2(true, false))).x, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) + 0.0)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
