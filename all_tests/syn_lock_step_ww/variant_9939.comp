#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u) | _GLF_IDENTITY((~ (uvec3(gl_NumWorkGroups))), max((~ (uvec3(gl_NumWorkGroups))), (~ (uvec3(gl_NumWorkGroups)))))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), max(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), max(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), (~ (uvec3(gl_NumWorkGroups))) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(uvec4(~ (uvec3(gl_NumWorkGroups)), 1u))), ~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), min(~ _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), ((uvec3(gl_NumWorkGroups))) | ((uvec3(gl_NumWorkGroups)))), ~ (uvec3(gl_NumWorkGroups)))))), ~ (uvec3(gl_NumWorkGroups))))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u) | _GLF_IDENTITY((~ (uvec3(gl_NumWorkGroups))), max((~ (uvec3(gl_NumWorkGroups))), (~ (uvec3(gl_NumWorkGroups)))))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), max(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), max(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), (~ (uvec3(gl_NumWorkGroups))) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(uvec4(~ (uvec3(gl_NumWorkGroups)), 1u))), ~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), min(~ _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), ((uvec3(gl_NumWorkGroups))) | ((uvec3(gl_NumWorkGroups)))), ~ (uvec3(gl_NumWorkGroups)))))), ~ (uvec3(gl_NumWorkGroups)))))))))))) - uvec3(0u, 0u, 0u)), (uvec3(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u))), 0u) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))))) | (~ (uvec3(gl_NumWorkGroups)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u) | (~ (uvec3(gl_NumWorkGroups)))), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | ((uvec3(gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(95083u, 172574u, 3060u)))), clamp(_GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (~ (uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(~ (uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), max(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))))), min(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), max(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))))), uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), max(uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))))))))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(44891u, 8478u, 16520u)) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(~ (gl_NumWorkGroups))), (uvec3(uvec3(~ (gl_NumWorkGroups)))) | (uvec3(uvec3(~ (gl_NumWorkGroups)))))), min(~ (gl_NumWorkGroups), ~ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(_GLF_IDENTITY(~ (gl_NumWorkGroups), ~ (~ (~ (gl_NumWorkGroups)))), ~ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | (~ (gl_NumWorkGroups))))), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))), (false ? _GLF_FUZZED(uvec3(134689u, 101872u, 133372u)) : ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))), (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))) ^ uvec3(0u, 0u, 0u)))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u ^ (3u))) >> 0u)), uvec3(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(3u), uvec3(3u)))), clamp(uvec3(uvec3(_GLF_IDENTITY(uvec3(3u), uvec3(3u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(3u), uvec3(3u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))), min(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))))), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))) * _GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) - 0u)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))), (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (false ? _GLF_FUZZED((uvec3(173160u, 63029u, 27005u) << uvec3(145422u, 29878u, 195276u))) : _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)))), (true ? uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))), min(_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))), ~ (gl_NumWorkGroups)))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) * _GLF_IDENTITY(((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u), 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY(((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u), 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))), max(((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u), 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u), 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(137213u, 199818u, 193547u)))))))) - uvec3(0u, 0u, 0u))) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) + (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) + (0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) / 1u), (0u | 0u) + (0u)), uint(uint(_GLF_IDENTITY(0u, (0u | 0u) + (0u)))))))) | (_GLF_IDENTITY(0u, (0u | 0u) + (0u)))), 0u, 0u)), 0u, _GLF_IDENTITY(0u, (0u) - 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) + (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) + (0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) / 1u), (0u | 0u) + (0u)), uint(uint(_GLF_IDENTITY(0u, (0u | 0u) + (0u)))))))) | (_GLF_IDENTITY(0u, (0u | 0u) + (0u)))), 0u, 0u)), 0u, _GLF_IDENTITY(0u, (0u) - 0u)) ^ uvec3(0u, 0u, 0u))))) - uvec3(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) ^ (gl_WorkGroupSize)), 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, uint(uint(1u)))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, uint(uint(1u)))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, uint(uint(1u)))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x))), 0u | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(85986u, 57239u, 166352u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, max(1u, 1u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) << uvec3(0u, 0u, 0u)))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) - uvec3(0u, 0u, 0u)))), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), clamp(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))) / uvec3(1u, 1u, 1u)), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))))), gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) << 0u))), 0u | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), (false ? _GLF_FUZZED(uvec3(92193u, _GLF_IDENTITY(142853u, (true ? 142853u : _GLF_FUZZED(subgroup_local_id))), 86158u)) : max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (1u) << 0u)))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), max(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), ~ (~ (uvec3(uvec4(gl_WorkGroupSize, 1u))))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (1u) - 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (1u) - 0u))))) + uvec3(0u, 0u, 0u)))), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(((144888u % 46036u) + 148400u), 1u * (((144888u % 46036u) + 148400u)))) : 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), (gl_WorkGroupSize) | (gl_WorkGroupSize))))) - uvec3(0u, 0u, 0u)), 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) | 0u)))))) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), min(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), gl_WorkGroupSize, gl_WorkGroupSize)).x))))) - 0u) >> 0u))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), min(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(1u, 1u, 1u) * (uvec3(uvec4(gl_WorkGroupID, 1u)))), uvec3(uvec4(gl_WorkGroupID, 1u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) ^ 0u)) | (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u)) | (subgroup_local_id)), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u)) | (subgroup_local_id))) >> 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.1)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.1)), bool(false))) * _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.2))))) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bvec4(false, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(true && _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (! (((false)))))))))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (! (((false))))))))))))), ! (! (bool((! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (! (((false))))))))))))))))))), ! (! (true && (false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), _GLF_IDENTITY(0, (0) - 0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))));
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), min(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sin(0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), (mat3x2(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(min(injectionSwitch, 2995.1734)), _GLF_IDENTITY(vec2(mat2x4(_GLF_FUZZED(min(injectionSwitch, 2995.1734)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat3(vec2(mat2x4(_GLF_FUZZED(min(injectionSwitch, 2995.1734)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0))))) : injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, 2995.1734)) : injectionSwitch)).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, 2995.1734)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) - 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(8.9), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(0, (0) | 0)))) : _GLF_FUZZED(-38289)))])), injectionSwitch, injectionSwitch), min(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(51.03))), injectionSwitch[1])), injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-105.333), min(_GLF_FUZZED(-105.333), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-105.333, max(_GLF_IDENTITY(-105.333, max(-105.333, -105.333)), _GLF_IDENTITY(-105.333, clamp(_GLF_IDENTITY(-105.333, float(mat2x3(-105.333, 1.0, 0.0, 0.0, 0.0, 1.0))), -105.333, -105.333))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-105.333, max(_GLF_IDENTITY(-105.333, max(-105.333, -105.333)), _GLF_IDENTITY(-105.333, clamp(_GLF_IDENTITY(-105.333, float(mat2x3(-105.333, 1.0, 0.0, 0.0, 0.0, 1.0))), -105.333, -105.333))))), float(mat3x2(_GLF_FUZZED(_GLF_IDENTITY(-105.333, max(_GLF_IDENTITY(-105.333, max(-105.333, -105.333)), _GLF_IDENTITY(-105.333, clamp(_GLF_IDENTITY(-105.333, float(mat2x3(-105.333, 1.0, 0.0, 0.0, 0.0, 1.0))), -105.333, -105.333))))), 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-105.333, max(_GLF_IDENTITY(-105.333, max(-105.333, -105.333)), _GLF_IDENTITY(-105.333, clamp(_GLF_IDENTITY(-105.333, float(mat2x3(-105.333, 1.0, 0.0, 0.0, 0.0, 1.0))), -105.333, -105.333))))), min(_GLF_FUZZED(_GLF_IDENTITY(-105.333, max(_GLF_IDENTITY(-105.333, max(-105.333, -105.333)), _GLF_IDENTITY(-105.333, clamp(_GLF_IDENTITY(-105.333, float(mat2x3(-105.333, 1.0, 0.0, 0.0, 0.0, 1.0))), -105.333, -105.333))))), _GLF_FUZZED(_GLF_IDENTITY(-105.333, max(_GLF_IDENTITY(-105.333, max(-105.333, -105.333)), _GLF_IDENTITY(-105.333, clamp(_GLF_IDENTITY(-105.333, float(mat2x3(-105.333, 1.0, 0.0, 0.0, 0.0, 1.0))), -105.333, -105.333)))))))))))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), false))).y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))) ^ 0u), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))) ^ 0u), 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-281.855), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)), bvec2(true, false))).y))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(false, ! (! (false)))));
   do
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), 0 ^ ((0 ^ 0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - 0)), 0 + (int(4))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, true, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, true, true)))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x)), injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, true, true))))) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))), (true) && true), (true) && true)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false, true)))))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch.y : _GLF_FUZZED(0.2))), 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.2))), 0.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4075.8505))))))), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.8)), float(injectionSwitch.y), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(0.2))), 0.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.5)), float(1.0), bool(true)))), float(_GLF_FUZZED(3795.4208)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))) - _GLF_IDENTITY(0.0, (0.0) + sin(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.7)), float(0.0), bool(true))))))))))) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-0.1)), bvec2(false, false))), injectionSwitch)))).x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((true && (true)), ((true && (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false || ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))) || (false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))), false, true))))), true, false))), false || (false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))), false, true)), (bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))), false, true))) && true)))), true, false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), bvec2(false, true))))).y)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), bvec2(false, true))))).y)), false, false))), bool(bvec2(! (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), bvec2(false, true))))).y)), false, false))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bool(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), (! (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, false)), bool(bool(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) && true)))) && (_GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec4(false, true, true, false)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), ! (! (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-48.73) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((false ? _GLF_FUZZED(-48.73) : injectionSwitch[0]), ((false ? _GLF_FUZZED(-48.73) : injectionSwitch[0])) / 1.0)), injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 0.0, 0.0, 1.0))), injectionSwitch[1])))).y))))), false, false)), bool(bvec2(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-48.73) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), false, false)), false)))) && (_GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec4(false, true, true, false)))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), false))))))), true && (_GLF_IDENTITY((true && (true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((true && (true)), false || ((true && (true))))), ! (! ((_GLF_IDENTITY((true && (true)), false || ((true && (true))))))))))))))), false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, true && (false)), false)))))), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, true)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true, false)))) || (bool(bvec4(false, true, true, false)))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), false))))))), true && (_GLF_IDENTITY((true && (true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((true && (true)), false || ((true && (true))))), ! (! ((_GLF_IDENTITY((true && (true)), false || ((true && (true)))))))))))))), (_GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), false))))))))), true && (_GLF_IDENTITY((true && (true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true && (true)), false || ((true && (true)))), true && (_GLF_IDENTITY((true && (true)), false || ((true && (true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY((true && (true)), false || ((true && (true))))))), (! (! ((_GLF_IDENTITY((true && (true)), false || ((_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), false || (true && (true)))) && true)))))))) || false))))))))) || false)), false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, true && (false)), false))), ((! (true)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, true && (false)), false)))) && true)))), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((45.44 + 2069.6929)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), _GLF_FUZZED(-2574.6417)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x) - 0.0) > injectionSwitch.y)), false, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), false), true, true)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true, false)))) || (bool(bvec4(false, true, true, false))))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-96.13)), vec2(_GLF_FUZZED(-8598.9010), (injectionSwitch)[1]), bvec2(false, true))).y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-93725) : _injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, ~ (~ (0)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))) && true))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))), 1), (ivec2(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)) - ivec2(0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), false, false)))))))))) || false))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true))), false, true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false, true, true))), false, true)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, _GLF_IDENTITY(true, ! (! (true)))))))), true && (_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, true))))), bool(bvec3(bool((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) || false)), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, true))))), false, true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true))), false, true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false, true, true))), false, true)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, _GLF_IDENTITY(true, ! (! (true)))))))), true && (_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, true))))), bool(bvec3(bool((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) || false)), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, true))))), false, true)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true))), false, true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false, true, true))), false, true)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, _GLF_IDENTITY(true, ! (! (true)))))))), true && (_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, true))))), bool(bvec3(bool((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) || false)), bool(bvec3((bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false, true))))), false, true)))))))), true), true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec3(1, (1 | 0), 0)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-6.5)))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), true, true)))));
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)) && true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)) && true), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)) && true), ! (! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)) && true))))))))))))) && true)))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(34155))) > 0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) || false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.6)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 1u))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0), 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))) || false)) || false))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), true))) || false)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || (! (false))))), false)))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), true))) || false)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || (! (false))))), false)))))), false, false), bvec3(bvec4(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), true))) || false)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || (! (false))))), false)))))), false, false), false))), false)))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(int(int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3))))))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec2(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) >> 0), 64)), 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-644.398, 6.1, 5019.7203, -6.9).a)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) < (1 | 1)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-4150.0342)), bvec2(false, false)))))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-4150.0342)), bvec2(false, false)))))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, ! (! (false))), true, false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false))))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))), false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (false || (false)) && _GLF_IDENTITY(true, false || (true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (false || (false)) && _GLF_IDENTITY(true, false || (true))), false))))))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (false || (false)) && _GLF_IDENTITY(true, false || (true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (false || (false)) && _GLF_IDENTITY(true, false || (true))), false))))))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), true))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))) && true))))))), bool(bvec3(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))))))), false, true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))) || false), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), false || ((false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))))), true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false)), false))))))))))), false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true) || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), false, true, false)))))))), bool(bvec3(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))))))), (false || (false)) && true), false)))))), bool(bvec4(false || (false), _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bvec2((false), true))), (false || (false)) && _GLF_IDENTITY(true, (true) || false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x) * exp(0.0)) < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))))))))), false, true)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, false || (false))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, false || (false)))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))) || false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), false))) && true)) || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), false, true, false)))) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y) || false))), true)))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), true && (false || (false)))) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true)))))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (false || (false)) && true), false)))))), bool(bvec4(false || (false), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))))))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bool(! (_GLF_IDENTITY(false, false || (false))))))) && true), false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))) / 1.0))), injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) && true, ! (! (_GLF_IDENTITY((false || (false)) && true, ! (! ((false || (false)) && true))))))), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1843.2525 + -5.9)), _GLF_FUZZED((6.0 / -7.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1843.2525 + -5.9)), _GLF_FUZZED((6.0 / -7.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y), false, true, true)))), true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))), false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) && true, ! (! (_GLF_IDENTITY((false || (false)) && true, ! (! ((false || (false)) && true))))))), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1843.2525 + -5.9)), _GLF_FUZZED((6.0 / -7.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1843.2525 + -5.9)), _GLF_FUZZED((6.0 / -7.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y), false, true, true)))), true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))), false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec3(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), ! (! (bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, false, true)))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), false || (false))), false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0))))).x < injectionSwitch.y)), true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0))))).x < injectionSwitch.y)), true)))))), bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)))))), bool(bvec4(false || (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0))))).x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))), false, true, false)))))))), false, true))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(true, true, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))))), true && (bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))), true)))))))))), true && (bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))) && true))), ! (! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))))))))))))))))))), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), bool(bvec2(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
}
