#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(2.6)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.3, -5.1)) : injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)), true, false, true)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(false), true, true, true)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4(822.933, 7.5, 5.5, 332.501, 298.384, -88.57, -3799.6881, -9.4, 8.6, 5.0, 288.847, _GLF_IDENTITY(1.9, (false ? _GLF_FUZZED(89.71) : 1.9)), 9.4, 8.0, _GLF_IDENTITY(7949.3213, max(7949.3213, _GLF_IDENTITY(7949.3213, max(7949.3213, 7949.3213)))), 5968.5141) , injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.7)), vec2(_GLF_FUZZED(45.99), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.7)), vec2(_GLF_FUZZED(45.99), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.7)), vec2(_GLF_FUZZED(45.99), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), true && (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), true && (! (false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), true && (! (false))))), false, true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) * 1u), uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), clamp(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) >> 0u)))), uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u, 0u))), 0u)), (uint(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u, 0u))), 0u))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) << 0u)), min(_GLF_IDENTITY(uint(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u, 0u))), 0u)), (uint(_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), min(_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), (uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u)) | (_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), max(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u))))), _GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), 0u, 0u)), uvec2(0u, 0u) + (uvec2(uvec4(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))))), 1u, 0u, 0u))), 0u), 0u, 0u))))))))) << 0u), _GLF_IDENTITY(uint(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u, 0u))), 0u)), (uint(uvec2(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u, 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))))) << 0u))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_id) : uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))), uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), (uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_id) : uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))), uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), uint(uvec3(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), (true ? 0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(44691u))), 1u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) << 0u), 1u, 1u, 1u)), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))))) | (uvec4(uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : 0u + (subgroup_id * subgroup_size)))) + subgroup_local_id)), 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))))) | (uvec4(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), 0u, 0u, 1u), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), 0u, 0u, 1u)) + uvec4(0u, 0u, 0u, 0u)))) + subgroup_local_id)), 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))))) | (uvec4(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), 0u, 0u, 1u), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), 0u, 0u, 1u)) + uvec4(0u, 0u, 0u, 0u)))) + subgroup_local_id)), 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), uint(uvec4(uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) - 0u) ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)) * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u + (_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) - 0u) ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)) * subgroup_size + subgroup_local_id), (uint(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) - 0u) ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) << 0u) + subgroup_local_id)) + 0u)), (0u + (_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(clamp(workgroup_id, 68661u, 3864u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) - 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), ((subgroup_id)) / 1u)) * subgroup_size + subgroup_local_id), (uint(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) - 0u) ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)) * subgroup_size + subgroup_local_id)) + 0u))) - 0u))), 1u, 1u, _GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | _GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec3((1u), 1u, 1u), (uvec3((1u), 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))), uint(uvec3(min(uint(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), 1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, (1u) * 1u))))), uint(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) << 0u))), 1u))), 1u, 1u))))), (_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(uint(uvec4(uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id)), 1u, 1u, 1u)), _GLF_IDENTITY(min(uint(uvec4(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), ~ (~ (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), 1u, 1u, 1u)), uint(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uint(1u))))))), 1u))), (min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | (uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))), 1u, 1u, 1u)))), uint(uvec4(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, 1u, 1u)))) ^ 0u)))) ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-63.43 / injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)) && true), ! (_GLF_IDENTITY(! ((false)), true && _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), ! (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(-85.98, -1.5), mat2(-39.70, 368.622, -2.2, 3.8)[1]))))) - vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, true)), ! (! (bool(bvec3(false, false, true)))))))), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))))))) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0)))))[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), false, false))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))))))), false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))) > injectionSwitch.y)))) || false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(985.907))) / 1.0, (false ? _GLF_FUZZED(514.382) : _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(985.907))) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(2.1) : injectionSwitch[0]))) * 1.0)) / 1.0), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1]))) + sin(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-89.79, float(_GLF_IDENTITY(float(-89.79), 1.0 * (float(-89.79))))), -56.32)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.1, 56.70)))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-244.000)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-244.000))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((vec2((injectionSwitch)[0], _GLF_FUZZED(-244.000))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-244.000))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), vec2(_GLF_FUZZED(-834.584), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)]))))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.1, 56.70)))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-244.000)), (vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2669.6855, -26.64)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-244.000))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_FUZZED(-834.584), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), vec2(_GLF_FUZZED(-8336.1265), (injectionSwitch)[1]), bvec2(false, true)))[1]))))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x : _GLF_FUZZED(2402.2309))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED((6.4 / 369.322))), mix(float(float(_GLF_IDENTITY(_GLF_FUZZED((6.4 / 369.322)), (_GLF_FUZZED((6.4 / 369.322))) - sin(0.0)))), float(_GLF_FUZZED(302.615)), bool(false))), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((6.4 / 369.322))), (false ? _GLF_FUZZED(0.4) : float(_GLF_FUZZED((6.4 / 369.322))))), mix(float(float(_GLF_FUZZED((6.4 / 369.322)))), float(_GLF_FUZZED(302.615)), bool(false))), bool(false))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, false), false))), true)), false)))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
