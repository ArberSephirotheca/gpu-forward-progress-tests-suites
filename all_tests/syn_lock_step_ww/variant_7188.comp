#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0)), float(float(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.5))) > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, false, true))) || false)) || false), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), false, false, true))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), 1.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, sqrt(1.0), 1.0), vec3(1.0, 0.0, abs(0.0))))), _GLF_IDENTITY(vec3(mat3(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), 1.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, sqrt(1.0), 1.0), vec3(1.0, 0.0, abs(0.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mat3(1.0) * (vec3(mat3(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), 1.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, sqrt(1.0), 1.0), vec3(1.0, 0.0, abs(0.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, false))))), false, false, true))) || false)) || false), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) && true)), true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED((mat4x2(-6.2, 26.91, -6.7, _GLF_IDENTITY(-61.51, mix(float(_GLF_FUZZED(57.66)), float(-61.51), bool(true))), -7038.7803, 13.78, -7.9, 1.9) * vec4(0.0, -485.468, 6.6, 7.2))) : max(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)) * mat4(1.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED((mat4x2(-6.2, 26.91, -6.7, _GLF_IDENTITY(-61.51, mix(float(_GLF_FUZZED(57.66)), float(-61.51), bool(true))), -7038.7803, 13.78, -7.9, 1.9) * vec4(0.0, -485.468, 6.6, 7.2))) : max(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)) * mat4(1.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), (bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), false, true)), (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), false, true))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), false, true), bvec3(bvec4(bvec3(bool(_GLF_DEAD(false)), false, true), true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))), false, true), true)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)), false, true), true))))))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | 0u, _GLF_IDENTITY(((gl_WorkGroupSize.x) | 0u) >> 0u, (((gl_WorkGroupSize.x) | 0u) >> 0u) | 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(79.06)), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (true ? _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], clamp(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(-400.271)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(79.06)), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (true ? _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], clamp(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(-400.271)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, abs(0.0), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || false))))), true && (bool(bvec4(false, false, true, true))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / 1u, min((workgroup_size) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u)) | (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u))) / 1u))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), ~ (~ (min(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) : _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) ^ 0u) * subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id)))) << 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))))) ^ 0u) * subgroup_size, 1u, 0u), clamp(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id)))) << 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))))) ^ 0u) * subgroup_size, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id)))) << 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))))) ^ 0u) * subgroup_size, 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id)))) << 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))))) ^ 0u) * subgroup_size, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id)))) << 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))))) ^ 0u) * subgroup_size, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id)))) << 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))))) ^ 0u) * subgroup_size, 1u, 0u)))))) | (uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) << (0u | 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec3(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | _GLF_IDENTITY((uint(subgroup_id)), (_GLF_IDENTITY((uint(subgroup_id)), max((uint(subgroup_id)), (uint(subgroup_id))))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u))))))))))) + subgroup_local_id, 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), ~ (~ (min(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) : _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u)) | (uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), ~ (~ (_GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), 0u | (uint(subgroup_id)))), 1u * (uint(uint(subgroup_id))))), subgroup_id))) ^ 0u) * subgroup_size, 1u, 0u))))))))))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) / 1)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 1 * (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0)), (int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0))) >> 0))) | (~ (~ (0))))) | (_GLF_IDENTITY(4, 1 * (4))))), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 1 * (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0)), (int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0))) >> 0))) | (~ (~ (0))))) | (_GLF_IDENTITY(4, 1 * (4))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 1 * (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0)), (int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0))) >> 0))) | (~ (~ (0))))) | (_GLF_IDENTITY(4, 1 * (4))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 1 * (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0)), (int(ivec3(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), 0, 0))) >> 0))) | (~ (~ (0))))) | (_GLF_IDENTITY(4, 1 * (4)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1, clamp(1, 1, 1)) * _GLF_IDENTITY((4), ((4)) ^ 0)), (true ? _GLF_IDENTITY(4, 1 * (4)) : _GLF_FUZZED(72848))))))) >> 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (! (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), (_GLF_IDENTITY(! (! ((true))), ! (! (! (! ((true))))))) || false)), true), false)), true, false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((true)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false)), true, false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false)), true, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false)), true, false)))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(bvec2(! ((true)), _GLF_IDENTITY(false, true && (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bvec4(! ((true)), false, false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, _GLF_IDENTITY(true, (true) && true), false)), (bool(bvec4((false), _GLF_IDENTITY(false, (false) || false), true, false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, _GLF_IDENTITY(false, false || (false)))), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0))) - 0.0)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)) || false), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), true))))))))))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), _GLF_IDENTITY((bool(bvec4((false), false, true, false))), true && ((bool(bvec4((false), false, true, false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), _GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, (_GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, bool(bvec2((bool(bvec4((false), false, true, false))) || false, true)))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), _GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, (_GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, bool(bvec2((bool(bvec4((false), false, true, false))) || false, true)))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, ((bool(bvec4((false), false, true, false))) || false) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((false), false || ((false))))), false, true, false)), true, true), true))), true))))), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false))), bool(bool((bool(bvec4((false), false, _GLF_IDENTITY(true, true && (true)), false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(_GLF_IDENTITY(bool((bool(bvec4((false), false, true, false)))), ! (! (bool((bool(bvec4((false), false, true, false)))))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, true, false)), (bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4((false), false, true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), bool(bool(false || (_GLF_IDENTITY((false), false || ((false)))))))), false, true, false)), true, _GLF_IDENTITY(true, false || (true))), true))), true))))), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((false), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(bvec2((bool(bvec4((false), false, true, false))), true))))))))), bool(bool((bool(bvec4((false), false, true, false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(bool((bool(bvec4((false), false, true, false))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) && true))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, ((bool(bvec4((false), false, true, false))) || false) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((false), false || ((false))))), false, true, false)), true, true), true))), true))))), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false))), bool(bool((bool(bvec4((false), false, _GLF_IDENTITY(true, true && (true)), false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(_GLF_IDENTITY(bool((bool(bvec4((false), false, true, false)))), ! (! (bool((bool(bvec4((false), false, true, false)))))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, true, false)), (bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4((false), false, true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), bool(bool(false || (_GLF_IDENTITY((false), false || ((false)))))))), false, true, false)), true, _GLF_IDENTITY(true, false || (true))), true))), true))))), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((false), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(bvec2((bool(bvec4((false), false, true, false))), true))))))))), bool(bool((bool(bvec4((false), false, true, false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(bool((bool(bvec4((false), false, true, false))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4((false), false, true, false))) || false, ((bool(bvec4((false), false, true, false))) || false) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((false), false || ((false))))), false, true, false)), true, true), true))), true))))), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false))), bool(bool((bool(bvec4((false), false, _GLF_IDENTITY(true, true && (true)), false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(_GLF_IDENTITY(bool((bool(bvec4((false), false, true, false)))), ! (! (bool((bool(bvec4((false), false, true, false)))))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, true, false)), (bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))), false, true, false)), (bool(bvec4((false), false, true, false))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4((false), false, true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), bool(bool(false || (_GLF_IDENTITY((false), false || ((false)))))))), false, true, false)), true, _GLF_IDENTITY(true, false || (true))), true))), true))))), (bool(bvec4((false), false, true, false))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((false), false, true, false)), (bool(bvec4((false), false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((false), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(bvec2((bool(bvec4((false), false, true, false))), true))))))))), bool(bool((bool(bvec4((false), false, true, false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (! (_GLF_IDENTITY((bool(bvec4((false), false, true, false))), bool(bool((bool(bvec4((false), false, true, false))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) && true)))))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))) && true)))), false, true, true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(55.83)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch)))), clamp((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(5.0, 5542.9438)) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-93.90) : 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-2046.5492), ((injectionSwitch) / vec2(1.0, 1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) / vec2(1.0, 1.0))[0], clamp(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[0])), _GLF_FUZZED(-8.3)), bvec2(true, false)))))) : _GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0))))) * abs(vec2(1.0, 1.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0)))), (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) / vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED((vec2(1.2, -3.9) + 21.40)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.3, max(9.3, 9.3))), (_GLF_FUZZED((vec2(1.2, -3.9) + 21.40)))[1]), vec2((_GLF_FUZZED((vec2(1.2, -3.9) + 21.40)))[0], _GLF_FUZZED((+ 3936.6403))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch))))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (! (! (! (false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (! (! (! (false)))))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
