#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(876.783)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-117.081)))), bool(true))), injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asin(0.2)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))) || (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(56.88), _GLF_FUZZED((6.1 - 700.883))), bvec2(false, false))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(56.88), _GLF_FUZZED((6.1 - 700.883))), bvec2(false, false))).x > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), float(_GLF_FUZZED(6.8)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? mat2x4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(-3705.8496, -7.5, 3885.6668, -63.05, -127.739, 4216.6335, 9.0, 8.3))))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true), true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(min(2.3, -8.8)))))), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(vec2(-0.7, -21.83))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4.2 - 126.705)), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], 0.0 + (_GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-0.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || (false)))), (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && _GLF_IDENTITY(true, bool(bool(true))))), true, true, false))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && _GLF_IDENTITY(true, bool(bool(true))))), true, true, false)))))))) || false))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-635.720, 7.4)) : injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false || (_GLF_IDENTITY(true, true && (true)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)))))))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-608.450), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, false || (true))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8011.4638, -4608.1486)) : injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(8011.4638, -4608.1486)), (_GLF_FUZZED(vec2(8011.4638, -4608.1486))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(8011.4638, -4608.1486)), (_GLF_FUZZED(vec2(8011.4638, -4608.1486))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) : injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8011.4638, -4608.1486)) : injectionSwitch)).x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))) / 1.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(false, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(false, true, true))))))))))))) && true), false, false))))))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size)), 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(7484u, 35954u, 103024u)), max(_GLF_FUZZED(uvec3(7484u, 35954u, 103024u)), _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)))) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) | (_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) | (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u)), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), 0u, 1u, 1u))) * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, _GLF_IDENTITY(135324u, ~ (~ (135324u))))) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u, 1u)) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) - 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u), min((uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) - 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u), min((uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0u))), 0u, 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) | (0u & 171358u)), 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4266.3661)), bvec2(true, false))).x))))), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-61.07)))))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) - 0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_id, subgroup_id)) * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) + 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (subgroup_size)))), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(subgroup_id))), 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), uint(uvec3(uint(uvec2(0u, 0u)), 1u, 1u)))) : _GLF_FUZZED(workgroup_base))), 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)) * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) | 0u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(1u, (1u) | (1u))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(7484u, 35954u, 103024u), ~ (~ (_GLF_IDENTITY(uvec3(7484u, 35954u, 103024u), clamp(uvec3(7484u, 35954u, 103024u), uvec3(7484u, 35954u, 103024u), uvec3(7484u, 35954u, 103024u))))))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 1u * (uint(subgroup_id * subgroup_size)))) / 1u))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (false ? _GLF_FUZZED(uvec3(7484u, 35954u, 103024u)) : uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(uvec3(174124u, 177724u, 135324u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u ^ 0u)) * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)) << uvec3(0u, 0u, 0u))))))))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)) / 1u)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id))))) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))))));
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) + 0))), (uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) + 0)))) + 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_local_id) : next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), 0u ^ (max(next_virtual_gid, next_virtual_gid))))))], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)), (_GLF_IDENTITY(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)), (false ? _GLF_FUZZED(mat2x3(-5.1, -11.98, 2.5, -469.316, 1.5, -658.910)) : mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, 1.0, 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(3060.7349) : float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(158.323)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, 0.0)) + (1.0)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2.8), min(_GLF_FUZZED(-2.8), _GLF_FUZZED(-2.8))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-9562.2644)), bool(false))))), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2.8), max(_GLF_FUZZED(-2.8), _GLF_FUZZED(-2.8))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.8))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -95.39))), bool(false))), 0.0, 0.0)))))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x3((injectionSwitch.x), 0.0, 0.0, 1.0, abs(1.0), 1.0))) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0)), (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) / 1.0)), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0)), 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0))))))))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.7))), 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (true ? _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3(_GLF_IDENTITY(0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) - 0.0))) : _GLF_FUZZED(-9322.7879)))) + 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-508.309)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.8, (-2.8) / 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y)))) && true))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(156.931) : 1.0)))), 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0 * (determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED((+ -56.50)) : max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), float(vec2(max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))))), 0.0, 0.0, 1.0))), vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (false ? _GLF_FUZZED(422.995) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3((0.0), 1.0, 1.0))))) / 1.0))), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.0) : 0.0)), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(573.135)), bool(false))), 1.0))))), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(85.80))))))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (dot(vec4(0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec4(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec4(5.6, -8.0, 15.80, 216.013))))))))) > injectionSwitch.y)))) && true)))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(32.17), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.17), (_GLF_FUZZED(32.17)) / abs(1.0)), _GLF_FUZZED(32.17), _GLF_FUZZED(32.17))) : _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(32.17), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.17), (_GLF_FUZZED(32.17)) / abs(1.0)), _GLF_FUZZED(32.17), _GLF_FUZZED(32.17))) : _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])))).x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.7))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
