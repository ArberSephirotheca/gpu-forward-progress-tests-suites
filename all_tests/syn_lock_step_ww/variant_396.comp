#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-72.23, 217.092)) : injectionSwitch))) / vec2(1.0, 1.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-72.23, 217.092)) : injectionSwitch))) / vec2(1.0, 1.0)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))).y)) * (injectionSwitch)).y) || _GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-7.3)), _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(-7.3)), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), (true ? _GLF_FUZZED(-7.3) : _GLF_FUZZED(-7720.7688)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0)), (mat2(float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), (true ? _GLF_FUZZED(-7.3) : _GLF_FUZZED(-7720.7688)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))), max((_GLF_IDENTITY(float(_GLF_FUZZED(-7.3)), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), (true ? _GLF_FUZZED(-7.3) : _GLF_FUZZED(-7720.7688)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0)), (mat2(float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), (true ? _GLF_FUZZED(-7.3) : _GLF_FUZZED(-7720.7688)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(float(_GLF_FUZZED(-7.3)), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), (true ? _GLF_FUZZED(-7.3) : _GLF_FUZZED(-7720.7688)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0)), (mat2(float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), (true ? _GLF_FUZZED(-7.3) : _GLF_FUZZED(-7720.7688)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))))) / 1.0), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).y) || false)), false || ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7827.8437))))) && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? 5.4 : -38.82)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9718.7475)), bvec2(true, false))).x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), true, false)))))) || false), ! (! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false, true))))))))))) || (false), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-879.537 / (-51.46 * -2.2)))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, false || (true))))) < injectionSwitch.y)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))))))))))))) || (false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-85.23), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), _GLF_IDENTITY(1, max(1, 1))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1395.6378)), bvec2(true, false))))), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(14.77)), _GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0), bool(true))), 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-85.23), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), _GLF_IDENTITY(1, max(1, 1))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1395.6378)), bvec2(true, false))))), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(14.77)), float(1.0), bool(true))), 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))).x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0))))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(133036u)), _GLF_FUZZED(-17.33)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.4, min(-2.4, -2.4)))), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.4, min(-2.4, -2.4)))), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.4, min(-2.4, -2.4)))), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.4, min(-2.4, -2.4)))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.4, min(-2.4, -2.4)))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.4, min(-2.4, -2.4)))), float(injectionSwitch.y), bool(true))))))), injectionSwitch.y))))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))))) && true)) && true)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x3(vec2(0.0, 0.0), 0.0, determinant(mat4(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat4x3(vec2(0.0, 0.0), 0.0, determinant(mat4(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY((subgroup_size) << (0u ^ 0u), min((subgroup_size) << (0u ^ 0u), (subgroup_size) << (0u ^ 0u)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))), workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))), clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))))), _GLF_IDENTITY((workgroup_base) >> _GLF_IDENTITY(0u, (0u) - 0u), 0u | ((workgroup_base) >> 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), 0u | (workgroup_base)), _GLF_IDENTITY((workgroup_base) >> _GLF_IDENTITY(0u, (0u) - 0u), 0u | ((workgroup_base) >> 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), 0u | (workgroup_base)), _GLF_IDENTITY((workgroup_base) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, uint(uint((0u) - 0u)))), 0u | ((workgroup_base) >> 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(_GLF_IDENTITY(uint(uint(uint(2u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(2u)), 0u ^ (uint(uint(2u)))), (_GLF_IDENTITY(uint(uint(2u)), 0u ^ (uint(uint(2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(2u)), 0u ^ (uint(uint(2u)))), uint(uvec4(_GLF_IDENTITY(uint(uint(2u)), 0u ^ (uint(uint(2u)))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u)))))), (uint(_GLF_IDENTITY(uint(uint(2u)), 0u ^ (uint(uint(2u)))))) | (uint(_GLF_IDENTITY(uint(uint(2u)), 0u ^ (uint(uint(2u))))))), uint(uint(uint(2u))))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), min(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), 1))), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)))), 1, 0))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), min(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), min(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), min(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))) - 0)) ^ (0 << _GLF_IDENTITY(int(1), int(1))))), (0) + 0)), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, min((0) + 0, (0) + 0)))), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(1, ~ (~ (1))), 0)))), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ((0) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, (0) / 1)))) - 0))), (false ? _GLF_FUZZED(ivec2(-58303, 68213)) : ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) + 0, 0 ^ ((0) + 0)), ((0) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, (0) / 1)))) - 0))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), max(_GLF_IDENTITY(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), (false ? _GLF_FUZZED(ivec4(54827, 81273, -67324, -24511)) : ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))), ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))), (false ? _GLF_FUZZED(ivec2(17488, 52501)) : ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))))))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) + 0)), ivec2(_GLF_IDENTITY(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), min(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))))))), min(~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) + 0)), ivec2(_GLF_IDENTITY(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), min(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))))))), ~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) + 0)), ivec2(_GLF_IDENTITY(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), min(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0), ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))))))))))))))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), 0 | (_GLF_IDENTITY(min(0, 0), max(min(0, 0), min(0, 0)))))))), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))))))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ~ (~ ((0) + 0))))), 1, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec3(0, 1, 0))) : _GLF_FUZZED(-88754)))))))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0) + 0 : _GLF_FUZZED(30530))))), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ((0) + 0) ^ 0))), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), 0 | ((0)))) * 1) + 0)), _GLF_IDENTITY(1, (1) * 1), 0))))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6)))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6)))))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (~ (0)) >> (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (~ (0)) >> (0 >> _GLF_IDENTITY(int(8), int(8))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (~ (0)) >> (0 >> _GLF_IDENTITY(int(8), int(8))))), (true ? ~ (_GLF_IDENTITY(~ (0), (~ (0)) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) : _GLF_FUZZED(-93157))), ~ (_GLF_IDENTITY(~ (0), (~ (0)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))))))) | 0)))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), (0) + 0)), 1, 0)), (ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14413) : 1)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))))), (false ? _GLF_FUZZED(73994) : ~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-80687)))))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), (0) + 0)), 1, 0))) * ivec2(1, 1))))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(_GLF_IDENTITY(6, min(6, 6))), ivec2(6))))))) | (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(27690)), int(ivec3((true ? 0 : _GLF_FUZZED(27690)), 0, 0))))))))))), min(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(27690)), int(ivec3((true ? 0 : _GLF_FUZZED(27690)), 0, 0))))))))))), int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(27690)), int(ivec3((true ? 0 : _GLF_FUZZED(27690)), 0, 0))))))))))))), ~ (~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(_GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), (_GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), (ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))) - ivec2(0, 0))) | (ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)))), 1))), max(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec4(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), 0 ^ (_GLF_IDENTITY(0, (0) + 0)))), (ivec2(1, _GLF_IDENTITY(0, (0) + 0))) - (ivec2(0, 0) | ivec2(0, 0))), 1, 0)))))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)), int(ivec4(_GLF_IDENTITY(int(ivec4(0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(11911)) : _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), clamp(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), 0, 1)), 0 | (int(ivec4(0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)))), 1, 1, 0)))))), ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0))))))), ~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))), clamp(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))), ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))), ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0 & -30584) ^ (0)), (0) + 0)), 1, 0)), _GLF_IDENTITY(ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0)), min(_GLF_IDENTITY(ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0)), ivec2(0, 0) | (ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0)))), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0)))))))))))))), 0 | (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), int(ivec4(_GLF_IDENTITY(0, (0) + 0), 1, 0, 1)))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, max((0) + 0, (0) + 0)))), 1, 0)), 0))))), clamp(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ((0) + 0) | ((0) + 0)))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0))))) + 0)), 1, 0)), 0))))), ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(_GLF_IDENTITY(ivec3(ivec2(ivec4(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1)), _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, true && (true)) ? (0) : _GLF_FUZZED((87687 & int(99.86))))) + 0)), 1, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (_GLF_IDENTITY(ivec2(0, 1), max(ivec2(0, 1), ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 1))))))))), max(ivec3(ivec2(ivec4(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1)), _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, true && (true)) ? (0) : _GLF_FUZZED((87687 & int(99.86))))) + 0)), 1, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (_GLF_IDENTITY(ivec2(0, 1), max(ivec2(0, 1), ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 1))))))))), ivec3(ivec2(ivec4(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1)), _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, true && (true)) ? (0) : _GLF_FUZZED((87687 & int(99.86))))) + 0)), 1, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (_GLF_IDENTITY(ivec2(0, 1), max(ivec2(0, 1), ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 1))))))))))))))), ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), ((0)) * 1)), ~ (~ (~ (_GLF_IDENTITY((0), ((0)) * 1))))))) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0)))))))))))), 0 + ((~ (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), (false ? _GLF_FUZZED(-8576) : 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(0, 1)), 0 + (int(ivec2(0, 1)))), (_GLF_IDENTITY(int(ivec2(0, 1)), 0 + (int(ivec2(0, 1))))) | 0))))) + 0)), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))))), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))), clamp(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), 0 + ((0)))) - 0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))), ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, 0 ^ (0)))), _GLF_IDENTITY(ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-80537) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74249))))))), (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0)))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-80537) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74249))))))), (0) + 0)), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), ivec2(ivec3(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), 1, 0)), 0))))) >> (ivec2(0, 0) ^ ivec2(0, 0))))))))))))))))))))) : _GLF_FUZZED(-21802))), 1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u & 7699u)))), (next_virtual_gid) >> 0u)], uint(_GLF_IDENTITY(2, (2) | (2))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | (64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}
