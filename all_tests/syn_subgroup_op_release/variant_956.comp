#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat4x2 _f0;
 ivec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 uint virtual_gid;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 uvec4 _f4;
 uvec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_2 {
 uint workgroup_size;
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_2 _f2;
 float _f3;
 mat3 _f4;
 int _f5;
 float _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2x3(1.0), _GLF_struct_0(mat2(1.0)), _GLF_struct_2(gl_WorkGroupSize.x, _GLF_struct_1(mat4x3(1.0), mat3x4(1.0), mat4x3(1.0), uvec2(1u), uvec4(1u), uvec2(1u), ivec2(1))), 1.0, mat3(1.0), 1, 1.0);
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_3._f2.workgroup_size * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(mat3x4(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_4(mat4x2(1.0), ivec4(1), ivec2(1))));
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_struct_replacement_6._f0.virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x] = 1;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
      {
       subgroupAll(false);
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
     subgroupAll(true);
    }
  }
 else
  {
  }
}
