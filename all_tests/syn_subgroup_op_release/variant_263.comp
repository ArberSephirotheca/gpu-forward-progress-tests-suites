#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat3x2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 _GLF_struct_10 _f1;
 bvec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 uvec4 _f1;
 ivec4 _f2;
 uvec4 _f3;
 uint next_virtual_gid;
 ivec2 _f4;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 float _f3;
 mat2x4 _f4;
 bvec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 mat3x4 _f1;
 _GLF_struct_7 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_11 _f2;
 mat4x3 _f3;
 mat3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat3 _f1;
 mat2x4 _f2;
 ivec4 _f3;
 mat2 _f4;
 ivec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 uvec2 _f1;
 bvec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 uvec3 _f1;
 _GLF_struct_2 _f2;
 mat3 _f3;
 _GLF_struct_3 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 bvec3 _f1;
 float _f2;
 mat4x2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_local_id;
 _GLF_struct_4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), false, false, false))))))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-94704)))), clamp(1 * (_GLF_IDENTITY(5, (false ? _GLF_FUZZED(-4717) : _GLF_IDENTITY(5, (5) - 0)))), 1 * (5), 1 * (5))))), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (5), clamp(1 * (5), 1 * (5), 1 * (5))))), int(5)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (5), clamp(1 * (5), 1 * (5), 1 * (5))))), int(5)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (5), clamp(1 * (5), 1 * (5), 1 * (5))))), int(5)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) / ivec3(1, 1, 1))))) >> _GLF_IDENTITY(int(5), int(5)))) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-42395) : 2)), 2)), 2))))), int(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), min((0 << _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(2), int(2))))), 0))), (_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), int(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(ivec2(0 << _GLF_IDENTITY(int(2), int(2)), 1)), int(ivec3(int(ivec2(0 << _GLF_IDENTITY(int(2), int(2)), 1)), 1, 1))))), (0 << _GLF_IDENTITY(int(2), int(2))))), 0)))) || false), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-42395) : 2)), 2)), 2))))), int(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), max(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), int(ivec4((0 << _GLF_IDENTITY(int(2), int(2))), 1, 1, 1))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), clamp((0 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), min((0 << _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(2), int(2))))))), (0 << _GLF_IDENTITY(int(2), int(2))))), 0))), (_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), int(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 | 0) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) << 0))), 1)), int(ivec3(int(ivec2(0 << _GLF_IDENTITY(int(2), int(2)), 1)), 1, 1))))), (0 << _GLF_IDENTITY(int(2), int(2))))), 0)))) || false)) || false)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat3x2(1.0), _GLF_struct_1(vec3(_GLF_IDENTITY(1.0, sin(0.0) + (1.0))), _GLF_struct_0(mat4(1.0), bvec3(true), 1.0, mat4x2(1.0), uvec3(1u))), gl_SubgroupInvocationID, _GLF_struct_4(ivec4(1), uvec3(1u), _GLF_struct_2(mat3x2(1.0), uvec2(1u), bvec4(true), mat3(1.0)), mat3(1.0), _GLF_struct_3(mat4x2(1.0), mat3(1.0), mat2x4(1.0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(-47688) : _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1))))))), ~ (~ ((_GLF_IDENTITY(1, (1) | (1)))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-64248) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) | ((1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), clamp((1), (1), (1)))), _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - 0), _GLF_IDENTITY(1, (1) | (1))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-64248) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) | ((1)), (0 << _GLF_IDENTITY(int(1), int(1))) | (((1)) | ((1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), clamp((1), (1), (1)))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(14389) : 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)) | (1), _GLF_IDENTITY(((1) | (1)), int(_GLF_ONE(1.0, injectionSwitch.y)) * (((1) | (1)))) | (_GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ 0)))))))) - (1 ^ 1)))), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(inverse(mat2(-7.1, -4570.1285, -73.33, -7341.2605))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec3(-8308.0385, 82.01, 78.62), vec3(78.14, -1784.9177, 4.8))) : 1.0))), mat2(1.0) * (mat2(1.0))))), _GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), ivec4(_GLF_IDENTITY(1, (0 | 0) + (_GLF_IDENTITY(1, 0 ^ (1))))))), ivec3(1)), bvec3(true), mat2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, (true) || false))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (false ? _GLF_IDENTITY(_GLF_FUZZED(-16883), (_GLF_FUZZED(-16883)) / 1) : int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6)))))); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(196915u, 121585u, 111274u)) : uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), 0u), (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(196915u, 121585u, 111274u)) : uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), 0u)) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(196915u, 121585u, 111274u)) : uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), 0u), (true ? uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(196915u, 121585u, 111274u)) : uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), 0u) : _GLF_FUZZED(uvec4(194366u, 63873u, 136258u, 192282u))))))))).x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), subgroup_size, subgroup_size))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(gl_NumWorkGroups.x, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, (3u) - 0u), 3u))), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))), 1u))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(gl_NumWorkGroups.x, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, (3u) - 0u), 3u))), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))), 1u)))))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(gl_NumWorkGroups.x, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, (3u) - 0u), 3u))), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))), 1u)))))))))) * 1u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1))))) != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), ~ (_GLF_IDENTITY(~ (ivec3(_injected_loop_counter, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ivec3(ivec3(~ (ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) != 1)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1), 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), injectionSwitch.x)))) / 1))))) != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), ~ (_GLF_IDENTITY(~ (ivec3(_injected_loop_counter, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ivec3(ivec3(~ (ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) != 1)) || false))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-8.3 + 80.93))), bool(false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), ((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) || false)) || false)), false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-8.3 + 80.93))), bool(false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), ((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) || false)) || false)), false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-8.3 + 80.93))), bool(false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), ((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) || false)) || false)), false)), true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, int(ivec2(0, 1)))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((true ? -8.9 : (6.3 + 320.122)))), float((injectionSwitch)[0]), bool(true))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((true ? -8.9 : (6.3 + 320.122)))), float((injectionSwitch)[0]), bool(true))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]))), vec2(_GLF_FUZZED(2.8), _GLF_FUZZED((0.9))), bvec2(false, false))).x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))), ((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), max(uvec3(8u), uvec3(8u))))))), min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))), ((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), max(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))), ((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), max(uvec3(8u), uvec3(8u))))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))), ((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), max(uvec3(8u), uvec3(8u))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-72674) : 3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), (~ (3)) / 1))), clamp(3, _GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((3), (false ? _GLF_FUZZED(18921) : _GLF_IDENTITY((3), ((3)) >> 0))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 3)), (false ? _GLF_FUZZED(-72674) : 3)), _GLF_IDENTITY(3, (false ? _GLF_IDENTITY(_GLF_FUZZED(-72674), max(_GLF_FUZZED(-72674), _GLF_FUZZED(-72674))) : 3))))), (true ? int(3) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(68875, (68875) >> 0), (68875) - 0))))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (int(3)) ^ 0), int(3))))) * 1)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), (true ? _GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), clamp(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), ~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(3, min(3, 3)))))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), ~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))))) : _GLF_FUZZED(_injected_loop_counter))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-72674) : 3)), max(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 3)), (false ? _GLF_FUZZED(-72674) : 3)), _GLF_IDENTITY(3, (false ? _GLF_FUZZED(-72674) : 3))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(true, (true) || false))), false)), bool(bvec4(bool(bvec2(bool(bool(_GLF_IDENTITY(true, (true) || false))), false)), true, true, true)))))) && true) ? int(3) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(68875, (68875) >> 0), (68875) - 0))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(67.66)), bool(false))) > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))));
      }
     else
      {
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_5.subgroup_local_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_8(_GLF_struct_6(bvec3(true), mat4x3(1.0), bvec2(true), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))) - sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(mat2(vec2(0.0, 1.0), length(vec3(0.0, 0.0, 0.0)), 0.0), mat2(mat4(mat2(vec2(0.0, 1.0), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0))) - sin(vec3(0.0, 0.0, 0.0))))), 0.0)))))))) / 1.0), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)), mix(float(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false))) + sin(0.0))), float(_GLF_FUZZED(-770.563)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true))))), (length(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true)))))) - 0.0), 0.0, 1.0, 1.0)), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)), max(min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)), max(min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec4(-7116.8505, -7.6, 44.01, -756.524)) : _GLF_IDENTITY(min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)), max(min(vec4(0.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(vec4(9.5, -1.0, -90.04, -62.48)))))) * vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY((-5.8 / -711.273), float(mat4x3((-5.8 / -711.273), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)), 1.0, 0.0))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0))), _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), cos(0.0))), 1.0, 1.0, 1.0)), (float(mat3x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-5.8 / -711.273))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.7))), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(mix(972.352, 5.9, true))))), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8949.7346) : 0.0)), 0.0)), 0.0, 0.0)), abs(1.0))), cos(0.0), 1.0, 1.0, 1.0))) / sqrt(1.0))))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(43.69))), 1.0, 1.0, 1.0)))), 1.0)) - mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4(1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), 1.0, 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.5)), bool(false)))))), float(_GLF_FUZZED(7900.6191)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-76.50) : 0.0)), 0.0)))), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))), 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - sin(0.0))), float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - sin(0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))))), float(_GLF_FUZZED((_GLF_IDENTITY(2.6, (2.6) * exp(0.0)) / -9541.6189))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - 0.0), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-53.83) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-223.473) : _GLF_IDENTITY(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (1.0)))), 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat2x3(vec4(1.0, 1.0, 1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), mix(vec4(_GLF_FUZZED(-50.87), (vec4(mat2x3(vec4(1.0, 1.0, 1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[1], _GLF_FUZZED(88.68), (vec4(mat2x3(vec4(1.0, 1.0, 1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[3]), vec4((vec4(mat2x3(vec4(1.0, 1.0, 1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[0], _GLF_FUZZED(-4240.4772), (vec4(mat2x3(vec4(1.0, 1.0, 1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[2], _GLF_FUZZED(-2.3)), bvec4(true, false, true, false))))))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.9)), float(0.0), bool(true))), 1.0, 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(-732.250)) : 0.0)), 0.0)), 1.0, 1.0)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7696.5240))), 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7696.5240))), 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7696.5240))), 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(43.69))), 1.0, 1.0, 1.0)))), 1.0)) - mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-7.5)), bool(false))))))), 1.0), (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(vec3(_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0), 1.0, 0.0)))), 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))))), float(_GLF_FUZZED((2.6 / -9541.6189))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.4)), bool(false)))), float(_GLF_FUZZED((-4.7 - 7.3))), bool(false))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(outerProduct(vec4(-23.46, -3.1, -18.43, 79.98), vec4(-96.45, -8.6, 92.68, 13.69))) : mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.4)), bool(false)))), float(_GLF_FUZZED((-4.7 - 7.3))), bool(false))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(25.88))), 1.0, 1.0)))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true))), (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true))) : _GLF_FUZZED(-8.4))))), 0.0, 1.0, 1.0)), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), min(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec4(0.0, 0.0, 0.0, 0.0)))), min((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(mix(vec4(((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[0], ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[2], _GLF_FUZZED(14.07)), vec4(_GLF_FUZZED(-0.2), _GLF_FUZZED(vec4(58.77, 0.1, 4135.2214, -2380.5524).x), _GLF_FUZZED(821.311), ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[3]), bvec4(false, false, false, true)), (mix(vec4(((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[0], ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[2], _GLF_FUZZED(14.07)), vec4(_GLF_FUZZED(-0.2), _GLF_FUZZED(vec4(58.77, 0.1, 4135.2214, -2380.5524).x), _GLF_FUZZED(821.311), ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))[3]), bvec4(false, false, false, true))) * mat4(1.0))))) * vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8624.2026), mix(float(_GLF_FUZZED(0.6)), float(_GLF_IDENTITY(_GLF_FUZZED(-8624.2026), clamp(_GLF_FUZZED(-8624.2026), _GLF_FUZZED(-8624.2026), _GLF_FUZZED(-8624.2026)))), bool(true))) : 0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.7) : 1.0)), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(43.69))), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))))) - mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4(1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(250.766) : 0.0))), float(_GLF_FUZZED(float(-58065))), bool(false))), 0.0)), 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(250.766) : 0.0))), float(_GLF_FUZZED(float(-58065))), bool(false))), 0.0)), 0.0, 1.0, 1.0)) * mat3(1.0))), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), _GLF_IDENTITY((mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(1.9)), vec2((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[0], _GLF_IDENTITY((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[1], min((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[1], (vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[1]))), bvec2(true, true))))), 0.0, 1.0, 1.0)), length(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))), min((true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))), (true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))))))), float(_GLF_FUZZED((2.6 / -9541.6189))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(1.9)), vec2(_GLF_IDENTITY((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[0], max((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[0], (vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[0])) : _GLF_FUZZED(-694.002))), _GLF_IDENTITY((vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[1], min((vec2(mat3x2(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-74.55, -6.8)) : vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0)))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))], (vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)))[1]))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))) || false), true))))), 0.0, 1.0, 1.0)), length(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, sqrt(0.0), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), max(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))), min((true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))), (true ? 0.0 : _GLF_FUZZED(distance(vec3(8611.4995, 59.22, 13.51), vec3(322.233, -8510.8449, 1.3)))))))), float(_GLF_FUZZED((2.6 / -9541.6189))), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-1.0, -825.658, -8.1, -64.63, 6678.7153, -98.36, 349.843, -1.4, -64.05, -362.611, -812.494, -8.8, 8803.6050, 4280.1627, -1488.1842, 950.338)))))), float(_GLF_IDENTITY(mat4(1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(0.9))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), injectionSwitch.y) * (1.0)))))), mat4x3(mat4(_GLF_IDENTITY(mat4x3(1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat4(-381.973, -83.74, -2.9, -1.9, -809.027, -4.1, 5.1, 590.121, -1.4, -0.7, 3743.7391, 68.10, -3.2, 0.2, 72.48, 61.79))) : 0.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0)))).y), 0.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(240.443) : 1.0)), injectionSwitch.y), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)), 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (true ? vec4(1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(2.4, 5.5, -4522.7547, -431.300))))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))) - sin(0.0), max((_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))) - sin(0.0), _GLF_IDENTITY((_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))) - sin(0.0), clamp((_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))) - sin(0.0), (_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))) - sin(0.0), (_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))) - sin(0.0))))))), (mat4x3(1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-8.1), _GLF_FUZZED(-276.107), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-26.47, (-26.47) * 1.0))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.7 / 725.355))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.5), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(max(vec2(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(8.9, min(8.9, 8.9)), mix(float(_GLF_IDENTITY(8.9, min(8.9, 8.9))), float(_GLF_FUZZED(5.4)), bool(false)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 0.0 + (_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))))) / 1.0), 1.0, 1.0, 0.0, round(length(normalize(1.0))))) + mat4x3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(39.29)), float(0.0), bool(true))), 0.0, 0.0))), 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7568.6898) : 0.0, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7568.6898) : 0.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7568.6898) : 0.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7568.6898) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))))))), mat2x4(1.0), bvec3(true), ivec3(1)), mat3x4(1.0), _GLF_struct_7(vec4(1.0), uvec4(1u), ivec4(1), uvec4(1u), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, uint(uvec3(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1))))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | 0)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) + 0), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) ^ 0))), ~ (~ (0)))) / 1), 0, 0))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-36517), max(_GLF_FUZZED(-36517), _GLF_IDENTITY(_GLF_FUZZED(-36517), (_GLF_IDENTITY(_GLF_FUZZED(-36517), (_GLF_IDENTITY(true ? _GLF_FUZZED(-36517) : _GLF_FUZZED(10376), ~ (_GLF_IDENTITY(~ (true ? _GLF_FUZZED(-36517) : _GLF_FUZZED(10376)), clamp(~ (true ? _GLF_FUZZED(-36517) : _GLF_FUZZED(10376)), ~ (true ? _GLF_FUZZED(-36517) : _GLF_FUZZED(10376)), ~ (true ? _GLF_FUZZED(-36517) : _GLF_FUZZED(10376))))))))) << 0)))))), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, max(0, 0)), 0, 0))), min((_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517))))) >> 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517)) / (1 ^ 0))))), 1, 0), min(ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-36517, (-36517) + (0 & 86310)))) / (1 ^ 0))))), 1, 0), ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-36517, (false ? _GLF_FUZZED(527) : -36517))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.0) : 0.0)), 0.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0))) * 1.0), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517)) / (1 ^ 0))))), _GLF_IDENTITY(1, int(ivec3(1, 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0)))))), 0)))) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-36517, min(-36517, -36517))), 0 ^ (_GLF_FUZZED(-36517)))))), 1, 0)) << ivec4(0, 0, 0, 0)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(1), 1, 0)) | (_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (true ? ivec4(ivec2(1), 1, 0) : _GLF_FUZZED(ivec4(50246, -86669, -80691, 13448)))))), (ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517)))), 1, 0)) << ivec4(0, 0, 0, 0))), min((_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), max(int(ivec2(1, 0)), int(ivec2(1, 0)))))), 1, 0), (ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517)) / _GLF_IDENTITY((1 ^ 0), (true ? _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))) : _GLF_FUZZED((40945 << 41512))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36517), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)) ? 1 : _GLF_FUZZED(-36517)) / (1 ^ 0))))) ^ (0 ^ 0))), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))), 1, 0), (ivec4(ivec2(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-36517), (_GLF_FUZZED(_GLF_IDENTITY(-36517, int(int(-36517))))) - 0), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(-36517, min(-36517, -36517)))))))), 1, 0)) << ivec4(0, 0, 0, 0))))))) << ivec4(0, 0, 0, 0)) | _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), min(ivec2(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(ivec2(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(22364, 42340)))))), 1, 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))) : _GLF_FUZZED(max(ivec4(-27119, -75358, -11601, 76608), ivec4(-86468, 43605, -74826, 97620)))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066))))), max(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))) : _GLF_FUZZED(max(ivec4(-27119, -75358, -11601, 76608), ivec4(-86468, 43605, -74826, 97620)))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066))))), (_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))) : _GLF_FUZZED(max(ivec4(-27119, -75358, -11601, 76608), ivec4(-86468, 43605, -74826, 97620)))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066)))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))) : _GLF_FUZZED(max(ivec4(-27119, -75358, -11601, 76608), ivec4(-86468, 43605, -74826, 97620)))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066)))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1) : _GLF_FUZZED(ivec2(22364, 42340)))))), 1, 0), _GLF_IDENTITY((ivec4(ivec2(1), 1, _GLF_IDENTITY(0, ~ (~ (0))))) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 0)), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0))), _GLF_IDENTITY(0, (0) ^ 0))), 0), (ivec4(ivec2(1), _GLF_IDENTITY(1, (0 & 34746) ^ (1)), 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 ^ 1) * (0))) * 1), 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0)))) << 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), _GLF_IDENTITY(0, min(0, 0)), 0, 0))), min((ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0)), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((uvec3(53943u, 68098u, 146479u) , -58993)))))) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0)))) | ivec4(0, 0, 0, 0))) : _GLF_FUZZED(max(ivec4(-27119, -75358, -11601, 76608), ivec4(-86468, _GLF_IDENTITY(43605, (_GLF_IDENTITY(43605, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(43605, 0, 1), ivec3(ivec3(ivec3(43605, 0, 1))))), 0 | (int(_GLF_IDENTITY(ivec3(43605, 0, 1), ivec3(ivec3(ivec3(43605, 0, 1))))))))) | (43605)), -74826, 97620)))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066)))))))), min((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1) : _GLF_FUZZED(ivec2(22364, 42340)))))), _GLF_IDENTITY(1, ~ (~ (1))), 0), _GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((ivec4(ivec2(1), _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) ^ 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), 0)) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), 0, 0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))) / 1), 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(_GLF_IDENTITY(1, (1) - 0)), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(ivec2(1), 1, 0)), max((ivec4(ivec2(1), 1, 0)), (ivec4(ivec2(1), 1, 0)))) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << (0 | 0))) ^ 0), _GLF_IDENTITY(0, (75864 & 0) | (0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)), ~ (~ (_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)), clamp((ivec4(ivec2(1), 1, 0)), (ivec4(ivec2(1), 1, 0)), (ivec4(ivec2(1), 1, 0))))))) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, (0) - 0), 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))), ivec4(0, 0, 0, 0) | ((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, (0) - 0), 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(0, 0, 0, 0))))) : _GLF_FUZZED(max(ivec4(-27119, -75358, _GLF_IDENTITY(-11601, (false ? _GLF_FUZZED(-63966) : _GLF_IDENTITY(-11601, min(-11601, -11601)))), 76608), _GLF_IDENTITY(ivec4(-86468, 43605, _GLF_IDENTITY(-74826, min(-74826, _GLF_IDENTITY(-74826, (-74826) / 1))), 97620), (ivec4(-86468, 43605, _GLF_IDENTITY(-74826, min(-74826, _GLF_IDENTITY(-74826, (-74826) / 1))), 97620)) - ivec4(0, 0, 0, 0))))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066)))))))), (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1) : _GLF_FUZZED(ivec2(22364, 42340)), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1) : _GLF_FUZZED(ivec2(22364, 42340)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1) : _GLF_FUZZED(ivec2(22364, 42340)))))))), 1, 0), _GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(1), 1, 0)) ^ ivec4(0, 0, 0, 0))) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(ivec2(1), 1, 0)))) << ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 | (int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0)), 0, 0)), 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))), min((_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))) | ivec4(0, 0, 0, 0))) << ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, 0))), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) << ivec4(0, 0, 0, 0)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(942, 46249, 25824, -96734)), (_GLF_FUZZED(ivec4(942, 46249, 25824, -96734))) | ivec4(0, 0, 0, 0)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0), (ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0)) << ivec2(0, 0)))), 0, 0, 0))), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))) | ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(36086))), 0, 0, 0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), 1, 0)) << ivec4(0, 0, 0, 0), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0)), ivec4(0, 0, 0, 0) ^ ((false ? _GLF_FUZZED(ivec4(942, 46249, 25824, -96734)) : (ivec4(ivec2(1), 1, 0)) << ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0), 0, 0, 0))))), _GLF_IDENTITY(min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) | (min((ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0), (ivec4(ivec2(1), 1, 0)) << ivec4(0, 0, 0, 0)))))) | ivec4(0, 0, 0, 0))) : _GLF_FUZZED(max(ivec4(-27119, -75358, -11601, 76608), ivec4(-86468, 43605, -74826, 97620)))))))) / ivec4(1, 1, 1, 1)) : _GLF_FUZZED((-54725 - ivec4(-52428, -40563, -37682, -45066))))))))))) | ivec4(0, 0, 0, 0))), ~ (_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), (ivec4(ivec2(1), _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-21567), (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-21567)) ^ 0))), 0)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec4(-36501, 43747, -82206, -68073), ivec4(0, 0, 0, 0) + (ivec4(-36501, 43747, -82206, -68073)))) : ivec4(0, 0, 0, 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec2(1), 1, 0), _GLF_IDENTITY(clamp(ivec4(ivec2(1), _GLF_IDENTITY(1, int(ivec2(1, 1))), 0), ivec4(ivec2(1), 1, 0), _GLF_IDENTITY(ivec4(ivec2(1), 1, 0), ~ (~ (ivec4(ivec2(1), 1, 0))))), (clamp(ivec4(ivec2(1), _GLF_IDENTITY(1, int(ivec2(1, 1))), 0), ivec4(ivec2(1), 1, 0), _GLF_IDENTITY(ivec4(ivec2(1), 1, 0), ~ (~ (ivec4(ivec2(1), 1, 0)))))) - ivec4(0, 0, 0, 0))), (ivec4(ivec2(1), 1, 0)) << ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))) / 1), 0, 0)))))))))), ivec4(1)), _GLF_struct_9(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))))), _GLF_struct_11(mat4(1.0), _GLF_struct_10(mat3x2(1.0), bvec4(true), mat4x3(1.0)), bvec2(true), mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), mat4x3(1.0), mat3(1.0), mat3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(58732) : _GLF_IDENTITY(1, ~ (~ (1))))), 0u | (buf[virtual_gid] = 1))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(400.139, 80.39)))).y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), abs(1.0), 0.0, 0.0, 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, abs(0.0), 1.0, 1.0)), (float(mat4(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), abs(1.0), 0.0, 0.0, 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, abs(0.0), 1.0, 1.0))) / 1.0)))))))))), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), true, true)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_struct_replacement_5.subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_struct_replacement_12._f0._f2.next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(76525) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-62469) : 2))))), 4, 64, 4);
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[_GLF_struct_replacement_12._f0._f2.next_virtual_gid], _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), 4, 64, 4);
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 0)), (int(ivec4(1, (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 0))) + 0))) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (((1 & 1) << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), 0))))) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 | (0))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), bool(bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))));
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
}
