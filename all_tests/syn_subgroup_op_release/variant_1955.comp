#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ~ (~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) ^ 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + 1), 0u ^ (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))))), 0u ^ ((subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec4(((subgroup_local_id + 1)), 0u, 0u, 0u))), _GLF_IDENTITY((((subgroup_local_id + 1))), uint(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1))), 0u), uvec2(0u, 0u) ^ (uvec2((((subgroup_local_id + 1))), 0u))))) >> 0u), min(_GLF_IDENTITY(((subgroup_local_id + 1)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))) + 1))) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, ((((subgroup_local_id + 1))) >> 0u) | (_GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, (_GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, min((((subgroup_local_id + 1))) >> 0u, (((subgroup_local_id + 1))) >> 0u))) - 0u))))))))), _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uint(((subgroup_local_id + 1))))), ((subgroup_local_id + 1))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec4(((subgroup_local_id + 1)), 0u, 0u, 0u))), _GLF_IDENTITY((((subgroup_local_id + 1))), uint(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1))), 0u), uvec2(0u, 0u) ^ (uvec2((((subgroup_local_id + 1))), 0u))))) >> 0u), min(_GLF_IDENTITY(((subgroup_local_id + 1)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))) + 1))) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, ((((subgroup_local_id + 1))) >> 0u) | (_GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, (_GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, min((((subgroup_local_id + 1))) >> 0u, (((subgroup_local_id + 1))) >> 0u))) - 0u))))))))), _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uint(((subgroup_local_id + 1))))), ((subgroup_local_id + 1))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec4(((subgroup_local_id + 1)), 0u, 0u, 0u))), _GLF_IDENTITY((((subgroup_local_id + 1))), uint(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1))), 0u), uvec2(0u, 0u) ^ (uvec2((((subgroup_local_id + 1))), 0u))))) >> 0u), min(_GLF_IDENTITY(((subgroup_local_id + 1)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))) + 1))) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, ((((subgroup_local_id + 1))) >> 0u) | (_GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, (_GLF_IDENTITY((((subgroup_local_id + 1))) >> 0u, min((((subgroup_local_id + 1))) >> 0u, (((subgroup_local_id + 1))) >> 0u))) - 0u))))))))), _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uint(((subgroup_local_id + 1))))), ((subgroup_local_id + 1)))) ^ 0u)) + (195714u & 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)))), min((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))))))))))) >> 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u));
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(false)), false, true))))))
          {
          }
         else
          {
           buf[virtual_gid] = 1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true, ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) || false)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(subgroup_local_id + 1 < subgroup_size)
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 5:
           case 70:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 0, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(344.260), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(344.260, exp(0.0) * (344.260))), (_GLF_FUZZED(344.260)) + 0.0), _GLF_FUZZED(344.260), _GLF_IDENTITY(_GLF_FUZZED(344.260), clamp(_GLF_FUZZED(344.260), _GLF_FUZZED(344.260), _GLF_FUZZED(344.260)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(344.260), clamp(_GLF_IDENTITY(_GLF_FUZZED(344.260), (_GLF_FUZZED(344.260)) + 0.0), _GLF_FUZZED(344.260), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(344.260), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), clamp((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), clamp((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), (_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), (_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), (true ? (_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))) : _GLF_FUZZED(-94.57))))) / exp(0.0)), clamp(_GLF_FUZZED(344.260), _GLF_FUZZED(344.260), _GLF_FUZZED(344.260)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.y)), injectionSwitch.y))), bool(true))) / 1.0))))), (ivec4(4, 0, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(344.260), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(344.260, float(vec4(_GLF_IDENTITY(344.260, min(344.260, 344.260)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_FUZZED(344.260)) + 0.0), _GLF_FUZZED(344.260), _GLF_IDENTITY(_GLF_FUZZED(344.260), clamp(_GLF_FUZZED(344.260), _GLF_FUZZED(344.260), _GLF_FUZZED(344.260)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(98462u))), bool(false))), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(344.260), clamp(_GLF_IDENTITY(_GLF_FUZZED(344.260), (_GLF_FUZZED(344.260)) + 0.0), _GLF_IDENTITY(_GLF_FUZZED(344.260), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_FUZZED(344.260))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(344.260), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260)))), mix(float((_GLF_IDENTITY(_GLF_FUZZED(344.260), (false ? _GLF_FUZZED(-107.521) : _GLF_FUZZED(344.260))))), float(_GLF_FUZZED(1.7)), bool(false)))) + 0.0) / exp(0.0)), clamp(_GLF_FUZZED(344.260), _GLF_FUZZED(344.260), _GLF_FUZZED(344.260)))))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(vec3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))), (float(vec3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)))), bool(true))) / 1.0)))))) | ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), (true ? ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> 0), 0, 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, mix(float(_GLF_FUZZED(344.260)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(true)))), (false ? _GLF_FUZZED(-8.3) : _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), mix(vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-214.136), _GLF_FUZZED(-7928.3660)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[0], (((injectionSwitch))[0]) / exp(tan(0.0))))), ((injectionSwitch))[1]), bvec2(true, true))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(2.2)), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false))))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(344.260)), (_GLF_IDENTITY(float(_GLF_FUZZED(344.260)), mix(float(_GLF_FUZZED(-74.93)), float(_GLF_IDENTITY(float(_GLF_FUZZED(344.260)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(344.260)), (float(_GLF_FUZZED(344.260))) / 1.0), float(_GLF_FUZZED(344.260)), float(_GLF_FUZZED(344.260))))), bool(true)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(-2459.3347)), bool(false)))), 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) / 1.0), bool(true)))))))) : _GLF_FUZZED(ivec4(-25374, -17099, _GLF_IDENTITY(91010, ~ (~ (91010))), -2648)))))), 64, 4);
              }
            }
           case 4:
           case 42:
           case 63:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) >> 0)), max((_GLF_IDENTITY(~ (1), (~ (1)) >> 0)), (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), _GLF_IDENTITY(1, ~ (~ (1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))), 0 | (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))) : _GLF_FUZZED(-79314))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(4171.0284), _GLF_FUZZED(-1.5)), bvec2(false, false))), injectionSwitch)).y))))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-99.88)), vec2(_GLF_FUZZED(-4.5), (injectionSwitch)[1]), bvec2(false, true))))).y))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))) || false)) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))) || false)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))) || false)) && true, true, true, true))), true, false, true))))))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))); _injected_loop_counter ++)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-41.09)), bvec2(true, false)))) / sqrt(vec2(1.0, 1.0))).y))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, 1, 0)), 0 ^ (int(ivec3(_injected_loop_counter, 1, 0))))) > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * sqrt(1.0)))); _injected_loop_counter --)
                                                {
                                                 subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.92), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3581.4659)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat3x4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), true && (bool(false))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(false), true && (bool(false))), true)), false)))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.92), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3581.4659)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat3x4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), true && (bool(false))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(false), true && (bool(false))), true)), false)))))))))));
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                }
               else
                {
                }
              }
            }
           else
            {
            }
           break;
           case 64:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     notEqual(bvec4(true, true, false, true), bvec4(false, true, false, true));
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
            }
           case 87:
           do
            {
             while((findMSB(uvec2(21822u, 72516u)) != ivec2(-86873, -73290)))
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
           default:
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
              {
               do
                {
                 1;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 79:
                     do
                      {
                       do
                        {
                         do
                          {
                           if((_GLF_IDENTITY(findLSB(ivec2(_GLF_IDENTITY(74155, (74155) + (1 ^ 1)), -57951)), (true ? _GLF_IDENTITY(findLSB(_GLF_IDENTITY(ivec2(74155, -57951), ivec2(ivec3(_GLF_IDENTITY(ivec2(74155, -57951), (_GLF_IDENTITY(ivec2(74155, -57951), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(74155, -57951), min(ivec2(74155, -57951), ivec2(74155, -57951)))), (ivec2(_GLF_IDENTITY(ivec2(74155, -57951), min(ivec2(74155, -57951), ivec2(74155, -57951))))) - ivec2(0, 0))))) ^ (ivec2(0, 0) | ivec2(0, 0))), 1)))), ~ (~ (_GLF_IDENTITY(findLSB(ivec2(74155, -57951)), (findLSB(ivec2(74155, -57951))) | ivec2(_GLF_IDENTITY(0, (0) | 0), 0))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(20838, 50337), _GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))) ^ (ivec2(20838, 50337))), ivec2(0, 0) ^ (ivec2(20838, 50337)))), min(_GLF_FUZZED(_GLF_IDENTITY(ivec2(20838, 50337), min(ivec2(20838, 50337), ivec2(20838, _GLF_IDENTITY(50337, (50337) | (50337)))))), _GLF_FUZZED(ivec2(20838, 50337)))))) != _GLF_IDENTITY(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(ivec2(_GLF_IDENTITY(78602, ~ (~ _GLF_IDENTITY((78602), ((_GLF_IDENTITY(78602, (78602) ^ 0))) - 0))), 13806), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))
                            {
                             for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(1, (1) * 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               do
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = (1 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 0), 0, 0, 0)))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && _GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY((true) && _GLF_IDENTITY(true, (true) && true), true && ((true) && _GLF_IDENTITY(true, (true) && true))))), ! (! (_GLF_IDENTITY((true) && _GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY((true) && _GLF_IDENTITY(true, (true) && true), true && ((true) && _GLF_IDENTITY(true, (true) && true)))))))))))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                          {
                                           case 99:
                                           do
                                            {
                                             (-689.565 / mat3(-4093.3938, 637.427, _GLF_IDENTITY(-2.4, clamp(_GLF_IDENTITY(-2.4, mix(float(_GLF_IDENTITY(-2.4, _GLF_IDENTITY(clamp(-2.4, -2.4, -2.4), min(_GLF_IDENTITY(clamp(-2.4, -2.4, -2.4), max(clamp(-2.4, -2.4, -2.4), clamp(-2.4, -2.4, -2.4))), clamp(-2.4, -2.4, -2.4))))), float(_GLF_FUZZED(-3.3)), bool(false))), _GLF_IDENTITY(-2.4, (-2.4) - 0.0), _GLF_IDENTITY(-2.4, min(_GLF_IDENTITY(-2.4, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.6)), (float(_GLF_FUZZED(2.6))) + 0.0), float(-2.4), bool(true))), _GLF_IDENTITY(-2.4, max(_GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, _GLF_IDENTITY(-2.4, (-2.4) - 0.0))), _GLF_IDENTITY(-2.4, (-2.4) + 0.0))))))), -80.42, 0.4, 4046.7369, 9.4, -2.2, 4715.7148));
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                           case 0:
                                           case 10:
                                           case 26:
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(2076.7351), min(_GLF_FUZZED(2076.7351), _GLF_FUZZED(2076.7351))) : injectionSwitch.y), 1.0 * ((false ? _GLF_IDENTITY(_GLF_FUZZED(2076.7351), clamp(_GLF_FUZZED(2076.7351), _GLF_FUZZED(2076.7351), _GLF_FUZZED(2076.7351))) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.1) : injectionSwitch.y))))))), float(_GLF_FUZZED(vec3(-3808.9434, 346.754, -2.1).r)), bool(false)))))))
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                                              {
                                              }
                                             else
                                              {
                                               bvec2(true, true);
                                              }
                                            }
                                           else
                                            {
                                            }
                                           mat2x3 _GLF_SWITCH_1_0v[69];
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)).y))))
                                                {
                                                 if(true)
                                                  {
                                                  }
                                                 else
                                                  {
                                                   bvec4 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[51];
                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     vec4 _GLF_SWITCH_1_3v;
                                                     do
                                                      {
                                                       _GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(21.02, _GLF_IDENTITY(8424.8404, mix(float(_GLF_FUZZED(-8.3)), float(_GLF_IDENTITY(8424.8404, (_GLF_IDENTITY(8424.8404, mix(float(8424.8404), float(_GLF_FUZZED(-8.2)), bool(false)))) + 0.0)), bool(true))), 280.298, -0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0))))), (mat2(mat3(_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(21.02, 8424.8404, _GLF_IDENTITY(280.298, (true ? 280.298 : _GLF_FUZZED(-2.8))), -0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, _GLF_IDENTITY(float(vec2((0.0) - 0.0, 0.0)), clamp(float(vec2((0.0) - 0.0, 0.0)), float(vec2((0.0) - 0.0, 0.0)), float(vec2((0.0) - 0.0, 0.0))))))) + (mat2(21.02, 8424.8404, 280.298, -0.0)))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0)), (float(mat2x4(1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0))) - 0.0))))) * ((_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0)))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0)), bool(true)))))))), (false ? _GLF_FUZZED(mat2(7.7, 12.30, _GLF_IDENTITY(-88.79, clamp(-88.79, -88.79, -88.79)), _GLF_IDENTITY(-380.621, clamp(-380.621, -380.621, -380.621)))) : mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(21.02, 8424.8404, 280.298, -0.0)), ((mat2(21.02, 8424.8404, 280.298, -0.0))) * mat2(1.0)))) + _GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0)))))), (true ? (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0)))) + _GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))) : _GLF_FUZZED(mat2(876.430, -2.4, 2317.2489, 823.033)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-81.21, 8.7, -62.78, 52.05), transpose(transpose(_GLF_IDENTITY(mat2(-81.21, 8.7, -62.78, 52.05), transpose(transpose(mat2(-81.21, 8.7, -62.78, 52.05)))))))), (true ? _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) + (mat2(21.02, 8424.8404, 280.298, -0.0)))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(reflect(-6.1, exp(2018.5447))))))) * ((_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0)))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0)), bool(true)), (mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0)), bool(true))) / _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sin(0.0), 1.0), vec2(0.0, 1.0)))))))))), (false ? _GLF_FUZZED(mat2(7.7, 12.30, _GLF_IDENTITY(-88.79, clamp(-88.79, -88.79, -88.79)), _GLF_IDENTITY(-380.621, clamp(-380.621, -380.621, -380.621)))) : mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, _GLF_IDENTITY(-0.0, (_GLF_IDENTITY(-0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -0.0 : _GLF_FUZZED(-764.012)))) / _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, 280.298, -0.0)))) + _GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0)))))), (true ? (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), (_GLF_IDENTITY(mat2(21.02, 8424.8404, 280.298, -0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(21.02, 8424.8404, _GLF_IDENTITY(280.298, clamp(280.298, _GLF_IDENTITY(280.298, mix(float(_GLF_IDENTITY(280.298, min(280.298, 280.298))), float(_GLF_FUZZED(3.4)), bool(false))), 280.298)), -0.0)))) + _GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(mat2(876.430, -2.4, 2317.2489, 823.033)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-81.21, 8.7, -62.78, 52.05), transpose(transpose(_GLF_IDENTITY(mat2(-81.21, 8.7, -62.78, 52.05), transpose(transpose(mat2(-81.21, 8.7, -62.78, 52.05))))))))) + mat2(0.0, 0.0, 0.0, 0.0)))));
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                     (subgroup_id + 166432u);
                                                     mat3x4 _GLF_SWITCH_1_4v[80], _GLF_SWITCH_1_5v[84];
                                                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                                      {
                                                       do
                                                        {
                                                         (mat3x4(3.7, -8.2, 8.6, 0.7, -8.3, 84.13, 99.98, 19.55, 9.8, _GLF_IDENTITY(_GLF_IDENTITY(461.558, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))) * (461.558)), mix(float(_GLF_IDENTITY(461.558, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))) * (461.558))), float(_GLF_FUZZED(7854.9852)), bool(false))), 7.2, _GLF_IDENTITY(-500.588, max(_GLF_IDENTITY(-500.588, mix(float(_GLF_IDENTITY(-500.588, (true ? -500.588 : _GLF_FUZZED(acos(length(_GLF_IDENTITY(-5026.9715, clamp(-5026.9715, -5026.9715, -5026.9715)))))))), float(_GLF_FUZZED(-4.4)), bool(false))), -500.588))) * mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(82.95, min(82.95, _GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (82.95)), 82.95)))), (_GLF_IDENTITY(82.95, min(82.95, _GLF_IDENTITY(_GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (82.95)), 82.95)), max(_GLF_IDENTITY(_GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (82.95)), 82.95)), (_GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (82.95)), 82.95))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (82.95)), 82.95)), (true ? _GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (82.95)), 82.95)) : _GLF_FUZZED(8.1)))))))) + tan(0.0)), max(_GLF_IDENTITY(82.95, min(82.95, _GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + _GLF_IDENTITY((82.95), min((82.95), _GLF_IDENTITY((82.95), clamp((82.95), (82.95), (82.95)))))), 82.95)))), _GLF_IDENTITY(82.95, min(_GLF_IDENTITY(82.95, clamp(82.95, _GLF_IDENTITY(82.95, float(mat3(_GLF_IDENTITY(82.95, (82.95) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-88.74) : 0.0)), min(0.0, 0.0))))), 82.95)), _GLF_IDENTITY(82.95, max(_GLF_IDENTITY(82.95, 0.0 + (_GLF_IDENTITY(82.95, float(_GLF_IDENTITY(mat3x2(82.95, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, cos(0.0))), dot(vec2(1.0, 0.0), vec2(0.0, cos(0.0))))), transpose(transpose(mat3x2(82.95, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, cos(0.0))), dot(vec2(1.0, 0.0), vec2(0.0, cos(0.0)))))))))))), 82.95)))))), _GLF_IDENTITY(207.964, mix(float(207.964), float(_GLF_FUZZED((- 57.93))), bool(false))), _GLF_IDENTITY(-7.6, float(_GLF_IDENTITY(mat2x4(-7.6, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(_GLF_IDENTITY(-7.6, mix(float(-7.6), float(_GLF_FUZZED(-32.82)), bool(false))), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(mat2x4(-79.08, -1305.2294, -3.5, 7.8, _GLF_IDENTITY(-8.2, min(-8.2, -8.2)), 1.6, -1.6, -3.7)) : mat4(1.0) * (mat2x4(-7.6, 0.0, 0.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.6)), bool(false))), 0.0))), max(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.6)), bool(false))), 0.0))), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.6)), bool(false))), 0.0))))), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0)), 1.0))))))), -2189.9633, 938.801, 5509.2954));
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(false));
                                                      }
                                                     float _GLF_SWITCH_1_6v[14], _GLF_SWITCH_1_7v;
                                                    }
                                                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 1 * (5))), _GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))), _GLF_IDENTITY(int(5), min(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
                                                    {
                                                     do
                                                      {
                                                       for(mat4 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v; false; mat2x4(-7908.5420, 0.2, 40.22, -0.2, -2.3, -8.9, _GLF_IDENTITY(-68.93, 1.0 * (-68.93)), -6.1))
                                                        {
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 | 0)) != 0); _injected_loop_counter --)
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false); _injected_loop_counter ++)
                                                        {
                                                         do
                                                          {
                                                           if((_GLF_IDENTITY(-19905, _GLF_IDENTITY((-19905) ^ (0 & (_GLF_IDENTITY(62618 << 34460, (62618 << 34460) | (62618 << 34460)))), (true ? _GLF_IDENTITY((-19905) ^ (0 & (62618 << 34460)), min((-19905) ^ (0 & (62618 << 34460)), (-19905) ^ (_GLF_IDENTITY(0 & (62618 << 34460), clamp(0 & (62618 << 34460), 0 & (62618 << 34460), _GLF_IDENTITY(0 & (62618 << 34460), (0 & (62618 << 34460)) * 1)))))) : _GLF_FUZZED(_injected_loop_counter)))) > 40363))
                                                            {
                                                             int _GLF_SWITCH_1_10v;
                                                            }
                                                          }
                                                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))));
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))));
                                            }
                                           else
                                            {
                                            }
                                           case 83:
                                           mat3 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v[69];
                                           case 49:
                                           case 44:
                                           for(                                           ivec2(-3902, 6713);
 true; bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true))))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true))))))))), true)), bvec2(bvec4(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true))))))))), true)), false, false))))))))))) && (false)), false, true))
                                            {
                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))))
                                                {
                                                }
                                               else
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                    {
                                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
                                                      {
                                                       do
                                                        {
                                                         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
                                                          {
                                                           (-84058 | _GLF_IDENTITY(6330, (true ? 6330 : _GLF_FUZZED(_GLF_IDENTITY(5851, (5851) | (5851))))));
                                                          }
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(false));
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                              }
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   while(false)
                                                    {
                                                     do
                                                      {
                                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                        {
                                                         ;
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))));
                                                     uvec4 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                                                     bvec2 _GLF_SWITCH_1_15v[85], _GLF_SWITCH_1_16v;
                                                    }
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             else
                                              {
                                              }
                                             mat2x3 _GLF_SWITCH_1_17v;
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
                                              {
                                              }
                                             else
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)) && true), false), true))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), false)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) < 1, false), false)))))))))))), bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), true))), false)))), true, true))))); _injected_loop_counter ++)
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   do
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_IDENTITY((mat2(_GLF_IDENTITY(-9.9, (-9.9) / abs(1.0)), 889.697, 4359.7682, 90.12) != outerProduct(injectionSwitch, vec2(_GLF_IDENTITY(29.38, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true)), max(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(_GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38)))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38)))), 0.0 + (_GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38)))))), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))))), bool(true)), mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(max(float(29.38), _GLF_IDENTITY(float(29.38), clamp(_GLF_IDENTITY(float(29.38), 1.0 * (float(29.38))), _GLF_IDENTITY(float(29.38), max(float(29.38), float(29.38))), float(29.38)))), 0.0 + (max(float(29.38), float(29.38))))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false))))), mix(float(_GLF_FUZZED(-5445.7974)), float(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true))), bool(true)))), 6666.6557))), (_GLF_IDENTITY((mat2(_GLF_IDENTITY(-9.9, (-9.9) / abs(1.0)), 889.697, 4359.7682, 90.12) != _GLF_IDENTITY(outerProduct(injectionSwitch, vec2(_GLF_IDENTITY(29.38, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(29.38), 0.0 + (float(29.38))), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (_GLF_IDENTITY(max(float(29.38), float(29.38)), sqrt(0.0) + (max(float(29.38), float(29.38))))))), bool(true)), mix(float(_GLF_FUZZED(-5445.7974)), float(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(29.38), float(mat2(float(29.38), 0.0, sqrt(1.0), 0.0))), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true))), bool(true)))), 6666.6557)), (outerProduct(injectionSwitch, vec2(_GLF_IDENTITY(29.38, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(false), min(float(false), float(false))))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true)), mix(float(_GLF_FUZZED(-5445.7974)), float(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(29.38, float(mat3x4(29.38, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), max(float(29.38), float(29.38))), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true))), bool(true)))), _GLF_IDENTITY(6666.6557, (6666.6557) / 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0))), true && ((mat2(_GLF_IDENTITY(-9.9, (-9.9) / abs(1.0)), 889.697, 4359.7682, 90.12) != outerProduct(injectionSwitch, vec2(_GLF_IDENTITY(29.38, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true)), mix(float(_GLF_FUZZED(-5445.7974)), float(mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(29.38), _GLF_IDENTITY(max(float(29.38), float(29.38)), 0.0 + (max(float(29.38), float(29.38))))), bool(true))), bool(true)))), 6666.6557)))))) || false))
                                                        {
                                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                          {
                                                           ;
                                                          }
                                                         else
                                                          {
                                                          }
                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) ^ 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)))) ^ 1)))); _injected_loop_counter --)
                                                              {
                                                               do
                                                                {
                                                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                  {
                                                                   (mat2x4(1957.9973, -725.543, -5.0, _GLF_IDENTITY(-96.14, min(-96.14, -96.14)), _GLF_IDENTITY(5.3, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true))) ? 5.3 : _GLF_FUZZED(_GLF_IDENTITY(-7592.9823, (_GLF_IDENTITY(-7592.9823, clamp(-7592.9823, -7592.9823, -7592.9823))) - 0.0)))), 3.7, -2.1, 4.0) / mat2x4(975.269, 3317.1975, -9.6, 3979.6566, -60.72, 8.2, -5.3, 0.2));
                                                                  }
                                                                }
                                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                                                              }
                                                            }
                                                          }
                                                         else
                                                          {
                                                          }
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                            {
                                                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                              {
                                                               findLSB(ivec4(48517, _GLF_IDENTITY(30385, 1 * (30385)), -29487, 16244));
                                                              }
                                                            }
                                                          }
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                {
                                                                 mat3x2(-964.407, -1.2, -8556.7327, 1271.6378, 1856.8830, -3.5);
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                          }
                                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))); _injected_loop_counter ++)
                                                          {
                                                           do
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED((_injected_loop_counter + -44014)))))
                                                                {
                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                  {
                                                                  }
                                                                 else
                                                                  {
                                                                   do
                                                                    {
                                                                     uvec2(4346u, 63002u);
                                                                    }
                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                  }
                                                                }
                                                              }
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(false));
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                    }
                                                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true)))))));
                                                  }
                                                }
                                              }
                                             do
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                  {
                                                   do
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
                                                            {
                                                             bvec2(false, true);
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                             mat2x3 _GLF_SWITCH_1_18v;
                                             _GLF_IDENTITY(_GLF_IDENTITY((- ivec3(-25174, _GLF_IDENTITY(-99835, _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))) | (-99835)), -30640)), (false ? _GLF_FUZZED(ivec3(-84325, 74092, -88618)) : (- ivec3(-25174, _GLF_IDENTITY(-99835, _GLF_IDENTITY(0 | (-99835), max(_GLF_IDENTITY(0 | (-99835), ~ (_GLF_IDENTITY(~ (0 | (-99835)), min(~ (0 | (-99835)), ~ (0 | (-99835)))))), 0 | (-99835)))), -30640)))), ivec3(ivec4((- _GLF_IDENTITY(ivec3(-25174, _GLF_IDENTITY(-99835, 0 | (-99835)), -30640), max(ivec3(-25174, _GLF_IDENTITY(-99835, 0 | (-99835)), -30640), ivec3(-25174, _GLF_IDENTITY(-99835, 0 | (-99835)), -30640)))), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))) >> _GLF_IDENTITY(int(3), int(3))))));
                                             vec4(5558.0411, 5244.1959, -0.8, -7.3);
                                            }
                                           break;
                                           case 3:
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               do
                                                {
                                                 ivec2(_GLF_IDENTITY(-15448, (-15448) << 0), 7470);
                                                }
                                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                              }
                                             else
                                              {
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                           default:
                                           1;
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-69.90, 3.7)) : injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-69.90, 3.7)) : injectionSwitch)).y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-69.90, 3.7)) : injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch, clamp(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch) * mat2(1.0), ((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-69.90, clamp(-69.90, -69.90, -69.90)), 3.7)) : injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))))))).y)) && true)) && true)))))));
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     case 0:
                     case 43:
                     case 23:
                     case 3:
                     case 42:
                     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                     case 50:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           subgroupAll(true);
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                     break;
                     default:
                     do
                      {
                       1;
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
  }
}
