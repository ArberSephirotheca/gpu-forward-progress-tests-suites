#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) / 1)) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))))), uvec3(uvec4(uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))))), 1u)))), (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(22408u, 144752u, 112389u)) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) | uvec3(0u, 0u, 0u))))), max((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z * workgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (! (_injected_loop_counter != 1))))))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y = workgroup_base;
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y, (GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y) >> 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x = next_virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   buf[virtual_gid] = 1;
  }
 else
  {
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 8:
       if(_GLF_DEAD(false))
        barrier();
       vec4 _GLF_SWITCH_0_0v[65], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        barrier();
       case 0:
       case 85:
       atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x, uint(uvec4(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))], uint(2), _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(64, (64) | (64)), 4);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
       case 24:
       subgroupAll(false);
       break;
       case 9:
       for(       bvec3(true, false, _GLF_IDENTITY(true, (true) && true));
 true; (mat3x2(-3797.1250, 28.37, 71.40, -957.824, 3.3, -9.4) / mat3x2(-0.2, 3.6, -1.7, 404.507, 8.4, _GLF_IDENTITY(_GLF_IDENTITY(99.09, float(_GLF_IDENTITY(mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)))), (mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(0.0))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))), max(_GLF_IDENTITY(99.09, float(_GLF_IDENTITY(mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)))), (mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(0.0))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(99.09, float(_GLF_IDENTITY(mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)))), (mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(0.0))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))), min(_GLF_IDENTITY(99.09, float(_GLF_IDENTITY(mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)))), (mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(0.0))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))), _GLF_IDENTITY(99.09, float(_GLF_IDENTITY(mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)))), (mat3x2(99.09, 1.0, 1.0, 0.0, 1.0, cos(0.0))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(true)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))) != (0 | 0)); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 98:
                     ;
                     case 7:
                     mat3x4(5.2, 4280.5727, -292.601, _GLF_IDENTITY(8.1, float(mat3x4(8.1, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0))), -4.6, -8.2, _GLF_IDENTITY(6.5, mix(float(6.5), float(_GLF_FUZZED(-5.2)), _GLF_IDENTITY(bool(false), false || (bool(false))))), -1.3, 66.64, 8.4, 298.322, -2.4);
                     case 0:
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     mat2 _GLF_SWITCH_0_3v;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     case 81:
                     case 69:
                     for(ivec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v; (ivec2(-13937, -71025) == ivec2(81206)); ivec3(_GLF_IDENTITY(-88855, (-88855) | (-88855)), -24750, -81519))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 69:
                         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & 77010) ^ (0 << _GLF_IDENTITY(int(3), int(3))))); _injected_loop_counter --)
                          {
                           bvec3(false, true, false);
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 22:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           bvec3(false, false, true).gbg;
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         case 0:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                              {
                               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 65:
                                     bvec2(false, true);
                                     case 62:
                                     (++ _GLF_SWITCH_0_4v);
                                     case 0:
                                     case 45:
                                     case 27:
                                     case 92:
                                     barrier();
                                     break;
                                     case 94:
                                     ;
                                     case 51:
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       ;
                                      }
                                     default:
                                     1;
                                    }
                                  }
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                         case 42:
                         case 30:
                         do
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           mat3x4(-57.90, 8.7, 2.6, 7.1, -2.4, -31.72, 23.80, -3146.1231, -722.339, -6530.3240, -2.1, 91.13);
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         case 99:
                         do
                          {
                           do
                            {
                             (vec3(-640.528, -7.8, 8.8) * mat2x3(7005.8468, -4582.8210, -1.2, 926.495, -470.331, -8.2));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         case 49:
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         case 20:
                         if(_GLF_DEAD(false))
                          barrier();
                         _GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, false), true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                         case 72:
                         vec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                         case 90:
                         mat4x3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                         case 21:
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 0:
                               case 2:
                               case 90:
                               case 11:
                               -13.93;
                               break;
                               default:
                               1;
                              }
                            }
                          }
                         break;
                         case 65:
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
                          {
                          }
                         else
                          {
                           vec2(-8.0, -0.1);
                          }
                         case 63:
                         uint _GLF_SWITCH_4_0v[63];
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) | ((0 << _GLF_IDENTITY(int(1), int(1)))))), (int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) | ((0 << _GLF_IDENTITY(int(1), int(1))))))) - 0)))); _injected_loop_counter --)
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 69:
                               vec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                               case 40:
                               (mat4x2(-19.51, -0.2, -286.239, -5.8, 7820.6383, -9076.7506, -353.466, 9.1) * mat2x4(6.1, -1.3, 5106.1254, -51.27, -1.2, 16.46, -418.084, -6080.6259));
                               case 0:
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1));
                               break;
                               case 48:
                               mat2x4 _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v[60];
                               case 99:
                               mat4x2 _GLF_SWITCH_6_4v[19], _GLF_SWITCH_6_5v;
                               default:
                               1;
                              }
                            }
                          }
                        }
                      }
                     ;
                     case 47:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                          {
                           if((_GLF_IDENTITY(mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6)), (_GLF_IDENTITY(! (mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, _GLF_IDENTITY(9.6, (9.6) + 0.0))), ! (! (! (mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6)))))) && true), (_GLF_IDENTITY(! (mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6)), (_GLF_IDENTITY(! (mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6)), ! (! (! (mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, _GLF_IDENTITY(-9.5, (-9.5) + 0.0), -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6)))))) && true)) || false)))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ (1 ^ 1)))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             uvec2(81076u, 34981u);
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))))))
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 40:
                                 ;
                                 case 56:
                                 for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     notEqual(bvec2(true, true), bvec2(true, false));
                                    }
                                   else
                                    {
                                    }
                                  }
                                 case 0:
                                 case 90:
                                 case 12:
                                 case 53:
                                 case 80:
                                 do
                                  {
                                   uvec4(189300u, 27542u, 26553u, 184185u).yy;
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
                                 break;
                                 default:
                                 1;
                                }
                              }
                             else
                              {
                              }
                             (mod(injectionSwitch, -392.207) + injectionSwitch);
                             mat3x2 _GLF_SWITCH_0_11v[27], _GLF_SWITCH_0_12v[40], _GLF_SWITCH_0_13v;
                             mat2x4 _GLF_SWITCH_0_14v[22], _GLF_SWITCH_0_15v[34];
                             int _GLF_SWITCH_0_16v[48], _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[79];
                            }
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                         do
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     for(                     mat4(-491.497, -487.844, 6076.9930, -6.9, -9739.9460, -1.6, 3.5, -6867.8344, 9.9, 8.9, 6004.7085, 45.82, -5392.3960, 9112.2912, 3483.7847, 41.84);
 true; (mat4x3(mat3x2(4.5, -8.6, 23.44, -3801.0962, 80.74, 7.5)) / mat4x3(-3662.1646, _GLF_IDENTITY(-5861.0751, min(-5861.0751, -5861.0751)), 80.49, -619.301, _GLF_IDENTITY(761.361, max(761.361, _GLF_IDENTITY(761.361, _GLF_IDENTITY((761.361) - 0.0, min((761.361) - 0.0, _GLF_IDENTITY((761.361) - 0.0, ((761.361) - 0.0) / 1.0)))))), -309.925, -96.76, -4.8, -28.14, -9.0, -1788.2985, 6838.3077)))
                      {
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 48:
                           case 78:
                           case 36:
                           case 43:
                           vec2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[58], _GLF_SWITCH_0_21v;
                           case 26:
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
                                barrier();
                              }
                            }
                           else
                            {
                            }
                           case 14:
                           case 24:
                           round(_GLF_SWITCH_0_21v);
                           case 16:
                           mat3 _GLF_SWITCH_0_22v[24], _GLF_SWITCH_0_23v;
                           break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 60:
                           mat2 _GLF_SWITCH_2_0v;
                           default:
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             1;
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                      }
                     case 46:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         mat3(_GLF_IDENTITY(-9499.2609, clamp(-9499.2609, -9499.2609, -9499.2609)), 3624.4623, _GLF_IDENTITY(140.995, max(140.995, 140.995)), 4346.1345, -730.608, -9.2, 0.4, 4.3, -26.96);
                        }
                      }
                     else
                      {
                      }
                     case 30:
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       ;
                      }
                     for(                     ivec4(-2762, -83738, -12797, 96882);
 ((workgroup_id & uvec2(_GLF_IDENTITY(26819u, clamp(_GLF_IDENTITY(26819u, 0u ^ (26819u)), 26819u, 26819u)), 51585u)) != uvec2(88392u, 34395u)); mat3x2(-439.758, -431.423, -3050.6497, -8952.1644, -581.843, -874.624))
                      {
                       do
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(14102)))))); _injected_loop_counter ++)
                          {
                           subgroup_local_id;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       bvec3(true, true, false);
                      }
                     else
                      {
                      }
                     break;
                     default:
                     1;
                    }
                  }
                }
              }
             else
              {
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), (_GLF_IDENTITY(clamp(int(5), int(5), int(5)), 0 + (clamp(int(5), int(5), int(5))))) + (0 | 0)))) | (int(5)))))))
                {
                 case 0:
                 {
                  mat2x4 _GLF_SWITCH_0_24v;
                  do
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      ;
                     }
                    else
                     {
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  mat3x2 _GLF_SWITCH_0_25v[85];
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (-34627 - -26429))); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      ivec4(-21779, 72334, -63999, 5252);
                     }
                   }
                 }
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     do
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 61:
                         bvec4(true, true, false, false);
                         case 0:
                         case 89:
                         case 9:
                         case 83:
                         case 4:
                         case 51:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 29:
                         case 17:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         case 88:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 greaterThanEqual(vec2(-1.4, -5.7), injectionSwitch);
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))));
                            }
                          }
                         break;
                         case 58:
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                          {
                           (mat4x2(-30.84, 341.181, -571.881, 6.3, -4.3, -0.2, -295.138, -73.59) == mat4x2(-47.56, 9.1, -858.601, -6.6, 3813.6038, 2701.7269, 5807.6447, _GLF_IDENTITY(-92.03, mix(float(-92.03), float(_GLF_FUZZED(-2.6)), bool(false)))));
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 do
                  {
                   abs(54648);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(true)
                      {
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))))
                      {
                       do
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                  }
                 break;
                 default:
                 do
                  {
                   do
                    {
                     1;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
         mat4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
         uvec3 _GLF_SWITCH_0_28v;
         mat4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v;
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       case 88:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         mat4x2(4.7, 503.857, 5.6, 98.44, 9177.9046, -7.4, 81.87, -5.7);
        }
       default:
       do
        {
         1;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 82:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       while(true)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(true)
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(false)
                  {
                  }
                 else
                  {
                  }
                 ;
                 ;
                 vec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                 if(_GLF_DEAD(false))
                  barrier();
                 uint _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v[50], _GLF_SWITCH_5_5v;
                 while(true)
                  {
                   bvec2 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v[37];
                   ivec2(-66915, -16474);
                   ;
                   bvec4(false, true, false, false);
                  }
                 (- mat3x2(mat3(-32.98, -659.875, 3.0, -37.50, 739.729, 9.3, -766.022, 415.870, -2.4)));
                 break;
                 case 55:
                 mat4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                 case 74:
                 do
                  {
                   bvec2(false, false).rr;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         mat3(4.6, -3.3, -5.6, -7671.8687, -5.6, -4.6, -7310.0172, -997.887, 485.574);
         (max(ivec2(-6753, 37330), 133) >> 3181);
         if((bvec3(false, false, true) == bvec3(false, false, false)))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           mat2 _GLF_SWITCH_5_9v[42], _GLF_SWITCH_5_10v[30];
           mat2x4 _GLF_SWITCH_5_11v;
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              greaterThanEqual(ivec2(-44619, 74887), ivec2(-88267, 28780));
             }
            do
             {
              do
               {
                772.781;
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
            while(_GLF_WRAPPED_LOOP(false));
            mat2x3 _GLF_SWITCH_5_12v[92];
            314.045;
            uvec4(77128u, 165562u, 177567u, 179733u);
           }
           uvec3 _GLF_SWITCH_5_13v[36];
           uint _GLF_SWITCH_5_14v[65], _GLF_SWITCH_5_15v[8], _GLF_SWITCH_5_16v;
           for(ivec2 _GLF_SWITCH_5_17v[26], _GLF_SWITCH_5_18v; bvec2(false, true).s; mat3x4(57.46, -268.576, _GLF_IDENTITY(-7.8, max(_GLF_IDENTITY(-7.8, float(mat3x2(-7.8, 1.0, 0.0, 1.0, 1.0, 1.0))), -7.8)), 5.0, 61.87, -587.131, 5.4, 4.0, -27.02, -9.0, 891.920, 6683.0128))
            {
             int _GLF_SWITCH_5_19v, _GLF_SWITCH_5_20v[88];
             -80502;
             bvec2 _GLF_SWITCH_5_21v, _GLF_SWITCH_5_22v, _GLF_SWITCH_5_23v;
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               ;
              }
             (uvec2(19080u, 6884u) , bvec4(true, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false));
             mat2 _GLF_SWITCH_5_24v, _GLF_SWITCH_5_25v, _GLF_SWITCH_5_26v;
             ;
             ;
             bvec2 _GLF_SWITCH_5_27v;
            }
           if((sign(-18282) != bitCount(next_virtual_gid)))
            {
             ;
             mat3x2 _GLF_SWITCH_5_28v[44], _GLF_SWITCH_5_29v;
             (_GLF_SWITCH_5_11v + 296.797);
             float _GLF_SWITCH_5_30v, _GLF_SWITCH_5_31v;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(false)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 45:
                 ;
                 case 0:
                 case 49:
                 uvec4(72400u, 155040u, 26259u, 133854u);
                 bvec4 _GLF_SWITCH_5_32v[69], _GLF_SWITCH_5_33v, _GLF_SWITCH_5_34v[82];
                 case 22:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 12:
                 ivec3 _GLF_SWITCH_5_35v;
                 mat2 _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v[43];
                 65542;
                 ivec4(-11178, 9838, 50376, -46334);
                 break;
                 case 96:
                 mat3 _GLF_SWITCH_7_0v[19], _GLF_SWITCH_7_1v[39];
                 case 20:
                 float(148785u);
                 default:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   1;
                  }
                }
              }
            }
           vec2 _GLF_SWITCH_5_38v, _GLF_SWITCH_5_39v;
          }
         for(ivec3 _GLF_SWITCH_5_40v, _GLF_SWITCH_5_41v, _GLF_SWITCH_5_42v[12]; all(bvec2(false, false)); mat2x3((mat4x2(-5427.3545, 62.79, 10.22, -4.7, -55.23, 740.294, 81.28, -31.90) + mat4x2(-853.408, -1689.2802, -30.05, -7.9, 48.87, 2.2, -2.1, 62.63))))
          {
           ivec2 _GLF_SWITCH_5_43v, _GLF_SWITCH_5_44v[5], _GLF_SWITCH_5_45v;
           ivec4(30988, -48651, 81966, 29464);
           (true ? uvec4(29556u, 109740u, 187496u, 65344u) : uvec4(122645u, 150293u, 7575u, 178170u));
           for(           (uvec2(91377u, 103306u) >> workgroup_base);
 true; vec4(28.65, vec3(-288.315, -6.0, -8.6)))
            {
             mat3x2 _GLF_SWITCH_5_46v[94], _GLF_SWITCH_5_47v;
             mat2 _GLF_SWITCH_5_48v, _GLF_SWITCH_5_49v, _GLF_SWITCH_5_50v;
             (mat2(8.4, -7451.3663, 9.1, 7292.9231) * mat4x2(9384.9769, 8.9, 5286.7711, 5.8, 58.37, -993.656, -6.9, 6.0));
             do
              {
               all(bvec2(false, true));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           ivec3 _GLF_SWITCH_5_51v, _GLF_SWITCH_5_52v[84], _GLF_SWITCH_5_53v[5];
          }
         injectionSwitch;
         while(false)
          {
           bool _GLF_SWITCH_5_54v, _GLF_SWITCH_5_55v[93], _GLF_SWITCH_5_56v;
           int _GLF_SWITCH_5_57v, _GLF_SWITCH_5_58v, _GLF_SWITCH_5_59v;
          }
         do
          {
           while(true)
            {
             {
              mat2x4(-0.3, 568.324, 180.616, 2.3, -2.8, -832.917, -8.3, -152.539);
              mat2x4(-8246.4113, 5052.4329, -166.734, 873.004, 192.168, 97.40, -0.5, -62.86);
              ivec4 _GLF_SWITCH_5_60v;
              if(_GLF_DEAD(false))
               barrier();
             }
             vec2 _GLF_SWITCH_5_61v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               while(false)
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   _GLF_SWITCH_5_61v;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   bvec3(true, false, true);
                  }
                 else
                  {
                  }
                 ivec3 _GLF_SWITCH_5_62v, _GLF_SWITCH_5_63v, _GLF_SWITCH_5_64v;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
                    {
                    }
                   else
                    {
                     subgroup_size;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 ivec4(6997, 7368, 83972, 41689);
                 do
                  {
                   -57518;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 subgroup_id;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (uvec2(76876u, 101405u) + uvec2(143577u, 1008u));
             bitfieldInsert(ivec4(-51693, -5633, -98548, -53828), ivec4(-68426, 56009, -14899, -42059), (~ 54251), 82858);
             uvec3(127567u, 9425u, 74136u);
             uvec3 _GLF_SWITCH_5_65v;
             for(vec2 _GLF_SWITCH_5_66v[42], _GLF_SWITCH_5_67v[46], _GLF_SWITCH_5_68v[22]; (injectionSwitch == vec2(-8.5, 21.20)); next_virtual_gid)
              {
               (uvec2(112562u, 45317u) / (subgroup_size >> num_workgroup));
               uint _GLF_SWITCH_5_69v;
               ;
               mat3 _GLF_SWITCH_5_70v[3], _GLF_SWITCH_5_71v;
              }
             do
              {
               ((ivec2(-81348, 36745) / -28290) << ivec2(96245, -74829)).sss;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     case 54:
     for(mat2 _GLF_SWITCH_5_72v[65]; (502.946 != 8.0); mat4x3(-13.36, 1.4, 30.64, 15.67, 8.8, 41.94, _GLF_IDENTITY(-2.0, (_GLF_IDENTITY(-2.0, (-2.0) - 0.0)) - 0.0), 493.786, -31.16, 8.7, -4.0, -742.878))
      {
      }
     case 0:
     case 41:
     case 68:
     case 69:
     if(_GLF_DEAD(false))
      barrier();
     case 19:
     case 16:
     case 73:
     case 87:
     switch(_GLF_SWITCH(0))
      {
       case 24:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         while(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 89:
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))); _injected_loop_counter --)
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 43:
                         mat4x3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                         case 0:
                         do
                          {
                           for(                           ivec3(15869, -64761, -70177);
 false; mat2x3(-858.369, 6.0, 59.72, 587.860, -3.2, -2.4))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 5:
                                 vec2 _GLF_SWITCH_4_0v[70], _GLF_SWITCH_4_1v[82], _GLF_SWITCH_4_2v;
                                 case 7:
                                 vec4 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                                 case 0:
                                 case 46:
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                                  {
                                   do
                                    {
                                     true;
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                                  }
                                 case 28:
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 case 56:
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       do
                                        {
                                         do
                                          {
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           do
                                            {
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(false))
                                          {
                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_DEAD(false))
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           else
                                            {
                                            }
                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (0) - 0))))); _injected_loop_counter --)
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               barrier();
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))));
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                          {
                                           while(true)
                                            {
                                             if(_GLF_DEAD(false))
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   barrier();
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                              {
                                               if(_GLF_DEAD(false))
                                                barrier();
                                              }
                                             else
                                              {
                                              }
                                             do
                                              {
                                               if(_GLF_DEAD(false))
                                                barrier();
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                             uint _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                              {
                                               if(_GLF_DEAD(false))
                                                barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 11:
                                 do
                                  {
                                   do
                                    {
                                     if((bvec2(false, true) == bvec2(false, true)))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                              {
                                               for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                {
                                                 barrier();
                                                }
                                              }
                                            }
                                          }
                                         else
                                          {
                                           do
                                            {
                                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
                                              {
                                               ;
                                              }
                                             else
                                              {
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                        }
                                       vec2 _GLF_SWITCH_1_3v;
                                       mat2x3 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 61:
                                 {
                                  do
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                    if(_GLF_WRAPPED_IF_FALSE(false))
                                     {
                                     }
                                    else
                                     {
                                      mix(bvec3(true, true, false), bvec3(false, false, true), bvec3(true, false, false));
                                     }
                                   }
                                  while(_GLF_WRAPPED_LOOP(false));
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  vec2 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
                                  ivec4 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v;
                                  bvec4 _GLF_SWITCH_1_11v[62], _GLF_SWITCH_1_12v[91];
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                     {
                                      if(_GLF_WRAPPED_IF_FALSE(false))
                                       {
                                       }
                                      else
                                       {
                                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), int(int(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(int(2), int(2)))) | 0)))))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                                         {
                                          switch(_GLF_SWITCH(0))
                                           {
                                            case 70:
                                            bvec2 _GLF_SWITCH_6_0v[51];
                                            case 0:
                                            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                             barrier();
                                            case 58:
                                            do
                                             {
                                              if(_GLF_DEAD(false))
                                               barrier();
                                             }
                                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                            case 22:
                                            do
                                             {
                                              uvec2(164523u, 33390u);
                                             }
                                            while(_GLF_WRAPPED_LOOP(false));
                                            break;
                                            case 64:
                                            mat3(86.93, -65.92, 1.3, 88.04, 39.37, -1009.8668, _GLF_IDENTITY(-7377.4570, mix(float(_GLF_FUZZED(74.41)), float(-7377.4570), bool(true))), -7.7, 8.8);
                                            default:
                                            1;
                                           }
                                         }
                                       }
                                     }
                                    else
                                     {
                                     }
                                   }
                                  true;
                                  ;
                                  (vec3(5.7, -4.2, 325.699) * mat4x3(102.939, -73.59, -40.51, -5.0, -6218.0660, 7.7, 0.9, 8.8, -606.656, -4.7, -2.5, -556.988));
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                   }
                                 }
                                 case 34:
                                 do
                                  {
                                   do
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 77:
                                 bvec3 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                                 break;
                                 case 38:
                                 uvec2 _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v;
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)) | 0)); _injected_loop_counter --)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                  }
                                 default:
                                 1;
                                }
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         break;
                         case 30:
                         mat3x2 _GLF_SWITCH_7_2v[97], _GLF_SWITCH_7_3v, _GLF_SWITCH_7_4v;
                         default:
                         1;
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
                      barrier();
                    }
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(             mix(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), uvec3(uvec4(uvec3(162879u, 189855u, 172776u), 1u))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), uvec3(uvec4(uvec3(162879u, 189855u, 172776u), 1u))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size)))), (uvec3(_GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), uvec3(uvec4(uvec3(162879u, 189855u, 172776u), 1u))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size))))) / uvec3(1u, 1u, 1u))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), uvec3(uvec4(uvec3(162879u, 189855u, 172776u), 1u))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size)))), (uvec3(_GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(162879u, 189855u, 172776u), uvec3(uvec4(uvec3(162879u, 189855u, 172776u), 1u))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size))))) / uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(68626u, 0u | (_GLF_IDENTITY(68626u, min(68626u, 68626u)))), 154575u, 177806u), not(equal(ivec3(-12497, -39864, -97123), ivec3(-23110, 15276, 2534))));
 true; bvec3(false, false, false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 20:
                 case 32:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))), false, true, false)))))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       injectionSwitch;
                       uvec2(84129u, 12623u);
                       int _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                        barrier();
                       mat2x4 _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         (ivec4(-75064, 93369, -11890, 17418) * (atomicAdd(_GLF_SWITCH_1_15v, 75935) + _GLF_SWITCH_1_16v));
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       vec3 _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v;
                       mat2x4 _GLF_SWITCH_1_22v[12];
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while((mat4x3(-5.7, -2.8, -491.515, 1.3, 2017.1393, 209.647, 6.8, 6709.6609, -82.33, -4231.9853, -5932.1577, 6.3) != mat4x3(-6.3, 7786.6933, -5.6, 11.53, 489.775, _GLF_IDENTITY(7191.7775, mix(float(7191.7775), float(_GLF_FUZZED(4.4)), bool(false))), 4161.6819, 9255.6922, -5514.5445, -4769.5845, -88.13, -363.176)));
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 24:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 97:
                 while((bitfieldExtract(_GLF_IDENTITY(-18774, _GLF_IDENTITY((_GLF_IDENTITY(-18774, ~ (~ (-18774)))), (false ? _GLF_FUZZED(-39656) : (_GLF_IDENTITY(-18774, ~ (~ (-18774)))))) + 0), -25054, int(0.7)) < -20522))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     ivec3(-20747, 54863, 71834);
                    }
                   (mat4x2(-6.1, -96.62, 4.0, 4.3, 0.1, -4783.6770, -883.341, 790.394) / mat4x2(1.8, -8.6, 649.479, 735.114, 1.0, -7.0, 7440.6660, 3.4));
                   for(int _injected_loop_counter = ((-13856 & (19589 & 0)) & -31856); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     abs(_GLF_IDENTITY(ivec3(70325, -38277, 21206), (ivec3(70325, -38277, 21206)) / ivec3(1, 1, 1)));
                    }
                   bvec3 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v;
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       (vec4(2.0, 630.908, 106.800, 769.317) * (_GLF_IDENTITY(mat4(-303.286, -88.78, -3.4, 8.3, -32.81, 134.077, -8.3, 36.49, 9.2, 8713.8565, -8.1, -0.0, 3.8, 5.8, -70.28, -247.109), (mat4(-303.286, -88.78, -3.4, 8.3, -32.81, 134.077, -8.3, 36.49, 9.2, 8713.8565, -8.1, -0.0, 3.8, 5.8, -70.28, -247.109)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * mat2x4(2.3, 3.3, -1383.7271, 108.862, 0.7, 0.2, 173.753, -5.7)));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                    }
                   mat4x3 _GLF_SWITCH_1_25v[73], _GLF_SWITCH_1_26v[68];
                   uvec4 _GLF_SWITCH_1_27v[39], _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
                   mat3x4 _GLF_SWITCH_1_30v;
                   bool _GLF_SWITCH_1_31v;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 82:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         uvec4(uvec3(_GLF_IDENTITY(51506u, (_GLF_IDENTITY(51506u, (true ? 51506u : _GLF_FUZZED(subgroup_local_id)))) | (51506u)), 120521u, 199939u), uvec3(167500u, 160220u, 189125u).t);
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 case 69:
                 for(                 bvec4(false, true, true, true);
 false; bvec2(true, true))
                  {
                   mat4x3(4.9, -81.65, _GLF_IDENTITY(6.2, clamp(6.2, 6.2, 6.2)), -6.7, -22.41, 2277.4930, 52.57, -9.4, -5.4, 5112.9218, -9.0, -8003.2956);
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     mat4x3(4705.4162, -27.04, -406.033, -619.555, 87.28, 2.0, 6.7, _GLF_IDENTITY(-3.3, mix(float(-3.3), float(_GLF_FUZZED(-8715.5989)), bool(false))), -962.157, -3153.2844, -7880.4008, 894.196);
                    }
                   uvec3(104759u, 32185u, 197413u);
                  }
                 uvec3 _GLF_SWITCH_1_32v;
                 break;
                 case 56:
                 bool _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[51];
                 default:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   1;
                  }
                }
              }
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))), ~ (~ (int(_injected_loop_counter)))))) != 0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), ~ (~ (int(_injected_loop_counter)))))) != 0))), ! (! ((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), ~ (~ (int(_injected_loop_counter)))))) != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))))))))); _injected_loop_counter --)
              {
               ((true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec4(subgroup_local_id, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(subgroup_local_id, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z) < GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x);
              }
             case 23:
             uvec3 _GLF_SWITCH_1_33v[90], _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), (bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false), (bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))).y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false)))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                barrier();
               while((subgroup_local_id > usubBorrow(workgroup_id, 183943u, GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y)))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 uvec2 _GLF_SWITCH_1_36v[3], _GLF_SWITCH_1_37v[22];
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 lessThan(_GLF_SWITCH_1_35v, (-- _GLF_SWITCH_1_35v));
                 uint _GLF_SWITCH_1_38v, _GLF_SWITCH_1_39v[30], _GLF_SWITCH_1_40v[47];
                }
              }
             break;
             case 11:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y)) && true)) || false))))
              {
               if(false)
                {
                 vec4(7044.4773, -1.6, -304.301, 7.6);
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 8:
                     case 90:
                     case 11:
                     case 74:
                     case 80:
                     (vec2(3155.5307, 6944.8781) * (mat4x2(-1292.0447, -14.66, -9230.6648, -3630.6990, 69.68, -743.816, -625.417, -885.092) * mat2x4(1.8, -923.848, 512.241, 0.1, 6571.3567, 7686.9743, -2650.4452, 7835.0489)));
                     break;
                     case 46:
                     (true ? mat3x2(mat2(-7.9, 463.797, -59.39, -9261.6246)) : mat3x2(4544.0333, 33.31, 8.1, -349.092, 232.391, 236.674));
                     case 94:
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       bvec2(false, true);
                      }
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     mat4x3(-3.8, -4.4, -2298.4653, -9.7, -5.9, 9776.2633, 1.8, _GLF_IDENTITY(-12.24, mix(float(-12.24), float(_GLF_FUZZED(float(-188))), bool(false))), -28.80, 5.2, 1.2, 9982.0844);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
              }
             case 67:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 ivec3(-93635, -44544, -34416);
                }
               mat4x2 _GLF_SWITCH_3_0v[38];
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             default:
             1;
            }
          }
        }
       case 0:
       case 95:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x], uint(2), 4, 64, 4);
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79733) : 0))), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79733) : 0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79733) : 0))), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79733) : 0)))) | ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79733) : 0)))))))))))
            {
             case 46:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
                {
                }
               else
                {
                 while(bvec3(false, true, true).b)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 60:
                           uvec3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[57];
                           case 0:
                           case 73:
                           case 81:
                           case 9:
                           case 17:
                           case 35:
                           case 51:
                           case 22:
                           case 95:
                           case 27:
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           break;
                           case 8:
                           uvec4(97651u, 167142u, 196735u, 58597u);
                           case 46:
                           bvec4(true, false, false, true)[2];
                           default:
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     else
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 48:
                         mat2x3(50.10, -1.8, -8.6, -6590.4238, 2185.5193, 6.2);
                         case 0:
                         case 82:
                         mat2x3 _GLF_SWITCH_3_0v;
                         bool _GLF_SWITCH_3_1v;
                         ((mat3(976.016, 4364.2111, -704.853, 713.400, 664.487, -8.1, -6.7, 6.6, 44.92) == mat3(2819.5429, 208.176, -1.7, -4.0, -3.9, 8.5, -791.211, 7.1, 7.0)) ? mat4x2(2.3, 78.46, 51.13, -7.9, 6231.3363, 3361.4882, -59.55, -57.24) : mat4x2(447.942, -6982.0872, -44.36, 8.5, -80.69, -4.0, _GLF_IDENTITY(-7173.6971, 0.0 + (-7173.6971)), 48.52));
                         vec2(-1152.5213, -81.59);
                         mat3 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
                         _GLF_SWITCH_3_1v;
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                              barrier();
                            }
                          }
                         case 93:
                         vec4 _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[64], _GLF_SWITCH_3_6v;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               (next_virtual_gid + uvec4(20701u, 175063u, 30700u, 176096u)).gg;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                         _GLF_IDENTITY(_GLF_SWITCH_3_6v, clamp(_GLF_IDENTITY(_GLF_SWITCH_3_6v, vec4(_GLF_IDENTITY(mat2x3(_GLF_SWITCH_3_6v, 1.0, 0.0), transpose(transpose(mat2x3(_GLF_SWITCH_3_6v, 1.0, 0.0)))))), _GLF_SWITCH_3_6v, _GLF_SWITCH_3_6v));
                         break;
                         case 65:
                         mat4(773.966, 0.3, 70.11, 395.838, 65.91, 3.0, -7003.1038, 5038.7598, 1.2, 2657.5032, 1.7, 744.591, 0.7, -5.4, -302.366, 9.4);
                         default:
                         1;
                        }
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             case 83:
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_IDENTITY((ivec2(-46975, 47524) == (-57358 & ivec2(36408, -23581))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)) && ((ivec2(-46975, 47524) == (-57358 & ivec2(36408, -23581))))))
                  {
                   mat4x2 _GLF_SWITCH_3_7v, _GLF_SWITCH_3_8v;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       vec4(99.80, _GLF_IDENTITY(329.300, min(329.300, _GLF_IDENTITY(329.300, (329.300) / abs(1.0)))), 8.7, 65.46);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             case 0:
             case 26:
             case 33:
             case 76:
             case 52:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 barrier();
                }
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             break;
             case 79:
             uvec2 _GLF_SWITCH_3_9v[4];
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
             else
              {
              }
             default:
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               1;
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 53:
       case 83:
       case 85:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         subgroupAll(true);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       break;
       default:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         1;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             else
              {
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     break;
     case 59:
     do
      {
       packSnorm4x8(vec4(185.091, 9.8, 5.2, 17.68));
       {
        bool _GLF_SWITCH_5_73v[47], _GLF_SWITCH_5_74v;
        (~ bitfieldInsert(uvec4(183565u, 68553u, 182396u, 37072u), uvec4(178103u, 16143u, 36497u, 130106u), -48581, -79990));
        do
         {
          for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
           {
            do
             {
              switch(_GLF_SWITCH((ivec4(95077, 16617, -99006, 31236).tpqs.a & 0)))
               {
                case 0:
                case 28:
                case 32:
                case 21:
                case 62:
                case 12:
                ;
                break;
                case 90:
                findMSB(findMSB(ivec2(20424, 26216)));
                default:
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                 {
                  1;
                 }
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          do
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              uvec4(76130u, 150797u, 152568u, 100213u);
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          ;
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            (false ? mat2x4(-67.88, 461.506, 2.6, 7.4, 9732.3795, 8928.1193, -82.58, 8785.3834) : mat2x4(2.8, -6101.5691, -6.1, -2.4, -131.333, 8468.3969, -761.085, -1.2));
           }
         }
        while(_GLF_SWITCH_5_74v);
        ;
        while((40.71 < vec4(3469.8369, -1889.4346, -9.4, -8.6).b))
         {
          ;
          uvec4(next_virtual_gid, uaddCarry(GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size, GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size, GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size));
          int _GLF_SWITCH_5_75v, _GLF_SWITCH_5_76v, _GLF_SWITCH_5_77v;
          bvec2 _GLF_SWITCH_5_78v[71];
          (mat4x3(-4400.1173, 85.82, -590.867, -5.3, -9.2, -7.6, -42.81, 139.211, 59.21, -8.2, -3.7, -75.77) - -4035.0358);
          int _GLF_SWITCH_5_79v, _GLF_SWITCH_5_80v, _GLF_SWITCH_5_81v;
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          float _GLF_SWITCH_5_82v;
          findMSB(ivec4(-32350, 50180, -14350, -87466));
          if(_GLF_DEAD(false))
           barrier();
          ivec2(-83516, -94121);
         }
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         ;
         bvec4(true, true, false, true);
         subgroup_size;
         uvec4(188566u, 192166u, 187456u, 54679u);
         GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size;
         mat4x3 _GLF_SWITCH_5_83v, _GLF_SWITCH_5_84v[81];
         ;
         (uvec4(125690u, 65632u, 191317u, 153325u));
        }
        for(        ivec3(-10534, 97114, -64578);
 (vec3(573.839, 0.0, -82.69) != vec3(-66.77, -0.1, -78.41)); bvec3(false, true, true).r)
         {
          int _GLF_SWITCH_5_85v[36];
          mat3x4 _GLF_SWITCH_5_86v, _GLF_SWITCH_5_87v[64];
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            dot(vec3(0.3, 26.80, -71.98), vec3(446.502, 547.480, -6.2));
           }
          vec2 _GLF_SWITCH_5_88v, _GLF_SWITCH_5_89v[46], _GLF_SWITCH_5_90v;
          (mat2x3(-6.3, -720.275, -911.934, -2.2, 1665.7712, 506.828) * mat3x2(5.6, 853.633, 0.8, 3272.0440, 1.1, 21.44));
          bvec2 _GLF_SWITCH_5_91v[29], _GLF_SWITCH_5_92v;
          bvec2 _GLF_SWITCH_5_93v, _GLF_SWITCH_5_94v;
          mat3x2 _GLF_SWITCH_5_95v, _GLF_SWITCH_5_96v[32], _GLF_SWITCH_5_97v;
          ;
         }
       }
       {
        mat2x4 _GLF_SWITCH_5_98v[46];
        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
         {
          do
           {
            switch(_GLF_SWITCH(0))
             {
              case 80:
              mat4x2(-7.7, 7.1, -99.76, -8.3, -3.2, -2.5, 166.690, 707.263);
              case 0:
              case 50:
              case 52:
              case 8:
              case 74:
              case 56:
              case 51:
              case 90:
              uvec4(913u, 161271u, 130217u, 78110u);
              break;
              default:
              1;
             }
           }
          while((uvec4(67069u, 168868u, 129318u, 12491u) != uvec4(157753u, 92720u, 60069u, 198844u)));
         }
        vec3 _GLF_SWITCH_5_99v, _GLF_SWITCH_5_100v;
        {
         mat2 _GLF_SWITCH_5_101v;
        }
       }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         (ivec4(-8844, 52302, 41663, -60455) + ivec4(-12365, -20611, -71629, 89979));
        }
       else
        {
        }
      }
     while(true);
     case 42:
     _GLF_IDENTITY(ivec4(-11109, -33666, -10273, -11321), min(ivec4(-11109, -33666, -10273, -11321), ivec4(-11109, -33666, -10273, -11321)));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false)))))
      barrier();
     default:
     1;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
}
