#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 mat2x3 _f0;
 bvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 uvec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_17 {
 float _f0;
 mat4x2 _f1;
 uvec4 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_16 {
 ivec4 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 mat3x4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 bvec4 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 vec4 _f1;
 uint subgroup_id;
 _GLF_struct_21 _f2;
 mat4x3 _f3;
 uint _f4;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 mat4x2 _f1;
 uint subgroup_local_id;
 bvec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 mat2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 mat4 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 bvec4 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 bvec3 _f4;
 uvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 vec2 _f1;
 mat4 _f2;
 vec3 _f3;
 bvec3 _f4;
 ivec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 int _f1;
 uvec3 _f2;
 bool _f3;
 vec3 _f4;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat2x3 _f1;
 int _f2;
 float _f3;
 uint _f4;
 ivec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_1 {
 uint workgroup_size;
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 uvec2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_7 _f4;
 bvec4 _f5;
 _GLF_struct_10 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_18(_GLF_struct_15(ivec4(1), mat2x4(1.0), mat4x3(1.0), mat2x3(1.0), mat3x4(1.0), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0)) * 1.0)), mat4(1.0)), bvec4(true), _GLF_struct_16(ivec4(1), bvec4(true), mat2x3(1.0), mat3x2(1.0)), _GLF_struct_17(1.0, mat4x2(1.0), uvec4(1u), uvec4(1u), mat2x3(1.0), mat3x4(1.0))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED((-9375.9496 - _GLF_IDENTITY(441.312, float(mat4x2(441.312, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0)), float(mat2x3(dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))), 1.0))))), _GLF_FUZZED(6526.5308), _GLF_FUZZED(152.918), (vec4(1.0))[3]), vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[_GLF_IDENTITY(2, 0 | (2))], _GLF_FUZZED(314.154)), bvec4(true, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), gl_SubgroupID, _GLF_struct_21(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_struct_19(mat2(1.0), uvec3(1u), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7258.2967), mix(float(_GLF_FUZZED(81.55)), float(_GLF_FUZZED(-7258.2967)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0)))) / abs(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7258.2967), mix(float(_GLF_FUZZED(81.55)), float(_GLF_FUZZED(-7258.2967)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0)))) / abs(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7258.2967), mix(float(_GLF_FUZZED(81.55)), float(_GLF_FUZZED(-7258.2967)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0)))) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7258.2967), mix(float(_GLF_FUZZED(81.55)), float(_GLF_FUZZED(-7258.2967)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))) / 1.0)))) / abs(1.0))))) / 1.0), mix(float(1.0), float(_GLF_FUZZED(-7258.2967)), bool(false))))))), _GLF_struct_20(mat2x3(1.0), bvec3(true), mat3(1.0))), mat4x3(1.0), 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), tan(0.0)), (false ? _GLF_FUZZED(vec2(-758.901, -297.568)) : vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), tan(0.0))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false)))))))) || false)), false, false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(55.75)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(55.75)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false))), false)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), mix(float(_GLF_FUZZED(-290.699)), float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) * cos(log(1.0)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(_GLF_struct_12(uvec3(1u), mat4x2(1.0), gl_SubgroupInvocationID, bvec2(_GLF_IDENTITY(true, (true) || false)), 1u), vec2(1.0)), mat2(1.0), mat4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), false, true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(88.01))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(88.01))) > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), ! (! (! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         continue;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3805.1978)), bool(false))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.613))), 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3805.1978)), bool(false))) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2542.3850)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3(1.0), uvec2(1u), _GLF_struct_1(gl_WorkGroupSize.x, _GLF_struct_0(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.18), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(-7.9)))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(-276.409), max(_GLF_FUZZED(-276.409), _GLF_FUZZED(-276.409))) : 1.0)), 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0), transpose(transpose((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0))))), mat2x3(1.0), 1, 1.0, 1u, ivec2(1), bvec3(true))), _GLF_struct_3(_GLF_struct_2(mat4(1.0)), mat3(1.0)), _GLF_struct_7(mat4x3(1.0), _GLF_struct_4(mat3x2(1.0), 1, uvec3(1u), true, vec3(1.0)), _GLF_struct_5(vec2(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(unpackUnorm2x16(subgroup_size)) : vec2(1.0)), ((false ? _GLF_FUZZED(unpackUnorm2x16(subgroup_size)) : vec2(1.0))) + vec2(0.0, 0.0))), uvec4(1u)), _GLF_struct_6(mat4x3(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))), mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), 0.0, 1.0)), (float(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 0.0, 1.0))) - 0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0)), mix(float(float(mat3x2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), 0.0, 1.0)), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(40.89)), bool(false))), 1.0, 1.0))))), 0.0, 1.0))) - 0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0))), float(_GLF_FUZZED(-354.987)), bool(false)))), float(_GLF_IDENTITY(mat2x3(float(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.9) : 0.0))), mat2x3(mat4(mat2x3(float(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / sqrt(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-621.419)), bool(false))))), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-2661.2168)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(1.0), 1.0, abs(1.0))), (float(vec4(0.0, sqrt(1.0), 1.0, abs(1.0)))) * 1.0)))) : _GLF_FUZZED(mat4(-0.6, 6394.3821, -19.95, -427.160, -696.880, -1767.5231, 4.2, -4804.7486, -32.70, 95.55, -9.9, _GLF_IDENTITY(-865.583, (false ? _GLF_FUZZED(373.695) : _GLF_IDENTITY(-865.583, float(mat2(-865.583, abs(0.0), 1.0, 0.0))))), -858.490, _GLF_IDENTITY(-7634.2836, (-7634.2836) / 1.0), 5465.3268, -9857.1253)))), vec3(1.0), bvec3(true), ivec4(1), vec3(1.0))), bvec4(true), _GLF_struct_10(_GLF_struct_8(uvec3(1u), bvec4(true), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0)), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0)), min(ivec3(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0)), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0))) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) + ivec3(0, 0, 0)))))))), mat2x4(1.0), bvec3(true), uvec3(1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (1u) | 0u))), _GLF_struct_9(mat3(1.0), mat4(1.0), mat4x3(1.0), uvec3(1u), mat3(1.0)), uvec3(1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), true), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), true), true, true)))), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_11._f2.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_22.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_struct_replacement_14._f0._f0.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(bool(bvec4(false, true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, true), bvec3(bvec4(bvec3(bool(bvec3(bool(bvec4(false, true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, true), false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), clamp(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(59976u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid))), subgroup_size)) : _GLF_FUZZED((subgroup_size * subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))), ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 0, 1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(ivec4(ivec3(1, 0, 1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (1) / 1), 1, 0, 1)) + ivec4(0, 0, 0, 0))))) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1, (_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) | 0u)) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size)) | 0u))), uint(uint(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_22.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec4(uint(8u), 1u, 1u, 1u)), (uint(uvec4(uint(8u), 1u, 1u, 1u))) / 1u))))), (uint(8u)) | (uint(8u)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u | (_GLF_struct_replacement_14._f0._f0.subgroup_local_id)))))) + 1) % subgroup_size)), (_GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_22.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec4(uint(8u), 1u, 1u, 1u)), (uint(uvec4(uint(8u), 1u, 1u, 1u))) / 1u))))), (uint(8u)) | (uint(8u)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u | (_GLF_struct_replacement_14._f0._f0.subgroup_local_id)))))) + 1) % subgroup_size)), ~ (~ ((workgroup_base + _GLF_struct_replacement_22.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec4(uint(8u), 1u, 1u, 1u)), (uint(uvec4(uint(8u), 1u, 1u, 1u))) / 1u))))), (uint(8u)) | (uint(8u)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u | (_GLF_struct_replacement_14._f0._f0.subgroup_local_id)))))) + 1) % subgroup_size)))))) | ((workgroup_base + _GLF_struct_replacement_22.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec4(uint(8u), 1u, 1u, 1u)), (uint(uvec4(uint(8u), 1u, 1u, 1u))) / 1u))))), (uint(8u)) | (uint(8u)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, 0u | (_GLF_struct_replacement_14._f0._f0.subgroup_local_id)))))) + 1) % subgroup_size)))) - 0u, min((workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), ~ (~ (_GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id, ~ (~ (_GLF_struct_replacement_14._f0._f0.subgroup_local_id))) + 1) % subgroup_size), (false ? _GLF_FUZZED(6409u) : (_GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1), ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) | 0u) % subgroup_size)))) * 1u))))) - 0u, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)))) >> ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, clamp(_GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((workgroup_base)))) | (_GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, 0u ^ (_GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1))) ^ 0u) / 1u)))), _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, uint(_GLF_IDENTITY(uvec3(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, 0u, 0u), min(uvec3(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, 0u, 0u), uvec3(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u, 0u, 0u))))), ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1)) / 1u))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) - 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))) * 1u) + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))) * 1u) + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id, uint(uint(_GLF_struct_replacement_22.subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))) * 1u) + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size))))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id, uint(uint(_GLF_struct_replacement_22.subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))) * 1u) + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))))))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size), min((workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size), (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))))) * 1u) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1))), 1u, 0u)))) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(virtual_gid) : _GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1))) % subgroup_size)))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))) * 1u) + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size))) * 1u) + _GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), 0u | (((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))) << 0u), max(workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_22.subgroup_id * subgroup_size + ((_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) % subgroup_size)))))))) - 0u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 1, 1), clamp(ivec4(0, 1, 1, 1), ivec4(0, 1, 1, 1), _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), 1, 1), (ivec4(0, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), 1, 1)) | (ivec4(0, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), 1, 1))))))))) << 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.03), _GLF_FUZZED(-91.19)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.03), _GLF_FUZZED(-91.19)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.03), _GLF_FUZZED(-91.19)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.03), _GLF_FUZZED(-91.19)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.03), _GLF_FUZZED(-91.19)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED(6.1)), bool(false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), false || (! (true && (false)))))), bool(_GLF_IDENTITY(bool(true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (bool(true && (false)))) && true)), true && ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) && (false)) || false), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), (! (bool(true && (false)))) && true))))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1, (_GLF_struct_replacement_14._f0._f0.subgroup_local_id + 1) >> 0u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, true && (true)), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0)) < injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), length(vec2(0.0, 0.0))))).x > injectionSwitch.y)), false)))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(6.8, -34.89))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(6.8, -34.89))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(6.8, -34.89))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false)))) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(6.8, -34.89))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(6.8, -34.89))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false)))) && true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), ! (! (bool(! (injectionSwitch.x > injectionSwitch.y)))))))))))))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 1))), (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(48808), (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(48808, (48808) ^ (0 & ivec4(52034, 20181, -63952, -86322).r))), (true ? 4 : _GLF_FUZZED(48808)) ^ 0)) + 0))), min(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) && (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), false), bvec2(bvec4(bvec2(bool(false), false), false, false))))), ! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))))), false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) + vec2(0.0, 0.0)).y)))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), false), bvec2(bvec4(bvec2(bool(false), false), false, false))))), ! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) || false)))))))))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), false), bvec2(bvec4(bvec2(bool(false), false), false, false))))), ! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) || false)))))))))))), false))) || false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) + vec2(0.0, 0.0)).y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1633.5426)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(59.21), clamp(_GLF_FUZZED(59.21), _GLF_IDENTITY(_GLF_FUZZED(59.21), min(_GLF_IDENTITY(_GLF_FUZZED(59.21), mix(float(_GLF_FUZZED(59.21)), float(_GLF_FUZZED(6788.9495)), bool(false))), _GLF_FUZZED(59.21))), _GLF_FUZZED(59.21)))), float(injectionSwitch.x), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-881.635)), max(float(_GLF_FUZZED(-881.635)), float(_GLF_FUZZED(-881.635)))), float(mix(float(_GLF_FUZZED(59.21)), float(injectionSwitch.x), bool(true))), bool(true)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
