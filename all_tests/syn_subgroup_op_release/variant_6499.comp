#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) * 1)))
    {
     case 0:
     case 29:
     if(_GLF_DEAD(false))
      barrier();
     case 34:
     case 69:
     case 97:
     case 45:
     case 68:
     case 2:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH((0 ^ 0)))
            {
             case 0:
             case 55:
             if(_GLF_DEAD(false))
              barrier();
             case 42:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             case 28:
             case 58:
             case 68:
             case 36:
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             case 19:
             case 7:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               barrier();
              }
             break;
             case 60:
             bvec3 _GLF_SWITCH_3_0v[89], _GLF_SWITCH_3_1v[99];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             case 23:
             all(bvec4(false, true, false, true));
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 13:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     while(true)
      {
       if(false)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           (mat2(-478.912, -0.2, -6.8, -0.1) - 33.59);
          }
         mat3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             do
              {
               ivec2 _GLF_SWITCH_2_3v[58], _GLF_SWITCH_2_4v[55], _GLF_SWITCH_2_5v[16];
               bvec2 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
               reflect(vec4(2.0, -18.54, -5128.5288, 2.7), vec4(1.1, -3468.6434, -68.16, -0.2));
               mat2x3(-8.2, 177.854, 5.7, -6.2, 8025.3804, 5.2);
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               (vec3(-9.4, -5.9, -76.78) , mat4(5.3, -36.55, -7.6, 59.04, 74.24, 2.1, 3.5, 3.8, -5.2, -5347.2194, -9.7, -4.9, -310.286, 8.6, -4074.7329, -18.08));
               if(_GLF_DEAD(false))
                barrier();
              }
             while(false);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(           mat4x2(-339.673, -0.1, -2.8, 3773.8628, 22.43, -9383.4625, 0.0, -3.8);
 (bvec3(true, true, false) , true); 189328u)
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     case 82:
     bvec3(false, true, false);
     for(int _injected_loop_counter = (-79061 & (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         1;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (1 | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 23:
       for(int _injected_loop_counter = (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(mat2x3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v; false; mat3x4(9.6, 4663.4200, 163.717, 8998.1144, 5243.0938, 99.04, -50.34, 69.08, 6818.8655, -174.802, 44.08, 6.0))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             ivec4(-50669, 13588, 6717, 5216);
            }
           if(_GLF_DEAD(false))
            barrier();
           if(false)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             mat2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[89];
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
              barrier();
             for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 mat3x4(-2.8, -5.6, 8791.9184, 28.64, -17.87, -31.40, 0.4, 341.596, 61.23, 2334.4129, 5.5, 9.1);
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               ;
               mat2x4 _GLF_SWITCH_2_5v;
               acosh(349.828);
              }
             else
              {
              }
             (subgroup_size - uvec4(101406u, 36651u, 111918u, 139847u));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           {
            switch(_GLF_SWITCH(0))
             {
              case 0:
              if(_GLF_DEAD(false))
               barrier();
              case 8:
              mat2(-774.637, -3.4, 69.10, 34.34);
              case 62:
              if(_GLF_DEAD(false))
               barrier();
              case 74:
              case 67:
              mat4 _GLF_SWITCH_2_6v[38], _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v;
              for(ivec2 _GLF_SWITCH_2_9v[50], _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v[60]; (mat3(-26.77, 573.377, 0.2, 846.388, -6.7, 8.8, 9.5, 457.067, -9.3) != mat3(7.5, -9891.1235, -2466.6283, 91.22, 5.7, 3.6, -172.822, -38.70, -61.43)); (ivec4(-94612, 65308, 52939, 37225) - ivec4(39692, 82812, -14791, -3057)))
               {
                (workgroup_size + workgroup_size);
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                uvec4(133915u, 154840u, 10265u, 15329u);
                mat2x3(-337.265);
                ((ivec2(8499, -73787) / 28992) & 18994);
                refract((uvec3(44803u, 38043u, 137515u) , vec4(9.6, 2.7, 8075.9185, -5937.4403)), vec4(1.1, -79.87, 4.5, 797.340), -63.58);
               }
              float _GLF_SWITCH_2_12v;
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
               {
                if(false)
                 {
                  do
                   {
                    vec2(-833.174, -955.438);
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  if(_GLF_DEAD(false))
                   barrier();
                  atanh(vec4(71.34, -8512.4327, 7144.2394, 7547.1397));
                  if(_GLF_DEAD(false))
                   barrier();
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    mat2x4(-28.85, -2789.9934, 2014.0005, -92.23, -660.763, -3.6, 6931.9497, 2.9);
                   }
                  for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-33832 & (1 ^ 1))); _injected_loop_counter --)
                   {
                    ;
                   }
                  float _GLF_SWITCH_2_13v, _GLF_SWITCH_2_14v;
                  all(bvec2(false, true));
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                   }
                  else
                   {
                    vec2(8.0, -9.3).x;
                   }
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 66:
                      case 30:
                      case 50:
                      case 82:
                      case 31:
                      case 97:
                      case 92:
                      case 78:
                      round(mix(vec3(453.857, -6.6, 4176.9152), vec3(0.0, 5.3, -126.428), log(vec3(-84.35, 1080.9756, -55.00))));
                      break;
                      if(_GLF_DEAD(false))
                       barrier();
                      case 41:
                      bool _GLF_SWITCH_3_0v;
                      default:
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        1;
                       }
                     }
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                       {
                        for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                         {
                          barrier();
                         }
                       }
                     }
                    barrier();
                   }
                  mat3x4 _GLF_SWITCH_2_15v[72];
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              case 26:
              case 84:
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               barrier();
              bvec2 _GLF_SWITCH_2_16v, _GLF_SWITCH_2_17v;
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              case 50:
              case 54:
              do
               {
                mat3 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v[36];
                uvec4(48781u, 69707u, 18040u, 180000u);
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    barrier();
                   }
                 }
                ivec2(-2161, 81896).g;
                bvec2(false, true);
                do
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
                mat4 _GLF_SWITCH_2_21v[32], _GLF_SWITCH_2_22v;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  mat2x3(mat4x2(-0.1, -7774.6378, -61.02, -8.4, 5.1, -3.8, -6.8, -5.6));
                 }
                else
                 {
                 }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  mat2x4(4.4, -66.15, 71.26, 9.8, 4.4, 985.739, -4.9, -839.522);
                 }
                log2(-777.193);
                ;
               }
              while((vec4(-5.2, 80.23, -39.18, -3257.7412) == vec4(-131.688, 1.4, 2.7, 895.922)));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(false)
               {
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  ;
                  if(_GLF_DEAD(false))
                   barrier();
                  for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
                mat2x3 _GLF_SWITCH_2_23v, _GLF_SWITCH_2_24v[56], _GLF_SWITCH_2_25v;
                mat4x3 _GLF_SWITCH_2_26v, _GLF_SWITCH_2_27v, _GLF_SWITCH_2_28v;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              break;
              case 99:
              if(_GLF_DEAD(false))
               barrier();
              reflect(-8.8, _GLF_SWITCH_2_12v);
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              else
               {
               }
              case 38:
              _GLF_SWITCH_2_8v;
              default:
              1;
             }
           }
           mat3 _GLF_SWITCH_2_29v;
           uvec3 _GLF_SWITCH_2_30v[40];
          }
        }
       case 11:
       if(bvec3(true, false, false)[0])
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (0 ^ 1))); _injected_loop_counter ++)
          {
           for(uvec2 _GLF_SWITCH_2_31v; (mat2x4(-2.7, -3773.1963, -91.10, -4.9, 232.854, 30.93, 7.9, 9520.2812) == (mat2x4(388.769, 1.3, 7.5, -1.0, -1.2, 4432.3044, -7660.8467, 7.9) + mat2x4(-7.8, 1.6, 78.45, 98.05, 4.8, -23.73, -7.4, -1.9))); min(vec3(-5.2, 2169.7988, 9.5), 9118.6189))
            {
             if(true)
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 45:
                   53204;
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   injectionSwitch;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   bitfieldReverse(uvec4(60165u, 16741u, 84936u, 77738u));
                   bvec2 _GLF_SWITCH_2_32v;
                   ((mat2(9.9, -2293.0301, -4.0, 107.223) * mat4x2(21.17, -34.05, -8.2, 2.6, -2630.8891, -3.0, 8.8, -3.9)) - -548.128);
                   mat3x4 _GLF_SWITCH_2_33v[23];
                   (sign(ivec3(-79052, 54444, 98343)) + ivec3(86694, -53337, 1914));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     (mat3x2(-6.9, 90.26, -3.2, -66.09, 8737.6808, 5.8) * mat3(-8.1, -153.028, -6.6, -7109.9481, -467.888, 458.588, -7.2, -675.575, 234.109));
                    }
                   else
                    {
                    }
                   mat3x2 _GLF_SWITCH_2_34v;
                   uint _GLF_SWITCH_2_35v;
                   break;
                   case 66:
                   _GLF_SWITCH_2_31v;
                   case 52:
                   ivec2 _GLF_SWITCH_3_0v[82];
                   default:
                   1;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 33:
                 bool _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                 case 0:
                 case 18:
                 case 95:
                 findLSB(ivec2(-68172, 94438));
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 case 13:
                 mat2x4(0.9, 9.8, -96.87, 8.1, 81.86, -465.387, -6.2, 6.3);
                 if(_GLF_DEAD(false))
                  barrier();
                 case 17:
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 case 73:
                 int _GLF_SWITCH_2_36v, _GLF_SWITCH_2_37v, _GLF_SWITCH_2_38v;
                 case 9:
                 if(_GLF_DEAD(false))
                  barrier();
                 bvec3 _GLF_SWITCH_2_39v, _GLF_SWITCH_2_40v, _GLF_SWITCH_2_41v;
                 float _GLF_SWITCH_2_42v;
                 case 70:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 mat4x2(mat2x3(-96.49, 361.232, -3076.0979, 33.37, -3.6, 85.93));
                 ivec4 _GLF_SWITCH_2_43v, _GLF_SWITCH_2_44v, _GLF_SWITCH_2_45v;
                 case 88:
                 mat4x2 _GLF_SWITCH_2_46v, _GLF_SWITCH_2_47v, _GLF_SWITCH_2_48v[39];
                 case 16:
                 uvec3(84017u, 13027u, 195067u);
                 break;
                 case 72:
                 bvec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v;
                 default:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 1;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(false)
              {
               vec3 _GLF_SWITCH_2_49v[13], _GLF_SWITCH_2_50v[60];
               bvec2 _GLF_SWITCH_2_51v[5], _GLF_SWITCH_2_52v, _GLF_SWITCH_2_53v;
               90.51;
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                {
                 true;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 (- mat2(mat4x3(977.710, 3.7, 2991.9441, 29.92, -3.2, -7062.5821, -77.66, -8.5, 958.748, 6.7, 1.9, 744.903)));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               step(6181.5527, injectionSwitch);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat3x4(-612.298, 7.6, -7325.9293, 629.354, -19.99, -8.5, 43.72, 1735.2063, 0.2, 3.2, 2840.0101, -33.98);
               uvec4(173448u, 24976u, 67636u, 2416u);
               (uvec3(105730u, 102730u, 172121u) / uvec3(156916u, 126710u, 164642u));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             for(             (58439 > -2400);
 true; (false ? mat2(-7.9, -3938.7531, -842.285, 9.6) : mat2(99.76, -3972.4974, -3.4, 295.812)))
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   4998;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
               false;
               bvec3 _GLF_SWITCH_2_54v, _GLF_SWITCH_2_55v, _GLF_SWITCH_2_56v[38];
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (true ? mat3x2(93.56, 51.11, 278.791, 413.030, 86.64, 205.060) : mat3x2(607.724, -4906.5441, -110.732, 888.178, 3820.6308, -8.1));
             for(uvec4 _GLF_SWITCH_2_57v, _GLF_SWITCH_2_58v, _GLF_SWITCH_2_59v; false; vec3(1000.6821, 2.7, -112.747))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (1 | (0 << _GLF_IDENTITY(int(8), int(8)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               (subgroup_size);
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   vec3(1.6, 36.29, 281.842);
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
               mat3x2(-9.3, 1428.9654, 5059.4389, -361.264, -3.7, 3.9);
               mat4x3(-2208.6861, 3402.7645, -2956.8378, 7.7, 189.729, 4454.1671, -13.53, -0.4, -6617.6943, -8.2, 4.2, -73.61);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               bvec4 _GLF_SWITCH_2_60v, _GLF_SWITCH_2_61v;
               sinh(vec4(-236.547, 9740.2294, 0.9, 702.838));
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 ;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(               mat4x2(7.9, -2.4, -67.60, 968.375, -13.51, -725.414, -2717.2519, -4.2);
 (all(bvec3(false, false, false)) != (workgroup_id != subgroup_size)); ivec2(-39589, 7872))
                {
                 mat3 _GLF_SWITCH_2_62v[68], _GLF_SWITCH_2_63v;
                 (ivec2(63092, 20433) * (-39883 & ivec2(-52307, 35159)));
                 if(_GLF_DEAD(false))
                  barrier();
                 mat4(-2292.4190, -5298.9491, 9.5, 30.02, -73.31, -710.200, 3100.9518, 3.8, -9479.5867, -8.8, -3.2, -0.8, 6.0, -3.3, -9.8, -567.870);
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                  barrier();
                 mat3 _GLF_SWITCH_2_64v, _GLF_SWITCH_2_65v, _GLF_SWITCH_2_66v;
                 (+ 8.2);
                 any(bvec3(false, false, true));
                 for(int _injected_loop_counter = (1 ^ ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(int(int(4))))) >> 0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 vec4 _GLF_SWITCH_2_67v, _GLF_SWITCH_2_68v[97];
                 ;
                 uvec3(101993u, 107478u, 81057u);
                }
              }
             else
              {
              }
             do
              {
               do
                {
                 switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
                  {
                   case 46:
                   ;
                   case 0:
                   case 96:
                   case 36:
                   (ivec4(-8686, ivec2(-15733, 20106), -28010) , (mat3(5.6, 9793.8783, 1.2, -41.51, -4.9, 4769.2898, -1.4, 31.17, -0.7) == mat3(-212.838, -8579.0091, 48.58, -48.17, -4.5, 930.221, 6.4, -43.73, -21.54)));
                   mat4x3(-1.4, 1697.9689, 6.5, 374.680, -3.6, -4.2, 737.283, 1828.1283, 32.45, 53.56, 879.103, 8329.1365);
                   case 34:
                   case 5:
                   case 2:
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   case 33:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 56:
                   case 27:
                   ;
                   break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   case 45:
                   ivec4(58435, -27522, -62466, -37615);
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while((18.31 < 308.712));
            }
          }
        }
       case 0:
       case 40:
       case 29:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 94:
               if(_GLF_DEAD(false))
                barrier();
               mat3(-1.3, -811.519, -64.67, 4.4, -592.008, -692.623, 3.6, -3650.4006, -6.9);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 0:
               case 73:
               if(_GLF_DEAD(false))
                barrier();
               case 4:
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 74:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               case 14:
               if(_GLF_DEAD(false))
                barrier();
               case 83:
               if(_GLF_DEAD(false))
                barrier();
               case 39:
               case 63:
               case 60:
               if(_GLF_DEAD(false))
                barrier();
               case 59:
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
               break;
               case 79:
               bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[85], _GLF_SWITCH_1_2v;
               case 45:
               float _GLF_SWITCH_1_3v;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       break;
       case 89:
       uvec3 _GLF_SWITCH_2_69v[58], _GLF_SWITCH_2_70v[60];
       default:
       do
        {
         1;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), int(0)))))
            {
             case 75:
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               ivec2(-25125, -12669);
              }
             case 0:
             case 61:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             case 48:
             case 4:
             case 18:
             if(_GLF_DEAD(false))
              barrier();
             case 78:
             case 41:
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             switch(_GLF_SWITCH(((0 & -71834) >> _GLF_IDENTITY(int(3), int(3)))))
              {
               case 20:
               mat4x2(-221.213, -512.779, -474.086, 9863.2293, -3.1, 606.471, 4.8, 2.8);
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               case 0:
               case 68:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(4))))))); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 82:
                   uint _GLF_SWITCH_2_0v[77];
                   if(_GLF_DEAD(false))
                    barrier();
                   case 0:
                   case 29:
                   case 87:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   case 54:
                   case 91:
                   case 36:
                   case 33:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                    }
                   case 18:
                   barrier();
                   break;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               break;
               default:
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             break;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
             case 40:
             {
              if(_GLF_DEAD(false))
               barrier();
              int _GLF_SWITCH_2_0v[5], _GLF_SWITCH_2_1v;
              ivec4(73545, -28017, 11913, 51488);
              mat4(315.294, 701.203, -81.43, -792.861, 378.930, 8758.9274, 2.7, -262.646, -0.0, 891.782, 0.3, -8.0, -4174.3950, -0.5, 570.717, -84.91);
              if(_GLF_DEAD(false))
               barrier();
              do
               {
                mat3(-1.6, 1381.0372, 5.4, 23.92, -2491.7872, -55.19, 6.6, -5716.9070, 9.7);
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              if(_GLF_DEAD(false))
               barrier();
             }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             default:
             1;
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(false);
      }
    }
   else
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(0))
        {
         case 99:
         -144.356;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         case 19:
         {
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
          if(_GLF_DEAD(false))
           {
            do
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                barrier();
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              barrier();
             }
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            switch(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0)))), 0 ^ (int(_GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0)))))))))
             {
              case 48:
              uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
              case 39:
              if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
               }
              else
               {
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  round(vec4(-5860.1823, -394.836, 84.42, -2.3));
                 }
               }
              case 0:
              if(_GLF_DEAD(false))
               {
                do
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 barrier();
               }
              case 52:
              case 72:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              case 25:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              case 13:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    do
                     {
                      switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1 ^ 1))))
                       {
                        case 0:
                        case 44:
                        case 45:
                        case 39:
                        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                         barrier();
                        case 9:
                        case 13:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        case 53:
                        barrier();
                        break;
                        if(_GLF_DEAD(false))
                         barrier();
                        case 33:
                        uint _GLF_SWITCH_3_0v;
                        case 37:
                        cos(vec4(1847.8461, 2.5, 4981.3044, -4.5));
                        default:
                        1;
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              break;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 41:
              mat2(-7.7, -1.0, 69.26, -0.7);
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
              case 40:
              vec4 _GLF_SWITCH_2_2v[43];
              default:
              1;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
               }
             }
           }
          for(          vec4(-495.247, 6.8, -6376.3032, 27.96);
 (mat4(mat4x2(12.59, -6629.4457, 1.6, 4073.8551, 16.08, 566.734, -8.2, 7.2)) == mat4(37.85, 7.9, -646.166, 962.985, -447.195, 728.589, 7592.1204, 6.9, -9882.5005, 342.665, 51.00, 60.34, 55.31, 2.7, -2225.0499, 324.394)); bvec2(true, true))
           {
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              69245;
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            ;
           }
          for(ivec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; bvec3(false, false, true)[1]; subgroup_local_id)
           {
            switch(_GLF_SWITCH(0))
             {
              case 8:
              bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[41];
              case 0:
              for(ivec2 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v; false; uvec2(131696u, 38743u))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  ivec3(-88683, 15321, -69107);
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  barrier();
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    ((mat4(97.10, 32.12, -312.499, 744.074, 374.149, 407.929, -0.2, -815.303, 3.0, -1.1, -5880.1453, 481.102, -6.4, -303.091, -7417.5818, 0.8) , -43412) - _GLF_SWITCH_0_2v);
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ivec3 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[79];
                float _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    barrier();
                   }
                 }
                mat4x2 _GLF_SWITCH_0_8v[29], _GLF_SWITCH_0_9v[10];
                if(_GLF_DEAD(false))
                 barrier();
                float _GLF_SWITCH_0_10v[90], _GLF_SWITCH_0_11v[98], _GLF_SWITCH_0_12v;
                mat3(5.5, -376.267, 15.72, 6386.7506, 75.34, 0.1, -11.44, -87.81, -76.01);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               {
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  barrier();
                 }
               }
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 1) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                     {
                      barrier();
                     }
                   }
                  case 37:
                  case 57:
                  case 59:
                  case 6:
                  case 17:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  case 82:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 34:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 38:
                  case 25:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  case 87:
                  mat4x3(-173.781, 8.3, 4.2, -0.9, -5.6, -81.80, -5.1, -2.5, -21.75, 627.504, -4.7, -5.8);
                  default:
                  1;
                 }
               }
              for(ivec3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[97]; true; pow(vec3(809.416, -6.9, -4.3), vec3(-9316.7864, -81.13, -72.11)))
               {
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    else
                     {
                     }
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                      case 65:
                      case 24:
                      if(_GLF_DEAD(false))
                       barrier();
                      case 1:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 2:
                      case 64:
                      case 43:
                      case 11:
                      case 96:
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        barrier();
                       }
                      break;
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                      case 10:
                      mat4x3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[74];
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                         {
                          barrier();
                         }
                       }
                      default:
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                         }
                        barrier();
                       }
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                        for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              barrier();
                             }
                            else
                             {
                             }
                           }
                         }
                       }
                      else
                       {
                        1;
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
                mat2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[48], _GLF_SWITCH_0_17v;
                (mat3x2(7.5, 0.7, -4171.2888, 70.42, -9550.5927, 5593.5856) / mat3x2(931.658, 698.178, -493.737, -607.204, -38.88, 450.967));
               }
              case 28:
              ;
              break;
              if(_GLF_DEAD(false))
               barrier();
              case 64:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              exp(63.74);
              default:
              do
               {
                1;
               }
              while(_GLF_WRAPPED_LOOP(false));
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            do
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           }
          else
           {
           }
          do
           {
            false;
           }
          while(_GLF_WRAPPED_LOOP(false));
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             vec3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 false;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             ivec4 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v[66], _GLF_SWITCH_0_23v;
             mat3x4 _GLF_SWITCH_0_24v[73];
             float _GLF_SWITCH_0_25v[52], _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[20];
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 ((-- _GLF_SWITCH_0_26v) / (mat3(8.5, -801.322, -6.7, -7.2, 1.4, 3.5, -9834.4184, 3109.4918, 261.853) * mat2x3(53.69, -89.52, -6.0, 83.22, -93.84, 9.3)));
                }
              }
             else
              {
              }
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (int(6)) - 0))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat2x3(-5.4, 9684.5937, 4.0, -38.90, 5.3, -86.66);
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
                    {
                     case 42:
                     mat3 _GLF_SWITCH_1_0v;
                     case 64:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     bvec3 _GLF_SWITCH_1_1v[13], _GLF_SWITCH_1_2v[45];
                     case 0:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                          barrier();
                        }
                      }
                     else
                      {
                       barrier();
                      }
                     break;
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     default:
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                        {
                         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                          {
                           case 75:
                           if(_GLF_DEAD(false))
                            barrier();
                           mat3x4 _GLF_SWITCH_3_0v;
                           case 15:
                           _GLF_SWITCH_0_26v;
                           case 0:
                           case 52:
                           case 44:
                           case 66:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             barrier();
                            }
                           case 8:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             barrier();
                            }
                           case 76:
                           case 21:
                           case 34:
                           case 40:
                           1;
                           break;
                           case 32:
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))); _injected_loop_counter ++)
                            {
                             mat3x4(25.20, 8080.6170, -176.681, 42.47, -61.42, -4.3, -9.1, 913.605, 3247.4241, 26.13, 9.7, 46.02);
                            }
                           case 25:
                           mat2x3(_GLF_SWITCH_0_26v, 7.9, injectionSwitch.t, _GLF_SWITCH_0_26v, 885.867, 34.63);
                           if(_GLF_DEAD(false))
                            barrier();
                           default:
                           1;
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
             mat4x2(9.5, 4.2, 84.99, 596.213, 90.25, -97.88, 1.1, 58.79);
            }
           mat2x3 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[61];
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           uvec2 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[88], _GLF_SWITCH_0_32v;
          }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            do
             {
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
                switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
                 {
                  case 50:
                  ivec2(-45157, -19470);
                  case 5:
                  mat3x2(75.38, 287.128, 9.5, 9163.2921, -3.3, 2807.8503);
                  case 0:
                  case 40:
                  case 24:
                  case 23:
                  case 53:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  case 37:
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    abs(-72219);
                   }
                  else
                   {
                   }
                  case 81:
                  vec3(7.9, 4332.6340, -1.9);
                  if(_GLF_DEAD(false))
                   barrier();
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          else
           {
           }
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), max(int(0), int(0)))), max(int(_GLF_IDENTITY(int(0), max(int(0), int(0)))), int(_GLF_IDENTITY(int(0), max(int(0), int(0)))))))); _injected_loop_counter --)
             {
              switch(_GLF_SWITCH(0))
               {
                case 87:
                for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  ;
                  do
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                case 38:
                bvec4(false, true, true, true);
                case 0:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                case 68:
                case 80:
                if(_GLF_DEAD(false))
                 barrier();
                case 71:
                case 97:
                case 89:
                case 98:
                case 82:
                case 26:
                case 40:
                if(false)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  for(mat2x3 _GLF_SWITCH_0_33v; false; mat2x3(9.3, -794.311, 7700.6042, 8.3, 383.890, -405.712))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    mat2x4 _GLF_SWITCH_0_34v[43], _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
                    mat2 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                       }
                      else
                       {
                        do
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 33:
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              ivec4(93595, 3544, 60307, -52413);
                             }
                            case 57:
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              mat2x4(mat3x2(5.3, -965.963, -66.62, -42.97, -9.2, 0.2));
                             }
                            else
                             {
                             }
                            case 0:
                            case 26:
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            else
                             {
                             }
                            case 88:
                            if(_GLF_DEAD(false))
                             barrier();
                            case 94:
                            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
                             barrier();
                            case 43:
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                             }
                            else
                             {
                             }
                            mat2x3(-445.521, -85.78, 3846.0937, -31.36, 8.8, -0.1);
                            break;
                            default:
                            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            1;
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                     }
                    ivec3(30904, 75908, 76523);
                    int _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v[58], _GLF_SWITCH_0_41v;
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                   }
                  else
                   {
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   mat3x4(-3.8, 8379.6154, 0.7, -1.0, 6.9, -1378.8899, -4.5, 94.22, -9.0, 22.72, -9807.2163, 9102.5143);
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   bool _GLF_SWITCH_0_42v;
                  }
                  if(_GLF_DEAD(false))
                   barrier();
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      barrier();
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        while((vec3(-3.3, 2.9, 4589.3574) != reflect(vec3(8486.1747, 40.22, 23.39), vec3(7707.6200, -6.6, 4146.5625))))
                         {
                         }
                       }
                      else
                       {
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          else
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                         }
                        else
                         {
                         }
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     }
                   }
                  for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    bvec2(true, true);
                   }
                 }
                else
                 {
                  do
                   {
                    3.1;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    ivec3(21484, 551, -5588)[1];
                   }
                  while((uvec4(188896u, 136871u, 93570u, 96863u) == (virtual_gid | uvec4(147293u, 186550u, 179130u, 166845u))))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                     }
                    (false && any(notEqual(uvec2(56041u, 31567u), uvec2(58215u, 101297u))));
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          barrier();
                         }
                        else
                         {
                         }
                       }
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 99:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 4:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                         }
                        case 19:
                        case 26:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_DEAD(false))
                         barrier();
                        case 71:
                        case 73:
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                             {
                              barrier();
                             }
                           }
                         }
                        case 74:
                        mat3(mat3x2(5739.6436, 0.1, -8428.1544, -4.9, 1549.4400, 742.037));
                        break;
                        default:
                        1;
                       }
                     }
                    else
                     {
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                           {
                            barrier();
                           }
                         }
                       }
                     }
                    do
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                           {
                           }
                          else
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 69:
                              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                               {
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  barrier();
                                 }
                               }
                              mat2x3(-56.80, 39.50, 6.2, -278.873, 823.281, 6169.8891);
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  barrier();
                                 }
                                else
                                 {
                                 }
                               }
                              case 74:
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                uvec4(108767u, 71268u, 12086u, 101019u);
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              case 0:
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              case 82:
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                               }
                              else
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                              case 79:
                              case 94:
                              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                               barrier();
                              case 46:
                              case 65:
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                               }
                              else
                               {
                                barrier();
                               }
                              break;
                              case 34:
                              mat2x4 _GLF_SWITCH_3_0v;
                              do
                               {
                                if(_GLF_DEAD(false))
                                 {
                                  do
                                   {
                                    barrier();
                                   }
                                  while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                                 }
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              case 27:
                              vec2 _GLF_SWITCH_3_1v[47];
                              default:
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                do
                                 {
                                  barrier();
                                 }
                                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               }
                              1;
                             }
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        else
                         {
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while((mat4x2(-1.2, -78.53, 3.8, 914.613, 451.093, 9636.9898, 127.913, 4.0) != mat4x2(tanh(-11.12))));
                  if(bvec2(false, false).g)
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        false;
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                     }
                    mat2 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))); _injected_loop_counter --)
                         {
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                               }
                              else
                               {
                                barrier();
                               }
                             }
                            else
                             {
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  barrier();
                                 }
                               }
                              else
                               {
                               }
                             }
                           }
                         }
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    1873;
                   }
                 }
                break;
                case 4:
                mat2(-68.97, 8.9, -1.1, 7019.2265);
                case 25:
                bvec4 _GLF_SWITCH_1_0v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                default:
                do
                 {
                  1;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              if(_GLF_DEAD(false))
               {
                for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                 {
                  barrier();
                 }
               }
             }
           }
          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    barrier();
                   }
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
             }
           }
          if(false)
           {
            if(_GLF_DEAD(false))
             barrier();
            switch(_GLF_SWITCH(0))
             {
              case 84:
              mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[83];
              case 0:
              case 78:
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                while(isinf(-6.9))
                 {
                 }
               }
              else
               {
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          barrier();
                         }
                       }
                     }
                   }
                  else
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
                for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               barrier();
              ivec4 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
              case 66:
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              uvec2(98505u, 145317u);
              for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 12:
                  vec2 _GLF_SWITCH_3_0v;
                  case 81:
                  matrixCompMult(mat2(-3968.2336, 56.92, 8.4, 7.2), mat2(-85.79, -1749.2683, -5966.2998, 4.0));
                  case 0:
                  case 17:
                  do
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  mat3x4 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  mat3x2(-57.47, -30.80, 540.872, -4.9, 77.29, 282.351);
                  do
                   {
                    do
                     {
                      (- mat4(-6944.9746, 7.8, 4.6, -3226.5465, -0.7, -2.2, 1.8, -29.91, -5.8, 233.541, 95.83, -313.213, -8766.4286, 1976.4943, -7.4, 153.034));
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    sin(623.694);
                   }
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    else
                     {
                     }
                   }
                  atomicXor(_GLF_SWITCH_0_47v.p, 67457);
                  case 37:
                  do
                   {
                    (mat2x4(-5.9, -93.14, 2.1, -5856.6251, -4.0, 2.4, 4263.2312, 6.6) * mat4x2(7826.8604, 6091.9966, 5616.1117, 2.4, -173.664, 336.673, -4536.2567, 8.2));
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  mat2 _GLF_SWITCH_0_51v[38], _GLF_SWITCH_0_52v[91];
                  case 90:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  case 34:
                  for(int _injected_loop_counter = (0 & -55963); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                     barrier();
                    do
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  mat3 _GLF_SWITCH_3_1v[44], _GLF_SWITCH_3_2v;
                  default:
                  1;
                 }
               }
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                 }
               }
              else
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                else
                 {
                 }
               }
              ivec3(-44277, -64229, 57130);
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                barrier();
               }
              case 10:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                while(false)
                 {
                  for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      uvec3(108859u, 123445u, 163648u);
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    bvec2(true, false);
                   }
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           {
                            do
                             {
                              barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                         }
                        barrier();
                       }
                     }
                   }
                  mat2x3 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v;
                  mat2x4 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v;
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  else
                   {
                   }
                  bvec3 _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v;
                  do
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                         {
                          barrier();
                         }
                       }
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        do
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          else
                           {
                           }
                          switch(_GLF_SWITCH((0 ^ 0)))
                           {
                            case 33:
                            if(_GLF_DEAD(false))
                             barrier();
                            mat4(_GLF_SWITCH_0_55v);
                            case 98:
                            _GLF_SWITCH_0_47v;
                            case 0:
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            case 9:
                            case 1:
                            case 23:
                            case 65:
                            case 4:
                            barrier();
                            if(_GLF_DEAD(false))
                             barrier();
                            break;
                            default:
                            1;
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                     }
                    else
                     {
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                     {
                      barrier();
                     }
                   }
                  ;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    do
                     {
                      if(_GLF_DEAD(false))
                       {
                        switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
                         {
                          case 0:
                          if(_GLF_DEAD(false))
                           barrier();
                          case 94:
                          do
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          case 63:
                          case 4:
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                           {
                           }
                          else
                           {
                            do
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  do
                                   {
                                    barrier();
                                   }
                                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                 }
                                for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                 {
                                  barrier();
                                 }
                               }
                              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                               }
                              else
                               {
                                barrier();
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                   }
                                  else
                                   {
                                   }
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    barrier();
                                    if(_GLF_WRAPPED_IF_TRUE(true))
                                     {
                                      if(_GLF_DEAD(false))
                                       barrier();
                                     }
                                    else
                                     {
                                     }
                                   }
                                  else
                                   {
                                   }
                                 }
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          break;
                          case 20:
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                             }
                            else
                             {
                             }
                           }
                          uvec2(121766u, 126123u);
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                             }
                            else
                             {
                              barrier();
                             }
                           }
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          default:
                          1;
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  mat2x3 _GLF_SWITCH_0_61v;
                 }
               }
              break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))); _injected_loop_counter ++)
                 {
                  barrier();
                 }
               }
              case 21:
              uint _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[94];
              default:
              do
               {
                1;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          (-421.134 + mat2x3(9842.1845, -8.7, -7.1, 5.7, -18.94, -3717.4221));
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 0:
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         case 75:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         subgroupAll(true);
         break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         default:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           1;
          }
        }
      }
    }
  }
}
