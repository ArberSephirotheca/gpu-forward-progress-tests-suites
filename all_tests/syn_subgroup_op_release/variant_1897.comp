#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.5) : injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))) * workgroup_id, (workgroup_size * workgroup_id) * 1u)), (_GLF_IDENTITY(min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))) * workgroup_id, (workgroup_size * workgroup_id) * 1u)), (min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))) * workgroup_id, (workgroup_size * workgroup_id) * 1u))) | 0u)) | (min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))) * workgroup_id, (workgroup_size * workgroup_id) * 1u)))))), _GLF_IDENTITY(uint(uint(max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u)), ~ (~ (min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))) * 1u))))))))), uint(uvec3(uint(uint(max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u)), ~ (~ (min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))) * 1u))))))))), 1u, 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-713.826)), float(1.0), bool(true)))) + 0.0), 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))))), float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id) - 0u, 0u + (_GLF_IDENTITY((subgroup_local_id) - 0u, ~ (~ ((subgroup_local_id) - 0u))))))))) + 1) % subgroup_size), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) + 1), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) + 1))) % subgroup_size))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id) - 0u, 0u + (_GLF_IDENTITY((subgroup_local_id) - 0u, ~ (~ ((subgroup_local_id) - 0u))))))))) + 1) % subgroup_size), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) + 1), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) + 1))) % subgroup_size))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id) - 0u, 0u + (_GLF_IDENTITY((subgroup_local_id) - 0u, ~ (~ ((subgroup_local_id) - 0u))))))))) + 1) % subgroup_size), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) + 1), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) + 1))) % subgroup_size))))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u, uint(uvec2((_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))));
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)) + 1 < subgroup_size) || false))
  {
   switch(_GLF_IDENTITY(_GLF_SWITCH(0), clamp(_GLF_IDENTITY(_GLF_SWITCH(0), min(_GLF_SWITCH(0), _GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) - 0))), _GLF_SWITCH(0), _GLF_SWITCH(0))))
    {
     case 81:
     if(_GLF_DEAD(false))
      barrier();
     if(true)
      {
       if(_GLF_DEAD(false))
        barrier();
       (uvec4(132780u, 99540u, 154165u, _GLF_IDENTITY(12839u, 0u | (12839u))) / uvec4(35833u, 2434u, 132411u, 116159u));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       93783;
       while(false)
        {
         vec3 _GLF_SWITCH_0_0v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          bvec4(true, false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && (true)));
          bvec3 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
          -65.22;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          unpackUnorm4x8((num_workgroup | workgroup_id));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          mat3(75.16, _GLF_IDENTITY(-4.4, float(mat2x4(-4.4, 0.0, 0.0, 1.0, 1.0, round(length(normalize(cos(vec2(0.0, 0.0))))), 0.0, 0.0))), _GLF_IDENTITY(-8.3, (-8.3) / 1.0), -44.75, 2.3, _GLF_IDENTITY(143.036, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.5)), float(143.036), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(mix(float(_GLF_FUZZED(4.5)), float(143.036), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(4.5)), float(143.036), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 78.34, -66.10, _GLF_IDENTITY(-3.2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-3.2, clamp(-3.2, -3.2, -3.2)), clamp(-3.2, -3.2, _GLF_IDENTITY(-3.2, clamp(-3.2, -3.2, -3.2)))), _GLF_IDENTITY(-3.2, _GLF_IDENTITY(clamp(-3.2, -3.2, -3.2), mix(float(_GLF_FUZZED(-20.19)), float(clamp(-3.2, -3.2, -3.2)), bool(true)))), -3.2)));
          mat2 _GLF_SWITCH_0_3v[86], _GLF_SWITCH_0_4v;
          vec2(2411.1161, -27.87);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          (-6.5 - mat4x2(mat2x3(-961.277, -2.8, 3.0, 8.2, 233.421, _GLF_IDENTITY(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(72.97), _GLF_FUZZED(-5.6)), vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), mix(float(_GLF_IDENTITY(-4.3, max(-4.3, -4.3))), float(_GLF_FUZZED(-1.5)), bool(false))), length(vec4(0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(72.97), _GLF_FUZZED(-5.6)), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), mix(float(_GLF_IDENTITY(-4.3, max(-4.3, -4.3))), float(_GLF_FUZZED(-3.9)), bool(false))), length(vec4(0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[1]), bvec2(true, true)))), max(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, _GLF_IDENTITY(-4.3, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-4.3, 1.0, 1.0, 1.0), transpose(transpose(mat2(-4.3, 1.0, 1.0, 1.0))))), (true ? float(_GLF_IDENTITY(mat2(-4.3, 1.0, 1.0, 1.0), transpose(transpose(mat2(-4.3, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(-3.4)))))), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(72.97), _GLF_FUZZED(-5.6)), _GLF_IDENTITY(vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))[1]), max(_GLF_IDENTITY(vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))[1]), clamp(vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))[1]), vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))[1]), vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))[1]))), vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))[1]))), bvec2(true, true)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), mix(float(_GLF_IDENTITY(-4.3, max(-4.3, -4.3))), float(_GLF_FUZZED(-0.3)), bool(false))))), length(vec4(0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(72.97), _GLF_FUZZED(-5.6)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[0], min((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[0])), (vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), mix(vec2(_GLF_FUZZED(72.97), _GLF_FUZZED(-5.6)), vec2((vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(-4.3, max(-4.3, -4.3)), length(vec4(0.0, 0.0, 0.0, 0.0))))[1]), bvec2(true, true))))))))));
          ivec4(55732, -47631, -6543, 53148);
         }
         uvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[69];
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         while(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat4x3 _GLF_SWITCH_0_8v;
           mat4x2(-9.3, _GLF_IDENTITY(36.08, float(mat2(36.08, cos(0.0), 0.0, 1.0))), 56.92, -3.4, -6.3, -8.4, _GLF_IDENTITY(-8.2, max(_GLF_IDENTITY(-8.2, mix(float(-8.2), float(_GLF_FUZZED(217.323)), bool(false))), -8.2)), 344.153);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         _GLF_SWITCH_0_0v;
         ;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), true && (bool(bvec4(_GLF_DEAD(false), false, true, false))))), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          barrier();
         {
          injectionSwitch;
          vec3(-6564.5704, -0.1, _GLF_IDENTITY(-869.189, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-869.189, min(-869.189, -869.189)), 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.5) : float(mat3(_GLF_IDENTITY(-869.189, min(-869.189, -869.189)), 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)))))).t;
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true, true))))
           {
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          float _GLF_SWITCH_0_9v;
          mat2x3(645.497, 0.3, _GLF_IDENTITY(5.9, (5.9) * 1.0), _GLF_IDENTITY(-52.02, (false ? _GLF_FUZZED(_GLF_SWITCH_0_9v) : -52.02)), 8.7, -68.13);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((mat3x2(-9.4, 3277.9783, -572.260, -58.63, -10.86, 9931.5250) * vec3(_GLF_IDENTITY(-682.845, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(-682.845, max(-682.845, -682.845))), bool(true))), -205.329, 4.8))) : injectionSwitch)).y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            barrier();
           }
          uvec2(154484u, 118922u);
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           barrier();
          bitfieldExtract(-15197, 43086, (+ 7717));
          if(_GLF_DEAD(false))
           barrier();
          _GLF_IDENTITY(bitfieldInsert(uvec3(144923u, 6444u, 84371u), _GLF_SWITCH_0_5v, findLSB(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) | (num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), ((num_workgroup)) | (_GLF_IDENTITY((num_workgroup), min(_GLF_IDENTITY((num_workgroup), uint(uvec2((num_workgroup), 0u))), (num_workgroup))))))), _GLF_IDENTITY(-29993, (true ? _GLF_IDENTITY(-29993, max(-29993, -29993)) : _GLF_FUZZED(64987)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? bitfieldInsert(uvec3(144923u, 6444u, 84371u), _GLF_SWITCH_0_5v, findLSB(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) | (num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), ((num_workgroup)) | (_GLF_IDENTITY((num_workgroup), min(_GLF_IDENTITY((num_workgroup), uint(uvec2((num_workgroup), 0u))), (num_workgroup))))))), _GLF_IDENTITY(-29993, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-29993, _GLF_IDENTITY(max(-29993, -29993), int(int(_GLF_IDENTITY(max(-29993, -29993), clamp(max(-29993, -29993), max(-29993, -29993), max(-29993, -29993))))))) : _GLF_FUZZED(64987), (_GLF_IDENTITY(true ? _GLF_IDENTITY(-29993, _GLF_IDENTITY(max(-29993, -29993), int(int(_GLF_IDENTITY(max(-29993, -29993), clamp(max(-29993, -29993), max(-29993, -29993), max(-29993, -29993))))))) : _GLF_FUZZED(64987), max(true ? _GLF_IDENTITY(-29993, _GLF_IDENTITY(max(-29993, -29993), int(int(_GLF_IDENTITY(max(-29993, -29993), clamp(max(-29993, -29993), max(-29993, -29993), max(-29993, -29993))))))) : _GLF_FUZZED(64987), true ? _GLF_IDENTITY(-29993, _GLF_IDENTITY(max(-29993, -29993), int(int(_GLF_IDENTITY(max(-29993, -29993), clamp(max(-29993, -29993), max(-29993, -29993), max(-29993, -29993))))))) : _GLF_FUZZED(64987)))) << 0)))) : _GLF_FUZZED(uvec3(35652u, 188403u, 45854u))));
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))) - 0.0) * (injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))) - 0.0) * (injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
         }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          mix(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-25259, 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-25259, (_GLF_IDENTITY(-25259, (-25259) >> 0)) + 0), (-25259) | (-25259)), 30353))), max(ivec2(ivec2(ivec2(-25259, 30353))), ivec2(ivec2(ivec2(-25259, 30353)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-25259, 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, (-25259) | (-25259)), _GLF_IDENTITY(30353, (30353) << 0)))), max(ivec2(ivec2(ivec2(-25259, 30353))), ivec2(ivec2(_GLF_IDENTITY(ivec2(-25259, 30353), (ivec2(-25259, 30353)) >> ivec2(0, 0))))))), (_GLF_IDENTITY(ivec2(-25259, 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, (-25259) | (-25259)), 30353))), max(ivec2(ivec2(ivec2(-25259, 30353))), ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, clamp(-25259, -25259, -25259)), 30353))))))) >> ivec2(0, 0))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-25259, 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-25259, (-25259) | (-25259)), ~ (~ (_GLF_IDENTITY(-25259, (-25259) | (-25259))))), 30353))), max(ivec2(ivec2(ivec2(-25259, 30353))), ivec2(ivec2(ivec2(-25259, 30353)))))), (_GLF_IDENTITY(ivec2(-25259, 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, (-25259) | (-25259)), 30353))), max(ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, (-25259) >> (0 ^ 0)), 30353))), ivec2(ivec2(ivec2(-25259, 30353))))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-25259, (-25259) | (-25259)), 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, (-25259) | (-25259)), 30353))), max(ivec2(ivec2(ivec2(-25259, 30353))), ivec2(ivec2(ivec2(-25259, 30353)))))), (_GLF_IDENTITY(ivec2(-25259, 30353), _GLF_IDENTITY(ivec2(ivec2(ivec2(_GLF_IDENTITY(-25259, (-25259) | (-25259)), 30353))), max(ivec2(ivec2(ivec2(-25259, 30353))), ivec2(ivec2(ivec2(-25259, 30353))))))) >> ivec2(0, 0))))))), ivec2(_GLF_IDENTITY(-93521, 0 ^ (-93521)), -82177), bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))));
          mat3(9895.6970, 73.03, 9117.1491, 30.38, -986.870, _GLF_IDENTITY(-431.718, max(-431.718, -431.718)), _GLF_IDENTITY(-95.88, float(mat4x2(-95.88, 1.0, cos(log(1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))), 8.1, -673.222);
          _GLF_SWITCH_0_5v;
          if(_GLF_DEAD(false))
           barrier();
          float _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[19];
          ;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          _GLF_IDENTITY((mat2(-3967.2503, 791.433, 52.72, -346.524) + 352.114), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(8.2, 7220.4221, -4.0, 5080.6691)) : _GLF_IDENTITY((mat2(-3967.2503, 791.433, _GLF_IDENTITY(52.72, _GLF_IDENTITY((52.72), min((52.72), (52.72))) / sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0)))))), -346.524) + 352.114), ((_GLF_IDENTITY(mat2(-3967.2503, 791.433, 52.72, -346.524), (mat2(-3967.2503, 791.433, 52.72, -346.524)) - mat2(0.0, 0.0, 0.0, 0.0)) + 352.114)) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat2(mat2(false ? _GLF_FUZZED(mat2(8.2, 7220.4221, -4.0, 5080.6691)) : _GLF_IDENTITY((mat2(-3967.2503, 791.433, _GLF_IDENTITY(52.72, _GLF_IDENTITY((52.72), min((52.72), (52.72))) / sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0)))))), -346.524) + 352.114), ((_GLF_IDENTITY(mat2(-3967.2503, 791.433, 52.72, -346.524), (mat2(-3967.2503, 791.433, 52.72, -346.524)) - mat2(0.0, 0.0, 0.0, 0.0)) + 352.114)) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))));
          if(_GLF_DEAD(false))
           barrier();
          mat3x4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, true)))) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), true && (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true, true)))) && true))))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(false))
          barrier();
         {
          switch(_GLF_SWITCH(0))
           {
            case 10:
            uvec4(98390u, 158415u, 145340u, 172491u);
            case 0:
            case 19:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-4.6, 6.7)))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), length(0.0), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0))).y))))
             barrier();
            case 71:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            uvec4(123374u, 170382u, 160769u, 155673u);
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            case 3:
            if(_GLF_DEAD(false))
             barrier();
            bvec4 _GLF_SWITCH_1_0v[53], _GLF_SWITCH_1_1v;
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-27.22), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8120.3316))), bvec2(true, false))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (! (bool(bvec3(false, false, true)))) && true)))), bool(bool(false)))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), true)))))))
             barrier();
            case 59:
            mat3x2(6709.3030, -16.83, 3.2, -4.5, 24.14, 230.972);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, true, false)), (bool(bvec3((false) || false, true, false))) && true)))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            default:
            if(_GLF_DEAD(false))
             barrier();
            1;
            if(_GLF_DEAD(false))
             barrier();
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       {
        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
         {
          case 45:
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)))))))))
           barrier();
          mat3 _GLF_SWITCH_1_0v;
          if(_GLF_DEAD(false))
           barrier();
          case 0:
          if(_GLF_DEAD(false))
           barrier();
          case 6:
          case 44:
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          case 82:
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          mat3x4(mat3(-7.2, -519.144, -440.389, -6921.0209, -6.5, -4.7, -6721.7581, 888.025, -901.456));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             barrier();
            barrier();
           }
          if(false)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))))))))
             barrier();
            mat4x2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[70], _GLF_SWITCH_0_20v;
            true;
            ;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            subgroup_size;
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            lessThanEqual(uvec4(82491u), uvec4(67827u, 99498u, 48387u, 147359u));
            mat4x2(34.25, -5152.6325, 297.278, 2.2, -8188.5169, _GLF_IDENTITY(-8.7, (_GLF_IDENTITY(-8.7, max(-8.7, -8.7))) - 0.0), -4674.6486, _GLF_IDENTITY(-6032.8549, (-6032.8549) / sqrt(1.0)));
            ;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            ivec2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
            mat2x3(9.0, _GLF_IDENTITY(8660.6524, 0.0 + (8660.6524)), 86.21, 6.2, -0.3, 4.2);
            if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
             barrier();
            bvec4(false, false, true, true).pst;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            _GLF_IDENTITY((vec4(-9448.2396, -3.9, -2.9, 4884.2367) == atanh(vec4(-2112.4161, 6.5, _GLF_IDENTITY(_GLF_IDENTITY(-5.3, clamp(-5.3, -5.3, -5.3)), 0.0 + (_GLF_IDENTITY(-5.3, float(mat4x3(-5.3, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-26.36))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_FUZZED(-9.5)), float(clamp(1.0, 1.0, 1.0)), bool(true)))))), _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), mix(float(_GLF_FUZZED(1792.2907)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), float(mat3x4((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(cosh(_GLF_IDENTITY(65.96, clamp(65.96, 65.96, 65.96)))), 0.0 + (_GLF_FUZZED(cosh(65.96)))) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && ((_GLF_IDENTITY(bool(true), ! (! (bool(true))))))) && true)))), max((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true))))))) || false)))), ! (! (bool(true))))) && true)))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))) && true))))))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0))) : _GLF_FUZZED(7.6))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(7514.5387, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (7514.5387))))), ((vec4(-9448.2396, -3.9, _GLF_IDENTITY(-2.9, clamp(-2.9, -2.9, _GLF_IDENTITY(-2.9, float(mat4x2(-2.9, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))))), 4884.2367) == atanh(vec4(_GLF_IDENTITY(-2112.4161, clamp(-2112.4161, -2112.4161, -2112.4161)), 6.5, _GLF_IDENTITY(-5.3, 0.0 + (_GLF_IDENTITY(-5.3, float(mat4x3(_GLF_IDENTITY(-5.3, (-5.3) * 1.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5964.6035)), (_GLF_IDENTITY(float(_GLF_FUZZED(-5964.6035)), (float(_GLF_FUZZED(-5964.6035))) - 0.0)) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), abs(0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5964.6035, (-5964.6035) * 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), max((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), mix(float(_GLF_FUZZED(-5964.6035)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), (false ? _GLF_FUZZED(cosh(65.96)) : float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(true))))) && true))))))))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-46.12))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 7514.5387)))) && true);
            mat3(-8.5, 8367.0604, 4.4, 910.928, 3.6, -9221.6187, 741.046, 9.6, -5.3);
            vec3 _GLF_SWITCH_0_23v;
           }
          case 68:
          if(_GLF_DEAD(false))
           barrier();
          case 58:
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-3946.7913, -5.3)))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
           barrier();
          case 17:
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
           barrier();
          {
           if(_GLF_DEAD(false))
            barrier();
           ;
           bvec4 _GLF_SWITCH_0_24v;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           bvec2(false, true);
           _GLF_IDENTITY(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(19.14)), _GLF_IDENTITY(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true)))))), mix(float(_GLF_FUZZED(47.30)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true)))))), float(vec3(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true)))))), 0.0, 1.0)))), bool(true)))) / sqrt(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(float(_GLF_FUZZED(19.14)), _GLF_IDENTITY(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true)))))), mix(float(_GLF_FUZZED(47.30)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(true)))))), float(vec3(float(_GLF_IDENTITY(588.744, max(588.744, _GLF_IDENTITY(588.744, mix(float(_GLF_FUZZED(2.9)), float(588.744), bool(_GLF_IDENTITY(true, true && (true)))))))), 0.0, 1.0)))), bool(true)))) / sqrt(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(6.8))));
           subgroup_local_id;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
            barrier();
           vec4(0.2, -24.39, -267.858, 499.356);
           false;
           greaterThan(injectionSwitch, vec2(-7.9, 666.970));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           (subgroup_size + (uvec2(51207u, 45649u)));
          }
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
           barrier();
          ivec2 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[69], _GLF_SWITCH_0_27v[75];
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          case 9:
          case 57:
          uvec3(workgroup_size);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             barrier();
            barrier();
           }
          case 76:
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x), bool(true))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, exp(0.0)))))) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.2, clamp(_GLF_IDENTITY(3.2, (3.2) / _GLF_ONE(1.0, injectionSwitch.y)), 3.2, _GLF_IDENTITY(3.2, (3.2) * 1.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))))))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          mat4x2(mat3x4(771.130, -2.7, _GLF_IDENTITY(14.80, mix(float(14.80), float(_GLF_FUZZED(94.82)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) && true)))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) && true))))), (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) && true))))), ((bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) && true)))))) && true)) && true) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(3.7, (3.7) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(3.7, (3.7) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(3.7, (3.7) * 1.0), (_GLF_IDENTITY(3.7, (3.7) * 1.0)) / 1.0)) / 1.0)), float(_GLF_FUZZED(-45.89)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(-9.6, (true ? -9.6 : _GLF_FUZZED(8.1))), min(-9.6, -9.6)), 7.5, 9153.6856, 417.824, _GLF_IDENTITY(9.1, (9.1) / 1.0), _GLF_IDENTITY(8.4, max(_GLF_IDENTITY(8.4, max(_GLF_IDENTITY(8.4, max(_GLF_IDENTITY(8.4, 0.0 + (8.4)), 8.4)), 8.4)), 8.4)), -27.52, _GLF_IDENTITY(-9.4, max(-9.4, _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))));
          default:
          1;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (false))))))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.1, -87.81)) : injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     case 12:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((workgroup_id > bitfieldReverse(subgroup_size)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        barrier();
       (mat4(7648.3434, 846.804, -4468.9601, 1.7, -9.9, _GLF_IDENTITY(8417.5979, (_GLF_IDENTITY(8417.5979, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-561.687), (_GLF_FUZZED(-561.687)) - 0.0) : 8417.5979, float(vec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-561.687), (_GLF_FUZZED(-561.687)) - 0.0) : 8417.5979, mix(float(_GLF_FUZZED(970.258)), float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-561.687), (_GLF_FUZZED(-561.687)) - 0.0) : 8417.5979), bool(true))), 1.0, 1.0, 0.0)))))) / 1.0), 9184.4800, 54.84, -3746.4775, -2.0, 73.26, -741.593, 6.2, -6.2, 4.0, _GLF_IDENTITY(0.9, float(vec3(0.9, 1.0, length(0.0))))) + _GLF_IDENTITY(mat4(-2.8, 5.4, 21.26, -4870.6324, -6.3, -697.327, -1813.0603, 769.262, 0.9, _GLF_IDENTITY(-38.56, _GLF_IDENTITY(float(mat4(-38.56, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0)), mix(float(_GLF_FUZZED((-4.6))), float(float(mat4(-38.56, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), -312.933, 1.5, 274.933, 0.1, -1438.6625, -0.4), (mat4(-2.8, 5.4, 21.26, -4870.6324, -6.3, -697.327, -1813.0603, 769.262, 0.9, _GLF_IDENTITY(-38.56, _GLF_IDENTITY(float(mat4(-38.56, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0)), mix(float(_GLF_FUZZED((-4.6))), float(float(mat4(-38.56, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), -312.933, 1.5, 274.933, 0.1, -1438.6625, -0.4)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)))))) / 1.0) > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       _GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false))))), true))), false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)), false))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)), false))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)), false))), false)))))))))));
       ivec2 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[7], _GLF_SWITCH_0_30v[35];
      }
     case 0:
     case 52:
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     case 86:
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     case 36:
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     subgroupAll(false);
     case 32:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     case 49:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 58:
     case 25:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     case 29:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false)))), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false)))), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
      barrier();
     bvec3 _GLF_SWITCH_0_31v[65];
     case 72:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     vec4 _GLF_SWITCH_0_32v[5];
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, abs(tan(0.0)))), mix(float(float(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, abs(tan(0.0))))), float(_GLF_FUZZED(4.5)), bool(false)))) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, abs(tan(0.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) / 1), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(findLSB(workgroup_base))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, max(_GLF_IDENTITY((2) ^ 0, (_GLF_IDENTITY((2) ^ 0, 0 | ((2) ^ 0))) | 0), (2) ^ 0))), (_GLF_IDENTITY(2, (2) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (_GLF_IDENTITY(2, max(2, 2))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (_GLF_IDENTITY(2, (2) ^ 0)) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (~ ((2)))) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (2) ^ 0), (_GLF_IDENTITY(2, (2) ^ 0)) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (_GLF_IDENTITY(2, (2) ^ 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), int(_GLF_IDENTITY(int((_GLF_IDENTITY(2, (2) ^ 0))), 0 ^ (_GLF_IDENTITY(int((_GLF_IDENTITY(2, (2) ^ 0))), 0 ^ (int((_GLF_IDENTITY(2, (2) ^ 0))))))))))))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED((-91702 & -13001)) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(35895, (_GLF_IDENTITY(35895, 0 | (35895))) | (_GLF_IDENTITY(35895, (_GLF_IDENTITY(35895, (false ? _GLF_FUZZED(79321) : 35895))) / 1))))) : 2)))), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED((-91702 & -13001)) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(bitfieldReverse(35895)) : 2))))) << 0), (2) ^ _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(7), int(7))) | (0))), int(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, (_GLF_IDENTITY(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0), (2) ^ 0, _GLF_IDENTITY((2), max((2), (2))) ^ 0)), (_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (_GLF_IDENTITY(2, int(int(2)))) ^ 0, (2) ^ 0))) / 1)) ^ 0)), 1, 0)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
}
