#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY((float(injectionSwitch.y)) + tan(0.0), ((float(injectionSwitch.y)) + tan(0.0)) * 1.0)), float(_GLF_FUZZED(1674.9989)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) && true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((3.8 / -685.755))), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.4)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(injectionSwitch)) : injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.7) : injectionSwitch.y))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), false || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), false || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), false || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), false, true, false))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), (((! (injectionSwitch.x > injectionSwitch.y)))) && true)))), false || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), false || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), false || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), false, true, false)))))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0))))), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, log(1.0), abs(1.0), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0))))).x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false), false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), true, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(351.986))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(351.986))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(351.986))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(351.986))))) > injectionSwitch.y))) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3911.8516) : injectionSwitch.x)) > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(_GLF_IDENTITY(false, ! (! (false)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(_GLF_IDENTITY(false, ! (! (false)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y))), false, true, true))))) || false)))) || false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false, false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), false, true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), false, true))))))))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.x), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.x), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.x), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) || false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) || false)))) || false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) - 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) - 0.0)))))) && true)) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-247.905, (-247.905) - 0.0))), max(float(_GLF_FUZZED(_GLF_IDENTITY(-247.905, (-247.905) - 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-247.905, (-247.905) - 0.0))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 0.0, 1.0))))))), float(_GLF_FUZZED(2074.8711)), bool(false)))))))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true)))))) || false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.0)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))) > injectionSwitch.y))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(sqrt(vec3(0.0, 0.0, 0.0))))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(sqrt(vec3(0.0, 0.0, 0.0))))))))) || false), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true)))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), false, false), false)), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), false, false), false)), false))))), false, true)))), (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true))) && true))))) || false))))) || false), false), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), false || (! ((false))))), bool(bvec3(! (_GLF_IDENTITY(! ((false)), false || (! ((false))))), true, true))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), false || (! ((false))))), bool(bvec3(! (_GLF_IDENTITY(! ((false)), false || (! ((false))))), true, true)))))) && true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, 0u ^ (0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) << 0u)))) ^ 0u), max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id), _GLF_IDENTITY(clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u | 0u)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), min(clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u | 0u)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u | 0u)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), (_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id) / 1u)), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), min(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) << _GLF_IDENTITY(0u, 1u * (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), (_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id) / 1u)), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), min(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) << _GLF_IDENTITY(0u, 1u * (0u))))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), 1u)), (uint(uvec2((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), 1u))) | 0u)) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u)) + subgroup_local_id), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + subgroup_local_id), 0u ^ (0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id), min(0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) + subgroup_local_id), _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u))), uint(4u))) + (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))))))) | 0u));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ _GLF_IDENTITY((subgroup_id), clamp((_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id, subgroup_id))), _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))), (subgroup_id)))))))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(1, (1) - 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))), 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), min((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), min(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))) - 0)))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ (0u & 52586u))))), min(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1)))))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(1, (1) - 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))), 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), min((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), min(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))) - 0)))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ (0u & 52586u))))), min(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1)))))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(1, (1) - 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))), 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), min((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), min(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))) - 0)))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ (0u & 52586u))))), min(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1)))))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(1, (1) - 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))), 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), min((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1)))))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), min(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ _GLF_IDENTITY((1), ((1)) | ((1))))) - 0)))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ (0u & 52586u))))), min(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (uint(~ ((subgroup_local_id + 1)))) ^ 0u), uint(~ ((subgroup_local_id + 1)))))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, length(0.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, length(0.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) + vec2(0.0, 0.0))).y)) ? 1 : _GLF_FUZZED(21621))), 0 ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (false ? _GLF_FUZZED(77017) : 0 ^ (1))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1)), (true ? _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_base))))), (((subgroup_local_id + 1))) + 0u)), min(uint(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))))), (((subgroup_local_id + 1))) + 0u)), uint(~ _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) + 0u)))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, min((subgroup_size) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (0u)), (subgroup_size) - 0u)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), 1u * (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) + 0u) + _GLF_IDENTITY(1, 0 ^ (1))) / 1u)))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) / 1)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), uint(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), ~ (~ (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), clamp(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), uint(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), uint(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))))))))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) | 0))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) | (1))), (0 ^ (1)) / (0 ^ 1)), ~ (~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) | (1))), (0 ^ (1)) / (0 ^ 1)))))))))))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | (((subgroup_local_id + 1))))), min(uint(~ ((subgroup_local_id + 1))), uint(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u)))), _GLF_IDENTITY((~ ((subgroup_local_id + 1))), uint(uvec2((~ ((subgroup_local_id + 1))), (1u ^ 0u)))) ^ 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) ^ 0u)))))))) << 0u, ((_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) ^ 0u)))))))) << 0u) << 0u)))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) / (1 & 1))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec4(_GLF_IDENTITY(1, 0 ^ (1)), (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1)))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))), uint(uint(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)))))))))), 0u))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(workgroup_base, virtual_gid)) : _GLF_IDENTITY(0u, 1u * (0u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) / (1 & 1))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec4(_GLF_IDENTITY(1, 0 ^ (1)), (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1)))))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((subgroup_local_id + 1))))))), uint(uint(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(~ ((subgroup_local_id + 1))), min(uint(~ ((subgroup_local_id + 1))), uint(~ ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)))))))))), 0u))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(workgroup_base, virtual_gid)) : _GLF_IDENTITY(0u, 1u * (0u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) << 0u))) + 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ (buf[virtual_gid] = 1)));
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), max(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[1], max((vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[1], 1.0 * ((vec4(1.0, 1.0, 0.0, 0.0))[1])))), (vec4(1.0, 1.0, 0.0, 0.0))[2], (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0))), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0), mix(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(22.15), (_GLF_FUZZED(22.15)) - 0.0), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), max(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[_GLF_IDENTITY(2, (2) | 0)], (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), mat4(1.0) * (vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0))))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), max(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, false)))))), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + vec4(0.0, 0.0, 0.0, 0.0)))), mat4(1.0) * (clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), max(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[_GLF_IDENTITY(0, (0) >> 0)], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], (vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(824.233)))))[3]), bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (true))))), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0))))), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_IDENTITY(_GLF_FUZZED(19.52), clamp(_GLF_IDENTITY(_GLF_FUZZED(19.52), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(19.52), 0.0 + (_GLF_FUZZED(19.52))), 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_FUZZED(19.52), _GLF_FUZZED(19.52)))), max(vec4((_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) - sin(vec4(0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), (vec4(1.0, 1.0, 0.0, 0.0))[1], (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-1550.9404), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], (vec4(1.0, 1.0, 0.0, 0.0))[3]), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.7), _GLF_FUZZED(-1622.9905), _GLF_FUZZED(-598.513)), bvec4(true, false, false, false))))[2], (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (true))))), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0))))) : _GLF_FUZZED(vec4(9365.1488, 331.959, 2.0, 211.073))))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(_GLF_IDENTITY(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(480.053)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(dot(-6.4, 8.7)))), bool(true))), 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(22.15), 0.0 + (_GLF_FUZZED(22.15))), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4(_GLF_IDENTITY(mat3x2(vec4((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(480.053)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(dot(-6.4, 8.7)))), bool(true))), 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(22.15), 0.0 + (_GLF_FUZZED(22.15))), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), 1.0, 1.0), _GLF_IDENTITY((mat3x2(vec4((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(480.053)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(dot(-6.4, 8.7)))), bool(true))), 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(22.15), 0.0 + (_GLF_FUZZED(22.15))), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), 1.0, 1.0)) * mat3(1.0), mat3x2(mat4x3((mat3x2(vec4((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(480.053)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(dot(-6.4, 8.7)))), bool(true))), 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(22.15), 0.0 + (_GLF_FUZZED(22.15))), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), 1.0, 1.0)) * mat3(1.0))))))), max(vec4((vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), 1.0)), 1.0, 0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(22.15, _GLF_IDENTITY(float(mat4x3(22.15, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, exp(0.0))), _GLF_IDENTITY(float(mat4x3(float(mat4x3(22.15, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, exp(0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, tan(0.0))), mix(float(_GLF_FUZZED(6.5)), float(float(mat4x3(float(mat4x3(22.15, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, exp(0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, tan(0.0)))), bool(true)))))), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), vec4(_GLF_IDENTITY((vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-955.765)), bool(false)))))[0], min((vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-955.765)), bool(false)))))[0], (vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-955.765)), bool(false)))))[0])), _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)))))), float(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, sin(0.0)))), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))), mix(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)), max(_GLF_IDENTITY(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_IDENTITY(_GLF_FUZZED(-5.0), (_GLF_FUZZED(-5.0)) / 1.0), _GLF_FUZZED(19.52)), (vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(22.15), _GLF_FUZZED(-5.0), _GLF_FUZZED(19.52)))), vec4(_GLF_FUZZED(-3.7), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0)), clamp((vec4(1.0, 1.0, 0.0, 0.0)), (vec4(1.0, 1.0, 0.0, 0.0)), (vec4(1.0, 1.0, 0.0, 0.0))))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (true ? vec4(1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-56.56, 9.1, -732.363, 4124.4564)))), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), clamp(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))), 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0)))), 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  barrier();
}
