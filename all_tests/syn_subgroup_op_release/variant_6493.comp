#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 uint subgroup_size;
 bvec2 _f0;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 uint workgroup_id;
 mat3x2 _f1;
 uvec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_23 {
 vec3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_25 {
 mat3 _f0;
 uint _f1;
 _GLF_struct_23 _f2;
 float _f3;
 _GLF_struct_24 _f4;
 mat3x2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_21 {
 bool _f0;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 bool _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 mat3x4 _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
 _GLF_struct_22 _f1;
 mat2x4 _f2;
 _GLF_struct_25 _f3;
 float _f4;
 mat2 _f5;
} ;

struct _GLF_struct_18 {
 bool _f0;
 bvec4 _f1;
 int _injected_loop_counter;
} ;

struct _GLF_struct_17 {
 bool _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_19 {
 uint _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 mat4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 float _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 ivec3 _f1;
 bvec4 _f2;
 int _f3;
 uvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 mat2 _f1;
 mat4 _f2;
 ivec2 _f3;
 uint _f4;
 uvec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_15 {
 uint next_virtual_gid;
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 float _f3;
 _GLF_struct_14 _f4;
 uint _f5;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 _GLF_struct_15 _f1;
 bool _f2;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 _GLF_struct_7 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 bvec4 _f1;
 int _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 uvec3 _f1;
 bvec2 _f2;
 mat2x3 _f3;
 mat4 _f4;
 mat2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat4x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 uint subgroup_id;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 bvec4 _f1;
 float _f2;
 mat4x3 _f3;
 int _f4;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 uvec2 _f1;
 _GLF_struct_0 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
 mat2x3 _f3;
 _GLF_struct_9 _f4;
 mat4 _f5;
 vec2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
  return;
 uvec4 GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
    {
    }
   else
    {
     return;
    }
  }
 GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (51178 & 0)); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_1(mat2x3(1.0), uvec2(1u), _GLF_struct_0(uvec2(1u), bvec4(true), 1.0, mat4x3(1.0), 1), mat3x4(1.0)), _GLF_struct_6(mat3(1.0), _GLF_struct_2(vec4(1.0), mat3x4(1.0), uvec3(1u), bvec4(true)), _GLF_struct_3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-14790))), _GLF_IDENTITY((1), 0 + (_GLF_IDENTITY((1), ((1)) | ((1))))) * 1)), (ivec4(1)) - ivec4(0, _GLF_IDENTITY(0, (0) >> 0), 0, 0)), mat4x2(1.0), mat4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), _GLF_struct_4(uvec2(_GLF_IDENTITY(1u, (1u) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) << uvec3(0u, 0u, 0u)), (uvec3(1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))))))) / uvec3(1u, 1u, 1u)), 0u), (uvec4(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), 0u)) | uvec4(0u, 0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (false ? _GLF_FUZZED(uvec3(26751u, 49541u, 146330u)) : (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))) | uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), 0u), (uvec4(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), 0u)) | (uvec4(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), max((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))))))) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), 0u))), (uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), 0u)))) * uvec3(1u, 1u, 1u)))))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u)) | uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, min(1u, 1u))))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(177825u) : _GLF_IDENTITY(1u, 1u * (1u)))))), 0u), (uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), 0u)) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) : _GLF_FUZZED(max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size, 40608u))))))))))), bvec2(true), mat2x3(1.0), mat4(1.0), mat2(1.0), ivec2(1)), gl_SubgroupID, _GLF_struct_5(mat2(1.0), bvec4(true), 1, mat4x3(1.0))), _GLF_struct_8(uvec3(1u), _GLF_struct_7(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), uvec3(1u)), ivec2(1)), mat2x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_struct_9(mat3(1.0), ivec4(1)), mat4(1.0), vec2(1.0));
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(31224, max(_GLF_IDENTITY(31224, (31224) - _GLF_IDENTITY(0, int(int(0)))), 31224)) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(_GLF_IDENTITY(2, 0 ^ (2))), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(max(int(2), int(2)), clamp(max(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, min(2, 2)), (1 & 1), (1 | 1), 0)), (false ? _GLF_FUZZED(76318) : int(ivec4(_GLF_IDENTITY(2, min(2, 2)), (1 & 1), (1 | 1), 0)))))), int(2)), max(int(2), int(2)), max(int(2), int(2))))) / 1, ((_GLF_IDENTITY(max(int(2), int(2)), clamp(max(int(2), int(2)), max(int(2), int(2)), max(int(2), int(2))))) / 1) / 1)))), int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(max(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) / 1), 2))), int(2)), clamp(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(int(2), int(2)), _GLF_IDENTITY(max(int(2), int(2)), (max(int(2), int(2))) - 0)))) / 1, ((_GLF_IDENTITY(max(int(2), int(2)), clamp(max(int(2), int(2)), max(int(2), int(2)), max(int(2), int(2))))) / 1) / 1)))), (0 | 0)))) / 1)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              continue;
             do
              {
               GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z = _GLF_struct_replacement_10._f1.subgroup_id;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(gl_SubgroupSize, bvec2(true));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y = _GLF_struct_replacement_27.subgroup_size;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)))).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y) || false), false))) && true)))))))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), false, false, true))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -12.41))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -12.41))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -12.41))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))))), (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -12.41))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)))))))))) || false)) || false))))), true)))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), max(1 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), clamp(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 1 * (int(7))), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (_GLF_IDENTITY(int(7), (int(7)) << 0)))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                      }
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, true && (true))), false, true)))))) && true))))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              {
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 for(_GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(1u, _GLF_struct_17(true, mat2x3(1.0)), _GLF_struct_18(true, bvec4(true), _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) ^ 0)), mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), vec3(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_19._f2._injected_loop_counter < 1); _GLF_IDENTITY(_GLF_struct_replacement_19._f2._injected_loop_counter ++, 0 ^ (_GLF_struct_replacement_19._f2._injected_loop_counter ++)))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                  }
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy.x = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(min(int(0), int(0)), clamp(min(int(0), int(0)), min(int(0), int(0)), _GLF_IDENTITY(min(int(0), int(0)), (_GLF_IDENTITY(min(int(0), int(0)), (min(int(0), int(0))) >> 0)) << 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.y = GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) - 0.0) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) - 0.0) > injectionSwitch.y, true, false))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true, ! (! (true))), true, false)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, length(0.0))), dot(vec2(tan(0.0), 1.0), vec2(1.0, length(0.0))))) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))))))))))) || (true), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), false, true, true))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))))) || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   do
    {
     GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy.y = workgroup_size;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))) || false)))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          break;
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.w = _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, max(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).xy.y;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
  }
 else
  {
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(bvec2(true), _GLF_struct_22(_GLF_struct_20(vec3(1.0), true, mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat3x4(1.0), _GLF_struct_21(true)), mat2x4(1.0), _GLF_struct_25(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1u, _GLF_struct_23(vec3(1.0), vec2(1.0)), 1.0, _GLF_struct_24(_GLF_IDENTITY(ivec4(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec4(1) : _GLF_FUZZED(ivec4(_GLF_IDENTITY(5726, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.6) : 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(5726, clamp(5726, 5726, _GLF_IDENTITY(5726, ~ (~ (5726))))))), 86791, 53213, 49245)))), gl_WorkGroupID.x, mat3x2(1.0), uvec2(1u), true), mat3x2(1.0), ivec3(1)), 1.0, mat2(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = ((_GLF_IDENTITY((1 & 1), (_GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1)))) >> 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.w * _GLF_struct_replacement_26._f3._f4.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) << uvec4(0u, 0u, 0u, 0u)).zw.y, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, 1u))), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) + uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) + GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat4x3(1.0), _GLF_struct_15(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), ~ (~ (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))) / uvec4(1u, 1u, 1u, 1u)).zw.y + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))))), 0)), int(ivec4(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))))), 0)), 1, 0, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))), (false ? _GLF_FUZZED(91220) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))))))))))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1))))) - _GLF_IDENTITY(0, (0) | 0), ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(findLSB(virtual_gid), 32864, 55588)))), 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))), (false ? _GLF_FUZZED(91220) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))))))))))))), _GLF_IDENTITY((~ ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))), (false ? _GLF_FUZZED(91220) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))))))))))))) - 0, 1 * ((~ ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (true ? _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), min(clamp(1, 1, 1), clamp(1, 1, 1)))) / 1) : _GLF_FUZZED(85917))))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(1, 1, 1))) - 0)) - 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? (_GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(50742)))) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1)))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))), (false ? _GLF_FUZZED(91220) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))))))))))))) - 0))))))) % GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY((GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(19597, 0 | (19597))))))), max(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (0 | (0 >> _GLF_IDENTITY(int(8), int(8)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (1)) : _GLF_FUZZED(19597))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))) - 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 1, 0, 0))))), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(19597), min(_GLF_FUZZED(19597), _GLF_IDENTITY(_GLF_FUZZED(19597), (_GLF_FUZZED(19597)) >> 0)))))), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))))))))))))), (true ? (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, max((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(19597, 0 | (19597))))))), max(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (true ? 1 : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1))))))) | (1)) : _GLF_FUZZED(19597)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(19597), min(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(19597), (true ? 1 : _GLF_FUZZED(19597)) / 1), true ? 1 : _GLF_FUZZED(19597)))))), 0 ^ (int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), 0 ^ (int(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(19597, (19597) | (19597)))), min((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(19597, (19597) | (19597)))), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(19597, (19597) | (19597))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597)))), 0 ^ (int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19597))))))))))))))))))))) : _GLF_FUZZED(virtual_gid))) % GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y) | 0u)), min(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, min(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).x + 1, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, min(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).x + 1, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, min(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).x + 1) >> 0u)) - 0u), (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x, max(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x, 0u + (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x)), GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x)) + 1) | (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, min(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).x + 1, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, min(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).x + 1, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, min(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).x + 1) >> 0u)) - 0u), (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x, max(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x, 0u + (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x)), GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x)) + 1) | (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + 1))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) % _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, clamp(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw)).y), ((GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + 1) % GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))), _GLF_struct_11(mat4x2(1.0), mat2(1.0), mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ivec2(1), 1u, uvec2(1u), vec4(1.0)), _GLF_struct_12(mat2x4(1.0), ivec3(1), bvec4(true), _GLF_IDENTITY(1, (1) << 0), uvec2(1u), vec3(1.0)), _GLF_struct_13(uvec3(1u), mat2x3(1.0), bvec4(_GLF_IDENTITY(true, (true) && true))), 1.0, _GLF_struct_14(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-64812, -9651, -78742)) : ivec3(1)))) - ivec3(0, 0, 0)), 1.0, uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) + (_GLF_IDENTITY(1u, (1u) / 1u))))), 1u), true);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), true, true, false)), ! (! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), true, true, false)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x = _GLF_struct_replacement_16._f1.next_virtual_gid;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-957.822)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))
        break;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      break;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)));
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            break;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
    }
   else
    {
     do
      {
       do
        {
         buf[virtual_gid] = 1;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-109.816, -2368.5522)))).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x)), _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x), max(max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x)), _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x)), _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).zw.x)))) + 1 < GLF_merged2_0_2_52_2_2_55GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))))
        continue;
      }
     else
      {
       atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x], _GLF_IDENTITY(uint(2), uint(uvec3(uint(2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(191513u) : 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u)))), 4, 64, 4);
      }
     subgroupAll(false);
    }
   else
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 4, 64, 4);
     do
      {
       do
        {
         subgroupAll(true);
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, false))))))), bool(bvec2(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, false))))))), false)))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           return;
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
            break;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(81.63), _GLF_FUZZED(_GLF_IDENTITY(1.4, (1.4) * determinant(mat2(1.0, 0.0, 0.0, 1.0))))), bvec2(false, false))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, log(1.0) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4805.5990, mix(float(_GLF_IDENTITY(-4805.5990, max(-4805.5990, -4805.5990))), float(_GLF_FUZZED(587.396)), bool(false))), (_GLF_IDENTITY(-4805.5990, mix(float(_GLF_IDENTITY(-4805.5990, max(-4805.5990, -4805.5990))), float(_GLF_FUZZED(587.396)), bool(false)))) / 1.0))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), true))), (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) && true)))))))), bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), true)))))), true), false)), false))))))) && true))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
}
