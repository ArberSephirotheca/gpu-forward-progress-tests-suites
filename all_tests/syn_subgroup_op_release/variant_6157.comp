#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.7)), float(1.0), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), (mat2(1.0) * ((injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), (mat2(1.0) * ((injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))) - vec2(0.0, 0.0)).y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-10.05))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-673.018) : injectionSwitch.y))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || _GLF_IDENTITY((bool(true)), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(bool(_GLF_IDENTITY(true, ! (! (true)))), false))))))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (bool(bool(bool(_GLF_DEAD(false))))) && true))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (bool(bool(bool(_GLF_DEAD(false))))) && true))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (bool(bool(bool(_GLF_DEAD(false))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-923.944)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * 1.0)), bool(true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y, mix(float(_GLF_FUZZED(-923.944)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * 1.0)), bool(true))))))), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-923.944)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * 1.0)), bool(true))))))), true))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 1u, 0u, 1u))), gl_WorkGroupSize.x)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), 1u))), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x)))))), 1u))), 1u, 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), 1u))), 1u, 0u, 1u))))), (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1])), gl_WorkGroupSize[2])).x))), min((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (1))])), gl_WorkGroupSize[2])).x))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1])), gl_WorkGroupSize[2])).x))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1])), gl_WorkGroupSize[2])).x)))))))))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(43610u, 151622u, 87255u, 81968u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(43610u, _GLF_IDENTITY(151622u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(151622u, (151622u) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? uint(uvec2(_GLF_IDENTITY(151622u, (151622u) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(subgroup_local_id)))), 87255u, 81968u)), (_GLF_FUZZED(uvec4(43610u, 151622u, 87255u, 81968u))) << uvec4(0u, 0u, 0u, 0u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), clamp(uvec2(gl_WorkGroupSize.x, 1u), uvec2(gl_WorkGroupSize.x, 1u), _GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), min(uvec2(gl_WorkGroupSize.x, 1u), uvec2(gl_WorkGroupSize.x, 1u)))))) >> uvec2(0u, 0u)))), 1u, 0u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(43610u, _GLF_IDENTITY(151622u, (151622u) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 87255u, 81968u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u)), uvec4(0u, 0u, 0u, 0u) + ((false ? _GLF_FUZZED(uvec4(43610u, _GLF_IDENTITY(151622u, (151622u) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 87255u, 81968u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))))))))), _GLF_IDENTITY((gl_WorkGroupSize.x), uint(uint((gl_WorkGroupSize.x)))) >> 0u), gl_WorkGroupSize.x))))), (146804u & 0u) ^ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (uint(uvec2(gl_WorkGroupSize.x, 1u))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))), 1u, 0u, 1u))), (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)) >> 0u))))))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), 1u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u))), 1u, 0u, 1u))))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 1u)))), min((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), 1u * (uint(uvec2(gl_WorkGroupSize.x, 1u)))), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(atomicExchange(subgroup_size, num_workgroup))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) << 0u)), (false ? _GLF_FUZZED(uvec4(169798u, 55824u, 123088u, 18754u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) << 0u))))))))))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(12796u, clamp(_GLF_IDENTITY(12796u, max(12796u, 12796u)), 12796u, _GLF_IDENTITY(12796u, min(12796u, 12796u)))), 89357u, 107241u)) : gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (gl_WorkGroupSize.x)), 1u))), 1u, 0u, 1u)) ^ uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u))), 1u, 0u, _GLF_IDENTITY(1u, (1u) - (0u & 176381u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u) : _GLF_FUZZED(uvec4(47993u, 100158u, 176759u, 78293u))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id))))) / 1u), 1u, 0u, 1u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u))))) + 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(13731u, 19914u, 163520u))))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x)), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) | (0u))) | (max(gl_WorkGroupSize, gl_WorkGroupSize)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 1u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u)))))), (1u | 1u) * (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))))))), 1u, 0u, 1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), (((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u)))))) ^ 0u))), 1u))) + 0u))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), uvec2(1u, 1u) * (uvec2(gl_WorkGroupSize.x, 1u)))) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_local_id & subgroup_size)) : 0u)), 1u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec3(191307u, 8566u, 3747u)[2]))), _GLF_IDENTITY(0u, (0u) | (0u))) | (max(gl_WorkGroupSize, gl_WorkGroupSize)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 1u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), min(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))), max((_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), min(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), min(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))), ((_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), min(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u)))))), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u)))))) << 0u))))), 1u, 0u, 1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), (((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u)))))) ^ 0u))), _GLF_IDENTITY(1u, uint(uint(1u)))))) + 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 1u))), 1u, 0u, 1u)))), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) | (max(gl_WorkGroupSize, gl_WorkGroupSize)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 1u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, 1u))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))))), 1u, 0u, 1u))))), (min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))))), 1u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (true ? uint(uvec2(gl_WorkGroupSize.x, 1u)) : _GLF_FUZZED(subgroup_id)))), 1u, 0u, 1u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) | (max(gl_WorkGroupSize, gl_WorkGroupSize)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 1u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (false ? _GLF_FUZZED(uvec3(168955u, 144949u, 98955u)) : _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), min(uint(uvec2(gl_WorkGroupSize.x, 1u)), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(num_workgroup)) : uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, min(1u, 1u))))))))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))))), 1u, 0u, 1u)))))) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u))))), (((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 1u))), 1u, 0u, 1u)))))) ^ 0u))), 1u))) + 0u)))))))))))), (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), false, true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, false, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4((false) || false, false, true, false)), true, false)), ! (! (bool(bvec3(bool(bvec4((false) || false, false, true, false)), true, false)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) || false), true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) || false), true))))) && true))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true)))) || false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, false))))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), true, false))), true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), true, false))), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false)), true, false))), true))))), true, true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), false))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), false))), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), false, false))), false))), true, false), false)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), false))), true, false)), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u)))))))), ((subgroup_local_id + 1)) - 0u) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), 0u ^ (0u ^ (subgroup_size)))), subgroup_size, subgroup_size)))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) << 0u) | (subgroup_size)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))) << 0u) | (subgroup_size))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) << 0u) | (subgroup_size)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) | (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))) << 0u) | (subgroup_size)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) | (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) << 0u) | (subgroup_size)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (true ? _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(subgroup_size))) * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) | (subgroup_size))))))))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), 0u ^ (0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)))), 1u * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) << 0u) | (subgroup_size)))))) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (false ? _GLF_FUZZED(-36394) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))) ? (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) : _GLF_FUZZED(21512)))))) < subgroup_size, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(462.213) : injectionSwitch.x)))) ^ (1))), (false ? _GLF_FUZZED(-36394) : (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))))) < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (false ? _GLF_FUZZED(-36394) : (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))))) < subgroup_size) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! (false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-36394), (_GLF_IDENTITY(_GLF_FUZZED(-36394), clamp(_GLF_FUZZED(-36394), _GLF_FUZZED(-36394), _GLF_FUZZED(-36394)))) | 0) : (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))))) < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(27442, clamp(27442, _GLF_IDENTITY(27442, (27442) | (0 << _GLF_IDENTITY(int(6), int(6)))), 27442))) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (false ? _GLF_FUZZED(-36394) : (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))) ? _GLF_FUZZED(27442) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))))) < subgroup_size) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(6), int(6))) + _GLF_IDENTITY((4), ~ (~ ((4)))))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), ! (! ((! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))) + (2)), _GLF_IDENTITY(2, ~ (~ (2)))))) >> 0, max(_GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))) + (2)), _GLF_IDENTITY(2, ~ (~ (2)))))), ((_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))) + (2)), _GLF_IDENTITY(2, ~ (~ (2))))))) | ((_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))) + (2)), _GLF_IDENTITY(2, ~ (~ (2)))))))) >> 0, (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))) + (2)), _GLF_IDENTITY(2, ~ (~ (2)))))) >> 0)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && _GLF_IDENTITY(true, (true) && true)), ! (! (false))))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, cos(0.0)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
