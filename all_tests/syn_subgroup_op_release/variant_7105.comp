#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), ! (! (! (! (bool(bvec3(false, false, false))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (false ? _GLF_FUZZED(-6.8) : clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, false)))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) | (_GLF_IDENTITY(~ (subgroup_id), max(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) / 1u))), ~ (subgroup_id)))), clamp(_GLF_IDENTITY(0u, (0u) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) | (_GLF_IDENTITY(~ (subgroup_id), max(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) / 1u))), ~ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) | (_GLF_IDENTITY(~ (subgroup_id), max(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) / 1u))), ~ (subgroup_id)))), (_GLF_IDENTITY(0u, (0u) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) | (_GLF_IDENTITY(~ (subgroup_id), max(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) / 1u))), ~ (subgroup_id))))) ^ 0u), _GLF_IDENTITY(0u, (0u) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) | (_GLF_IDENTITY(~ (subgroup_id), max(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) / 1u))), ~ (subgroup_id))))))))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))), 1u)), max(uint(uvec3(subgroup_size, 1u, 1u)), uint(uvec3(subgroup_size, 1u, 1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))))))) * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), max(~ (subgroup_id), ~ (subgroup_id))))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))), clamp(_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), _GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))))))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ _GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))), (subgroup_id))))))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))))))) * subgroup_size)))), _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, (0u) << 0u) | (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id)), subgroup_id))))))))) * subgroup_size)), ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) - 0u)) | ((~ (workgroup_base + subgroup_id * subgroup_size))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))) >> 0))), 1))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u))))), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((subgroup_size) ^ 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u, 0u | (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u, max(false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u, false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u)), false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u, false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u))))))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u))))))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((subgroup_size) ^ 0u, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) ^ 0u)))))))) ^ 0u, max(((subgroup_local_id + 1) % subgroup_size) ^ 0u, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, _GLF_IDENTITY(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) ^ 0u, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), clamp(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, 0u + (((subgroup_local_id + 1) % subgroup_size) ^ 0u)), ((subgroup_local_id + 1) % subgroup_size) ^ 0u), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))) ^ 0u, ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 1u, 1u, 1u))) + 1) % subgroup_size) ^ 0u), max(((subgroup_local_id + 1) % subgroup_size) ^ 0u, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) + (1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))), subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) + (1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))), subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) + (1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))), subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size) << 0u))))) ^ 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), _GLF_IDENTITY(max(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1)), ~ (_GLF_IDENTITY(~ (max(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1))), ~ (~ (~ (max(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1))))))))))) % subgroup_size) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) ^ 0u), ((subgroup_local_id + 1) % subgroup_size) ^ 0u) : _GLF_FUZZED(workgroup_base))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1))) % subgroup_size) ^ 0u), (true ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u) : _GLF_FUZZED(workgroup_base))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) | (subgroup_size))) ^ 0u), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u) : _GLF_FUZZED(workgroup_base)))))) << 0u), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1 * (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (1 * (1)) / 1)), 1))) % subgroup_size) ^ 0u), (true ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (~ (_GLF_FUZZED(workgroup_base))))))))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, (((subgroup_local_id + 1) % subgroup_size) ^ 0u) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(69499)))) + 0), 1 * (1)), 1))) % subgroup_size) ^ 0u), (true ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u | 0u) | (0u))))) : _GLF_FUZZED(workgroup_base)))))))))), 0u, 0u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   _GLF_IDENTITY(buf[virtual_gid] = 1, (true ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ (buf[virtual_gid] = 1))) : _GLF_FUZZED(packUnorm2x16(vec2(-3604.0117, 7.9)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec4(false, true, true, false)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))), ! (! _GLF_IDENTITY((bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false), true, true, false)), bool(bool(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), false)))))))), false || ((bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false), true, true, false)), bool(bool(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), false))))))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))), ! (! (bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false), true, true, _GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), false)))))))))))))))))))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-830.873)), float(injectionSwitch.y), bool(true)))) - 0.0)))))))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 0u, 1u, 0u))))), 0u, (1u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 0u, (1u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-16331, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((_GLF_IDENTITY(-16331, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(-16331, (-16331) << 0)), min(~ (_GLF_IDENTITY(-16331, (-16331) << 0)), ~ (_GLF_IDENTITY(-16331, (-16331) << 0)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(-16331, (-16331) << 0)), min(~ (_GLF_IDENTITY(-16331, (-16331) << 0)), ~ (_GLF_IDENTITY(-16331, (-16331) << 0)))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(-16331, (-16331) << 0)), min(~ (_GLF_IDENTITY(-16331, (-16331) << 0)), ~ (_GLF_IDENTITY(-16331, (-16331) << 0)))) : _GLF_FUZZED(-52416)))))))) - 0, _GLF_IDENTITY((-16331) - 0, clamp((-16331) - 0, (-16331) - 0, (-16331) - 0))))), min(_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, clamp((-16331) - 0, (-16331) - 0, (-16331) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, _GLF_IDENTITY(clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, ((-16331) - 0) ^ 0))), (-16331) - 0), ~ (~ (clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, ((-16331) - 0) ^ 0))), (-16331) - 0)))))))), (_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, max(_GLF_IDENTITY((-16331), int(ivec3((-16331), (0 | 0), 1))) - 0, _GLF_IDENTITY(_GLF_IDENTITY((-16331) - 0, ((-16331) - 0) ^ 0), int(ivec3(_GLF_IDENTITY((-16331) - 0, ((-16331) - 0) ^ 0), 1, 0))))), (-16331) - 0)))))) << (-56331 & (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, int(int(_GLF_IDENTITY(6, (6) << (0 >> _GLF_IDENTITY(int(3), int(3)))))))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((_GLF_IDENTITY(-16331, int(ivec3(-16331, (0 ^ 1), 0)))) - 0, clamp((-16331) - 0, (-16331) - 0, (-16331) - 0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21438) : 0)), clamp((-16331) - 0, (-16331) - 0, (-16331) - 0))))), _GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, clamp((-16331) - 0, (-16331) - 0, (-16331) - 0)))))), (min(_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, int(int((-16331) - 0))), (-16331) - 0))))), _GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max((-16331) - 0, _GLF_IDENTITY((-16331) - 0, clamp((-16331) - 0, (-16331) - 0, (-16331) - 0))))))) << (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)) ^ 0)))) ^ 0)) + 0)) : _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0))))) >> 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-16331, (_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max(_GLF_IDENTITY((-16331) - 0, ~ (~ ((-16331) - 0))), _GLF_IDENTITY((-16331) - _GLF_IDENTITY(0, (0) | (0)), clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, ~ (~ ((-16331) - 0))), (_GLF_IDENTITY(-16331, (-16331) * 1)) - 0)))))) + 0), (_GLF_IDENTITY(-16331, (_GLF_IDENTITY(-16331, _GLF_IDENTITY((-16331) - 0, max(_GLF_IDENTITY((-16331) - 0, ~ (~ ((-16331) - 0))), _GLF_IDENTITY((-16331) - _GLF_IDENTITY(0, (0) | (0)), clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, ~ (~ ((-16331) - 0))), (_GLF_IDENTITY(-16331, (-16331) * 1)) - 0)))))) + 0)) - 0), (_GLF_IDENTITY(-16331, (_GLF_IDENTITY(_GLF_IDENTITY(-16331, max(-16331, -16331)), _GLF_IDENTITY((-16331) - 0, max(_GLF_IDENTITY((-16331) - 0, ~ (~ ((-16331) - 0))), _GLF_IDENTITY((-16331) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ (78885 & 0))) | (0))) | (0)), clamp((-16331) - 0, _GLF_IDENTITY((-16331) - 0, ~ (~ ((-16331) - 0))), (_GLF_IDENTITY(-16331, (-16331) * 1)) - 0)))))) + 0)) ^ 0)) : _GLF_IDENTITY(4, (4) - 0)) ^ 0))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(false, true && (false)))), false || (bool(bvec4(_GLF_DEAD(false), true, true, false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bool(false))))))), (_GLF_DEAD(false)) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_DEAD(false)) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED((-0.3 / 429.150)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(2565.1052)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))).x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))))))), _GLF_IDENTITY(true, true && (true)), true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))))))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) : _GLF_FUZZED(9458.5834))) < injectionSwitch.y)))))) && true), false, true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))) && true), false, true), true))))) || false)))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED((-0.3 / 429.150)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(2565.1052)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))).x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), bool(bvec2(! (true), true)))))))))))), _GLF_IDENTITY(true, true && (true)), true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, true)))) || false))), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(751.720, 54.91)) : injectionSwitch)), injectionSwitch, injectionSwitch)).y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true, true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))))))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) : _GLF_FUZZED(9458.5834))) < injectionSwitch.y)))))) && true), false, true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))) && true), false, true), true))))) || false)))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, true && (true))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))) || false)))), true))))) || false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (false))), bool(bool(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), bool(bvec4(_GLF_IDENTITY(! (false || (false)), false || (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), bool(bool(false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true, false)))))))))))
  return;
}
