#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), clamp(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.0) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3907.5067) : 0.0))))) - 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(392.430) : 1.0)), 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((360.100 / -2.9)) : injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))), (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), clamp((gl_WorkGroupSize) | (gl_WorkGroupSize), (gl_WorkGroupSize) | (gl_WorkGroupSize), (gl_WorkGroupSize) | (gl_WorkGroupSize)))) | ((gl_WorkGroupSize) | (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))).x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, uint(uint(2u)))) >> 0u)), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize) | (gl_WorkGroupSize))))).x, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)))))) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u))), 0u, 1u, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))).x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(26694u, 10301u, 165562u)) : gl_WorkGroupSize))) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) | (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) | uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)))).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u))), 0u, 1u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(128217u, 152883u, 42235u))))), uvec3(uvec3((gl_WorkGroupSize))))).x, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))).x : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, max(1u, 1u))))) | (1u)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED((num_workgroup % subgroup_local_id)) : ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u))))) >> 0u)))), 0u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u))), 0u, 1u, 0u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))))), (gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), max(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), (gl_WorkGroupSize))), (gl_WorkGroupSize))), uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))))).x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))))), 0u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))).x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u)), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | (gl_WorkGroupSize)).x, 1u))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)))))), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)))))), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)))))), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)))).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u)))) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u, 1u, 0u)), 0u | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u))), _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 1u))), 0u, 1u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x))) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u, 1u))), _GLF_IDENTITY(1u, min(1u, 1u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) | (uvec3(gl_WorkGroupID))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y, (false ? _GLF_FUZZED(-93.00) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y)))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y, (false ? _GLF_FUZZED(-93.00) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, length(0.0), 0.0, tan(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0))).y)))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-392.585), _GLF_FUZZED(8403.0438)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (! (_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(417.146)), bool(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ 514.725)), _GLF_FUZZED((42.94 - vec4(4750.3889, 56.37, 0.3, 562.901).b))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y), mix(float((false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y)), float(_GLF_FUZZED(-7.3)), bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y), min((false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y), (false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fract(-9.4)) : injectionSwitch.y)))))))) && _GLF_IDENTITY(true, (true) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-410.261)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-783.734, clamp(-783.734, -783.734, -783.734)))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, workgroup_base), 1u * (min(workgroup_base, workgroup_base))), (true ? _GLF_IDENTITY(min(workgroup_base, workgroup_base), 1u * (min(workgroup_base, workgroup_base))) : _GLF_FUZZED(packSnorm4x8(vec4(-94.87, 9.2, -2170.7852, 3.9)))))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))), max(workgroup_base, workgroup_base))) + _GLF_IDENTITY(0u, 0u ^ (0u))) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid] = 1)), ~ (~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid] = 1)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), clamp(_GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), 0u + ((next_virtual_gid))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), max(_GLF_IDENTITY((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u | ((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))))))), (next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) / 1u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))), ~ (_GLF_IDENTITY(~ ((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((~ (_GLF_IDENTITY((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_base) : 6u))))), min((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u) : 6u, max(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u) : 6u, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u) : 6u, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u) : 6u, false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u) : 6u, false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u) : 6u))))))))), (next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))))) : 6u))))))))) | 0u, ((~ (_GLF_IDENTITY((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_base) : 6u))))), min((next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : 6u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : 6u, 0u + (false ? _GLF_FUZZED(workgroup_base) : 6u))) * 1u)))))), (next_virtual_gid) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (6u))), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : 6u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : 6u), clamp((false ? _GLF_FUZZED(workgroup_base) : 6u), (false ? _GLF_FUZZED(workgroup_base) : 6u), (false ? _GLF_FUZZED(workgroup_base) : 6u))))))))))))) | 0u) | (0u | 0u))))))))))], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) ^ 0) | (4))) >> 0), 64, 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false))))) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float((95609u + 63879u)))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(7789.9261)), vec2(_GLF_FUZZED((-7.9)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-0.7, -8.7)), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.7, -8.7))))))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3534.2132)), float(injectionSwitch.y), bool(true)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) && true)))), true, false, false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-17.82))))) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(true, (true) && true), false, false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)) : injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0))))), injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]))))) - vec2(0.0, 0.0)).y, exp(length(0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6871.0716)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat2(abs(1.0), 1.0, tan(0.0), 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0))).y, injectionSwitch.y, injectionSwitch.y)))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0)), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(2.9, 0.0))))).y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-8573.3162)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 0.0, 1.0, 0.0, 0.0, tan(0.0)))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)))))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) - 0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0)))))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), injectionSwitch.x))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(0.0)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.7, -40.11)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 0.0, 1.0, 0.0, 0.0, tan(0.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4475.3938))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.6)), vec2(_GLF_FUZZED(47.99), (injectionSwitch)[1]), bvec2(false, true))))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 0.0, 1.0, 0.0, 0.0, tan(0.0)))), 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(8.5)))), 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.2) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED((- 60.08))), bvec2(false, false))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.2) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED((- 60.08))), bvec2(false, false))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.2) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_IDENTITY(_GLF_FUZZED((- 60.08)), min(_GLF_IDENTITY(_GLF_FUZZED((- 60.08)), clamp(_GLF_FUZZED((- 60.08)), _GLF_FUZZED((- 60.08)), _GLF_FUZZED((- 60.08)))), _GLF_FUZZED((- 60.08))))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.2) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED((- 60.08))), bvec2(false, false))).y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0], (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.0, max(-1.0, -1.0))), _GLF_FUZZED((- 60.08))), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(6.5, -921.441)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - log(vec2(1.0, 1.0)))))[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED((- 60.08))), bvec2(false, false))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.2) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-1.0, mix(float(_GLF_FUZZED(-3.9)), float(-1.0), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), mix(float(float(mat2x4(_GLF_IDENTITY(-1.0, mix(float(_GLF_FUZZED(-3.9)), float(-1.0), bool(true))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), float(_GLF_FUZZED(-0.6)), bool(false))))), _GLF_FUZZED((- 60.08))), bvec2(false, false))).y : _GLF_FUZZED(log(-62.26))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true, false, false))))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) && true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-649.110, min(-649.110, -649.110)))), bool(false))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), true, false, false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true, false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), false || (! (true))))))))), true, false, false))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-649.110, min(-649.110, -649.110)))), bool(false))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), true, false, false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true, false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), false || (! (true))))))))), true, false, false))))))))))), true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-649.110, min(-649.110, -649.110)))), bool(false))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), true, false, false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true, false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), false || (! (true))))))))), true, false, false))))))))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-649.110, min(-649.110, -649.110)))), bool(false))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), true, false, false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true, false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(length(0.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), false || (! (true))))))))), true, false, false))))))))))), true, true))), true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.8)), bool(false))), injectionSwitch.y, injectionSwitch.y)))), true, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true, false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(2306.3451, -582.702)) : injectionSwitch)), injectionSwitch, injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true, false)))))) || false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
}
