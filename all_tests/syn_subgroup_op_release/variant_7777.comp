#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.3) : 1.0)), 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, length(abs(vec2(0.0, 0.0))), 0.0, determinant(mat4(1.0, 1.0, 1.0, tan(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(vec4(1.0, length(abs(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), 0.0, determinant(mat4(1.0, 1.0, 1.0, tan(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) + _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), min(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (0.0)), 0.0, sqrt(0.0), 0.0, 0.0)), float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), min(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (0.0)), 0.0, sqrt(0.0), 0.0, 0.0)), float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), min(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (0.0)), 0.0, sqrt(0.0), 0.0, 0.0)), float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), min(float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (0.0)), 0.0, sqrt(0.0), 0.0, 0.0)), float(mat3x4(1.0, sqrt(0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))), injectionSwitch.x)) > injectionSwitch.y))), false, true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), bool(bvec2(_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))), true))) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED(-246.322)), min(float(_GLF_FUZZED(-246.322)), float(_GLF_FUZZED(-246.322)))), bool(_GLF_IDENTITY(false, (false) || false)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-246.322)), bool(_GLF_IDENTITY(false, (false) || false)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-246.322)), bool(_GLF_IDENTITY(false, (false) || false))))), float(_GLF_FUZZED(1.0)), bool(false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), max((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), clamp(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u), (workgroup_id), (workgroup_id)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), _GLF_IDENTITY((workgroup_id), min((workgroup_id), _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))) | (workgroup_id))))) << 0u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0)), (float(mat3(injectionSwitch.y, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0))) * 1.0))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u)))))) / 1u)) * 1u) + 1), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u)))))) / 1u)) * 1u) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u)))))) / 1u)) * 1u) + 1)))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u)))))) / 1u)) * 1u) + 1))) % subgroup_size, clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, 0u | ((subgroup_local_id) >> 0u))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, 0u | ((subgroup_local_id) >> 0u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, 0u | ((subgroup_local_id) >> 0u))))), subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))))))))))), bool(bvec3(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) + 0), 1))), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), injectionSwitch)).x))), uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (subgroup_local_id + 1))) | (subgroup_local_id + 1)) < subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0)))))))) | (subgroup_local_id + 1)) < subgroup_size), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup))))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-56.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((2686.0599 / -3910.2107))), bvec2(true, false))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), (_GLF_IDENTITY((2), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))))) * ((2)), clamp(1 * ((2)), 1 * ((2)), _GLF_IDENTITY(1 * ((2)), (false ? _GLF_FUZZED(-90818) : 1 * ((2)))))))) - 0))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bool(_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bool(_GLF_DEAD(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_IDENTITY(false, (false) && true))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-61.49)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! _GLF_IDENTITY(((false)), bool(bool(_GLF_IDENTITY(((false)), bool(bvec4(((false)), false, false, false))))))))))))))) || false), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), true, false, true)), (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))))))) || false), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < injectionSwitch.y))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), true, false, true)), (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-889.825))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0)), (false ? _GLF_FUZZED(42.45) : float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4426.6477)), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, log(1.0), 1.0), max(vec3(1.0, log(1.0), 1.0), vec3(1.0, log(1.0), 1.0)))), _GLF_IDENTITY((float(_GLF_IDENTITY(vec3(1.0, log(1.0), 1.0), max(vec3(1.0, log(1.0), 1.0), vec3(1.0, log(1.0), 1.0))))), min(_GLF_IDENTITY((float(_GLF_IDENTITY(vec3(1.0, log(1.0), 1.0), max(vec3(1.0, log(1.0), 1.0), vec3(1.0, log(1.0), 1.0))))), max((float(_GLF_IDENTITY(vec3(1.0, log(1.0), 1.0), max(vec3(1.0, log(1.0), 1.0), vec3(1.0, log(1.0), 1.0))))), (float(_GLF_IDENTITY(vec3(1.0, log(1.0), 1.0), max(vec3(1.0, log(1.0), 1.0), vec3(1.0, log(1.0), 1.0))))))), (float(_GLF_IDENTITY(vec3(1.0, log(1.0), 1.0), max(vec3(1.0, log(1.0), 1.0), vec3(1.0, log(1.0), 1.0))))))) * 1.0)), 1.0, 1.0, determinant(mat2(tan(0.0), sin(0.0), 1.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3x4(1.0, 1.0, 1.0, determinant(mat2(tan(0.0), sin(0.0), 1.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x4(-8.4, 6.4, 16.78, 569.968, 176.140, 3.2, 9.1, 7.0, -1.4, 2.2, 5.3, -1191.0364))))))) / cos(0.0)), 1.0)), 1.0)))))), float(_GLF_FUZZED(2.4)), bool(false)))), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-12.59))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(42.45) : float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4426.6477)), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))), bool(false)))))), (_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-12.59))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(42.45) : float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4426.6477)), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), float(_GLF_FUZZED(2.4)), bool(false)))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-12.59))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(42.45) : float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4426.6477)), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), float(_GLF_FUZZED(2.4)), bool(false))))))) && true)) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) && true)) && true))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) + 0), 4)), (_GLF_IDENTITY(4, (4) | (4))) - (-55589 & 0)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, 0.9) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, 0.9) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))))))) || ((false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, 0.9) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))))) || ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, 0.9) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))))) || ((false))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, _GLF_IDENTITY(0.9, (_GLF_IDENTITY(0.9, clamp(0.9, 0.9, 0.9))) * 1.0)) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(19.63)), bool(false))), float(injectionSwitch.y))), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), float(mat2x4(float(injectionSwitch.y), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), exp(0.0), 0.0, 0.0))))), bool(true))))))) || ((false))), false, true, true)), false, true, false))))), ((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, 0.9) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))))) || ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, 0.9) * mat3x2(-2720.8549, 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))))) || ((false))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-6.2, _GLF_IDENTITY(0.9, (_GLF_IDENTITY(0.9, clamp(0.9, 0.9, 0.9))) * 1.0)) * mat3x2(_GLF_IDENTITY(-2720.8549, clamp(-2720.8549, _GLF_IDENTITY(-2720.8549, 0.0 + (-2720.8549)), -2720.8549)), 5395.3162, -1.2, -647.262, -9.9, 1338.7571)).b)), float(injectionSwitch.y), bool(true))))))) || ((false))), false, true, true)), false, true, false)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true, false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(sqrt(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   return;
  }
}
