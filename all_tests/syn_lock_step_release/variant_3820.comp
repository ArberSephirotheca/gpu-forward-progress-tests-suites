#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 bool _f0;
 mat2x3 _f1;
 ivec3 _f2;
 vec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 vec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_26 {
 mat2 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 uint _f3;
 vec3 _f4;
} ;

struct _GLF_struct_21 {
 mat2 _f0;
 bool _f1;
 ivec2 _f2;
 uvec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 ivec4 _f1;
 _GLF_struct_20 _f2;
 uint virtual_gid;
 mat4 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_26 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_18 {
 float _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 int _f1;
 mat3x2 _f2;
 _GLF_struct_16 _f3;
 mat3x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 uint workgroup_id;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
} ;

struct _GLF_struct_13 {
 uvec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 bool _f1;
 vec3 _f2;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 mat2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 mat3x2 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 uvec4 _f4;
 uint next_virtual_gid;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 mat4 _f1;
 float _f2;
 mat4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat3 _f1;
 bvec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 uvec4 _f1;
 _GLF_struct_8 _f2;
 vec4 _f3;
 bvec4 _f4;
 _GLF_struct_9 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_14 _f2;
 mat2x3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_4 {
 uint subgroup_id;
 vec4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 ivec3 _f1;
 mat3x2 _f2;
 ivec3 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 mat4 _f3;
 mat3x4 _f4;
 uvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 ivec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 _GLF_struct_5 _f1;
 uvec3 _f2;
 mat4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(sign(-38.23)) : injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), false, true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), false || (((false)))))), _GLF_IDENTITY(false, bool(bool(false))), true, true)), ! (! (bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), false, true, true)))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), false || (((false)))))), _GLF_IDENTITY(false, bool(bool(false))), true, true)), ! (! (bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), false, true, true)))))) && true), (! ((_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), false || (((false)))))), _GLF_IDENTITY(false, bool(bool(false))), true, true)), ! (! (bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), false, true, true)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), true, true, false))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), false || (false || (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), false || (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), false || (false || (_GLF_IDENTITY(false, (false) && true)))))) && true), true, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, false))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bool(bool(bvec4(true, false, false, true)))))), (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))), false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false))))))) || false))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))), false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), _GLF_struct_5(_GLF_struct_0(uvec2(1u), mat4x3(1.0), mat2x4(1.0), ivec4(1), mat2x3(1.0)), _GLF_struct_1(mat3x2(1.0), mat4x2(1.0), mat3x4(1.0), mat4(1.0), mat3x4(1.0), uvec4(1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)))), bvec4(true), _GLF_struct_2(mat3(1.0), ivec3(1), mat3x2(1.0), ivec3(1), ivec2(1), mat2x4(1.0), vec4(1.0)), _GLF_struct_3(mat3(1.0), mat4x2(1.0)), _GLF_struct_4(gl_SubgroupID, _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(1.4, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1949.4316), min(_GLF_FUZZED(-1949.4316), _GLF_IDENTITY(_GLF_FUZZED(-1949.4316), mix(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(-1949.4316)), bool(true)))))), clamp(float(_GLF_FUZZED(-1949.4316)), float(_GLF_FUZZED(-1949.4316)), float(_GLF_FUZZED(-1949.4316)))), float(_GLF_IDENTITY(1.4, mix(float(_GLF_FUZZED(-5.2)), float(1.4), bool(true)))), bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), min(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), mix(float(_GLF_FUZZED(-0.1)), float(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), bool(true))), float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))), false))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y)))))), 8.9, -7.7, -6.2).x)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(0.0 + (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (0.0 + (float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) + 0.0)), bool(true)))), vec4(mat2x4(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(1.4, 8.9, -7.7, -6.2).x)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0))), mat4(1.0))), uvec3(1u), mat4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-683.202)), vec2(_GLF_FUZZED(vec2(-30.32, 337.630).s), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / cos(0.0))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), ! (! (! (bool(bvec4(false, false, false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])).x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), false, false))))))), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.8, -118.519)))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(62450u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 1.0, log(1.0))), float(float(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 1.0, log(1.0)))))))) * (vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(62450u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(62450u))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))), 0.0, 0.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), (false ? _GLF_FUZZED(vec2(6.5, -5910.3454)) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_FUZZED(-6262.0017), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), sqrt(1.0), 1.0)), max(vec2(mat2(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), sqrt(1.0), 1.0)), vec2(mat2(vec2(_GLF_FUZZED(-6262.0017), (injectionSwitch)[1]), sqrt(1.0), 1.0))))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(62450u))), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(float(62450u))))), bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).y)) || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), tan(0.0)))) > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), tan(0.0)))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-658.912), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * _GLF_IDENTITY((gl_WorkGroupSize.x), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(_GLF_IDENTITY(5u, (5u) >> 0u))) << 0u))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) * 1u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(bvec3(true), gl_WorkGroupID.x, _GLF_struct_17(mat2(1.0), 1, mat3x2(1.0), _GLF_struct_16(bvec4(true)), mat3x2(1.0), mat3x4(1.0)), _GLF_struct_18(1.0, _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1)))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_19.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_19.workgroup_id), min((workgroup_size * _GLF_struct_replacement_19.workgroup_id), (workgroup_size * _GLF_struct_replacement_19.workgroup_id))) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-643.669 * (- -6.8)))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_23(uvec3(1u), ivec4(1), _GLF_struct_20(mat2x3(1.0), bvec4(true)), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_6._f1._f5.subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + _GLF_struct_replacement_6._f1._f5.subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + _GLF_struct_replacement_6._f1._f5.subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + _GLF_struct_replacement_6._f1._f5.subgroup_id * subgroup_size + subgroup_local_id)), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9321.2311)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))), _GLF_struct_21(mat2(1.0), true, ivec2(1), uvec4(1u), 1u), _GLF_struct_22(mat3x2(1.0), mat4x3(1.0), mat4x2(1.0), 1u, vec3(1.0))), _GLF_struct_26(mat2(1.0), _GLF_struct_24(ivec4(1), vec2(1.0), mat2(1.0)), _GLF_struct_25(true, mat2x3(1.0), ivec3(1), vec4(1.0), mat2(1.0)), bvec2(true)), mat4x3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u))), _GLF_struct_10(_GLF_struct_7(1.0, mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9803.9508)), float(1.0), bool(true))), 1.0)), (float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0))) - 0.0), max(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9803.9508)), float(1.0), bool(true))), 1.0)), (float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0))) - 0.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9803.9508)), float(1.0), bool(true))), 1.0)), (float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0))) - 0.0))))), bvec2(true), uvec3(1u)), uvec4(_GLF_IDENTITY(1u, (1u) - 0u)), _GLF_struct_8(mat4x2(1.0), mat4(1.0), 1.0, mat4(1.0), mat4x3(1.0)), vec4(1.0), bvec4(true), _GLF_struct_9(mat2x3(1.0), uvec3(1u), mat2x4(1.0), mat4x2(1.0)), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false, true)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false, true)), true, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false, true)), true, false)))), true))))))), _GLF_struct_14(_GLF_struct_11(bvec4(true), mat2x4(1.0), mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), ivec4(1), mat2(1.0), mat4(1.0)), mat3x2(1.0), _GLF_struct_12(vec2(1.0), true, vec3(1.0)), _GLF_struct_13(uvec4(1u), mat3x2(1.0)), uvec4(1u), workgroup_base + _GLF_struct_replacement_6._f1._f5.subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, 1 * ((1) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 1, 0)))) * 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(78440) : 1)))) + 0u), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), int(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) * 1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) * 1))), clamp((~ (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (0 | 0) | (_GLF_IDENTITY(1, min(1, 1))))))), (~ (_GLF_IDENTITY(1, (1) * 1))), (~ (_GLF_IDENTITY(1, (1) * 1)))))) | ((~ (_GLF_IDENTITY(1, (1) * 1)))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) * _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(75176))), (0 | 0) + ((1) * _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(75176)))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))) * 1)))) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | 0) * 1), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63961) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63961) : _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), _GLF_IDENTITY((1), ~ (~ ((1)))) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63961) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) ? _GLF_FUZZED(-63961) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63961) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63961) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))))), (1) * 1)) >> 0))))), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) * 1u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) * 1)) >> 0u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) ^ 0u)) << 0u), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-82684) : 1))) ^ (0 | 0))) * 1))), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(18124) : 1)), _GLF_IDENTITY((1) * 1, max((1) * 1, (1) * 1))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_FUZZED(subgroup_size), 0u), (uvec2(_GLF_FUZZED(subgroup_size), 0u)) * (uvec2(1u, 1u) & uvec2(1u, 1u))))) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) * 1)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) * 1)), clamp(~ (_GLF_IDENTITY(1, (1) * 1)), ~ (_GLF_IDENTITY(1, (1) * 1)), ~ (_GLF_IDENTITY(1, (1) * 1)))), ~ (_GLF_IDENTITY(1, (1) * 1)), ~ (_GLF_IDENTITY(1, (1) * 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), max(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, 0 | (1))))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + (1))))))), (1) * 1)), _GLF_IDENTITY(min((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(min((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), (min((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)))) | (min((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)))))) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) >> 0u)) << 0u), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, 0 | ((1) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ~ (~ ((1) * 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) >> 0u)) << 0u), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), subgroup_local_id + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) + 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))), subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)))))))) % subgroup_size)), mat2x3(1.0), mat2(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), false)))), bvec2(bvec2(bvec2(false, true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), abs(1.0), 0.0, log(1.0)), _GLF_IDENTITY(vec4(mat2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), abs(1.0), 0.0, log(1.0)))), max(vec4(mat2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), abs(1.0), 0.0, log(1.0)))), vec4(mat2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat3(0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), abs(1.0), 0.0, log(1.0))))))))) > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[_GLF_struct_replacement_27._f0.virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-4940.0073, -39.97, -4303.5669, 981.765, -341.206, 381.274)) : mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-4940.0073, -39.97, -4303.5669, 981.765, -341.206, 381.274)) : mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0))))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-4940.0073, -39.97, -4303.5669, 981.765, -341.206, 381.274)) : mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.2) : 0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(-4940.0073, -39.97, -4303.5669, 981.765, -341.206, 381.274)) : mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED((34.68 + 7840.2585)), (injectionSwitch)[1]), bvec2(false, true)))))[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(vec2(-47.39, 8.7).x)), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0))))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch))))))) / vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 0.0)))))))) / vec2(1.0, 1.0))).y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)))))))) / vec2(1.0, 1.0))).y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 689.207))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))) / vec2(1.0, 1.0))).y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_15._f2.next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
