#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2x4 _f0;
 vec2 _f1;
 mat4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 _GLF_struct_7 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 bvec3 _f1;
 uvec2 _f2;
 bvec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 ivec4 _f1;
 mat4 _f2;
 mat4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 uvec2 _f1;
 bvec2 _f2;
 mat2x4 _f3;
 mat4 _f4;
 vec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat4x3 _f1;
 bool _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 bool _f0;
 ivec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 _GLF_struct_1 _f2;
 uvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 _GLF_struct_2 _f1;
 ivec2 _f2;
 uint num_workgroup;
 bvec3 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_8 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(vec3(1.0), _GLF_struct_2(_GLF_struct_0(true, ivec3(1), ivec4(1)), uvec3(1u), _GLF_struct_1(mat3x2(1.0)), uvec3(1u), uvec4(1u)), ivec2(1), gl_NumWorkGroups.x, bvec3(true), _GLF_struct_6(bvec2(true), mat4x3(1.0), true, _GLF_struct_3(mat3x4(1.0), uvec2(1u), bvec2(true), mat2x4(1.0), mat4(1.0), vec2(1.0), vec2(1.0)), _GLF_struct_4(ivec2(1), ivec4(1), mat4(1.0), mat4(1.0), mat4x3(1.0)), _GLF_struct_5(mat4(1.0), bvec3(true), uvec2(1u), bvec4(true), mat4(1.0)), vec4(1.0)), _GLF_struct_8(vec3(1.0), _GLF_struct_7(mat2x4(1.0), vec2(1.0), mat4(1.0), bvec4(true)), bvec4(true), mat3x4(1.0)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y;
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * subgroup_size + ((GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y + 1) % subgroup_size);
 buf[GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
