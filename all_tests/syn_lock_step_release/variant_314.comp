#version 460
struct _GLF_struct_2 {
 mat4x2 _f0;
 mat3 _f1;
 uvec3 _f2;
 ivec4 _f3;
 uvec4 _f4;
 mat3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_4 {
 uint next_virtual_gid;
 int _f0;
 _GLF_struct_3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uint subgroup_id;
 int _f1;
} ;

struct _GLF_struct_0 {
 uint subgroup_local_id;
 ivec4 _f0;
 vec2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec2(1u), gl_SubgroupID, 1);
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupInvocationID, ivec4(1), vec2(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_1.subgroup_id * subgroup_size + _GLF_struct_replacement_0.subgroup_local_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(workgroup_base + _GLF_struct_replacement_1.subgroup_id * subgroup_size + ((_GLF_struct_replacement_0.subgroup_local_id + 1) % subgroup_size), 1, _GLF_struct_3(mat4x3(1.0), _GLF_struct_2(mat4x2(1.0), mat3(1.0), uvec3(1u), ivec4(1), uvec4(1u), mat3(1.0), uvec4(1u))), bvec2(true));
 buf[virtual_gid] = 1;
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(2), 4, 64, 4);
}
