#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenum_workgroupvirtual_gid;
 uvec4 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenum_workgroupvirtual_gid.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy = GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenum_workgroupvirtual_gid.xy;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))), bool(bvec4(! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))), true, true, false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(15.47)), bool(false)))), float(_GLF_FUZZED(3.9)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(491.996))), 0.0, sqrt(0.0))), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0)))))), injectionSwitch), mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(15.47)), bool(false)))), float(_GLF_FUZZED(3.9)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(491.996))), 0.0, sqrt(0.0))), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0)))))), injectionSwitch)))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenum_workgroupvirtual_gid.z = num_workgroup;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-915.555)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))), true && (! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))), false), false)))), false, true)))), false, false)))), (bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (~ (gl_WorkGroupSize))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))) && true))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (false))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.y = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7888.9018)), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y)))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.033), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[1], float(float((injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))))])))), float(_GLF_FUZZED((9665.6304))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(_GLF_FUZZED(1385.6496), _GLF_FUZZED(-8.5)), bvec2(false, false))).y)))))))), true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, true))), (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) || false)) || false), ! (_GLF_IDENTITY(! ((bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((bool(bvec2(false, true)))), bool(bvec4(! ((bool(bvec2(false, true)))), true, true, true))), true, false, false)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(! ((bool(bvec2(false, true)))), bool(bvec4(! ((bool(bvec2(false, true)))), true, true, true))), true, false, false))), (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(! ((bool(bvec2(false, true)))), bool(bvec4(! ((bool(bvec2(false, true)))), true, true, true))), true, false, false))), false || (true && (bool(bvec4(_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))), bool(bvec4(! ((bool(bvec2(false, true)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), true))), true, false, false)))))) && true)))))))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4220.8646) : injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))), false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), abs(1.0), 0.0, length(0.0), 1.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.y * workgroup_id, min(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.y * workgroup_id, GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.y * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) + log(vec2(1.0, 1.0))).y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(abs(0.0), 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) * 1u)) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) + subgroup_id * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))))) * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))) + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, (GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z) << 0u) + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uint(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uint(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)), (_GLF_FUZZED(workgroup_size)) | (_GLF_FUZZED(workgroup_size))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenum_workgroupvirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.w = GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenum_workgroupvirtual_gid.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(7034.7115) : _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, abs(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), float(mat3x4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) - 0.0), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, abs(1.0))))))), (false ? _GLF_FUZZED((injectionSwitch + _GLF_IDENTITY(_GLF_IDENTITY(vec2(-0.0, -80.62), vec2(mat2x3(_GLF_IDENTITY(vec2(-0.0, -80.62), min(_GLF_IDENTITY(vec2(-0.0, -80.62), max(vec2(-0.0, -80.62), vec2(-0.0, -80.62))), _GLF_IDENTITY(vec2(-0.0, -80.62), mix(vec2((vec2(-0.0, -80.62))[0], (vec2(-0.0, -80.62))[1]), vec2(_GLF_FUZZED(59.65), _GLF_FUZZED(8134.9324)), bvec2(false, false))))), 1.0, sin(0.0), 1.0, 1.0))), min(vec2(-0.0, -80.62), vec2(-0.0, -80.62))))) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), float(mat2x3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, sqrt(round(length(normalize(1.0))))))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0)))), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, abs(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-87.32) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), 0.0, 1.0, 1.0, abs(1.0))))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, max(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, clamp(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid)))).w, 0u + (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, max(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, clamp(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid, GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid)))).w));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(20.82), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-42.72)), bvec2(true, false))).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))))) - 0.0)))))), exp(0.0), 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), true, false))), false, true))))))))))))))) || false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3.2)), vec2(_GLF_FUZZED(9268.7307), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, uint(uvec2(workgroup_base + subgroup_id * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, max(workgroup_base + subgroup_id * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, workgroup_base + subgroup_id * GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z)), workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z), (true ? uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z) : _GLF_FUZZED(virtual_gid)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z), (true ? uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z) : _GLF_FUZZED(virtual_gid)))), max(uint(_GLF_IDENTITY(uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z), (true ? uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z) : _GLF_FUZZED(virtual_gid)))), uint(_GLF_IDENTITY(uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z), (true ? uint(GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z) : _GLF_FUZZED(virtual_gid))))))) << 0u)))) + ((subgroup_local_id + 1) % GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.z);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.x] = 1, (_GLF_IDENTITY(1u ^ 1u, (_GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))) / 1u)) | (_GLF_IDENTITY(buf[GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.x] = 1, 0u | (buf[GLF_merged3_0_2_50_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizesubgroup_sizevirtual_gid.xy.x] = 1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)) / uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(84.16))))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (next_virtual_gid) | (next_virtual_gid))], uint(2), 4, 64, 4);
}
