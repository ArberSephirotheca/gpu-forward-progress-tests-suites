#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 uint workgroup_size;
 ivec4 _f0;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 _GLF_struct_16 _f1;
 mat3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 vec4 _f1;
 uvec2 _f2;
 vec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 ivec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 bool _f1;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 float _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 uint _f1;
 bvec2 _f2;
 vec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 mat2 _f3;
 float _f4;
 mat4 _f5;
} ;

struct _GLF_struct_11 {
 float _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_11 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_17 _f3;
 mat2 _f4;
 vec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 vec4 _f1;
 mat2x4 _f2;
 ivec3 _f3;
 vec2 _f4;
 bvec3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat2x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_3 {
 bool _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 uvec2 _f1;
 bvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch))) - vec2(0.0, 0.0) : _GLF_FUZZED(vec2(5.5, 74.28)))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-31.89, 59.81)))), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0)), max(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0))))) - tan(vec2(0.0, 0.0)))))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(7055.2364), _GLF_FUZZED(-93.71)), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false)))))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), (true ? min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)))) - tan(vec2(0.0, 0.0))), injectionSwitch)), injectionSwitch)), injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0))))))).y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(mat4x3(1.0), mat3(1.0)), _GLF_struct_1(bvec3(true), uvec2(1u), bvec3(true), true)), _GLF_struct_6(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_struct_3(true, bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), _GLF_struct_4(uvec2(1u), mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(-95.94)))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat4(mat3x4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-42.31), (true ? 1.0 : _GLF_FUZZED(-42.31)) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (float(_GLF_FUZZED(float(true)))) * 1.0), float(injectionSwitch.y), bool(true)))))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8335.3571) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(mat3x4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(23.75)), bool(false))))), float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(23.75, (false ? _GLF_FUZZED(6949.3297) : 23.75)))), bool(false))))), cos(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7076.1818)), bool(false))), 0.0))), float(_GLF_FUZZED(-76.81)), bool(false))), 0.0))), max(1.0, 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(8335.3571) : 0.0, clamp(false ? _GLF_FUZZED(8335.3571) : 0.0, false ? _GLF_FUZZED(8335.3571) : 0.0, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false))) ? _GLF_FUZZED(8335.3571) : 0.0))), mix(float(_GLF_FUZZED(vec2(2.4, -879.182).t)), float((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(8335.3571), clamp(_GLF_FUZZED(8335.3571), _GLF_IDENTITY(_GLF_FUZZED(8335.3571), _GLF_IDENTITY((_GLF_FUZZED(8335.3571)) / 1.0, min((_GLF_FUZZED(8335.3571)) / 1.0, (_GLF_FUZZED(8335.3571)) / 1.0))), _GLF_FUZZED(8335.3571))) : 0.0, _GLF_IDENTITY(clamp(false ? _GLF_FUZZED(8335.3571) : 0.0, false ? _GLF_FUZZED(8335.3571) : 0.0, false ? _GLF_FUZZED(8335.3571) : 0.0), float(float(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(8335.3571) : 0.0, false ? _GLF_FUZZED(8335.3571) : 0.0, false ? _GLF_FUZZED(8335.3571) : 0.0), 0.0 + (clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(8335.3571) : 0.0, mix(float(false ? _GLF_FUZZED(8335.3571) : 0.0), float(_GLF_FUZZED(7.9)), bool(false))), false ? _GLF_FUZZED(8335.3571) : 0.0, false ? _GLF_FUZZED(8335.3571) : 0.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), transpose(transpose(mat4(mat3x4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), _GLF_IDENTITY((float(true)) * exp(0.0), min((float(true)) * exp(0.0), (float(true)) * exp(0.0)))))), float(injectionSwitch.y), bool(true)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(8335.3571) : 0.0, _GLF_IDENTITY(float(mat3(false ? _GLF_FUZZED(8335.3571) : 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat2x4(float(mat3(false ? _GLF_FUZZED(8335.3571) : 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, exp(0.0)), (true ? mat2x4(float(mat3(false ? _GLF_FUZZED(8335.3571) : 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat2x4(3.4, 1.9, 3148.0886, -8.0, 2330.3580, -979.295, -491.276, 5.3))))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0)))))))), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(mat4(mat3x4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(502.570)) : 1.0)), injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))), ivec3(_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_struct_5(bvec4(true), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.0) : 1.0)))), mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(702.829, float(vec4(702.829, 0.0, 1.0, 1.0))))), bool(false)))), ivec3(1), vec2(1.0), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))) || false)), true, false))))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))) || false)), true, false))))) || false, true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))) && true))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (true))))) || false)), true, false))))) || false))))), uvec2(1u)), mat2(1.0)), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false)))))), false, false, false)))) && true, ((_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool((_GLF_DEAD(false)))))), false, false, false)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)), true, false, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)))))) || false) || false))) && true)) || false), _GLF_IDENTITY(true, (true) || false), false, true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_DEAD(false)))))), (bool(bool((_GLF_DEAD(false))))) || false)) || false)))), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false)))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false)))))), false, false, false)))) && true, ((_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool((_GLF_DEAD(false)))))), false, false, false)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)), true, false, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)))))) || false) || false))) && true)) || false), _GLF_IDENTITY(true, (true) || false), false, true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_DEAD(false)))))), (bool(bool((_GLF_DEAD(false))))) || false)) || false)))), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_11(1.0, _GLF_struct_8(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(-8436.1292), _GLF_FUZZED((+ -60.10))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mat2(-4.4, -7.0, 2191.4429, _GLF_IDENTITY(2.4, (2.4) - 0.0))) : mat2(1.0)))), mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mat2(-4.4, -7.0, 2191.4429, _GLF_IDENTITY(2.4, (2.4) - 0.0))) : mat2(1.0))))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(109.123)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mat2(-4.4, -7.0, 2191.4429, _GLF_IDENTITY(2.4, (2.4) - 0.0))) : mat2(1.0)))), mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mat2(-4.4, -7.0, 2191.4429, _GLF_IDENTITY(2.4, (2.4) - 0.0))) : mat2(1.0))))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(109.123)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)))), transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mat2(-4.4, -7.0, 2191.4429, _GLF_IDENTITY(2.4, (2.4) - 0.0))) : mat2(1.0)))), mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mat2(-4.4, -7.0, 2191.4429, _GLF_IDENTITY(2.4, (2.4) - 0.0))) : mat2(1.0))))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(109.123)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), 1.0, mat4(1.0)), _GLF_struct_9(mat4(1.0), 1u, bvec2(true), vec2(1.0), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), ~ (~ (min(1u, 1u)))))), _GLF_struct_10(mat3(1.0), mat4x3(1.0), mat2x3(1.0), 1.0, bvec4(true))), _GLF_struct_13(_GLF_struct_12(mat4(1.0), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | 0))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), sin(0.0), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (mat4(1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), sin(0.0), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) * mat4(1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.4) : 1.0)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), _GLF_struct_15(_GLF_struct_14(mat4(1.0), vec4(1.0), uvec2(1u), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(1.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(1.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(1.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(1.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))))), mat3x2(1.0))), _GLF_struct_17(bvec4(true), _GLF_struct_16(gl_WorkGroupSize.x, ivec4(1)), mat3(1.0), mat4x3(1.0)), mat2(1.0), vec2(1.0), mat4x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_18._f3._f1.workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u), clamp(uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u), uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u), uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u)), (_GLF_IDENTITY((uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u), ((uvec3(_GLF_struct_replacement_18._f3._f1.workgroup_size * workgroup_id, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (0u) << 0u), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 1u, _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 1u)))))) >> 0u))) | uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 8.4))), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)), min(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)), min(true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)), mix(vec2(_GLF_FUZZED(0.9), (true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)))[1]), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)))[0], _GLF_FUZZED(8.5)), bvec2(true, false))))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)), vec2(mat3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-3520.0742, -36.46))) * mat2(1.0)), 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))))))), injectionSwitch)).y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))))), true && (((_GLF_IDENTITY(true, ! (! (true))))))) && true) || false) || false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bool(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true))))), (_GLF_IDENTITY(true, ! (! (true)))) || false)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))))), true && (((_GLF_IDENTITY(true, ! (! (true))))))) && true) || false) || false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))), (_GLF_IDENTITY(true, ! (! (true)))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))))), (_GLF_IDENTITY(true, ! (! (true)))) || false)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))), (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))), (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))))), true && (((_GLF_IDENTITY(true, ! (! (true))))))) && true) || false) || false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bool(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))))), true && (((_GLF_IDENTITY(true, ! (! (true))))))) && true) || false) || false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), false || ((! (_GLF_IDENTITY(false, false || (false))))))), bool(bvec4((_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), false || ((! (_GLF_IDENTITY(false, false || (false))))))), true, false, true))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) && (false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u & 7292u), 1u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_struct_replacement_7.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(_GLF_IDENTITY(sin(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))), vec2(mat3x2(sin(injectionSwitch), 0.0, 0.0, 0.0, 0.0)))) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch), ((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(43.80) : 0.0)))), 0.0)), (false ? _GLF_FUZZED(sin(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[0], _GLF_FUZZED(vec2(0.0, 21.43).s)), vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1], max(_GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch), clamp((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch), (false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch), (false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))))[1], (((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]) + tan(0.0)), ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]))), bvec2(false, true)), vec2(mat2(mix(vec2(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[0], _GLF_FUZZED(vec2(0.0, 21.43).s)), vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(sin(injectionSwitch)), min(_GLF_FUZZED(sin(injectionSwitch)), _GLF_FUZZED(sin(injectionSwitch)))) : injectionSwitch))[1], max(_GLF_IDENTITY(((false ? _GLF_FUZZED(sin(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : injectionSwitch))[1], (((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]) + tan(0.0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)))))[1]))), bvec2(false, true)), 1.0, 1.0))), max(mix(vec2(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[0], _GLF_FUZZED(vec2(0.0, 21.43).s)), vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1], max(_GLF_IDENTITY(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1], (((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]) + tan(0.0)), ((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]))), bvec2(false, true)), mix(vec2(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[0], _GLF_FUZZED(vec2(0.0, 21.43).s)), vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(sin(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(sin(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : injectionSwitch))[1], ((false ? _GLF_FUZZED(sin(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : injectionSwitch))[1])), max(_GLF_IDENTITY(((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1], (((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]) + tan(0.0)), ((false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch))[1]))), bvec2(false, true)))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, abs(0.0), 1.0), (mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-58.55, _GLF_IDENTITY(float(vec2(-58.55, 1.0)), 0.0 + (_GLF_IDENTITY(float(vec2(-58.55, 1.0)), float(mat4(float(vec2(-58.55, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), vec2(_GLF_FUZZED((- 50.89)), ((injectionSwitch))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), (false ? _GLF_FUZZED(vec2(-73.67, -81.15)) : mat2(1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, clamp((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_7.subgroup_local_id + 1), (true ? _GLF_IDENTITY((_GLF_struct_replacement_7.subgroup_local_id + 1), 0u | ((_GLF_struct_replacement_7.subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_base))) % subgroup_size, (_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size)), 0u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, clamp((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, (_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, (_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size)), 0u, 0u)))))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size, ((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size) >> 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))), true, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)), true))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(2))), uint(2), _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec2(uint(2), (1u ^ 0u)), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(uint(2), (1u ^ 0u))), (_GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(uint(2), (1u ^ 0u))), min(uvec2(0u, 0u) | (uvec2(uint(2), (1u ^ 0u))), uvec2(0u, 0u) | (uvec2(uint(2), (1u ^ 0u)))))) | (uvec2(0u, 0u) | (uvec2(uint(2), (1u ^ 0u)))))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
