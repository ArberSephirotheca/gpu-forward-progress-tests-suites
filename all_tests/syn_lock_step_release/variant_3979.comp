#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, bool(bool(false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))), true)))), true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, bool(bool(false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))), true)))), true)))))))) || false)))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))), int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  {
   for(int _injected_loop_counter = (1 | ((0 & 82846) ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, injectionSwitch)))))))).y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), true, false, false)))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-548.735), _GLF_FUZZED(-6.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bool((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(783.316), min(_GLF_FUZZED(783.316), _GLF_FUZZED(_GLF_IDENTITY(783.316, clamp(_GLF_IDENTITY(783.316, min(783.316, 783.316)), 783.316, 783.316))))), _GLF_FUZZED(-4917.0536)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.0)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
     return;
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(0, (0) * 1) << _GLF_IDENTITY(int(8), int(8))) & 42118); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false, false))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))))))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-297))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1)) + 0))
      {
       return;
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0), 0.0, 0.0, tan(0.0), 1.0, 1.0), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0), 0.0, 0.0, tan(0.0), 1.0, 1.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0), 0.0, 0.0, tan(0.0), 1.0, 1.0), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0), 0.0, 0.0, tan(0.0), 1.0, 1.0)) * mat3(1.0)))) - 0.0)) > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) - (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) + 0))) != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-786.090) : 1.0, max(_GLF_IDENTITY(false ? _GLF_FUZZED(-786.090) : 1.0, float(mat3(false ? _GLF_FUZZED(-786.090) : 1.0, cos(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))), false ? _GLF_FUZZED(-786.090) : 1.0)))), 1.0)).x > injectionSwitch.y)))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     break;
                    }
                   continue;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, tan(0.0), 1.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0, exp(0.0), 1.0, cos(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)), tan(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)))), 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat3(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0))))))), injectionSwitch[1])).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, tan(0.0), 1.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0, exp(0.0), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)), (_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)), (_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)), (true ? determinant(mat4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(-1.3)) : 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)) : _GLF_FUZZED(1289.6097)))) * 1.0)) - 0.0), _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 1.0, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat3(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0))))))), injectionSwitch[1])).y, _GLF_IDENTITY(true, true && (true)), true, true)))))));
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              break;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, 0.0 + (_GLF_IDENTITY(-71.85, clamp(_GLF_IDENTITY(-71.85, mix(float(-71.85), float(_GLF_FUZZED(745.164)), bool(false))), -71.85, -71.85)))), 4.6))) * vec2(1.0, 1.0)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)) - vec2(0.0, 0.0)), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) + vec2(0.0, 0.0))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, mix(float(_GLF_FUZZED(-575.709)), float(_GLF_IDENTITY(-71.85, clamp(-71.85, -71.85, -71.85))), bool(true))), 4.6)))) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))) - vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(8055.4073), _GLF_FUZZED(-906.053)), vec2((_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), max(vec2(-71.85, 4.6), vec2(-71.85, 4.6)))), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, _GLF_IDENTITY(4.6, float(float(4.6)))), _GLF_IDENTITY(vec2(mat2x4(vec2(-71.85, _GLF_IDENTITY(4.6, float(float(4.6)))), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0)), mat2(1.0) * (vec2(mat2x4(vec2(-71.85, _GLF_IDENTITY(4.6, float(float(4.6)))), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0)))))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), clamp(vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, float(vec4(-71.85, 1.0, 1.0, 0.0)))) / 1.0), 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-793.022)), vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, float(vec4(-71.85, 1.0, 1.0, 0.0)))) / 1.0), 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch))[0], ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, float(vec4(-71.85, 1.0, 1.0, 0.0)))) / 1.0), 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), max((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch))))), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))))))) : injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 0.0)))[1], float(vec4((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (true ? _GLF_FUZZED(vec2(-71.85, 4.6)) : _GLF_FUZZED(max(injectionSwitch, vec3(5722.9837, 9851.3489, -9.0).yz)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))))))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (true ? _GLF_FUZZED(vec2(-71.85, 4.6)) : _GLF_FUZZED(max(injectionSwitch, vec3(5722.9837, 9851.3489, -9.0).yz)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))))))) : injectionSwitch)) - tan(vec2(0.0, 0.0))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)) - vec2(0.0, 0.0)))[1], 0.0, 1.0, 0.0)))), bvec2(true, true))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(sqrt(1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, 0.0 + (_GLF_IDENTITY(-71.85, clamp(_GLF_IDENTITY(-71.85, mix(float(-71.85), float(_GLF_FUZZED(745.164)), bool(false))), -71.85, -71.85)))), 4.6))) * vec2(1.0, 1.0)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)) - vec2(0.0, 0.0)), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) + vec2(0.0, 0.0))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, mix(float(_GLF_FUZZED(-575.709)), float(_GLF_IDENTITY(-71.85, clamp(-71.85, -71.85, -71.85))), bool(true))), 4.6)))) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))) - vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(8055.4073), _GLF_FUZZED(-906.053)), vec2((_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), max(vec2(-71.85, 4.6), vec2(-71.85, 4.6)))), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, _GLF_IDENTITY(4.6, float(float(4.6)))), _GLF_IDENTITY(vec2(mat2x4(vec2(-71.85, _GLF_IDENTITY(4.6, float(float(4.6)))), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0)), mat2(1.0) * (vec2(mat2x4(vec2(-71.85, _GLF_IDENTITY(4.6, float(float(4.6)))), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0)))))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), clamp(vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, float(vec4(-71.85, 1.0, 1.0, 0.0)))) / 1.0), 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-793.022)), vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, float(vec4(-71.85, 1.0, 1.0, 0.0)))) / 1.0), 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch))[0], ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, float(vec4(-71.85, 1.0, 1.0, 0.0)))) / 1.0), 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), max((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch))))), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))))))) : injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 0.0)))[1], float(vec4((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (true ? _GLF_FUZZED(vec2(-71.85, 4.6)) : _GLF_FUZZED(max(injectionSwitch, vec3(5722.9837, 9851.3489, -9.0).yz)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))))))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (true ? _GLF_FUZZED(vec2(-71.85, 4.6)) : _GLF_FUZZED(max(injectionSwitch, vec3(5722.9837, 9851.3489, -9.0).yz)))), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)))), _GLF_FUZZED(vec2(-71.85, 4.6)))))))) : injectionSwitch)) - tan(vec2(0.0, 0.0))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(vec2(-71.85, 4.6)))) : injectionSwitch)) - vec2(0.0, 0.0)))[1], 0.0, 1.0, 0.0)))), bvec2(true, true))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(sqrt(1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))))) * mat2(1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch, clamp(false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch))), mat2(1.0) * (mat2(1.0) * (false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch))))))), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, max(4.6, _GLF_IDENTITY(4.6, max(4.6, 4.6)))))) : injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) / vec2(1.0, 1.0), max((vec2(0.0, 0.0)) / vec2(1.0, 1.0), _GLF_IDENTITY((vec2(0.0, 0.0)) / vec2(1.0, 1.0), mat2(1.0) * ((vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))))) / vec2(1.0, 1.0), (true ? (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(13.39, -886.737)))), vec2(1.0, 1.0))) : _GLF_FUZZED(smoothstep(-4.6, 6603.8588, vec2(-2487.0167, -3.7))))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, mix(float(_GLF_FUZZED(-920.213)), float(-71.85), bool(true))), 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-71.85, (_GLF_IDENTITY(-71.85, max(-71.85, -71.85))) / abs(determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0), (true ? (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0) : _GLF_FUZZED(smoothstep(-4.6, 6603.8588, vec2(-2487.0167, -3.7))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0), (true ? (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0) : _GLF_FUZZED(smoothstep(-4.6, 6603.8588, vec2(-2487.0167, -3.7))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0), (true ? (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0) : _GLF_FUZZED(smoothstep(-4.6, 6603.8588, vec2(-2487.0167, -3.7))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch, mix(vec2(_GLF_FUZZED(433.907), _GLF_FUZZED(5.1)), vec2((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) / vec2(1.0, 1.0), (_GLF_IDENTITY((vec2(0.0, 0.0)) / vec2(1.0, 1.0), mat2(1.0) * ((vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0), (_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0) : _GLF_FUZZED(smoothstep(-4.6, 6603.8588, vec2(-2487.0167, -3.7))))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0), (true ? (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0) : _GLF_FUZZED(smoothstep(-4.6, 6603.8588, vec2(-2487.0167, -3.7))))))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), max(vec2(-71.85, 4.6), _GLF_IDENTITY(vec2(-71.85, 4.6), mat2(1.0) * (vec2(-71.85, 4.6)))))) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), vec2(mat4x2(_GLF_FUZZED(vec2(-71.85, 4.6)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) : injectionSwitch), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-71.85, float(vec2(_GLF_IDENTITY(-71.85, (-71.85) * 1.0), 0.0))), 4.6), (vec2(-71.85, 4.6)) * _GLF_IDENTITY(abs(vec2(1.0, 1.0)), (abs(vec2(1.0, 1.0))) - vec2(0.0, 0.0)))) : injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(_GLF_IDENTITY(4.6, max(4.6, 4.6))), float(_GLF_IDENTITY(_GLF_FUZZED(-3160.2887), 0.0 + (_GLF_FUZZED(-3160.2887)))), bool(false))))) : injectionSwitch, vec2(_GLF_IDENTITY(mat3(false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(_GLF_IDENTITY(4.6, max(4.6, 4.6))), float(_GLF_IDENTITY(_GLF_FUZZED(-3160.2887), 0.0 + (_GLF_FUZZED(-3160.2887)))), bool(false))))) : injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, sin(0.0))), dot(vec2(abs(0.0), 1.0), vec2(1.0, sin(0.0)))), 0.0, sqrt(1.0), 0.0), (mat3(false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(_GLF_IDENTITY(4.6, max(4.6, 4.6))), float(_GLF_IDENTITY(_GLF_FUZZED(-3160.2887), 0.0 + (_GLF_FUZZED(-3160.2887)))), bool(false))))) : injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, sin(0.0))), dot(vec2(abs(0.0), 1.0), vec2(1.0, sin(0.0)))), 0.0, sqrt(1.0), 0.0)) * mat3(1.0)))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), (false ? _GLF_FUZZED(exp2(4.4)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), _GLF_IDENTITY((vec2(-71.85, 4.6)), ((vec2(-71.85, 4.6))) * vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), clamp(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-98.41)), vec2((((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[0], (((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)))[1]), bvec2(true, true))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch)) / vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y))))))) / 1.0)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (true ? _GLF_FUZZED(vec2(-71.85, 4.6)) : _GLF_FUZZED(vec2(-3638.4353, -813.762))))))) - log(vec2(1.0, 1.0))) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat3(vec2(0.0, 0.0), 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0)), max(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0))))), 0.0, 0.0, 0.0), (mat3(vec2(0.0, 0.0), 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0)), max(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), abs(0.0), 1.0))))), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, 4.6)) : injectionSwitch), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.85, 4.6), (vec2(-71.85, 4.6)) * abs(vec2(1.0, 1.0)))) : injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-71.85, _GLF_IDENTITY(4.6, mix(float(4.6), float(_GLF_FUZZED(-3160.2887)), bool(false))))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), clamp(_GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_FUZZED(vec2(-71.85, 4.6)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-71.85, 4.6)), (true ? _GLF_FUZZED(vec2(-71.85, 4.6)) : _GLF_FUZZED(vec2(-3638.4353, -813.762))))))) - log(vec2(1.0, 1.0))) : injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))) * mat2(1.0))).y) / 1.0)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                  {
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, true))))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
              return;
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(float(-57179))), bool(false))) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) * 1)) | (int(5))))), clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) * 1)) | (int(5))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), min(int(5), int(5)))) >> 0), (_GLF_IDENTITY(int(5), (int(5)) * 1)) | (int(5))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) * 1)) | (_GLF_IDENTITY(int(5), (int(5)) >> 0))))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) * 1)) | (int(5)))))) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))))) >> _GLF_IDENTITY(int(6), int(6))) * (5))), (int(_GLF_IDENTITY(5, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))))) >> _GLF_IDENTITY(int(6), int(6))) * (5)))) / 1), int(5)))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((~ (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u), ((~ (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) | (workgroup_id));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 1 * (0))), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-68992) : int(5))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((0 & -13904) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-818.682, 3283.1957)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)) || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)) || (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(737.501), _GLF_FUZZED(_GLF_IDENTITY(3.9, 1.0 * (3.9)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), bvec2(true, true))).y))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) >> 0))) & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << 0)))) ^ 0)), ((1 & 1)) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     else
      {
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u ^ 0u) | (subgroup_id), (true ? _GLF_IDENTITY((0u ^ 0u) | (subgroup_id), clamp((0u ^ 0u) | (subgroup_id), _GLF_IDENTITY((0u ^ 0u) | (subgroup_id), max((0u ^ 0u) | (subgroup_id), (0u ^ 0u) | (subgroup_id))), _GLF_IDENTITY((0u ^ 0u) | (subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : (0u ^ 0u) | (subgroup_id))))) : _GLF_FUZZED(subgroup_size))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(6u)))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), ((subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) - 0u)) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(packSnorm2x16(vec2(-17.04, 0.7)), uint(uvec4(_GLF_IDENTITY(packSnorm2x16(vec2(-17.04, 0.7)), _GLF_IDENTITY((packSnorm2x16(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7)), _GLF_IDENTITY(mat2(1.0) * ((vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7))), (true ? mat2(1.0) * ((vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7))) : _GLF_FUZZED(vec2(3.9, 6726.0295)))))[0], float(mat4((vec2(_GLF_IDENTITY(-17.04, min(_GLF_IDENTITY(-17.04, min(_GLF_IDENTITY(-17.04, mix(float(_GLF_FUZZED(9.2)), float(-17.04), bool(true))), -17.04)), -17.04)), 0.7))[0], cos(0.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.0)), float(float(float(vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.0)))))), 0.7))[1]), vec2(_GLF_FUZZED(0.8), _GLF_IDENTITY(_GLF_FUZZED(-325.449), min(_GLF_FUZZED(-325.449), _GLF_FUZZED(-325.449)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ~ (~ ((packSnorm2x16(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7))[0], float(mat4((vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), 0.7))[0], cos(0.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0))), (vec2(_GLF_IDENTITY(-17.04, min(-17.04, -17.04)), _GLF_IDENTITY(0.7, clamp(_GLF_IDENTITY(0.7, _GLF_IDENTITY(clamp(0.7, 0.7, 0.7), (_GLF_IDENTITY(clamp(0.7, 0.7, 0.7), (true ? clamp(0.7, 0.7, 0.7) : _GLF_FUZZED(7.9)))) + 0.0)), 0.7, 0.7))))[1]), vec2(_GLF_FUZZED(0.8), _GLF_FUZZED(-325.449)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))))))) / 1u), 1u, ((_GLF_IDENTITY(0u, 1u * (0u)) ^ 0u) << _GLF_IDENTITY(uint(1u), uint(1u))), 1u)))) : _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u));
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      break;
     break;
     if(_GLF_DEAD(false))
      continue;
    }
   buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(13952) : (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))))) : _GLF_FUZZED(38208))), (~ (1)) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)) >> 0), min(~ (1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(13952) : (1))) : _GLF_FUZZED(38208))), (~ (1)) << 0)))) ^ _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-61008)))))))), _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), 0 | (min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-27125) : 1)), 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), 0 | _GLF_IDENTITY((min(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY((min(1, _GLF_IDENTITY(1, (1) >> 0))), (true ? (min(1, _GLF_IDENTITY(1, (1) >> 0))) : _GLF_FUZZED(71023)))) << 0)), ~ (~ (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) ^ 0)), 0 | (min(1, 1)))))))))) | (_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), (min(1, 1)) - 0), (false ? _GLF_FUZZED(-54388) : min(1, 1))), min(1, 1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1))), _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-54388) : min(1, 1)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-54388) : min(1, 1)), ((false ? _GLF_FUZZED(-54388) : min(1, 1))) | ((false ? _GLF_FUZZED(-54388) : min(1, 1)))), (false ? _GLF_FUZZED(-54388) : min(1, 1))))), min(1, 1))), (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1))), (_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1)))) ^ 0), _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-54388) : min(1, 1))), min(1, 1)))) | (~ (clamp(_GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(0, (0) << 0) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-54388) : min(1, _GLF_IDENTITY(1, (1) * 1)))), min(1, 1))))), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1))), _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-54388) : min(1, 1)), _GLF_IDENTITY(min((false ? _GLF_FUZZED(-54388) : min(1, 1)), (false ? _GLF_FUZZED(-54388) : min(1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (min((false ? _GLF_FUZZED(-54388) : min(1, 1)), (false ? _GLF_FUZZED(-54388) : _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))))))), min(_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), 1))), (~ (clamp(_GLF_IDENTITY(min(1, 1), 0 | (min(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-54388) : min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-54388) : min(1, 1))) : _GLF_FUZZED(-80642))), min(1, 1)))) | (~ (clamp(_GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(0, (0) << 0) | (min(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-54388) : min(1, _GLF_IDENTITY(1, (1) * 1)))), 1 * (_GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-54388) : min(1, _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) >> 0))))))), _GLF_IDENTITY(min(1, 1), min(min(1, _GLF_IDENTITY(1, int(ivec2(1, 1)))), min(1, 1)))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.2)), bool(false)))) * 1.0), 1.0, 1.0, 1.0))))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), clamp(_GLF_IDENTITY(ivec2(2, 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0 | 0)), 0)), ~ (~ ((ivec2(2, 0))))) * ivec2(1, 1)), ivec2(2, 0), ivec2(2, 0)))))), 4, 64, 4);
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
}
