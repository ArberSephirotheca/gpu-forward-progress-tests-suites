#version 460
struct _GLF_struct_18 {
 uvec2 _f0;
 bvec4 _f1;
 vec3 _f2;
 vec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 vec4 _f3;
 _GLF_struct_17 _f4;
 uvec4 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_20 {
 bvec2 _f0;
 uint workgroup_id;
 mat4 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 mat4 _f1;
 uint _f2;
 ivec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 bvec4 _f1;
 uvec4 _f2;
 bvec2 _f3;
 bvec4 _f4;
 mat2x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 vec3 _f1;
 vec4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 bvec3 _f1;
 bvec4 _f2;
 bvec2 _f3;
 bvec4 _f4;
 vec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat3 _f1;
 mat3 _f2;
 mat3x2 _f3;
 ivec3 _f4;
 vec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat4x3 _f1;
 int _f2;
 mat3 _f3;
 mat3x2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 mat2 _f1;
 vec2 _f2;
 uint _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_13 {
 uint subgroup_size;
 mat4x2 _f0;
 bvec3 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_12 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 int _f1;
 ivec2 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat3 _f1;
 bool _f2;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 vec3 _f1;
 mat2x3 _f2;
 _GLF_struct_1 _f3;
 bvec3 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 float _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_0 {
 uint workgroup_base;
 vec3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(mat4x2(1.0), vec3(1.0), mat2x3(1.0), _GLF_struct_1(1.0, mat3(1.0), true), bvec3(true), _GLF_struct_2(mat3x2(1.0), 1, ivec2(1), mat4x3(1.0), bvec2(true), mat3(1.0))), 1.0, gl_SubgroupID);
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(gl_SubgroupSize, mat4x2(1.0), bvec3(true), _GLF_struct_8(_GLF_struct_5(bvec4(true), mat4x3(1.0), 1, mat3(1.0), mat3x2(1.0), mat3x2(1.0)), mat2(1.0), vec2(1.0), 1u, _GLF_struct_6(mat4x3(1.0), mat3(1.0), mat3(1.0), mat3x2(1.0), ivec3(1), vec4(1.0), vec4(1.0)), _GLF_struct_7(ivec2(1), bvec3(true), bvec4(true), bvec2(true), bvec4(true), vec4(1.0), bvec4(true)), bvec4(true)), _GLF_struct_12(_GLF_struct_9(mat2(1.0), ivec3(1)), vec3(1.0), vec4(1.0), _GLF_struct_10(vec3(1.0), bvec4(true), uvec4(1u), bvec2(true), bvec4(true), mat2x3(1.0), mat3x4(1.0)), _GLF_struct_11(uvec2(1u), mat4(1.0), 1u, ivec4(1), mat2(1.0)), vec3(1.0)), bvec3(true));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(bvec2(true), gl_WorkGroupID.x, mat4(1.0), _GLF_struct_19(_GLF_struct_14(vec4(1.0), mat4x3(1.0), mat2x4(1.0)), _GLF_struct_15(mat3x2(1.0)), _GLF_struct_16(ivec2(1)), vec4(1.0), _GLF_struct_17(uvec2(1u), uvec3(1u)), uvec4(1u), _GLF_struct_18(uvec2(1u), bvec4(true), vec3(1.0), vec2(1.0), mat2(1.0))));
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(workgroup_size * _GLF_struct_replacement_20.workgroup_id, vec3(1.0));
 uint virtual_gid = _GLF_struct_replacement_0.workgroup_base + _GLF_struct_replacement_4.subgroup_id * _GLF_struct_replacement_13.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_0.workgroup_base + _GLF_struct_replacement_4.subgroup_id * _GLF_struct_replacement_13.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_13.subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
