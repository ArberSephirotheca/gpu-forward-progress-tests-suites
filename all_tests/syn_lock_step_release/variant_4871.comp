#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 mat2x3 _f0;
 ivec2 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 float _f4;
 mat4x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 uvec3 _f1;
 vec4 _f2;
 vec4 _f3;
 float _f4;
} ;

struct _GLF_struct_20 {
 vec2 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_16 {
 bool _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 uint _f1;
 bvec3 _f2;
 _GLF_struct_16 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
 mat3 _f1;
 float _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_13 {
 int _f0;
 vec2 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 uvec4 _f1;
 bvec3 _f2;
 _GLF_struct_14 _f3;
 bvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 bvec4 _f1;
 uint _f2;
 bvec3 _f3;
 mat4 _f4;
 uint _f5;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 ivec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 mat4 _f3;
 mat3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_12 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_17 _f2;
 uint num_workgroup;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 ivec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 _GLF_struct_5 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat3 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat4x2 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 uvec2 _f3;
 _GLF_struct_7 _f4;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), false), bvec2(bvec3(bvec2(bool(bvec3(false, false, false)), false), false)))))) || (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_12(_GLF_struct_9(ivec3(1), bvec3(true), mat2x4(1.0), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-47.76, -1.2, -462.076, -8.9, -7.9, -4.5, -5.0, -662.111, -12.96, -497.806, -1.4, -1.8, -5605.7227, -468.180, 4010.1620, 7.0)))), mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((mat4(-6887.1665, 8628.0773, -3.2, 622.773, -45.52, 5.7, 8.9, -2925.1329, 310.377, 1.8, 1297.0414, 7.1, 7859.9074, 94.91, 4.8, -3877.6880) + -50.23))))))), uvec2(1u)), _GLF_struct_10(vec2(1.0), mat2x4(1.0), uvec3(1u), ivec2(1), mat4x3(1.0)), _GLF_struct_11(mat4x3(1.0), bvec4(true), 1u, bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat4(1.0), 1u)), _GLF_struct_15(_GLF_struct_13(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(1, (1) + 0))) | (0 | (1))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (_GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0))))))))) | (1)) | (_GLF_IDENTITY(0 | (1), (0 | (1)) | 0)))))) * 1)), int(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (_GLF_IDENTITY(1, (1) | (1)))) | (0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(-5024)))))))))))), vec2(1.0)), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), bvec3(true), _GLF_struct_14(uvec3(1u), mat3(1.0), 1.0, ivec2(1)), bvec4(true), mat4x2(1.0)), _GLF_struct_17(vec3(1.0), 1u, bvec3(true), _GLF_struct_16(true, _GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(568, -77780)) : ivec2(1)))), vec4(1.0)), gl_NumWorkGroups.x, _GLF_struct_20(vec2(1.0), _GLF_struct_18(bvec3(true), uvec3(_GLF_IDENTITY(1u, (1u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))) & 132589u, ~ (~ (0u & 132589u)))))), vec4(1.0), vec4(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(37.40)), bool(false)))), _GLF_struct_19(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.7) : 1.0))), ivec2(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), mat3x2(1.0), ivec4(1), 1.0, mat4x2(1.0), vec3(1.0))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(5.6, -9921.5570) + injectionSwitch)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(mat4x3(1.0), mat4x2(1.0), _GLF_struct_0(mat3x4(1.0))), _GLF_struct_4(_GLF_struct_2(ivec2(1), mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.3)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), ivec4(1), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), ivec2(1)), _GLF_struct_3(1, ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))), vec3(1.0))), _GLF_struct_6(ivec3(1), _GLF_struct_5(mat4x3(1.0)), bvec3(true)), uvec2(1u), _GLF_struct_7(uvec4(1u), ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))), uint(uvec4(1u, 1u, 1u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec2(1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) / uvec2(1u, 1u))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) - 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), clamp(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u))), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec4(uvec3(~ (uvec2(1u)), 0u), 0u)), max(uvec3(uvec4(uvec3(~ (uvec2(1u)), 0u), 0u)), uvec3(uvec4(uvec3(~ (uvec2(1u)), 0u), 0u)))))))), _GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))) * _GLF_IDENTITY(((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))), min(((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))), ((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))))), ((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u)))))))))))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))), uint(uvec4(1u, 1u, 1u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec2(1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) / uvec2(1u, 1u))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) - 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), clamp(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u))), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(~ (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u), (uvec3(~ (uvec2(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec4(uvec3(~ (uvec2(1u)), 0u), 0u)), max(uvec3(uvec4(uvec3(~ (uvec2(1u)), 0u), 0u)), uvec3(uvec4(uvec3(~ (uvec2(1u)), 0u), 0u)))))))), _GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))) * _GLF_IDENTITY(((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))), min(((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))), ((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u))))))))), ((_GLF_IDENTITY(~ (uvec2(1u)), uvec2(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))), (uvec2(1u))))) >> uvec2(0u, 0u)))), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(1u)), 1u, 0u)), _GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u))), ((uvec2(uvec4(~ _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u)), 1u, 0u)))) - uvec2(0u, 0u))))) ^ uvec2(0u, 0u))), 0u), 0u)))))))))))))), 1u)))), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.5)), bvec2(true, false))).x < injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)), true, false, false)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true && (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), bool(false))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))) && true), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))) && true), false, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false))), (injectionSwitch.x > injectionSwitch.y))), true, false), false)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(false || (bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false || (bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (bool(bvec4(false, true, false, false)))) || false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5810.7153) : injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-52.88, 8044.1187, 5.6, -92.13)) : mat2(1.0))) * (mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), max(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6.6 + -6633.2089))), float(1.0), bool(true)))) * (mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x), min(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), max(mat2(1.0) * _GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), (_GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0), mat3(mat4(mat3((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0), mat3(mat4(mat3((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))))))))) - abs(sin(vec2(0.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6.6 + -6633.2089))), float(1.0), bool(true)))) * (mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), max(mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6.6 + -6633.2089))), float(1.0), bool(true)))) * (mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))).x), float(mat2x4(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), max(mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(radians(vec2(6094.2240, -6.2)))))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6.6 + -6633.2089))), float(1.0), bool(true)))) * (mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), (mat3x2(mat2(1.0))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * (mat2(1.0) * (injectionSwitch)))).x), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)))))))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_8.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(160.470) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) | 0)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), clamp(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((37434 + 51110)))), 2, 2))) * 1), 2, 2))), (uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) * 1), 2, 2)))) / 1u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
