#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
 ivec4 _f1;
 _GLF_struct_14 _f2;
 mat4 _f3;
 _GLF_struct_15 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_12 {
 uint subgroup_local_id;
 bvec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
 bvec4 _f1;
 mat3 _f2;
 int _f3;
 mat3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_9 {
 bool _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 ivec3 _f1;
 bvec2 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat4x2 _f1;
 uint _f2;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 vec4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 _GLF_struct_4 _f1;
 mat3x2 _f2;
 bvec3 _f3;
 _GLF_struct_5 _f4;
 mat4x2 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat2 _f1;
 ivec4 _f2;
 vec4 _f3;
 mat2x3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 uint workgroup_size;
 _GLF_struct_7 _f2;
 mat4 _f3;
 bvec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), true)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(478.523)), bool(false))), (injectionSwitch.y) + length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-915.418) : 0.0)))), 0.0, 0.0))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(478.523)), bool(false))), (injectionSwitch.y) + length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-915.418) : 0.0)))), 0.0, 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(478.523)), bool(false))), (injectionSwitch.y) + length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-915.418) : 0.0)))), 0.0, 0.0))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(false))), injectionSwitch.y))) + length(vec3(0.0, 0.0, 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat4x3(1.0), _GLF_struct_13(_GLF_struct_9(true, mat2x4(1.0)), ivec3(1), bvec2(true), _GLF_struct_10(mat4(1.0), mat4x3(1.0)), _GLF_struct_11(mat2x3(1.0), bvec4(true), mat3(1.0), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), min((_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(1, (1) ^ 0)))) : _GLF_FUZZED(36327))) >> 0), mat3(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(4.3)), bool(false))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(119.403)), bool(false))), 1.0), float(mat2x3(max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(119.403)), bool(false))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (false ? _GLF_FUZZED(((97841 >= 15553) ? vec3(-6929.8908, -873.716, -8.9) : vec3(1.3, 66.45, 6.7))) : vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0))), min(1.0, 1.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))) + 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.0, (false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(-4.0, min(-4.0, _GLF_IDENTITY(-4.0, max(-4.0, -4.0)))))))), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(-4.0)), float(0.0), bool(true))) / sqrt(1.0))), 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.1)), float(0.0), bool(true))), 0.0)), clamp(0.0, 0.0, 0.0)), 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), float(mat2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0, 0.0, 1.0)))) * 1.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false)), min(mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false)), mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))))), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), (false ? _GLF_FUZZED(7750.7010) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), max(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))))), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), (true ? _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))) : _GLF_FUZZED(135.495))), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), 1.0)))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(119.403)), bool(false))))), 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9088.6250)), float(1.0), bool(true))), exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0))))))))))), _GLF_struct_12(gl_SubgroupInvocationID, bvec2(true), true), vec2(1.0)), _GLF_struct_16(vec4(1.0), ivec4(1), _GLF_struct_14(vec3(1.0)), mat4(1.0), _GLF_struct_15(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), mat4x3(1.0)), mat3x4(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : injectionSwitch[1])), injectionSwitch[1])))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : injectionSwitch[1])), injectionSwitch[1])))).y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-6163.7677, 782.895, 913.440, -33.71, -26.78, -165.818, -5286.5347, 0.4, 6.7, 45.54, -1613.9318, 9219.3659, -215.710, 7.5, -2827.1348, 2.6)) : mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0))))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), true, true))))), (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-726.826), _GLF_FUZZED(74.56)), vec2(((injectionSwitch) * vec2(1.0, 1.0))[0], ((injectionSwitch) * vec2(1.0, 1.0))[1]), bvec2(true, true)))))) + vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), true))), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(_GLF_struct_0(ivec3(1), mat2(1.0), ivec4(1), vec4(1.0), mat2x3(1.0), mat4x3(1.0))), _GLF_struct_3(_GLF_struct_2(uvec4(1u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_struct_7(ivec3(1), _GLF_struct_4(mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.9) : 1.0)))), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-4.4), (_GLF_FUZZED(-4.4)) - 0.0)), bool(false)))) + _GLF_IDENTITY(abs(0.0), (abs(0.0)) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) || false))))) ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(1674.1911, _GLF_IDENTITY(-3734.8141, (true ? -3734.8141 : _GLF_FUZZED(32.42)))))))))))), mat2(1.0), bvec2(_GLF_IDENTITY(true, false || (true))), mat4x3(1.0), vec4(1.0), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.8) : 1.0)))), mat3x2(1.0), bvec3(true), _GLF_struct_5(mat2x3(1.0)), mat4x2(1.0), _GLF_struct_6(bvec2(true), mat4x2(1.0), 1u)), mat4(1.0), bvec4(true));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size, (_GLF_struct_replacement_8.workgroup_size) ^ 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), true && (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), _GLF_IDENTITY(true, (true) && true), false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) || false), true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), true, false, true)))))))) || false), ! (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), true, false, true)))))))) || false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(3.3, -68.78)) : vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4805.5743)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false), true, false))) || false, ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false)), true, false)))), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)))), false, true))))))))), true, false, true)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false)), true, false)))), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)))), false, true))))))))), true, false, true)))))))) || false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(3.3, -68.78)) : vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true, false))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), _GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), (true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) && true))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))))))))), false, true))))))))), true, false, true)))))))) || false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(3.3, -68.78)) : vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), true), true, false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true, false))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), _GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), (true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) && true))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))))))))), false, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))))))))), false, true)))))))))))), true, false, true)))))))) || false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(3.3, -68.78)) : vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 1.0, exp(0.0), 1.0)))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.91), _GLF_FUZZED(1600.5315)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))), false))), true), true, false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) || false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(48.09) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(96.94), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(122869u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) >> 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)))) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id)))), (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), ((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | 0u)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), ((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | 0u)))))), clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), ((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), _GLF_IDENTITY(((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | 0u, 1u * (_GLF_IDENTITY(((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | 0u, (((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | _GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), ((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) | 0u))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))), (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id)))) - 0u)), ((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))))) - 0u)) | 0u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_id : _GLF_FUZZED(_GLF_struct_replacement_17._f1._f5.subgroup_local_id)), ((true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id), (false ? _GLF_FUZZED(packHalf2x16(vec2(-3.3, -865.301))) : max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id), (false ? _GLF_FUZZED(packHalf2x16(vec2(-3.3, -865.301))) : max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id))), ~ (~ (_GLF_IDENTITY(max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id), (false ? _GLF_FUZZED(packHalf2x16(vec2(-3.3, -865.301))) : max(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_struct_replacement_17._f1._f5.subgroup_local_id)))))))))))) | 0u))))) | (subgroup_id)) * subgroup_size + _GLF_struct_replacement_17._f1._f5.subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1, (true ? _GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size)))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id), (true ? (_GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED((workgroup_base ++))))), _GLF_struct_replacement_17._f1._f5.subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id), (true ? (_GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED((workgroup_base ++))))), _GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED(virtual_gid)))) + _GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id), (true ? (_GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED((workgroup_base ++))))), _GLF_struct_replacement_17._f1._f5.subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id), (true ? (_GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED((workgroup_base ++))))), _GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED(virtual_gid)))) + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id), (true ? (_GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED((workgroup_base ++))))), _GLF_struct_replacement_17._f1._f5.subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f5.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id), (true ? (_GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED((workgroup_base ++))))), _GLF_struct_replacement_17._f1._f5.subgroup_local_id) : _GLF_FUZZED(virtual_gid)))) + _GLF_IDENTITY(1, (1) | (1)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), min(_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1)) | (_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1)) | ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1))))), (_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1))), max(_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), min(_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1)) | (_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1)) | ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1))))), (_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), min(_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1)) | (_GLF_IDENTITY((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1)) | ((_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1))))), (_GLF_struct_replacement_17._f1._f5.subgroup_local_id + 1))))))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(111.626), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(-4.9)), bvec2(true, false)))).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(0.0), log(1.0), 0.0)), min(vec2(mat2x4(injectionSwitch, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY((sqrt(0.0)), 0.0 + ((sqrt(0.0)))), clamp(_GLF_IDENTITY((sqrt(0.0)), 0.0 + ((sqrt(0.0)))), _GLF_IDENTITY((sqrt(0.0)), 0.0 + ((sqrt(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((sqrt(0.0)), 0.0 + ((sqrt(0.0)))), mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY((sqrt(0.0)), 0.0 + ((sqrt(0.0))))), bool(true))))) - 0.0), log(1.0), 0.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(0.0), log(1.0), 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0)))) / exp(0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.1) : injectionSwitch.x)))) > injectionSwitch.y))) && true)))
  return;
}
