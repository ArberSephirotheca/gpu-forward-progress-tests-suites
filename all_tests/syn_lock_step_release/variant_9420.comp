#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 vec2 _f0;
} ;

struct _GLF_struct_3 {
 bool _f0;
 ivec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_5 {
 uint subgroup_size;
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 bvec4 _f3;
 vec4 _f4;
 ivec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + (injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.0)), bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y) && true))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, false, true), bvec3(bvec4(bvec3((false) || false, false, true), true)))))), false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-549.748)), vec2(_GLF_FUZZED(6.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y)))), injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y))))), true)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y)))), injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y))))), true)))), true, true, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0), ((mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) * mat4(1.0)) * mat4(1.0)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sinh(-75.39)))), 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), clamp(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-999.782)), float(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), bool(true)))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(57692u))), float(1.0), bool(true))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0))), _GLF_IDENTITY((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), mat4(1.0) * ((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), 0.0, 0.0, 1.0))), sin(0.0))))))))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), clamp(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0)))))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), clamp(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0)))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), clamp(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))), float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), sin(0.0))))))))))) * vec2(1.0, 1.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false)))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(78.80, 68.99)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))) || false), false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (false) && true) || (! (false))), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(false, true)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))), (false ? _GLF_FUZZED(vec2(10.55, 65.77)) : vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true)), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.3)), bool(false))))), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(756.977), mix(float(_GLF_IDENTITY(_GLF_FUZZED(756.977), clamp(_GLF_FUZZED(756.977), _GLF_FUZZED(756.977), _GLF_FUZZED(756.977)))), float(_GLF_FUZZED(3.0)), bool(false)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(756.977, max(_GLF_IDENTITY(756.977, mix(float(_GLF_FUZZED(1.0)), float(756.977), bool(true))), 756.977)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(false, true)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))), (false ? _GLF_FUZZED(vec2(10.55, 65.77)) : vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true)), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.3)), bool(false))))), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(756.977), mix(float(_GLF_IDENTITY(_GLF_FUZZED(756.977), clamp(_GLF_FUZZED(756.977), _GLF_FUZZED(756.977), _GLF_FUZZED(756.977)))), float(_GLF_FUZZED(3.0)), bool(false)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(756.977, max(_GLF_IDENTITY(756.977, mix(float(_GLF_FUZZED(1.0)), float(756.977), bool(true))), 756.977)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(false, true)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))), (false ? _GLF_FUZZED(vec2(10.55, 65.77)) : vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true)), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.3)), bool(false))))), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(756.977), mix(float(_GLF_IDENTITY(_GLF_FUZZED(756.977), clamp(_GLF_FUZZED(756.977), _GLF_FUZZED(756.977), _GLF_FUZZED(756.977)))), float(_GLF_FUZZED(3.0)), bool(false)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(756.977, max(_GLF_IDENTITY(756.977, mix(float(_GLF_FUZZED(1.0)), float(756.977), bool(true))), 756.977)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(false, true)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))), (false ? _GLF_FUZZED(vec2(10.55, 65.77)) : vec2(_GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true)), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.3)), bool(false))))), max(vec4(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(756.977), mix(float(_GLF_IDENTITY(_GLF_FUZZED(756.977), clamp(_GLF_FUZZED(756.977), _GLF_FUZZED(756.977), _GLF_FUZZED(756.977)))), float(_GLF_FUZZED(3.0)), bool(false)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), _GLF_IDENTITY(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(756.977, max(_GLF_IDENTITY(756.977, mix(float(_GLF_FUZZED(1.0)), float(756.977), bool(true))), 756.977)))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, sin(0.0)), vec4(mat2x4(vec4(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(756.977)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0)), 1.0, 1.0, 1.0, 0.0)))))))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), false))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), true, true), true))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), true, true), true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(-5605.8506)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-87.06)), float(injectionSwitch.y), bool(true)))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-87.06)), float(injectionSwitch.y), bool(true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), clamp(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(_GLF_struct_0(uvec4(1u)), ivec2(1)), _GLF_struct_5(gl_SubgroupSize, _GLF_struct_2(uvec4(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(6u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (6u)), (_GLF_IDENTITY((~ (6u)), ((~ (6u))) ^ 0u)) >> 0u), uint(uint((~ (6u))))))), uint(6u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(atomicAdd(subgroup_id, subgroup_id)))))))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))))))))), clamp(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), (true ? _GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))) : _GLF_FUZZED(_GLF_IDENTITY(usubBorrow(106131u, 110970u, subgroup_id), (usubBorrow(106131u, 110970u, subgroup_id)) >> 0u))))))), uint(_GLF_IDENTITY(6u, min(6u, 6u)))))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), min(_GLF_IDENTITY(6u, ~ (~ (6u))), _GLF_IDENTITY(6u, ~ (~ (6u)))))), uint(6u)))), clamp(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), max((6u), _GLF_IDENTITY((_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), ((6u)) | ((6u)))))))), uint(6u)))), ~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), uint(uint(_GLF_IDENTITY(~ (6u), ~ (~ (~ (6u)))))))))), uint(6u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))) / 1u))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), min((6u), (6u)))))) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(6u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), (false ? _GLF_FUZZED(packUnorm2x16(vec2(-24.60, 32.88))) : (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))) : _GLF_FUZZED(subgroup_id)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), clamp(_GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))), (6u), (6u)))))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ _GLF_IDENTITY((~ (6u)), ((~ (6u))) | (_GLF_IDENTITY((~ (6u)), ((~ (6u))) * 1u))))), uint(6u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))) : _GLF_FUZZED(subgroup_id))))))))) << 0u))), ~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))))))), max(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) << 0u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((6u), (_GLF_IDENTITY((6u), max((6u), (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, min(6u, 6u))) << 0u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((~ _GLF_IDENTITY((6u), (_GLF_IDENTITY((6u), max((6u), (6u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0u))), uint(6u)))), ~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (6u)), (_GLF_IDENTITY((~ (6u)), ((~ (6u))) ^ 0u)) >> 0u), uint(uint((~ (6u))))))), uint(6u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(true, false || (true)) ? 6u : _GLF_FUZZED(atomicAdd(subgroup_id, subgroup_id)))))))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))), clamp(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), (true ? _GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))) : _GLF_FUZZED(usubBorrow(106131u, 110970u, subgroup_id))))))), uint(_GLF_IDENTITY(6u, min(6u, 6u)))))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), min(_GLF_IDENTITY(6u, ~ (~ (6u))), _GLF_IDENTITY(6u, ~ (~ (6u)))))), uint(6u)))), clamp(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), max((6u), _GLF_IDENTITY((6u), ((6u)) | ((6u)))))))), uint(6u)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ _GLF_IDENTITY((6u), (true ? (6u) : _GLF_FUZZED(atomicCompSwap(subgroup_id, 64614u, subgroup_id))))))), uint(6u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec3(6u, 1u, 1u))), ~ (~ (6u)))), uint(6u))), max((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec3(6u, 1u, 1u))), ~ (~ (6u)))), uint(6u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec3(6u, 1u, 1u))), ~ (~ (6u)))), uint(6u))))) : _GLF_FUZZED(subgroup_id)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))) : _GLF_FUZZED(subgroup_id))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))) : _GLF_FUZZED(subgroup_id)))))) + 0u))))))) << 0u))), ~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)))))))), max(~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((6u), (_GLF_IDENTITY((6u), max((6u), (6u)))) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(64.85))), injectionSwitch.y)))), ((~ _GLF_IDENTITY((6u), (_GLF_IDENTITY((6u), max(_GLF_IDENTITY((6u), ((6u)) << 0u), (6u)))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-8.2) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))) >> 0u))), uint(6u)))), ~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u))))))))) ^ 0u) << 0u))))), _GLF_struct_3(true, _GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), uvec2(1u)), _GLF_struct_4(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), bvec4(true), vec4(1.0), ivec4(_GLF_IDENTITY(1, (1) << (0 & -10990))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(188.657)), bool(false))), 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(188.657)), bool(false)))))), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0), 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(63.52)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(63.52)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0))) * mat2(1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))) || false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false)), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-157.683))) > injectionSwitch.y))))) || false)), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], injectionSwitch[1])).y)) && true))))), false || ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-157.683))) > injectionSwitch.y))))) || false)), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], injectionSwitch[1])).y)) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), float(_GLF_FUZZED(1.9)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(213.471)))) / 1.0)), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-16.39) : 0.0)))), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (_GLF_IDENTITY(true, (true) && true) ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, _GLF_IDENTITY(8.8, max(8.8, 8.8)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8)))), mix(vec2(_GLF_FUZZED(-75.74), _GLF_FUZZED((_GLF_IDENTITY(6.5, (true ? 6.5 : _GLF_FUZZED(-6.5))) * 3246.9450))), vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), _GLF_IDENTITY((true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))), mix(vec2(_GLF_IDENTITY(((true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))[0], max(_GLF_IDENTITY(((true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))[0], mix(float(_GLF_FUZZED(48.63)), float(((true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))[0]), bool(true))), ((true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))[0])), ((true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))[1]), vec2(_GLF_FUZZED(vec4(82.38, 142.124, -395.433, 494.223).g), _GLF_FUZZED((-271.232))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8)))))[1]), bvec2(true, true)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(float(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(float(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(float(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(float(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)))))))) - 0.0)), bool(true)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, _GLF_IDENTITY(-846.328, min(-846.328, -846.328)), 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)))), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4480.8275) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8)))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4480.8275) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4480.8275) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4480.8275) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)), (true ? float(mat3x2(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(_GLF_IDENTITY(899.742, clamp(899.742, _GLF_IDENTITY(899.742, mix(float(_GLF_FUZZED(853.030)), float(899.742), bool(true))), 899.742)), 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(48.47), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.2)), bvec2(true, false))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0), mat3(mat3(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0)))))), abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), float(mat2x4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) + 0.0)))), vec3(0.0, abs(1.0), 0.0)), (dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))) / 1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), (true ? dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)) : _GLF_FUZZED(-30.78)))), 0.0)), sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0), (false ? _GLF_FUZZED(mat3x2(899.742, 928.704, 25.02, -510.875, -846.328, 6.1)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, abs(1.0), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))), mix(vec3((vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))))[1], min((vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))))[1], (vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))))[1])), (vec3(0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))))[2]), vec3(_GLF_FUZZED(8.4), _GLF_FUZZED(9.1), _GLF_FUZZED(vec4(487.327, 6461.4956, -1.1, 68.73).y)), bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), abs(1.0), 0.0), (false ? _GLF_FUZZED(vec3(6.7, 550.641, 844.778)) : _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), abs(1.0), 0.0), max(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), abs(1.0), 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), abs(1.0), 0.0))))))), 1.0, 0.0)))) : _GLF_FUZZED(vec2(752.595, 8.8))))))).y))) * 1.0)))))), _GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), true && _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))), true, true)))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool((false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))), true, true)))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool((false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bvec3(bool(bool(false)), false, false))), true, true)))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-386.436)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1451.4352)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(42.26) : injectionSwitch.x)))) < injectionSwitch.y))))), false || (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))))) && ((injectionSwitch.x < injectionSwitch.y))))))))), (! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true, true))), false || (false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)).x < injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true, true))), false || (false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)).x < injectionSwitch.y)))))))))) || false), (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4288.5859)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2722.2784)), vec2(_GLF_FUZZED(-7468.2810), (injectionSwitch)[1]), bvec2(false, true))).y)) && _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x < injectionSwitch.y))), false || (! (((injectionSwitch.x < injectionSwitch.y)))))))))))))), (! (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))))).y))))))), _GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)) : _GLF_FUZZED(vec2(65.86, -6.0)))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)).x < injectionSwitch.y) && true))))))))) || false)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(652.084), _GLF_FUZZED(564.482)), bvec2(false, false)))), vec2(vec4(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(652.084), _GLF_FUZZED(564.482)), bvec2(false, false)))), tan(0.0), 1.0)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat4x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0), mat4x2(mat4x2((mat4x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0))))))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.1)), vec2(_GLF_FUZZED(-9.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)))))) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))))))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(radians(injectionSwitch)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) + _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), max(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-295.182, (-295.182) * 1.0))), float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), 1.0, 0.0)))), bool(true)))))) * vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.9) : 0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))))), 1.0))).x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(radians(injectionSwitch)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) + _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), max(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-295.182, (-295.182) * 1.0))), float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), 1.0, 0.0)))), bool(true)))))) * vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.9) : 0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))))), 1.0))).x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, true && (false))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (false))) && true)))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))), false), true))))), false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (bool(true)))) || false))), _GLF_IDENTITY(-863.917, mix(float(_GLF_FUZZED(-62.79)), float(_GLF_IDENTITY(-863.917, 1.0 * (-863.917))), bool(true)))) * mat2x4(-7652.9751, _GLF_IDENTITY(710.686, max(_GLF_IDENTITY(710.686, mix(float(710.686), float(_GLF_FUZZED(-4469.6332)), bool(false))), 710.686)), 24.30, 7.5, 3.4, _GLF_IDENTITY(0.4, 0.0 + (_GLF_IDENTITY(0.4, (0.4) - tan(0.0)))), 7.1, 9.0))) : injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, _GLF_IDENTITY(-651.358, clamp(_GLF_IDENTITY(-651.358, _GLF_IDENTITY(float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0))))), -651.358, -651.358)), _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, 7.5, 3.4, 0.4, 7.1, 9.0))) : injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, _GLF_IDENTITY(-651.358, clamp(_GLF_IDENTITY(-651.358, _GLF_IDENTITY(float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0))))), -651.358, -651.358)), _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, 7.5, 3.4, 0.4, 7.1, 9.0))) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, _GLF_IDENTITY(-651.358, clamp(_GLF_IDENTITY(-651.358, _GLF_IDENTITY(float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(-651.358, 0.0, 1.0, 0.0, 0.0, 0.0))))), -651.358, -651.358)), _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, 7.5, 3.4, 0.4, 7.1, 9.0))) : injectionSwitch)).x > injectionSwitch.y)), true, true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, 7.5, 3.4, 0.4, 7.1, 9.0))) : injectionSwitch)), (false ? _GLF_FUZZED(vec2(8257.6675, 9887.7801)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), exp(0.0), 1.0))), 1.0)), 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, _GLF_IDENTITY(7.1, (false ? _GLF_FUZZED(8.8) : 7.1)), 9.0))) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, 9.0))) : injectionSwitch))[0], _GLF_FUZZED((-6.2 - 671.459))), vec2(_GLF_FUZZED(-0.9), ((false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, _GLF_IDENTITY(float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))), min(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))), (false ? _GLF_FUZZED(vec3(-2.8, -29.19, 2.8)) : vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))))))), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))), min(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))), (false ? _GLF_FUZZED(vec3(-2.8, -29.19, 2.8)) : vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0))))))), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) + 0.0)), 3.4, 0.4, 7.1, 9.0))) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, 7.5, 3.4, 0.4, 7.1, 9.0))) : injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2253.5790)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(2253.5790)), float(vec3(float(_GLF_FUZZED(2253.5790)), abs(0.0), 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(2253.5790)), (float(_GLF_FUZZED(2253.5790))) / 1.0), float(_GLF_FUZZED(2253.5790)))), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, 7.5, 3.4, 0.4, 7.1, 9.0))) : injectionSwitch)), (false ? _GLF_FUZZED(vec2(8257.6675, 9887.7801)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false))))))))))))) ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-755.665)), float(1.0), bool(true))))), 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-887.733) : 1.0)))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, _GLF_IDENTITY(9.0, mix(float(_GLF_FUZZED(9.0)), float(9.0), bool(true)))))) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0), vec3(1.0, 0.0, 0.0)), (true ? dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0), vec3(1.0, 0.0, 0.0)) : _GLF_FUZZED(-6.2)))))), sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(13.25), _GLF_FUZZED(-9541.1223)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), float(mat4x3(determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(13.25), _GLF_FUZZED(-9541.1223)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), 3.4, 0.4, 7.1, 9.0))) : injectionSwitch))[0], _GLF_FUZZED((-6.2 - 671.459))), vec2(_GLF_FUZZED(-0.9), ((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), _GLF_IDENTITY(float(-7.4), (float(-7.4)) + determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), -863.917), min(vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), _GLF_IDENTITY(float(-7.4), (float(-7.4)) + determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), -863.917), _GLF_IDENTITY(vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), _GLF_IDENTITY(float(-7.4), (float(-7.4)) + determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), -863.917), clamp(vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), _GLF_IDENTITY(float(-7.4), (float(-7.4)) + determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), -863.917), vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), _GLF_IDENTITY(float(-7.4), (float(-7.4)) + determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), -863.917), vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), _GLF_IDENTITY(float(-7.4), (float(-7.4)) + determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), -863.917))))) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))) - abs(sqrt(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, _GLF_IDENTITY(7.1, min(_GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) / 1.0), 7.1)), 7.1)), 9.0))), min(_GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, 9.0))), _GLF_IDENTITY(_GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2253.5790), mix(float(_GLF_FUZZED(2253.5790)), float(_GLF_FUZZED(4.2)), bool(false)))), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, _GLF_IDENTITY(24.30, (true ? _GLF_IDENTITY(24.30, min(24.30, 24.30)) : _GLF_FUZZED(1.8))), _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, 9.0))), (_GLF_IDENTITY(_GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, 9.0))), mix(vec2(_GLF_FUZZED(vec4(-25.32, -286.352, -357.413, 3552.5031).a), (_GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, 9.0))))[1]), vec2((_GLF_FUZZED((vec4(-654.792, -651.358, _GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(2253.5790)), float(-7.4), bool(true))), -863.917) * mat2x4(-7652.9751, 710.686, 24.30, _GLF_IDENTITY(7.5, float(mat3x2(7.5, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 3.4, 0.4, 7.1, 9.0))))[0], _GLF_FUZZED(-344.123)), bvec2(true, false)))) * mat2(1.0)))) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).x > injectionSwitch.y)) || false)) && true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(true && ((_GLF_DEAD(false)) || false), (true && ((_GLF_DEAD(false)) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))))), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, false, false, false))), (bool(bool(bvec4(false, false, false, false)))) || false)))), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false)))))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, false, false, _GLF_IDENTITY(false, false || (false))))), true && (bool(bool(bvec4(false, false, false, _GLF_IDENTITY(false, false || (false)))))))))), true)))))))) || false)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0), (mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0), (mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-3.5)), vec2(_GLF_FUZZED(0.3), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0), (mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))))) + vec2(0.0, 0.0)).y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-9.3, 171.974)) : (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(473.828, 12.69)) : (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], min(((injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], (((injectionSwitch) * mat2(1.0))[1]) * 1.0)))), vec2(_GLF_FUZZED(-4.9), _GLF_FUZZED(6.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-9.3, 171.974)) : (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-759.892)), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-759.892)), bool(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(min(-11118, 41409))))), injectionSwitch.x)) > injectionSwitch.y)))))) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-759.892)), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-759.892)), bool(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(min(-11118, 41409))))), injectionSwitch.x)) > injectionSwitch.y)))))) || false)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u)))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) - 0u)))) << 0u)) * 1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true), false)))), true, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec2((! (false)), false)))), true, false, false)))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), true, true, false))), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), true, false, false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), true, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), true, false, false)), false)))))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), true, false, false)))))))) || false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 1u * ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY((gl_WorkGroupSize.x), 1u * ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) ^ 0u) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-4925.8208)))), float(_GLF_FUZZED(0.5)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), float(mat2(float(float(injectionSwitch.x)), 0.0, 0.0, 0.0))))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) - log(1.0))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, determinant(mat2(sqrt(1.0), cos(0.0), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((false)) && true))), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))) || false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, cos(0.0)))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))) / 1.0)))) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -401.483))), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-80.77)), vec2(_GLF_FUZZED(float(62310u)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) && true) && (bool(bvec3(false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(629.974) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(301.880)), bool(false))) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool((injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)))) + 0.0)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-26.03) : injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec3(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false, true)))))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6593.7782))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3))) > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))))) && true)) && true))) && true)))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)) && true)), false)), false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)) && true)), false)), false)))))))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))), ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))))))), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))))))), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-8.5, 8.0, -0.0, -5460.3560, 465.290, 80.30, -2.5, 81.40) + mat4x2(29.32, -1110.7339, -7.3, -280.053, -88.94, -264.483, -18.73, 257.750))[2]) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_size, (_GLF_struct_replacement_6._f1.subgroup_size) | (_GLF_struct_replacement_6._f1.subgroup_size))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_struct_replacement_6._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_size, max(_GLF_struct_replacement_6._f1.subgroup_size, _GLF_struct_replacement_6._f1.subgroup_size)), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % _GLF_struct_replacement_6._f1.subgroup_size) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(-6.9, 9302.8542, 7.0, -7.0, 3.1, -6294.5571)))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false, false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, (1) | 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.9) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), abs(_GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), (true ? _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)) : _GLF_FUZZED(-21249))), _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)))), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), (true ? _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)) : _GLF_FUZZED(-21249))), _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)))), int(6)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), (true ? _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)) : _GLF_FUZZED(-21249))), _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)))), int(6))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), (true ? _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)) : _GLF_FUZZED(-21249))), _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)))), int(6)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)), (true ? _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)) : _GLF_FUZZED(-21249))), _GLF_IDENTITY(int(6), (int(6)) << (0 ^ 0)))), int(6)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) >> (0 >> _GLF_IDENTITY(int(0), int(0)))), min(_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), max(_GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (false ? _GLF_FUZZED(44085) : _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (int(ivec4(0, 0, 0, 0))) ^ 0))), int(ivec4(0, 0, 0, 0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), max(_GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (false ? _GLF_FUZZED(44085) : _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (int(ivec4(0, 0, 0, 0))) ^ 0))), int(ivec4(0, 0, 0, 0)))))) | 0) ^ 0, 0 ^ 0, 0 ^ 0)), _GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0))))) | (_GLF_IDENTITY(0 ^ 0, int(ivec3(0 ^ 0, 0, 1))))), 0 ^ 0)), 0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, max((0) - 0, (0) - 0))))))), int(6))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY(ivec3(ivec3(ivec3(1, 1, 0))), min(ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 0))), ivec3(ivec3(ivec3(1, 1, 0)))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) || false)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true), false))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) && true))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
}
