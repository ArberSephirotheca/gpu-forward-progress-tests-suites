#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(90.93)), bool(false)))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(90.93)), bool(false)))))))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(90.93)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(90.93)), bool(false)))) + 0.0)))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(90.93)), bool(false)))))))), false, false)))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))) || false), false))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), (_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), mix(float(_GLF_FUZZED(-9107.1030)), float(float(_GLF_FUZZED(1.0))), bool(true)))) + 0.0), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), clamp(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), 1u * (0u | (gl_NumWorkGroups.x))), 0u | (gl_NumWorkGroups.x), 0u | (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), clamp(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), 1u * (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u), (true ? _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u) : _GLF_FUZZED(56088u))), _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u))))), 0u | (gl_NumWorkGroups.x), 0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ ((gl_NumWorkGroups.x)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) - 0u)) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), 1u * (0u | (gl_NumWorkGroups.x))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x), 0u | (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), clamp(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(1u * (0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)), max(1u * (0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x)) << 0u)), _GLF_IDENTITY(1u * (0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)), min(1u * (0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)), 1u * (0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u))))))), 0u | (gl_NumWorkGroups.x), 0u | (gl_NumWorkGroups.x))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * _GLF_IDENTITY(1u, (1u) / 1u))))) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.1, -32.39)) : injectionSwitch)), injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(vec3(1.2, -2.0, -6.6)))))).y)) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, 1.0))))))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[2]), bvec3(false, true, true))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), _GLF_IDENTITY(mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), max(int(ivec4(2, 1, 0, 1)), int(ivec4(2, 1, 0, 1)))))]), bvec3(false, true, true)), mix(vec3(_GLF_IDENTITY((mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), max(int(ivec4(2, 1, 0, 1)), int(ivec4(2, 1, 0, 1)))))]), bvec3(false, true, true)))[0], mix(float(_GLF_IDENTITY((mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), max(int(ivec4(2, 1, 0, 1)), int(ivec4(2, 1, 0, 1)))))]), bvec3(false, true, true)))[0], 1.0 * ((mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), max(int(ivec4(2, 1, 0, 1)), int(ivec4(2, 1, 0, 1)))))]), bvec3(false, true, true)))[0]))), float(_GLF_FUZZED(136.811)), bool(false))), _GLF_FUZZED(3176.2056), _GLF_FUZZED(58.94)), vec3(_GLF_FUZZED((- 81.78)), (mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), max(int(ivec4(2, 1, 0, 1)), int(ivec4(2, 1, 0, 1)))))]), bvec3(false, true, true)))[1], (mix(vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), max(int(ivec4(2, 1, 0, 1)), int(ivec4(2, 1, 0, 1)))))]), bvec3(false, true, true)))[2]), bvec3(false, true, true)))))) > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mix(vec3((_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mat3(1.0) * (vec3(injectionSwitch.x, 0.0, 1.0))))[0], _GLF_FUZZED(-587.685), _GLF_FUZZED(-2.7)), vec3(_GLF_FUZZED(4.2), (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[2]), bvec3(false, true, true))))) > injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, tan(0.0)), min(vec2(injectionSwitch.y, tan(0.0)), vec2(injectionSwitch.y, tan(0.0))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - sin(0.0)), injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8421.5902)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true)))) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))) || false)), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))), max(0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) : _GLF_FUZZED(workgroup_id))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u))), uint(uvec3(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))))) * 1u) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - _GLF_IDENTITY(0u, (0u) ^ 0u)) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)), 0u | (max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u)))), 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))), max(0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) : _GLF_FUZZED(workgroup_id))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u))), uint(uvec3(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))))) * 1u) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | (workgroup_size)), 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - _GLF_IDENTITY(0u, (0u) ^ 0u)) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)), 0u | (max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))) | (workgroup_size)), 0u, 0u, 1u)))), 1u, 0u))))) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) ^ _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], length(vec4(0.0, 0.0, 0.0, 0.0))))), injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(5.4, -7.7))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(5.1 * 6.9, 0.0 + (5.1 * 6.9))))), _GLF_IDENTITY(float(injectionSwitch.x), float(_GLF_IDENTITY(mat4(float(injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-67.59)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true))), 1.0))), _GLF_IDENTITY(transpose(transpose(mat4(float(injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((transpose(transpose(mat4(float(injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fma(8118.8940, round(-952.202), -9.0)))), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.3)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3927.5308)), bool(false))))))))), (_GLF_IDENTITY((transpose(transpose(mat4(float(injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fma(8118.8940, round(-952.202), -9.0)))), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.3)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3927.5308)), bool(false))))))))), ((transpose(transpose(mat4(float(injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fma(8118.8940, round(-952.202), -9.0)))), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.3)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3927.5308)), bool(false)))))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), mat4(1.0) * (mat4(injectionSwitch.y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, (false ? _GLF_FUZZED(9086.2884) : 5.1)) : _GLF_FUZZED(53.75))) * 6.9))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(0.0), length(vec2(0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(mat2x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(0.0), length(vec2(0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), true && ((! (bool(false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) + 0u) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(mix(workgroup_id, subgroup_size, true), 0u ^ (mix(workgroup_id, subgroup_size, true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(_GLF_IDENTITY(uvec4(~ (subgroup_size), 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(163925u, 89323u, 79300u, 31686u)) : uvec4(~ (subgroup_size), 0u, 0u, 1u))))), 1u * (_GLF_IDENTITY(~ (subgroup_size), uint(_GLF_IDENTITY(uvec4(~ (subgroup_size), 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(163925u, 89323u, 79300u, 31686u)) : uvec4(~ (subgroup_size), 0u, 0u, 1u))))))))), (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_size : _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) << 0u)))))) : _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), subgroup_size, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, (true) && true) ? subgroup_size : _GLF_FUZZED(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false))))) && true), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(bvec4(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec4(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u), max(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u), uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u)))), uvec2(0u, 0u) + (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u), max(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u), uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u))))))))))))))) / 1u)), subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u)) * 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) ^ 0u)))), subgroup_size, true), (mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), ~ (~ (~ (uint(6u)))))))))), subgroup_size, true)) | (_GLF_IDENTITY(_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), subgroup_size, true), (mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | 0u))), subgroup_size, true)) | (mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))))), subgroup_size, true))), 0u ^ (_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), subgroup_size, true), (mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | 0u))), subgroup_size, true)) | (mix(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))))), subgroup_size, true)))))))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(mix(workgroup_id, subgroup_size, true), uint(_GLF_IDENTITY(uvec4(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), ((_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u))))), 1u, 1u), clamp(_GLF_IDENTITY(uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), 1u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(mix(workgroup_id, subgroup_size, true), uint(uvec3(_GLF_IDENTITY(mix(workgroup_id, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)), true), ~ (_GLF_IDENTITY(~ (mix(workgroup_id, subgroup_size, true)), uint(_GLF_IDENTITY(uvec2(~ (mix(workgroup_id, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), min(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u)))))), true)), 0u), (_GLF_IDENTITY(uvec2(~ (mix(workgroup_id, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), true)), 0u), ~ (~ (uvec2(~ (mix(workgroup_id, subgroup_size, true)), 0u))))) ^ uvec2(0u, 0u)))))), 0u, _GLF_IDENTITY(1u, (1u) | (1u))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (1u | 1u) * (5u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) | (5u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(5u, ~ (~ (5u))), 0u)), (_GLF_IDENTITY(uint(uvec2(5u, 0u)), (uint(uvec2(5u, 0u))) | (uint(uvec2(5u, 0u))))) - 0u)))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) | (5u)), _GLF_IDENTITY(uint(uvec2(5u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(5u, 0u)), (uint(uvec2(5u, 0u))) | (uint(uvec2(5u, 0u))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(5u, 0u)), (uint(uvec2(5u, 0u))) | (uint(uvec2(5u, 0u))))) - 0u, uint(uvec2((_GLF_IDENTITY(uint(uvec2(5u, 0u)), (uint(uvec2(5u, 0u))) | (uint(uvec2(5u, 0u))))) - 0u, 0u)))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))) | (uint(5u))))), 1u, 1u), min(uvec4(mix(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, (0u | 0u), 0u, 0u)), min(uint(uvec4(workgroup_id, (0u | 0u), 0u, 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), (0u | 0u), 0u, 0u))))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(5u, (5u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(5u, (5u) / 1u)), ((_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), ((5u)) / 1u) / 1u))) >> 0u)) - 0u) | 0u) : _GLF_FUZZED(workgroup_id)))), uint(5u))), 1u, 1u), uvec4(mix(workgroup_id, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (1u)))) - uvec4(0u, 0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, (1u) >> 0u)))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) << 0u)), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) << 0u))))))))))), true), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 0u)))))) ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(uvec2(uint(_GLF_IDENTITY(5u, max(5u, 5u))), 1u))), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))), 1u, 1u))), uvec4(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))), ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), clamp(_GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) | (0u ^ (1u))), 0u ^ (1u), 0u ^ (1u)))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(uint(uvec3(max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (_GLF_IDENTITY(uint(uvec3(max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (uint(uvec3(max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))) << 0u)) << 0u)))), 1u, 1u))), uvec4(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(true, (true) && true)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) / 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)) | (uint(6u))), uint(6u))) * (0u ^ 1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 1u * (6u))), uint(6u))) * (_GLF_IDENTITY((5u) / 1u, ((5u) / 1u) | ((5u) / 1u)))))))), _GLF_IDENTITY(1u, (1u) + (0u & 24451u)), 1u), _GLF_IDENTITY(uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u), _GLF_IDENTITY((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), ((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u))) | ((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)))) << uvec4(0u, 0u, 0u, 0u))))))), ~ (~ (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(mix(workgroup_id, subgroup_size, true), uint(_GLF_IDENTITY(uvec4(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), ((_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u))))), 1u, 1u), clamp(_GLF_IDENTITY(uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), 1u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(mix(workgroup_id, subgroup_size, true), uint(uvec3(_GLF_IDENTITY(mix(workgroup_id, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)), true), ~ (_GLF_IDENTITY(~ (mix(workgroup_id, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), true)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (mix(workgroup_id, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), min(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u)))))), true)), (~ (mix(workgroup_id, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), min(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u)))))), true))) | (~ (mix(workgroup_id, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), min(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u))), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ (102570u & 0u)))))), true)))), 0u), (_GLF_IDENTITY(uvec2(~ (mix(workgroup_id, subgroup_size, true)), 0u), ~ (~ (uvec2(~ (mix(workgroup_id, subgroup_size, true)), 0u))))) ^ uvec2(0u, 0u)))))), 0u, _GLF_IDENTITY(1u, (1u) | (1u))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (1u | 1u) * (5u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) | (5u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(5u, ~ (~ (5u))), 0u)), (_GLF_IDENTITY(uint(uvec2(5u, 0u)), (uint(uvec2(5u, 0u))) | (uint(uvec2(5u, 0u))))) - 0u)))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) | (5u)), _GLF_IDENTITY(uint(uvec2(5u, 0u)), (_GLF_IDENTITY(uint(uvec2(5u, 0u)), (uint(uvec2(5u, 0u))) | (uint(uvec2(5u, 0u))))) - 0u)))))) | (uint(5u))))), 1u, 1u), min(uvec4(mix(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, (0u | 0u), 0u, 0u)), min(uint(uvec4(workgroup_id, (0u | 0u), 0u, 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), (0u | 0u), 0u, 0u))))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(5u, (5u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(5u, (5u) / 1u)), ((_GLF_IDENTITY(5u, (5u) / 1u))) >> 0u)) - 0u) | 0u) : _GLF_FUZZED(workgroup_id)))), uint(5u))), 1u, 1u), uvec4(mix(workgroup_id, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (1u)))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))))), (max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))))))) | (max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, (true ? _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (~ ((subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size)))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))))))))), true), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 0u)))))) ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(uvec2(uint(_GLF_IDENTITY(5u, max(5u, 5u))), 1u))), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))), 1u, 1u))), uvec4(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))), ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (1u), 0u ^ (_GLF_IDENTITY(0u ^ (1u), (true ? 0u ^ (1u) : _GLF_FUZZED(atomicOr(workgroup_size, workgroup_size)))))), clamp(_GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) | (0u ^ (1u))), 0u ^ (1u), 0u ^ (1u)))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 1u))), uvec4(mix(workgroup_id, subgroup_size, _GLF_IDENTITY(true, (true) && true)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) / 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) * (0u ^ 1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY((5u) / 1u, ((5u) / 1u) | ((5u) / 1u)))))))), _GLF_IDENTITY(1u, (1u) + (0u & 24451u)), 1u), _GLF_IDENTITY(uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u), _GLF_IDENTITY((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), _GLF_IDENTITY(((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u))) | ((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u))), ~ (~ (((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u))) | ((uvec4(mix(workgroup_id, subgroup_size, true), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u))))))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u)))))))))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(num_workgroup)))))], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))) || false), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), (bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))) || false)) && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0)) * 1.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
