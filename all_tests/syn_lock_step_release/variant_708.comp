#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bvec3 _f0;
 float _f1;
 mat2 _f2;
 vec4 _f3;
 int _f4;
} ;

struct _GLF_struct_14 {
 bool _f0;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 bvec3 _f1;
 ivec4 _f2;
 uvec3 _f3;
 bvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 ivec4 _f1;
 bvec4 _f2;
 int _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 _GLF_struct_11 _f1;
 vec2 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
 _GLF_struct_15 _f6;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 bvec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 uint _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 vec3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 mat2x4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 mat2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 mat2 _f1;
 int _f2;
 mat2x4 _f3;
 mat3 _f4;
 ivec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 bvec2 _f1;
 bvec2 _f2;
 mat2x4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 float _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 uvec4 _f1;
 ivec3 _f2;
 int _f3;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 ivec4 _f1;
 mat2x4 _f2;
 uint _f3;
 mat4x3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bool _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_5 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_10 _f2;
 uvec2 _f3;
 _GLF_struct_16 _f4;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(518.788, -238.984, 4428.2665).p - -47.29)), _GLF_FUZZED(-3093.8963)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))));
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (false ? -42852 : -33926))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_5(_GLF_struct_0(mat2x3(1.0), ivec4(1), mat2x4(1.0), 1u, mat4x3(1.0), mat3(1.0)), _GLF_struct_1(mat3(1.0), uvec4(1u), ivec3(1), 1), _GLF_struct_2(1.0, ivec4(1)), true, _GLF_struct_3(bvec4(true), bvec2(_GLF_IDENTITY(true, ! (! (true)))), bvec2(true), mat2x4(1.0), bvec2(true)), _GLF_struct_4(vec3(1.0), mat2(1.0), 1, mat2x4(1.0), mat3(1.0), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))), mat3(1.0))), _GLF_struct_7(_GLF_struct_6(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec2(1, 0)))))))), mat2x4(1.0), mat2(1.0)), mat4x2(1.0), bvec3(true), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) - 0.0)))), mix(float(_GLF_FUZZED(1.3)), float(clamp(1.0, 1.0, 1.0)), bool(true))), mix(float(_GLF_FUZZED(-43.54)), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) - 0.0)))), mix(float(_GLF_FUZZED(1.3)), float(clamp(1.0, 1.0, 1.0)), bool(true))), min(_GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) - 0.0)))), mix(float(_GLF_FUZZED(1.3)), float(clamp(1.0, 1.0, 1.0)), bool(true))), _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) - 0.0)))), mix(float(_GLF_FUZZED(1.3)), float(clamp(1.0, 1.0, 1.0)), bool(true)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(5.7, -1065.6426, 673.099, -9039.4201)) : mat2(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0)))))) - tan(abs(0.0))), 1.0, 1.0))), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), 1.0))), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(mat2(8.5, 29.80, -12.22, 7.2)))), mat2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(9696.7365)), bool(false)))), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, sqrt(0.0), 0.0), (false ? _GLF_FUZZED(vec3(-9.7, 89.76, -2564.7038)) : vec3(0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true ? (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-3395.9786, 7.9, 6078.8871, -7.6)), mat2(mat4x3(true ? (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-3395.9786, 7.9, 6078.8871, -7.6))))))))))) : _GLF_FUZZED(mat2(8.5, _GLF_IDENTITY(29.80, float(mat2x3(29.80, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), -12.22, 7.2)))))))))), ivec4(1)), _GLF_struct_10(mat2(1.0), mat4x3(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))))))), bvec3(true), vec3(1.0), _GLF_struct_8(mat3x4(1.0), 1u, uvec3(1u), bvec4(true)), _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), vec4(sin(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(87.37)))))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4160.1706)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0))), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4160.1706)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)))) + 0.0))), min(vec4(mat4x3(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), mix(float(_GLF_IDENTITY(float(float(injectionSwitch.y)), mix(float(_GLF_FUZZED(13.62)), float(float(float(injectionSwitch.y))), bool(true)))), float(_GLF_FUZZED((+ -0.2))), bool(false)))))), vec4(_GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), 0.0, 0.0, 1.0))), 1.0, exp(0.0), 0.0, sin(0.0), 0.0)), (true ? float(mat2x3(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, exp(0.0), 0.0, sin(0.0), 0.0)) : _GLF_FUZZED(-63.03)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), mix(vec4((vec4(1.0, 1.0, 1.0, 0.0))[0], (vec4(1.0, 1.0, 1.0, 0.0))[1], (vec4(1.0, 1.0, 1.0, 0.0))[2], _GLF_FUZZED(-459.004)), vec4(_GLF_FUZZED(-4.7), _GLF_FUZZED(-56.05), _GLF_FUZZED(float(true)), (vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec2(false, true))), true))), vec4(1.0, 1.0, 1.0, 0.0))), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec4(sin(0.0), 0.0, 0.0, 1.0), mix(vec4((vec4(sin(0.0), 0.0, 0.0, 1.0))[0], _GLF_FUZZED(-8095.1863), (_GLF_IDENTITY(vec4(sin(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(4249.9308, -47.54, -2.7, -3.0)) : vec4(sin(0.0), 0.0, 0.0, 1.0))))[_GLF_IDENTITY(2, ~ (~ (2)))], _GLF_FUZZED(float(62369u))), vec4(_GLF_FUZZED((false ? 7.1 : _GLF_IDENTITY(32.56, min(_GLF_IDENTITY(32.56, (true ? 32.56 : _GLF_FUZZED(-311.695))), 32.56)))), (vec4(sin(0.0), 0.0, 0.0, 1.0))[1], _GLF_FUZZED(-0.8), (vec4(sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0))))))))), 1.0, 0.0)), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0))))), mix(vec4(_GLF_IDENTITY((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-822.463))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, tan(sqrt(0.0)), 0.0)), min(float(vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, tan(sqrt(0.0)), 0.0)), float(vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, tan(sqrt(0.0)), 0.0))))), 0.0, 1.0)))))), min((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec4(3.5, 5.5, -1.9, 988.242), vec4(-9.1, 4.0, -85.78, -837.866))) : 0.0))))))), 0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-822.463))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - sin(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 1.0)))))), (vec4(mat4x3(vec4(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-822.463))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, cos(0.0) * (_GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0))))))))[0], _GLF_FUZZED(-629.870), (vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0))))))[2], _GLF_FUZZED(7455.1594)), vec4(_GLF_FUZZED(-1605.7654), _GLF_IDENTITY((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), min(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0))))) - 0.0))))), mix(vec4(((vec4(mat4x3(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(147.038)), _GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(5.4)), float(float(_GLF_ONE(1.0, injectionSwitch.y))), bool(true))), bool(true)))), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), mat4(1.0) * (vec4(1.0, 1.0, 1.0, 0.0))), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)))))))[0], ((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), min(vec4(1.0, 1.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), mix(float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))), float(_GLF_FUZZED(-12.61)), bool(false)))))))), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)))))))[1], _GLF_FUZZED(-64.29), ((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0)), float(mat3(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)))))))[3]), vec4(_GLF_FUZZED(-4.2), _GLF_FUZZED(-512.204), ((vec4(mat4x3(vec4(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec4(sin(0.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), max(vec4(sin(0.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec4(sin(0.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), min(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0))), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), clamp(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.92)), float(1.0), bool(true))), 0.0))))), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)))))))[2], _GLF_FUZZED(8328.3297)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))[1], _GLF_FUZZED(55.86), (vec4(mat4x3(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec4(sin(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 1.0, 0.0)))), (true ? mat2(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(9912.1465, -9259.8221, 4.9, 519.992))))), 0.0, 1.0))))))[3]), bvec4(false, true, false, true)))))), (vec4(1.0)) * mat4(1.0)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 1, _GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ (ivec4(1, 0, 1, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0)) | (ivec4(1, 0, 1, 0))), ~ (~ (ivec4(1, 0, 1, 0)))), _GLF_IDENTITY(ivec4(1, 0, 1, 0), ~ (~ (ivec4(1, 0, 1, 0)))))))), _GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-37651)))) ^ 0)), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))), ivec3(ivec3(ivec3(ivec3(1))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))), ivec3(ivec3(ivec3(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 0))))))))) << ivec3(0, 0, 0)))), mat2x4(1.0), bvec4(true), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat3x4(float(mat2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))))), 1.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(6.6, -48970), max(ldexp(6.6, -48970), ldexp(6.6, -48970)))) : 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(ldexp(6.6, -48970)) : 1.0, float(mat2x4(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(ldexp(6.6, -48970)) : 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(ldexp(6.6, -48970)) : 1.0) - 0.0), false ? _GLF_FUZZED(ldexp(6.6, -48970)) : 1.0)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8.9) : float(mat2x3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))))))), mat3x4(1.0)), uvec2(1u), _GLF_struct_16(mat4x3(1.0), _GLF_struct_11(mat3x2(1.0), ivec4(_GLF_IDENTITY(1, (1) | 0)), bvec4(true), 1, ivec2(1)), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(82.76)), float(1.0), bool(_GLF_IDENTITY(true, (true) && true)))), 1.0, 1.0))), _GLF_struct_12(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(588.564)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(588.564)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) - 0.0), 1.0))), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1))), (ivec4(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(2), ivec4(2)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))))))), uvec3(1u), bvec3(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), _GLF_struct_13(bvec4(true), vec3(1.0)), _GLF_struct_14(true), _GLF_struct_15(bvec3(_GLF_IDENTITY(true, (true) && true)), 1.0, mat2(1.0), _GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(abs(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))), clamp(vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))), vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))), vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))))))), (abs(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4483.9850) : _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0))))))), _GLF_IDENTITY(vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))), clamp(vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0))), round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) + 0.0))))), vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))), vec4(mat3(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0)))))))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 1)), gl_NumWorkGroups.x);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false))))), false, false))))))))), false, false, true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(57.19)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, true))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(890.911, min(890.911, 890.911)), -0.3)))).y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(890.911, -0.3)), (true ? _GLF_FUZZED(vec2(890.911, -0.3)) : _GLF_FUZZED(vec2(464.537, -6026.8426)))))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(890.911, -0.3)), (true ? _GLF_FUZZED(vec2(890.911, -0.3)) : _GLF_FUZZED(vec2(464.537, -6026.8426)))))).y)))))) && true))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))))) || false))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_id * subgroup_size)), (true ? uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x)) | ((subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base)))))))) | (~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, _GLF_IDENTITY(clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u), 1u * (clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u)))), (1u ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, _GLF_IDENTITY(clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u), 1u * (clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((subgroup_size) | 0u, _GLF_IDENTITY(clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u), 1u * (clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / _GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u)))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(102380u)))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, uint(uvec2(_GLF_IDENTITY((subgroup_size) | 0u, ~ (~ ((subgroup_size) | 0u))), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u)))))) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u + ((subgroup_size) | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))))))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, _GLF_IDENTITY(clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u), 1u * (clamp((subgroup_size) | 0u, (subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u))) | 0u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(102380u)))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), clamp(uint(uint(subgroup_size)), _GLF_IDENTITY(uint(uint(subgroup_size)), 0u ^ (uint(uint(subgroup_size)))), uint(uint(subgroup_size))))), (subgroup_size) | 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / _GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))))))), ~ (~ _GLF_IDENTITY(((subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u))) | 0u, _GLF_IDENTITY(clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u), 1u * (clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(102380u)))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | 0u), (subgroup_size) | 0u))))))))))), 0u ^ (((subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u))) | 0u, _GLF_IDENTITY(clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u), 1u * (clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, clamp((subgroup_size) | 0u, (subgroup_size) | 0u, (subgroup_size) | 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(102380u)))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)) + 0u)) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | 0u), (subgroup_size) | 0u)))))))))))))))) - (0u ^ 0u))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))))), ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))))))) ^ 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), clamp((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | 0u)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | 0u)) ^ 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), max(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), 0u ^ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), ~ (~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), ~ (~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), min(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))))))))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))))), (true ? (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))) - 0u))) : _GLF_FUZZED(virtual_gid)))))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (false ? _GLF_FUZZED(workgroup_base) : 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), mix(float(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))))), float(_GLF_FUZZED(-3.9)), bool(false))))).y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0, (0) + 0) ^ 0) << 0), max(_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0) ^ 0, (_GLF_IDENTITY(0, (0) + 0) ^ 0) << 0)) << 0), _GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0, (0) + 0) ^ 0) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(-5142.3017) : float(1.0))), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(_GLF_IDENTITY(true, (true) && true)))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0)), _GLF_IDENTITY(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), 0.0 + (_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0))), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0)), injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)), (true ? mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-3.3))))), 1.0), max(clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) * 1.0))), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0), clamp(clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0)), bool(true))), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))))) - 0.0))), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.9, float(vec2(_GLF_IDENTITY(-0.9, clamp(-0.9, _GLF_IDENTITY(-0.9, (-0.9) / 1.0), -0.9)), 1.0))))), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0)))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(-8.7)), float(mat2x4(float(_GLF_FUZZED(-8.7)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), bool(false)), min(mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(-8.7)), float(mat2x4(float(_GLF_FUZZED(-8.7)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), bool(false)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(-8.7)), float(mat2x4(float(_GLF_FUZZED(-8.7)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), bool(false)))))), 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))))), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9), _GLF_FUZZED(-0.9)))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))))), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), 1.0)), injectionSwitch.y))))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((475.525))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, 1.0 * (1.0)))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) + 0.0), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))), 1.0)), injectionSwitch.y))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
          continue;
         buf[virtual_gid] = _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))));
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)))))))) || false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           break;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) && true))))))
              continue;
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.8))) > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(49538))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(1, ~ (~ (1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             return;
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                return;
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec2(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec2(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 0.0, 0.0))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) || false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), max((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), clamp((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))), _GLF_IDENTITY(~ (~ (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))), ~ (_GLF_IDENTITY(~ (~ (~ (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), (_GLF_IDENTITY(~ (~ (~ (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), (_GLF_IDENTITY(~ (~ (~ (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), (~ (~ (~ (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))) + 0)) ^ 0)) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
}
