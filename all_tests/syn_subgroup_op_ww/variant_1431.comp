#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((0.7 * -66.24)) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((0.7 * -66.24)) : injectionSwitch.y))))))) || false)), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true)) || false)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
          {
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))), clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))), clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(floatBitsToInt(-2.6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), true && (((false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u);
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), vec2(mat4x3(vec2(mat3x4(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))).x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(1.0))), exp(0.0), 0.0, 0.0, 0.0, abs(1.0)))).x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.9)), bool(false)))))))))), false))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 ^ 1))); _injected_loop_counter ++)
    {
     GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.y = subgroup_local_id;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (-44693 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) ^ 0)), ~ (2)))))), 0))))))), (_GLF_IDENTITY(((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) ^ 0)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))), (~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))) << 0))), clamp(int(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))), (~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))) << 0))), int(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))), (~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))) << 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))), (~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))) << 0))), (int(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))), (~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))) << 0)))) | 0))), 0))))))), min((_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), 0)))))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), 0)))))), ~ (~ (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), 0)))))), max((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), 0)))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (false ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), 0)))))))))))) >> 0)), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec2(-85793, -28890)) : ivec2(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))))), 0)))))))))) + 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), cos(vec2(0.0, 0.0)) * (mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x) : GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uint(false)))) + (workgroup_id)), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) >> 0u)))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z) | (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base ^ workgroup_base)) : GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base ^ workgroup_base)) : GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size)))).z, (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z) | (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z))) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z) << 0u))), (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x * GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z) + 0u), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x * GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x * GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z) * 1u)) + 0u) + GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.y;
 do
  {
   GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u | (min(virtual_gid, virtual_gid))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && (false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && _GLF_IDENTITY(true, (true) || false)))));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0)))), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x, uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x, 0u, 0u), ~ (~ (uvec3(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x, 0u, 0u)))))), (true ? GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.x : _GLF_FUZZED(workgroup_size))) * GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, uvec3(uvec4(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(1u, (1u) - 0u)))), GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size)))).y + 1), ((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, uvec3(uvec4(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, 1u))), GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size)))).y + 1)) * 1u) % GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.y + 1 < GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size.z)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.08), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(74.89, vec2(-5002.5234, -5723.6998))))).y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(atomicMin(_injected_loop_counter, _injected_loop_counter)))), _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) >> 0), (0 << _GLF_IDENTITY(int(8), int(8))), 0, 1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))); _injected_loop_counter --)
      {
       do
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) << (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1) | 0)));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = (0 & -77053); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(3), int(3))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) - 0)), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) << 0), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, int(ivec3(3, 1, 0))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 | 0, clamp(0 | 0, 0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0)))), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64259) : _GLF_IDENTITY(0, (0) ^ 0))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0)))))), (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))) | (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))))))), (0 | 0), 0, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64259) : _GLF_IDENTITY(0, (0) ^ 0))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0)))))), (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))) | (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))))))), (0 | 0), 0, 1))))) + 0)))) / 1)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64259) : _GLF_IDENTITY(0, (0) ^ 0))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0)))))), (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))) | (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))))))), (0 | 0), 0, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64259) : _GLF_IDENTITY(0, (0) ^ 0))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0)))))), (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))) | (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0, 0))))))))))), (0 | 0), 0, 1))))) + 0)))) / 1))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, min((int(3)) - 0, (int(3)) - 0)))), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 | (3))) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 ^ (3))) / 1)))), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), _GLF_IDENTITY((0 | 0), (true ? (0 | 0) : _GLF_FUZZED(-39025))), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(ivec2(3, 1)))) | 0)), int(3)), (0 | 0), 0, 1)))), int(int((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(ivec2(3, 1)))) | 0)), int(3)), (0 | 0), 0, 1)))))))))) / 1)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(int(3))), 0 | (int(int(int(3))))))), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) ^ 0)) - 0), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, (false ? _GLF_FUZZED(29676) : (0) ^ 0)))) + 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << 0)), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))))), (0 >> _GLF_IDENTITY(int(5), int(5)))))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (0 | 0) + (3)))), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ((83094 & 0) << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) << 0))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) - 0)) - 0), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), _GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), (int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))) | (_GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), (_GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), min(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))) - (0 >> _GLF_IDENTITY(int(5), int(5)))))))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), clamp(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))))) / 1)))))))) << _GLF_IDENTITY(0, (0) << 0)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, ~ (~ (3)))))), int(3))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) - 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))), 0, 1), (ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))), 0, 1)) ^ ivec4(0, 0, 0, 0))))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) | (3)))))), (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))), 0, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), 0 + (~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), max(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3))))))) | (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))))), int(ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), int(3)), (0 | 0), 0, 1)))))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / _GLF_IDENTITY(1, (1) - (0 | 0)))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / 1)))), (0 | 0), 0, 1)))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / 1)))), (0 | 0), 0, 1)))), 1, 1), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / 1)))), (0 | 0), 0, 1)))), 1, 1), ivec3(ivec4(ivec3((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / 1)))), (0 | 0), 0, 1)))), 1, 1), 0))))))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (_GLF_IDENTITY(int(3), (int(3)) + 0))), int(3)), (0 | 0), 0, 1)))), ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (_GLF_IDENTITY(int(3), (int(3)) + 0))), int(3)), (0 | 0), 0, 1))))) | ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (_GLF_IDENTITY(int(3), (int(3)) + 0))), int(3)), (0 | 0), 0, 1))))))))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21704) : 0)) >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21704) : 0)) >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), 1, (0 >> _GLF_IDENTITY(int(7), int(7))), 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 0 | 0, 0 | 0))), 0, 1)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))), ~ (~ (clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))), (true ? _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))) : _GLF_FUZZED(_injected_loop_counter)))) >> 0)), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, 3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))))))))) / 1)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), 1 * (0 >> _GLF_IDENTITY(int(3), int(3)))), min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (0)) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 ^ ((3))) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 1)))), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(3, min(3, 3)))), 3, 3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))), min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))), 0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-6791) : _GLF_IDENTITY(int(3), int(3)))), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))), (int(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-6791) : _GLF_IDENTITY(int(3), int(3)))), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1))))) ^ (0 | 0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, 0 + (3))))))), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)))))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, _GLF_IDENTITY(int(ivec4((0) << 0, 0, 1, 0)), (int(ivec4((0) << 0, 0, 1, 0))) / 1)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, 3)))), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)) | 0), 0, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) | (_GLF_IDENTITY(min(1, 1), (min(1, 1)) << 0)))))))) - 0) : _GLF_FUZZED(-53088)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), 0 ^ (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | _GLF_IDENTITY(0, int(ivec2(0, 0)))), 0, _GLF_IDENTITY(1, min(1, 1)))), 0 + (_GLF_IDENTITY(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | _GLF_IDENTITY(0, int(ivec2(0, 0)))), 0, _GLF_IDENTITY(1, min(1, 1)))), max(int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | _GLF_IDENTITY(0, int(ivec2(0, 0)))), 0, _GLF_IDENTITY(1, min(1, 1)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | _GLF_IDENTITY(0, int(ivec2(0, 0)))), 0, _GLF_IDENTITY(1, min(1, 1)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)), (true ? int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)) : _GLF_FUZZED((bitCount(63049u) >> _injected_loop_counter)))))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), min((3), _GLF_IDENTITY((3), ((3)) + 0))) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) >> 0), _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, ~ (~ (_GLF_IDENTITY((int(3)) - 0, int(ivec3((int(3)) - 0, 0, 1)))))))), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-24335) : int(3)))), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) >> 0)) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 | 0, ~ (~ (0 | 0)))), 0, 1))))))) / 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(3), int(3))) << ((~ -86116) & 0)), (0 | _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) | (0)) | (0))), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), min(1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), int(ivec4(_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), clamp(~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0))), int(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(3), max(int(3), int(3))), 0, (1 | 1), 1), (ivec4(_GLF_IDENTITY(int(3), max(int(3), int(3))), 0, (1 | 1), 1)) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | 0)), 0 ^ (int(3)))), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3 : _GLF_FUZZED(max(-22709, -44362)))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (3)))), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1)))), ~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), (0 | 0), 0, 1))))))) / 1)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) << 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_injected_loop_counter))))), (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1)), 0 + ((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1)))) >> _GLF_IDENTITY(0, max(0, 0))), 0 + (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_injected_loop_counter))))), (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1)), 0 + ((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1)))) >> _GLF_IDENTITY(0, max(0, 0))))), (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(0, ~ (~ (0))), 0, 1)), _GLF_IDENTITY(int(ivec2(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 + (~ (_injected_loop_counter))))), (_injected_loop_counter) | (_injected_loop_counter)), 0, 0, 1)), 1)), int(ivec3(int(ivec2(int(ivec4(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), clamp((_injected_loop_counter), (_injected_loop_counter), (_injected_loop_counter))), min((_injected_loop_counter), (_injected_loop_counter))) | (_injected_loop_counter)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | (0)), 0, 1)), 1)), 0, 0))))) != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(-914.020, 689.141)))).y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, true, true)), true)), false || (bool(bvec2(bool(bvec4(false, true, true, true)), true))))))));
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), false || ((! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), _GLF_IDENTITY((next_virtual_gid) << 0u, max((next_virtual_gid) << 0u, (next_virtual_gid) << 0u)))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | (2))), (uint(_GLF_IDENTITY(2, (2) | (2)))) >> 0u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | (2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min((2), (2)))))), clamp(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min((2), (2)))))), ((uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min((2), (2))))))) << 0u), (uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min((2), (2)))))), (uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min((2), (2)))))))) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(_GLF_IDENTITY(-683.525, clamp(-683.525, -683.525, _GLF_IDENTITY(-683.525, clamp(-683.525, _GLF_IDENTITY(-683.525, (false ? _GLF_FUZZED(-597.509) : -683.525)), -683.525))))), clamp(uint(_GLF_IDENTITY(-683.525, clamp(-683.525, -683.525, _GLF_IDENTITY(-683.525, clamp(-683.525, _GLF_IDENTITY(-683.525, (false ? _GLF_FUZZED(-597.509) : -683.525)), -683.525))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(-683.525, clamp(-683.525, -683.525, _GLF_IDENTITY(-683.525, clamp(-683.525, _GLF_IDENTITY(-683.525, (false ? _GLF_FUZZED(-597.509) : -683.525)), -683.525))))), uint(uvec4(uint(_GLF_IDENTITY(-683.525, clamp(-683.525, -683.525, _GLF_IDENTITY(-683.525, clamp(-683.525, _GLF_IDENTITY(-683.525, (false ? _GLF_FUZZED(-597.509) : -683.525)), -683.525))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), uint(_GLF_IDENTITY(-683.525, clamp(-683.525, -683.525, _GLF_IDENTITY(-683.525, clamp(-683.525, _GLF_IDENTITY(-683.525, (false ? _GLF_FUZZED(-597.509) : -683.525)), -683.525)))))))) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(9909u) : _GLF_IDENTITY(0u, (0u) | (0u))))) | (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | (2))), ~ (~ (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) | (2)))))))), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
