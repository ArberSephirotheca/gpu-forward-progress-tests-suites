#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), true && (! (! ((false)))))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> (uvec3(0u, 0u, 0u) ^ (uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(38.77)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(38.77)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))).x > injectionSwitch.y)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 0u)) - uvec3(0u, 0u, 0u)))), 1u, 1u, 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), max(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), max(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))))), (true ? _GLF_IDENTITY(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), max(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))))) : _GLF_FUZZED(uvec4(48925u, 176488u, 45521u, 30167u)))), _GLF_IDENTITY(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), max(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))))), _GLF_IDENTITY(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), max(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u)))))))))), clamp(_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), (~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), (true ? ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(101372u, 11230u, 11333u, 106610u)))), (_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), (true ? ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(101372u, 11230u, 11333u, 106610u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), (true ? ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(101372u, 11230u, 11333u, 106610u)))), max(_GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), (true ? ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(101372u, 11230u, 11333u, 106610u)))), _GLF_IDENTITY(~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))), (true ? ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(101372u, 11230u, 11333u, 106610u)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 1u), min(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 1u), (uvec4(subgroup_local_id, 1u, 1u, 1u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec4(subgroup_local_id, 1u, 1u, 1u))))), uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((~ (~ (uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(1u, uint(uint(1u))), 1u)))), (false ? _GLF_FUZZED(uvec4(4670u, 9771u, 70906u, 123585u)) : _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), clamp(~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (uvec4(subgroup_local_id, 1u, 1u, 1u)), ~ (uvec4(subgroup_local_id, 1u, 1u, 1u)))))), min((~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u)))), (~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))))))))))))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))))))) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))))))) | 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))))))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))))))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))), 1 * (_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))))))) | 0)))))))) >> 0), max(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), max(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), clamp(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), _GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), _GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0)))))))) / 1.0), injectionSwitch[1])).y)) ? 4 : _GLF_FUZZED(-51933))), _GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-51933))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((true ? 64 : _GLF_FUZZED(84931)), ((true ? 64 : _GLF_FUZZED(84931))) ^ 0))) | (64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-38752))))) < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(5481))), clamp(1, 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))))) < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) || _GLF_IDENTITY(false, (false) || false)))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))))), false, true))), false))))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true))))))))) || false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false))) || false)))), true), _GLF_IDENTITY(true, ! (! (true))), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), false)))))), true)))), true, true)), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), log(1.0), 0.0))).x > injectionSwitch.y, false)), true))))))))) || false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false))) || false)))), true), _GLF_IDENTITY(true, ! (! (true))), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))), true && _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec3((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false))))), true), true)), false)))))), true)))), true, true)), false))))))))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat2x3(max(injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 0.0, 0.0)))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), injectionSwitch))) + vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), true, false)))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - tan(vec2(0.0, 0.0)), (true ? (injectionSwitch) - tan(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x2(vec2(0.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(vec2(0.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))) : _GLF_FUZZED((vec2(9.1, 529.174) * 66.67))))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9529.1528) : injectionSwitch.y)), injectionSwitch.y)))), true, false)))))), ! (! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1500.4054))), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(2452.4530), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))), true, _GLF_IDENTITY(false, false || (false))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))), true, false))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)))))))), true, _GLF_IDENTITY(false, false || (false))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))) || false), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))))))), true, false))))))))))))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) / 1u), 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, (_GLF_IDENTITY(1 & 1, clamp(1 & 1, 1 & 1, 1 & 1)))), ~ (~ (ivec2(4, (1 & 1))))), max(ivec2(4, (1 & 1)), ivec2(4, (1 & 1)))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8965.2715, mix(float(_GLF_IDENTITY(-8965.2715, mix(float(_GLF_FUZZED(2.7)), float(-8965.2715), bool(true)))), float(_GLF_FUZZED(-3.8)), bool(false)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(628.914, -25.35)) : (injectionSwitch) * mat2(1.0)))), injectionSwitch)).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
