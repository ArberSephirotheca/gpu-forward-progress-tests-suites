#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(19.95) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), (_GLF_IDENTITY(bool(bvec2((false), false)), bool(bvec2(bool(bvec2((false), false)), true)))) && true))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(_GLF_IDENTITY(-984.889, (-984.889) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(-984.889))))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(_GLF_IDENTITY(-984.889, (-984.889) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(-984.889))))) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(_GLF_IDENTITY(-984.889, (-984.889) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(-984.889))))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(_GLF_IDENTITY(-984.889, (-984.889) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(-984.889))))) - 0.0) > injectionSwitch.y))), true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))) * subgroup_size) - 0u) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (! (false)))), bool(_GLF_IDENTITY(bvec2(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (! (false))), false || (! (false || (! (false)))))), false || (! (_GLF_IDENTITY(! (false || (! (false))), true && (! _GLF_IDENTITY((false || (! (false))), bool(bool((false || (! (false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (! (false)))), bool(_GLF_IDENTITY(bvec2(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (! (false))), false || (! (false || (! (false)))))), false || (! (_GLF_IDENTITY(! (false || (! (false))), true && (! _GLF_IDENTITY((false || (! (false))), bool(bool((false || (! (false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (! (false)))), bool(_GLF_IDENTITY(bvec2(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (! (false))), false || (! (false || (! (false)))))), false || (! (_GLF_IDENTITY(! (false || (! (false))), true && (! _GLF_IDENTITY((false || (! (false))), bool(bool((false || (! (false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (! (false)))), bool(_GLF_IDENTITY(bvec2(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (! (false))), false || (! (false || (! (false)))))), false || (! (_GLF_IDENTITY(! (false || (! (false))), true && (! _GLF_IDENTITY((false || (! (false))), bool(bool((false || (! (false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) && true, bool(bool(_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true)))))), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(bool(bvec2(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false)), bool(bool(bool(bvec2(! (! (false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false)))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (false || (! (false)))), true && (! (! _GLF_IDENTITY((false || (! (false))), true && ((false || (! (false)))))))), true), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (! (false))), false || (! (false || (! (false)))))), false || (! (_GLF_IDENTITY(! (false || (! (_GLF_IDENTITY(false, (false) || false)))), true && (! _GLF_IDENTITY((false || (! (false))), bool(bool((_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)))), (int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0))))) ^ 0)) * 1)) | 1))), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / (0 | 1))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / (0 | 1))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / (0 | 1)))) - 0u))), (192258u & 0u)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), (1.0) / 1.0), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), clamp(float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9440.8125)), float(0.0), bool(true))), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - 0.0))))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), clamp(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mat4(1.0) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), (mat4(1.0) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) * mat4(1.0))))), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-0.2), _GLF_FUZZED(-62.95), (vec4(0.0, 1.0, 1.0, 1.0))[2], (vec4(0.0, 1.0, 1.0, 1.0))[3]), vec4((vec4(0.0, 1.0, 1.0, 1.0))[0], (vec4(0.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(-68.98), _GLF_FUZZED(-25.43)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), mix(float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2253.8837)), bool(false)))), 1.0, 0.0)), max(float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 1.0, 1.0, 1.0)))), dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), 0.0, 0.0), max(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))), ((_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367))))) - 0.0) / 1.0), 0.0, 0.0), clamp(vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367), max(true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367), (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)) - 0.0)))))) / 1.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(vec2(0.0, 1.0)), clamp(float(vec2(0.0, 1.0)), _GLF_IDENTITY(float(vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(6933.0690)), float(float(vec2(0.0, 1.0))), bool(true))), float(vec2(0.0, 1.0))))))) : _GLF_FUZZED(9394.4367)))) / 1.0), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), 0.0, 0.0), vec4(mat2(vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), 0.0, 0.0)))))), vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367))), min(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))) : _GLF_FUZZED(9394.4367)))) / 1.0)) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 0.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.1) : 1.0)), 1.0))), 1.0, 0.0)))), float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(15.21, -1254.9571, 6.9, 4.5)) : vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat4(1.0) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(15.21, -1254.9571, 6.9, 4.5)) : vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0)))), (true ? mat4(1.0) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(15.21, -1254.9571, 6.9, 4.5)) : vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec4(8710.0281, 0.3, 5.4, 56.33))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && (false)))), true, false, false))) ? _GLF_FUZZED(subgroup_id) : uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true), bvec3(bvec4(bvec3(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))) && true), true), true))), false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))) ^ 0u)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) >> 0u)))), (_GLF_IDENTITY(clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) >> 0u)))), clamp(_GLF_IDENTITY(clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) >> 0u)))), (clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) >> 0u))))) - 0u), clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) >> 0u)))), clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) >> 0u))))))) / 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))), clamp(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))), ~ (~ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(27621))), (true ? 2 : _GLF_FUZZED(95796)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796)))), ((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796))))) | ((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796))))))))) ^ 0)), ~ (~ (uint(2))))))), (min(_GLF_IDENTITY(uint(2), max(uint(_GLF_IDENTITY(2, (2) | (2))), _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) ^ 0))) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u))), (clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) ^ 0))) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))) - 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(2, 2))), (false ? _GLF_FUZZED(subgroup_id) : uint(2))), _GLF_IDENTITY(~ (~ (uint(2))), _GLF_IDENTITY(clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))), clamp(clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))), _GLF_IDENTITY(clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))), clamp(clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796)))) ^ 0)), ~ (~ (uint(2)))))))) | (_GLF_IDENTITY(min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), clamp((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(2, (2) * 1))))))) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(((uint(2))) / 1u, (((uint(2))) / 1u) | (((uint(2))) / 1u))) ^ 0u)))))), min(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(2))), (true ? (~ (uint(2))) : _GLF_FUZZED(uvec2(130710u, 16053u)[0]))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(2))), (true ? (~ (uint(2))) : _GLF_FUZZED(uvec2(130710u, 16053u)[0]))), (~ _GLF_IDENTITY((~ (uint(2))), (true ? (~ (uint(2))) : _GLF_FUZZED(uvec2(130710u, 16053u)[0])))) | (~ _GLF_IDENTITY((~ (uint(2))), (true ? (~ (uint(2))) : _GLF_FUZZED(uvec2(130710u, 16053u)[0]))))), ~ _GLF_IDENTITY((~ (uint(2))), (true ? (~ (uint(2))) : _GLF_FUZZED(uvec2(130710u, 16053u)[0])))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-97958)))) | (2)), _GLF_IDENTITY((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796)))) ^ 0, ((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796)))) ^ 0) | 0))), _GLF_IDENTITY(~ (~ (uint(2))), max(~ (~ (uint(2))), ~ (~ (uint(2))))))))), (true ? _GLF_IDENTITY(min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) >> 0u))), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), min((uint(2)), (uint(2)))) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))))), min(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(2)), (false ? _GLF_FUZZED(workgroup_size) : ~ (uint(2))))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ _GLF_IDENTITY((~ (uint(2))), max((~ (uint(2))), (~ (uint(2)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(95796)))) ^ 0)), ~ (~ (uint(2))))))), max(min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, ((uint(2)) ^ 0u) | (_GLF_IDENTITY((uint(2)) ^ 0u, clamp(_GLF_IDENTITY((uint(2)), ((uint(2))) + 0u) ^ 0u, (uint(2)) ^ 0u, (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) >> 0u)) ^ 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, ((uint(2)) ^ 0u) | (_GLF_IDENTITY((uint(2)) ^ 0u, clamp(_GLF_IDENTITY((uint(2)), ((uint(2))) + 0u) ^ 0u, (uint(2)) ^ 0u, (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) >> 0u)) ^ 0u)))))), ((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, ((uint(2)) ^ 0u) | (_GLF_IDENTITY((uint(2)) ^ 0u, clamp(_GLF_IDENTITY((uint(2)), ((uint(2))) + 0u) ^ 0u, (uint(2)) ^ 0u, (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) >> 0u)) ^ 0u))))))) | ((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, ((uint(2)) ^ 0u) | (_GLF_IDENTITY((uint(2)) ^ 0u, clamp(_GLF_IDENTITY((uint(2)), ((uint(2))) + 0u) ^ 0u, (uint(2)) ^ 0u, (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) >> 0u)) ^ 0u))))))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, clamp((uint(2)) ^ 0u, (uint(2)) ^ 0u, (uint(2)) ^ 0u)))))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))))), min(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ _GLF_IDENTITY((uint(2)), uint(uvec4((uint(2)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))), ~ (~ (uint(2)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (true ? 2 : _GLF_FUZZED(95796)))) ^ 0)), ~ (~ (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) - 0u), uint(2))))))))), min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), clamp(~ (uint(2)), ~ (uint(2)), ~ (uint(2))))))) ^ 0u)), clamp((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), max((_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) | 0u), (uint(_GLF_IDENTITY(2, (2) * 1))) ^ 0u)))), (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u)))))), min(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(95796), ~ (~ (true ? 2 : _GLF_FUZZED(95796))))))) ^ 0)), ~ (~ (uint(2))))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), _GLF_IDENTITY((~ _GLF_IDENTITY((uint(2)), ((uint(2))) | (_GLF_IDENTITY((uint(2)), uint(uvec4((uint(2)), 0u, 0u, 1u)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (uint(2)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((~ (uint(2)))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(~ ((~ _GLF_IDENTITY((uint(2)), 1u * ((uint(2)))))), 1u))))) | 0u))), _GLF_IDENTITY(uint(2), (uint(2)) * 1u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false, true, false)))))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}
