#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), false, false)), (bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), false, false))) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3088.2749)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec3(bvec2(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true)), true))))), bvec2(bvec2(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(73032u))), bool(false)))), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), true && (bool(! (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) / 1))))], injectionSwitch[1])).y), true))))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(73032u))), bool(false)))), bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(73032u))), bool(false)))), true))), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, cos(0.0), 0.0, 1.0, abs(0.0), 1.0, 0.0))))).y)), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sin(0.0), 1.0, 0.0))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), true && (bool(! (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) / 1))))], injectionSwitch[1])).y), _GLF_IDENTITY(true, true && (true))))), bvec2(bvec4(bvec2(bvec2(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) / 1))))], injectionSwitch[1])).y), _GLF_IDENTITY(true, true && (true))))), false, false))))))) && true) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, false, false, false))), ! (! (bool(bool(bvec4(false, false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7965.4575), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-126.782)), bvec2(true, false))), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(60.20) : injectionSwitch.x))) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.62), _GLF_FUZZED(1.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(9.7)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true))).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, true)), true, false, false)), (bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true, false, false))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(vec2(-2.2, 5291.4587)) : mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1], (false ? _GLF_FUZZED(7.8) : ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]))), bvec2(false, true)))))))).y)) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9173.0551)), bool(false))), 1.0, 0.0), vec3(vec3(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9173.0551)), bool(false))), 1.0, 0.0)))), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, 1.0, 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), false))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), false)))))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED((vec2(-5.6, -783.788) + -150.124)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED((vec2(-5.6, -783.788) + -150.124)), cos(0.0), 0.0, sqrt(1.0), 0.0, log(1.0), 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), exp(0.0))), 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))) / 1u))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(4822.7122) : float(0.0))))), 0.0)), 0.0)), (float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(4822.7122) : float(0.0))))), 0.0)), 0.0))) / 1.0), clamp(float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), tan(0.0), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(mat4x2(0.0, 1.0, 0.0, 1.0, exp(0.0), tan(0.0), 0.0, _GLF_IDENTITY(exp(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(1974.3214) : exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))))))))))))))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sin(0.0)))))), 0u))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) * _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) - 0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u, 6u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (4u) << 0u), _GLF_IDENTITY(4u, (4u) << 0u)))))), 0u), (uvec3(6u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(0u, (0u) ^ 0u))) | uvec3(0u, 0u, 0u))))), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u, 6u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), (uvec3(6u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(0u, (0u) ^ 0u))) | uvec3(0u, 0u, 0u))))), uint(6u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(virtual_gid) : 6u))))), 6u)), 6u, 6u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(6u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))), _GLF_IDENTITY(0u, (0u) ^ 0u)), ~ (~ (uvec3(6u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))), _GLF_IDENTITY(0u, (0u) ^ 0u)))))) | uvec3(0u, 0u, 0u))))), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), max(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), _GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)))), _GLF_IDENTITY(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 0u | (_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)))))), 6u, 6u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (uvec3(6u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) >> 0u)), uint(4u))), _GLF_IDENTITY(0u, (0u) ^ 0u))) | uvec3(0u, 0u, 0u))))), uint(6u))) * 1u)))), ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (6u) | (6u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (uvec3(6u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, 4u))), uint(4u)), 1u * (1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) | uvec3(0u, 0u, 0u))))), uint(6u)))) | ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), (0u))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(6u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) ^ 0u))), (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) ^ 0u)))) | (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) ^ 0u)))))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))) ^ 0u, ~ (~ ((_GLF_IDENTITY(uint(4u), uint(4u))) ^ 0u))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uvec3((0u), 1u, 0u))))), (0u))) | (0u))), (_GLF_IDENTITY(uvec3(6u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, 0u | (4u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, 0u | (4u))), clamp(~ (_GLF_IDENTITY(4u, 0u | (4u))), ~ (_GLF_IDENTITY(4u, 0u | (4u))), ~ (_GLF_IDENTITY(4u, 0u | (4u)))))) ^ 0u)))), uint(4u))), 0u), ~ (_GLF_IDENTITY(~ (uvec3(6u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u)), (~ (uvec3(6u, ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))) ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))))), 0u)))))))))))) | uvec3(0u, 0u, 0u))))), uint(6u))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u), 0u, 0u)))))) >> (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u), max(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) >> 0u))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size))), (true ? _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) : _GLF_FUZZED((~ usubBorrow(workgroup_base, subgroup_local_id, subgroup_id))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.y), bool(true)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.y), bool(true))))))) && true)), true, true, true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 0, _GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), (97822 & _GLF_IDENTITY((0 & 1682), ~ (~ (_GLF_IDENTITY((0 & 1682), 1 * ((0 & 1682)))))))))))))), ((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, 0 | (1)), 0, 0, _GLF_IDENTITY(1, (1) >> 0)))))) ^ 0) ^ 0))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), max(0 ^ (1), 0 ^ (1))))))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(_injected_loop_counter))), (64) ^ 0), 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false), false))), true))))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false))))))))) && true))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))), true, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), _GLF_IDENTITY(clamp(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), int(6)), (0 | 0), 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(int(6), int(6)), (0 | 0), 1))))))) ^ (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), min(_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (1 * (int(_GLF_IDENTITY(2, max(2, 2))))) ^ 0), 1 * (int(_GLF_IDENTITY(2, max(2, 2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (int(2))))), int(2)), (_GLF_IDENTITY(clamp(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(_injected_loop_counter)))) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (int(2))))), int(2)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((clamp(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ (_GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), (((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (_GLF_IDENTITY(int(2), max(int(2), int(2))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - ((-28303 & 0) >> _GLF_IDENTITY(int(4), int(4)))), int(6))) ^ (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (true ? 1 * (int(_GLF_IDENTITY(2, max(2, 2)))) : _GLF_FUZZED(_injected_loop_counter)))) | (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter)))) >> 0))), int(2))), (_GLF_IDENTITY((clamp(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ (_GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), (((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (_GLF_IDENTITY(int(2), max(int(2), int(2))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - ((-28303 & 0) >> _GLF_IDENTITY(int(4), int(4)))), int(6))) ^ (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (true ? 1 * (int(_GLF_IDENTITY(2, max(2, 2)))) : _GLF_FUZZED(_injected_loop_counter)))) | (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter)))) >> 0))), int(2))), ((clamp(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ (_GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), (((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (_GLF_IDENTITY(int(2), max(int(2), int(2))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - ((-28303 & 0) >> _GLF_IDENTITY(int(4), int(4)))), int(6))) ^ (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (true ? 1 * (int(_GLF_IDENTITY(2, max(2, 2)))) : _GLF_FUZZED(_injected_loop_counter)))) | (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter)))) >> 0))), int(2)))) | (_GLF_IDENTITY((clamp(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ (_GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), (((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (_GLF_IDENTITY(int(2), max(int(2), int(2))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - ((-28303 & 0) >> _GLF_IDENTITY(int(4), int(4)))), int(6))) ^ (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (true ? 1 * (int(_GLF_IDENTITY(2, max(2, 2)))) : _GLF_FUZZED(_injected_loop_counter)))) | (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter)))) >> 0))), int(2))), 1 * ((clamp(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ (_GLF_IDENTITY(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7))), (((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 * (_GLF_IDENTITY(int(2), max(int(2), int(2))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | ((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - ((-28303 & 0) >> _GLF_IDENTITY(int(4), int(4)))), int(6))) ^ (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (_GLF_IDENTITY(1 * (int(_GLF_IDENTITY(2, max(2, 2)))), (true ? 1 * (int(_GLF_IDENTITY(2, max(2, 2)))) : _GLF_FUZZED(_injected_loop_counter)))) | (1 * (int(_GLF_IDENTITY(2, max(2, 2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)))))))) * (int(2))))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter)))) >> 0))), int(2)))))))) * 1))) + 0)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(_GLF_IDENTITY(ivec3(int(2), 0, _GLF_IDENTITY(0, min(0, 0))), ~ (~ (_GLF_IDENTITY(ivec3(int(2), 0, _GLF_IDENTITY(0, min(0, 0))), ivec3(ivec3(ivec3(int(2), 0, _GLF_IDENTITY(0, min(0, 0)))))))))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.47, -4688.4605)) : injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.1) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1765.7872)), float(0.0), bool(true))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)), mat3(1.0) * (vec3(0.0, 0.0, tan(0.0)))))), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))) * mat2(1.0)))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(34.07) : 0.0)), 1.0, 1.0, log(1.0)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.47, -4688.4605)) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, tan(0.0)), mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(tan(0.0), float(vec2(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0)))) / 1.0), 0.0)))))))), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * mat2(1.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(34.07) : 0.0)), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(34.07) : 0.0))), bool(true))), 1.0, 1.0, log(1.0)))).x > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.47, -4688.4605)) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, tan(0.0)), mat3(1.0) * (vec3(0.0, 0.0, tan(0.0)))))), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * mat2(1.0)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(34.07) : 0.0)), 1.0, 1.0, log(1.0)))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.47, -4688.4605)) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, tan(0.0)), mat3(1.0) * (vec3(0.0, 0.0, tan(0.0)))))), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * mat2(1.0)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(34.07) : 0.0)), 1.0, 1.0, log(1.0)))).x > injectionSwitch.y))), false || (bool(false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.47, -4688.4605)) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, tan(0.0)), mat3(1.0) * (vec3(0.0, 0.0, tan(0.0)))))), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * mat2(1.0)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(34.07) : 0.0)), 1.0, 1.0, log(1.0)))).x > injectionSwitch.y))))))))) || false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-2848.8732 - -621.113)) : injectionSwitch.x)) > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || false, bool(bool((false) || false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false || (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), mix(vec2(_GLF_FUZZED((true ? _GLF_IDENTITY(vec3(0.7, -2221.9463, _GLF_IDENTITY(2155.8906, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(2155.8906, min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2((vec2(_GLF_IDENTITY(2155.8906, min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(7.1), (vec2(_GLF_IDENTITY(2155.8906, min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), true)))))), mat3(1.0) * (vec3(0.7, -2221.9463, _GLF_IDENTITY(2155.8906, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(2155.8906, min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(2155.8906, (2155.8906) - 0.0), min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(vec2(-2.7, -3.4)) : vec2(_GLF_IDENTITY(_GLF_IDENTITY(2155.8906, (2155.8906) - 0.0), min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)))))[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(7.1), (vec2(_GLF_IDENTITY(2155.8906, min(2155.8906, 2155.8906)), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(false, true)))))))).z : -8.5)), _GLF_FUZZED(8528.1462)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), 0))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, true))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, true)))))))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, true))))))))))))) || false)), false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(-3863.8421, -46.80), (vec2(-3863.8421, -46.80)) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(-8516.3276, (-8516.3276) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.1) : 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-792.935) : _GLF_IDENTITY(-8516.3276, (-8516.3276) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.1) : 0.0))))), -552.988))) : injectionSwitch)).x, (false ? _GLF_FUZZED(4.5) : _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(-3863.8421, -46.80), (_GLF_IDENTITY(vec2(-3863.8421, -46.80), vec2(mat3x2(_GLF_IDENTITY(vec2(-3863.8421, -46.80), clamp(vec2(-3863.8421, -46.80), vec2(-3863.8421, -46.80), vec2(-3863.8421, -46.80))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0)))) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(-8516.3276, (-8516.3276) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.1) : 0.0))), _GLF_IDENTITY(-552.988, (-552.988) / 1.0)))) : injectionSwitch)).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.1)), bool(false))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), ((! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
