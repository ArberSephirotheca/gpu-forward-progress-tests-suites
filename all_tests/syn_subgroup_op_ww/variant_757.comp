#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat3x4 _f0;
} ;

struct _GLF_struct_5 {
 float _f0;
 vec4 _f1;
 bool _f2;
 mat2x3 _f3;
 bvec2 _f4;
 vec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat2 _f1;
 mat3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 bool _f0;
 _GLF_struct_3 _f1;
 uint workgroup_id;
 mat4x3 _f2;
 _GLF_struct_4 _f3;
 bvec4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat3 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 ivec4 _f4;
 uvec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 _GLF_struct_7 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(71.77)), bool(false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), _GLF_IDENTITY(bool(bvec4(! (false || (true)), true, false, false)), ! (! (bool(bvec4(! (false || (true)), true, false, false))))))))) ? _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(71.77)), bool(false)), (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(71.77)), bool(false)), clamp(mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - 0.0), float(_GLF_FUZZED(71.77)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(71.77)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(71.77)), bool(false))))) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6852.2546), (_GLF_IDENTITY(_GLF_FUZZED(6852.2546), clamp(_GLF_FUZZED(6852.2546), _GLF_FUZZED(6852.2546), _GLF_IDENTITY(_GLF_FUZZED(6852.2546), mix(float(_GLF_FUZZED(-5559.4755)), float(_GLF_FUZZED(6852.2546)), bool(true)))))) + 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, max(_GLF_IDENTITY(8.6, (8.6) / 1.0), 8.6)))), clamp(float(_GLF_FUZZED(8.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(8.6), (false ? _GLF_FUZZED(-74.80) : _GLF_FUZZED(8.6)))), min(float(_GLF_FUZZED(8.6)), float(_GLF_FUZZED(8.6)))), float(_GLF_FUZZED(8.6)))), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), tan(0.0) + (_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), max(float(_GLF_IDENTITY(_GLF_FUZZED(8.6), (_GLF_IDENTITY(_GLF_FUZZED(8.6), clamp(_GLF_FUZZED(8.6), _GLF_IDENTITY(_GLF_FUZZED(8.6), (true ? _GLF_FUZZED(8.6) : _GLF_FUZZED(-14.52))), _GLF_FUZZED(8.6)))) + 0.0)), float(_GLF_FUZZED(8.6)))))), float(injectionSwitch.x), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.6), (_GLF_IDENTITY(_GLF_FUZZED(8.6), (_GLF_FUZZED(8.6)) - 0.0)) * 1.0)), float(injectionSwitch.x), bool(true))))))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) && true))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))))).x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize), ~ (~ (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))))).x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))))).x))));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_2(ivec4(1), _GLF_struct_0(true, _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(mat3(1.0)), transpose(transpose(mat3(mat3(1.0)))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - length(vec3(0.0, 0.0, 0.0))), 0.0)), 0.0) + (mat3(_GLF_IDENTITY(mat3(mat3(1.0)), _GLF_IDENTITY(transpose(transpose(mat3(mat3(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(transpose(transpose(mat3(mat3(1.0)))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat3(mat3(1.0))))), transpose(transpose(transpose(transpose(transpose(mat3(mat3(1.0))))))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(((_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0))))))), transpose(transpose(transpose(transpose(mat3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(((_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0))))))), transpose(transpose(transpose(transpose(mat3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat3x4(((_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0))))))), transpose(transpose(transpose(transpose(mat3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (mat3x4(_GLF_IDENTITY(((_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0))))))), transpose(transpose(transpose(transpose(mat3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat3x4(((_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0))))))), transpose(transpose(transpose(transpose(mat3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), (mat3(1.0)) * mat3(1.0))))), mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8100.4775)), float(0.0), bool(true))), 1.0, 1.0, 0.0)), sqrt(sqrt(0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(_GLF_FUZZED(8838.6368)), bool(false))))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat2x3(min(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat2x3(min(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(min(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, sin(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, abs(1.0) * (1.0)), cos(0.0), 0.0, 1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 0.0, 1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0) : _GLF_FUZZED((- mat4(77.58, -8556.2227, -446.330, -6320.5855, 13.30, -2.3, -8451.7581, -25.29, 4.2, 163.184, -883.042, 6869.8033, -629.685, -4.9, 4.8, 3.2))))))))))), mat4x3(mat4(_GLF_IDENTITY(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-38.35)), bool(false)))), 0.0)), sqrt(sqrt(0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, cos(0.0), 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), 1.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), transpose(transpose(mat4x3(1.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5976.3166)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0 * (float(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0)), sqrt(sqrt(0.0)), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), (dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))) * 1.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, determinant(mat4(1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0))))) / 1.0), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), (dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0))))))))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, determinant(mat4(1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, sqrt(1.0))))) / 1.0)) / 1.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))))), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(99628, (99628) ^ 0)) : _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) - 0))), int(2))), _GLF_IDENTITY((41692 & 0), 0 | ((41692 & 0))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))), int(ivec4(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))), 1, 0, 0))), ~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))))))), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 0)), ~ (~ (int(ivec4(2, 1, 0, 0))))))), max(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-91823) : _GLF_IDENTITY(2, max(2, 2))))), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), int(_GLF_IDENTITY(ivec3(max(int(2), int(2)), 0, 1), min(ivec3(max(int(2), int(2)), 0, 1), ivec3(max(int(2), int(2)), 0, 1)))))))), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2))) << 0)), int(ivec2(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2)), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2))))), 1))))), (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (2) | _GLF_IDENTITY((2), ((2)) - 0))), int(2))), _GLF_IDENTITY((41692 & 0), 0 | ((41692 & 0))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) >> 0)))), int(2)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))), int(ivec4(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))), 1, 0, 0))), ~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) << 0)))))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | ((int(2)))) | (int(2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 0)), ~ (~ (int(ivec4(2, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec4(1, 0, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec4(0, 0, 0, 0)))), 0, 0))))))), max(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-91823) : _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), max(2, 2))))), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) * 1))), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), max(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), int(_GLF_IDENTITY(ivec3(max(int(2), int(2)), 0, 1), min(ivec3(max(int(2), int(2)), 0, 1), ivec3(max(int(2), int(2)), 0, 1)))))))), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2))) << 0)), int(ivec2(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2)), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2))))), 1))))) : _GLF_FUZZED(5251))))))), uvec4(_GLF_IDENTITY(1u, (1u) >> 0u)), ivec3(1)), _GLF_struct_1(mat4x2(1.0), uvec4(1u)), mat4x3(1.0)), mat3x2(1.0), bvec2(true), _GLF_struct_7(true, _GLF_struct_3(mat4(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), vec4(1.0), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat4x3((1.0), 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) + log(1.0)), 1.0, tan(0.0), 0.0, length(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1.0), max((1.0), (1.0))) : _GLF_FUZZED(9.7))), mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY((1.0), max((1.0), (1.0)))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, log(1.0) + (1.0)))), tan(0.0), 0.0, length(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), min((0.0), (0.0)))), 0.0)), max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), min((0.0), (0.0)))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), float(_GLF_FUZZED(-956.817)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0)), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)), min(vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)))), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.7))), 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-923.716)))) * ((vec4(1.0)) * mat4(1.0)), min(vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-4841.7214, 9.3, 3153.4614, 36.70, -77.15, -96.33, -2041.8528, 9332.4626, 641.116, -2.9, -6024.2021, 0.5, 25.44, -427.820, -6.0, -24.14)) : mat4(1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) * mat4(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), (true ? (vec4(1.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-740.138, float(mat4(-740.138, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), max(-740.138, -740.138)), -6.8, -25.44, -864.821)))), (vec4(1.0)), (vec4(1.0)))) * _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), _GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(67.48))), 1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec4(_GLF_FUZZED(-9.9), _GLF_FUZZED(46.01), _GLF_FUZZED(844.691), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3], max(_GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sin(-81.25))))))))[3], float(mat4x3((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[_GLF_IDENTITY(3, 0 | (3))], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, 0 | (3)), 3, 3))]))), vec4((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[0], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[1], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[2], _GLF_FUZZED(-592.127)), bvec4(true, true, true, false))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-149.192)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(1.0, 1.0, 1.0)))))))) * mat4(1.0)), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-860.520)), bool(false))), 1.0, 1.0, 1.0) * (_GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat4x3((vec4(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3((vec4(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))) * mat4(1.0)), min(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec4(1.0)) * mat4(1.0)), clamp(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec4(1.0)) * mat4(1.0)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec4(1.0)) * mat4(1.0)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec4(1.0)) * mat4(1.0)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec4(_GLF_FUZZED(9.9), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[1], _GLF_FUZZED(-260.088), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[3]), vec4(((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-1.3), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[2], _GLF_FUZZED(5.1)), bvec4(true, false, true, false)))) * ((vec4(1.0)) * mat4(1.0)), vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * ((vec4(1.0)) * mat4(1.0)), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0))), vec4(mat4x3(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec4(-2.3, -22.36, 7996.2665, -136.786)) : _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0))), vec4(mat4x3(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) * mat4(1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), (clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), min((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), mix(vec4(_GLF_FUZZED(9.9), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[1], _GLF_FUZZED(-260.088), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[3]), vec4(((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-1.3), ((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))[2], _GLF_FUZZED(5.1)), bvec4(true, false, true, false)))) * (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (false ? _GLF_FUZZED(degrees(vec4(316.779, 29.49, -7.7, 49.47))) : _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)))))), vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * ((vec4(1.0)) * mat4(1.0)), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))) * ((vec4(1.0)) * _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0))), vec4(mat4x3(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec4(-2.3, -22.36, 7996.2665, -136.786)) : _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0))), vec4(mat4x3(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) * mat4(1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) / vec4(1.0, 1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), (vec2(1.0, tan(0.0))) + vec2(0.0, 0.0))))) * ((vec4(1.0)) * mat4(1.0)))), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * ((_GLF_IDENTITY(vec4(1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0)))) * mat4(1.0)), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY(((vec4(1.0)) * mat4(1.0)), (true ? _GLF_IDENTITY(((vec4(1.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0)))), mix(vec4((((vec4(1.0)) * mat4(1.0)))[0], _GLF_FUZZED(-6944.6324), _GLF_FUZZED(-8.1), _GLF_FUZZED(1.5)), vec4(_GLF_FUZZED(-25.12), (((vec4(1.0)) * mat4(1.0)))[1], (((vec4(1.0)) * mat4(1.0)))[2], (((vec4(1.0)) * mat4(1.0)))[3]), bvec4(false, true, true, true))) : _GLF_FUZZED(vec4(1.3, -0.3, 5.9, 8.3)))), (true ? vec4(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0) * (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (_GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) * mat4(1.0)), _GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(5.0), _GLF_FUZZED(7.4), _GLF_FUZZED(-3.5), _GLF_FUZZED(951.228)), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], ((vec4(1.0)))[2], ((vec4(1.0)))[3]), bvec4(true, true, true, true))), _GLF_IDENTITY((vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + ((vec4(1.0)))))) * mat4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(cos(vec4(80.61, -94.67, -77.31, 8.6))))), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)) * mat4(1.0)))), vec4(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0)))), 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(7.6, 4.2, -618.178, -5.3).b)), float(1.0), bool(true))), 1.0, 1.0)), 1.0, 1.0) * ((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))))) / vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), gl_WorkGroupID.x, mat4x3(1.0), _GLF_struct_4(mat4x2(1.0)), bvec4(true), _GLF_struct_5(1.0, vec4(1.0), true, mat2x3(1.0), bvec2(true), vec2(1.0), vec3(1.0)), _GLF_struct_6(mat3x4(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.7)), float(1.0), bool(true))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), 0.0), vec4(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0)), 0.0)), dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))), 0.0, exp(0.0), abs(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, cos(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0)), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0) * (vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))), 0.0, exp(0.0), abs(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, cos(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0))))).y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter))) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) < _GLF_IDENTITY((1 & 1), ((1 & 1)) + 0)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))), _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))) && true, false || ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))) && true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(340.279)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                barrier();
              }
            }
           else
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                }
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              continue;
             return;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-55.98, -7885.2424, 360.766, 1.1, 9613.3438, 8.8, -4.2, 606.840)) : mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-55.98, -7885.2424, 360.766, 1.1, 9613.3438, 8.8, -4.2, 606.840)) : mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-55.98, -7885.2424, 360.766, 1.1, 9613.3438, 8.8, -4.2, 606.840)) : mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-55.98, -7885.2424, 360.766, 1.1, 9613.3438, 8.8, -4.2, 606.840)) : mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))).y)) : _GLF_FUZZED(53.02))))))))))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_8._f3.workgroup_id, (true ? workgroup_size * _GLF_struct_replacement_8._f3.workgroup_id : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) << 0))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(7), int(7)), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(85782)))))), clamp(ivec3(1 << _GLF_IDENTITY(int(7), int(7)), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(85782)))))), ivec3(1 << _GLF_IDENTITY(int(7), int(7)), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(85782)))))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(7), int(7)), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(85782)))))), (ivec3(1 << _GLF_IDENTITY(int(7), int(7)), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(85782))))))) / ivec3(1, 1, 1))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(15142) : int(3))), int(3)))) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))))), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) << 0))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0))))) | 0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), min(int(3), int(3)))) - 0))) ^ 0)) / ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (0 & -87312)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) >> (0 >> _GLF_IDENTITY(int(4), int(4)))) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) << 0))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | _GLF_IDENTITY(0, max(0, 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | 0, ((int(7)) | 0) | ((int(7)) | 0)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) | ((1 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))))))) | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) >> (0 << _GLF_IDENTITY(int(0), int(0))))) << 0)), (int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) >> (0 << _GLF_IDENTITY(int(0), int(0))))) << 0))) | 0)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), 0 + (_GLF_IDENTITY(int(3), (int(3)) - 0))), _GLF_IDENTITY(int(3), (int(3)) - 0))))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, 0 + (7)), 7)) : _GLF_FUZZED(29661)))), (int(7)) | 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))))))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) << 0))) - _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), min(int(0), int(0))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), 0 ^ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) - (0 << _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) ^ 0)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((int(3)) - 0, 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4((int(3)) - 0, 1, 0, 1)))), (int(_GLF_IDENTITY(ivec4((int(3)) - 0, 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4((int(3)) - 0, 1, 0, 1))))) | (int(_GLF_IDENTITY(ivec4((int(3)) - 0, 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4((int(3)) - 0, 1, 0, 1)))))))))), ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((int(3)) - 0, 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4((int(3)) - 0, 1, 0, 1)))), (int(_GLF_IDENTITY(ivec4((int(3)) - 0, 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4((int(3)) - 0, 1, 0, 1))))) | (int(_GLF_IDENTITY(ivec4((int(3)) - 0, 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4((int(3)) - 0, 1, 0, 1))))))))))) / (0 ^ 1)) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))))))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, clamp(3, 3, 3)), 3)), (3) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (true ? 0 : _GLF_FUZZED(floatBitsToInt(-1.9))))))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(7), int(ivec3(int(7), 1, 1))), 1)), max(int(ivec2(_GLF_IDENTITY(int(7), int(ivec3(int(7), 1, 1))), 1)), int(ivec2(_GLF_IDENTITY(int(7), int(ivec3(int(7), 1, 1))), 1))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) | (3)))) - _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), int(3)))))))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))))))), int(ivec3(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) << 0))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, ((int(3)) - 0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) - 0))) - 0))) ^ 0), (false ? _GLF_FUZZED(71503) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, ((int(3)) - 0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) - 0))) - 0))) ^ 0)))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, 0 + ((int(3)) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0, max((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, int(ivec4(3, 1, 0, 0))))) - 0))) ^ 0, (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, (7) / 1)), max(~ (_GLF_IDENTITY(7, (7) / 1)), ~ (_GLF_IDENTITY(7, (7) / 1))))))), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | 0, int(ivec4((int(7)) | 0, 0, 1, 1))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (0 & (-82085 << -85613)) ^ (3)))) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) ^ 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))))))), 1, 1))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false))), bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, true && (false))))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 do
  {
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), max(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835))))), mix(float(_GLF_FUZZED(423.709)), _GLF_IDENTITY(float((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), max(true ? injectionSwitch.x : _GLF_FUZZED(asinh(_GLF_IDENTITY(-412.835, (false ? _GLF_FUZZED(-184.734) : -412.835)))), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), (false ? _GLF_FUZZED(-2410.8778) : true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)))))))), max(_GLF_IDENTITY(float((_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), max(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), mix(float(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835))), float(_GLF_FUZZED(4790.1463)), bool(false))), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), clamp(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), (true ? true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)) : _GLF_FUZZED(7089.3226))), true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)))))), max(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)))))), float(mat3x4(float((_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), (true ? _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), mix(float(_GLF_FUZZED(-5.0)), float(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835))), bool(true))) : _GLF_FUZZED(-4.8))), max(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)))))), 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), exp(0.0), 0.0, 1.0, 1.0, 1.0))), float((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(asinh(_GLF_IDENTITY(-412.835, clamp(_GLF_IDENTITY(-412.835, (_GLF_IDENTITY(-412.835, float(mat4x2(-412.835, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - 0.0), -412.835, -412.835)))), max(true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)), true ? injectionSwitch.x : _GLF_FUZZED(asinh(-412.835)))))))), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y), float(_GLF_FUZZED((- -5.9))), bool(false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))))))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), false || ((false))))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-8548.2933)), _GLF_FUZZED(-65.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-8548.2933)), _GLF_FUZZED(-65.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y), true, false)))), false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(bool(false))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, _GLF_IDENTITY(false, (false) && true))))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))) && (false))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))) && (false))))))) || false), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false))))) || false), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false))))) || false), true, true)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true, false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 else
  {
   if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) - uvec2(0u, 0u)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false)))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false)))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false))))))))) && true)), true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))
      return;
     subgroupAll(false);
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       do
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     subgroupAll(true);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
}
