#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = ((0 ^ 1) & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))))))), false || (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), vec2(0.0, 0.0) + (vec2(injectionSwitch.x, 0.0))))) < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(3999.1537, _GLF_IDENTITY(-118.775, (-118.775) - 0.0)).r)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.6, min(-7.6, -7.6))) : injectionSwitch.y))), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))))))))))));
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))) || false)))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY((1 | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ((1 | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) ^ 0)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), min((1 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), 1 * ((1 << _GLF_IDENTITY(int(1), int(1))))), clamp((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))), (1 << _GLF_IDENTITY(int(1), int(1))), (1 << _GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0)))))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 barrier();
                }
               else
                {
                }
              }
            }
          }
        }
      }
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) - 0.0)) > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0))), clamp(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0))), int(ivec2(0 ^ _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0))), 0))), 0 ^ _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0))), 0 ^ _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0))))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (1 | 1))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(false, (false) && true), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(false, (false) && true), true)))))) && true))))), false || ((! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                }
              }
             else
              {
              }
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), int(ivec2((1 << _GLF_IDENTITY(int(5), int(5))), 0))) >> _GLF_IDENTITY(int(5), int(5))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true, true))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), false))))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size));
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + (1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x), (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x)) | 0u)));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + subgroup_local_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + subgroup_local_id) * 1u), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) : uvec2(0u, 0u)))).x + subgroup_id * subgroup_size + subgroup_local_id) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (0 & 37930); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, true), bvec2(bvec4(bvec2(_injected_loop_counter < 1, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))), false)))))))), false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, true), bvec2(bvec4(bvec2(_injected_loop_counter < 1, true), _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, true && (false))))))), bool(bool((bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, true), bvec2(bvec4(bvec2(_injected_loop_counter < 1, true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))))), _GLF_IDENTITY(false, true && (false)))))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.8)))))))
      {
       for(int _injected_loop_counter = ((1 | 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size, min(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size, GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size))) + 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))) + 0), clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))) + 0), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))) + 0), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))) + 0))), 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))) + 0)))) % subgroup_size), clamp(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (0u & 129460u))))), 0u, (1u ^ 0u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, (1u ^ 0u)), uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) >> 0u)), uint(1u)))), 0u, (1u ^ 0u)))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (0u & 129460u))))), 0u, (1u ^ 0u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, (1u ^ 0u)), uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) >> 0u)), uint(1u)))), 0u, (1u ^ 0u)))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size)))), ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (0u & 129460u))))), 0u, (1u ^ 0u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, (1u ^ 0u)), uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) >> 0u)), uint(1u)))), 0u, (1u ^ 0u)))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (0u & 129460u))))), 0u, (1u ^ 0u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, (1u ^ 0u)), uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), max((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) >> 0u)), uint(1u)))), 0u, (1u ^ 0u)))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size))))) << 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (_GLF_IDENTITY(1, (1) + 0)))) % subgroup_size), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x) | (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))) | ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) - 0u) + _GLF_IDENTITY(1, (1) + 0))) << 0u) % subgroup_size)) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))).x + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) | (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) + 0u)) << 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))), (clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))) / 1u)) | 0u))) / 1u)) ^ 0u)), uint(uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), ((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) * 1u))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u)))))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / (((1u ^ 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) + 0u)) << 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), 0u ^ (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), min(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) : _GLF_FUZZED(num_workgroup))))) ^ 0u)), uint(uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)), ~ (~ ((true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY((max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u, _GLF_IDENTITY(uint(uvec4((max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), min(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))) ^ 0u, 0u, (0u | 0u), 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4((max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u, 0u, (0u | 0u), 1u)), (uint(uvec4((max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(virtual_gid))), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u, 0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), min(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) | 0u), 1u))) | 0u), 0u), (uvec2(_GLF_IDENTITY(uint(uvec4((max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u, 0u, (0u | 0u), 1u)), (uint(uvec4((max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u, 0u, (0u | 0u), 1u))) | 0u), 0u)) | uvec2(0u, 0u))))))), 1u, 1u)))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9507.6690) : 0.0)), 0.0, 0.0)), injectionSwitch.x)), max((uint(1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(1u, (0u | 0u) | (1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) | 0u)), 0u ^ (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) | 0u))))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) * 1u))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) + 0u)) << 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, false || (true)) ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u) : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u), (uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u) : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u)) | (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u) : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u), min(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u) : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u) : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u)))), uvec3((_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u) : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) ^ 0u)), 1u, 1u)))))))))) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(num_workgroup)))))) + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x4(mat2(1.0))), _GLF_IDENTITY(mat2(mat4x3(mat2(mat2x4(mat2(1.0))))), (mat2(mat4x3(mat2(mat2x4(mat2(1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.4))), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter))) << 0) < ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y)))) : _GLF_FUZZED(1875.1272))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), sqrt(1.0) * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-0.4, 832.236)) : 1.0)), 0.0, 1.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4909.7461))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(cos(-5946.0347)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-8.5, -641.351, 33.78, -8.9, 859.372, _GLF_IDENTITY(7533.8399, float(mat2x3(7533.8399, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))), -84.20, -9647.1387)) : transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.434) : injectionSwitch.y))))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
              }
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0)))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))) < injectionSwitch.y))) || false))))), ! (! (_GLF_IDENTITY((! (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))) < injectionSwitch.y))) || false))))), bool(bvec2((! (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))) < injectionSwitch.y))) || false))))), false)))))))))))) && true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) | 0))))), ((int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) | 0)))))) / 1) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true, false, false)))))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false), ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), (true ? (1) : _GLF_FUZZED(-93541))), (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), 1u, 1u))), virtual_gid))], uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) << 0), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))) : 1))), clamp(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_FUZZED(_injected_loop_counter) : 1))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(false ? _GLF_FUZZED(_injected_loop_counter) : 1), (int(false ? _GLF_FUZZED(_injected_loop_counter) : 1)) << 0)), min(int(int(false ? _GLF_FUZZED(_injected_loop_counter) : 1)), int(int(false ? _GLF_FUZZED(_injected_loop_counter) : 1)))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(false ? _GLF_FUZZED(_injected_loop_counter) : 1), (int(false ? _GLF_FUZZED(_injected_loop_counter) : 1)) << 0)), min(int(int(false ? _GLF_FUZZED(_injected_loop_counter) : 1)), int(int(false ? _GLF_FUZZED(_injected_loop_counter) : 1))))))) / (0 | 1)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))) ^ 0, (false ? _GLF_FUZZED(20364) : _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))) ^ 0, ~ (~ ((~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))) ^ 0))))))))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-38193) : _GLF_IDENTITY(64, 0 | (64)))), 64)), 0 | (64)), 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec2(bvec2(! (! (false)), true)))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, sin(0.0), 0.0, 0.0, 1.0)), float(mat2x4(float(mat3x2(injectionSwitch.x, 0.0, sin(0.0), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) ^ 0))) ^ 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), false, false, false)))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(false, true, false, false)), false, false, false)))))))))) || (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(int(1), 0)), clamp(int(ivec2(int(1), 0)), int(ivec2(int(1), 0)), int(ivec2(int(1), 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -43940)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, min(0, 0))))), int(_GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         subgroupAll(false);
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.1))))) > injectionSwitch.y))) || false))))))))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), int(ivec4((64), 1, 1, 0))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0));
      }
     else
      {
      }
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y))))))))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y) && true))) || false)))))))))))) && true))))) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), true)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))), true)), true))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), true)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (true)), true))), true)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))) && true))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true)))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true)))), true), true, true)), true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), true)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), true)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))), true)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x < injectionSwitch.y))))))))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || _GLF_IDENTITY(false, (false) && true)));
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))))) && true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 & ((-18874 & 0) | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(-6608.2395)) : injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))));
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0) > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false, false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-35.17), _GLF_FUZZED(-7709.9231)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
  }
}
