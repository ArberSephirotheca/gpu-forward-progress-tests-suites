#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))) > injectionSwitch.y), true, true))), false), false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) * mat2(1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, log(1.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))))) || false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-19.42), (_GLF_IDENTITY(_GLF_FUZZED(-19.42), mix(float(_GLF_FUZZED(-19.42)), float(_GLF_FUZZED(-17.61)), bool(false)))) / 1.0)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), bool(true)))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(1.0, 1.0))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)))), (max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), max(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))))), 6u, 6u))))) | (_GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)), (_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (_GLF_IDENTITY(~ (6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), min(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))))))))) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u))) - 0u))))))))))), (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))), _GLF_IDENTITY(((0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (false ? _GLF_FUZZED(workgroup_size) : ((0u)) | 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)))), (max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), max(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))))), 6u, 6u))))) | (_GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)), (_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (_GLF_IDENTITY(~ (6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), min(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))))))))) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u))) - 0u))))))))))), (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))), _GLF_IDENTITY(((0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (false ? _GLF_FUZZED(workgroup_size) : ((0u)) | 0u))))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)))), (max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), max(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))))), 6u, 6u))))) | (_GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u)), (_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (_GLF_IDENTITY(~ (6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), min(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), max(uvec2(~ (6u), 1u), _GLF_IDENTITY(uvec2(~ (6u), 1u), (uvec2(~ (6u), 1u)) * uvec2(1u, 1u))))))))))) - _GLF_IDENTITY(0u, (0u) - 0u)))), 6u, 6u))) - 0u))))))))))), (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))), _GLF_IDENTITY(((0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (false ? _GLF_FUZZED(workgroup_size) : ((0u)) | 0u)))))))) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u))), (~ (_GLF_IDENTITY(~ (6u), (~ (6u)) - _GLF_IDENTITY(0u, (0u) - 0u)))) << 0u)) | 0u)), 6u, 6u)))))))), (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | _GLF_IDENTITY(0u, max(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : ((0u)) | 0u))))))) + 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), false, true, true)), false || (bool(bvec4(bool(true), false, true, true))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))), true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 8.2))), bool(false))) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), false)))) && true), ! (! (false)))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float(21162u))), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.2, _GLF_IDENTITY(-9.7, max(-9.7, -9.7)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float(21162u))), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.2, _GLF_IDENTITY(-9.7, max(-9.7, -9.7)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float(21162u))), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.2, _GLF_IDENTITY(-9.7, max(-9.7, -9.7)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float(21162u))), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.2, _GLF_IDENTITY(-9.7, max(-9.7, -9.7)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)))), false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), (_GLF_DEAD(false)) && true))) || false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)))), false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), (_GLF_DEAD(false)) && true))) || false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.704, -2.6)) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id))), min(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id))), min(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id))))))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)))) + ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4)), int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), 4), _GLF_IDENTITY(min(_GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), 4), (max(_GLF_IDENTITY(4, (4) | (4)), 4)) ^ 0), _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), 4), (max(_GLF_IDENTITY(4, (4) | (4)), 4)) << (0 << _GLF_IDENTITY(int(7), int(7))))), int(ivec3(min(_GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), 4), (max(_GLF_IDENTITY(4, (4) | (4)), 4)) ^ 0), _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), 4), (max(_GLF_IDENTITY(4, (4) | (4)), 4)) << (0 << _GLF_IDENTITY(int(7), int(7))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))), (1 ^ 0)))))), (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4))) / 1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4)))), 4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 ^ ((64))) << 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (false ? _GLF_FUZZED(72118u) : 0u))), subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) >> 0u))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), max(next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))), (! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(length(vec2(579.293, 7170.9802))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) << 0), 2))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, 0)), 0 | (int(ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, 0))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, float(mat2x4((0.0) - 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, (true ? _GLF_IDENTITY((0.0) - 0.0, min((0.0) - 0.0, (0.0) - 0.0)) : _GLF_FUZZED(-232.151)))), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(422.623, -244.587, -6.1)) : _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec3(6535.4845, -63.98, -4.7)) : vec3(0.0, 1.0, 1.0))))), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))) : _GLF_FUZZED(-3.5))))), float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, exp(0.0) * ((0.0) - 0.0))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0) : _GLF_FUZZED(80.55))))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0), 1.0, cos(0.0), 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), exp(0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), exp(0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0)) * mat2(1.0)))), 1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-5.7, 94.70).r)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), bool(true)))), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-983.037)), float(1.0), bool(true)))) / 1.0))), cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, tan(0.0), 1.0, 0.0))), (0.0) - 0.0), 1.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), 1.0, cos(0.0), 0.0))))), (false ? _GLF_FUZZED(-8.2) : clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.6)), bool(false)))))), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))))), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5548.1044)), float(0.0), bool(true))), (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true))))))))) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) - 0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y))) / 1.0)), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat4(vec3(1.0, 0.0, 0.0), abs(1.0), 1.0, sqrt(1.0), 0.0, sqrt(0.0), sqrt(exp(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(sin(0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))) > injectionSwitch.y, true))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-10.54)), mix(float(_GLF_FUZZED(float(124989u))), float(float(_GLF_FUZZED(-10.54))), bool(true))), float(0.0), bool(true)))) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-10.54)), float(0.0), bool(true)))) - 0.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(0.0), bool(true))), 0.0)))), float(mat3(float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-10.54)), float(0.0), bool(true)))) - 0.0), 1.0, cos(0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0))), float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-10.54)), float(0.0), bool(true)))) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-10.54)), float(0.0), bool(true)))) - 0.0), 1.0, cos(0.0), 0.0)))), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), mix(float(_GLF_FUZZED(-6532.4131)), float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))), bool(true))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(234.877)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) - abs(0.0)), (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))), mix(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))), (true ? clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0))))) : _GLF_FUZZED(1727.8662)))), float(_GLF_FUZZED(float(true))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(50.28)))), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-50.88))), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, ((0.0) - 0.0) / 1.0)), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)), (mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0))), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(4518.6207)), min(float(_GLF_FUZZED(4518.6207)), _GLF_IDENTITY(float(_GLF_FUZZED(4518.6207)), min(float(_GLF_FUZZED(4518.6207)), float(_GLF_FUZZED(4518.6207)))))), bool(false))))))), 1.0, cos(0.0), 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true))))))) || false)), bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.58)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6886.4623) : _GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED(vec2(45.78, -0.1).t)), bool(false)))), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) / 1.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, tan(abs(0.0)), determinant(mat2(0.0, sin(0.0), 0.0, 0.0))))), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) * exp(0.0))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.2)), float(0.0), bool(true)))))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), clamp(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.58)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, tan(abs(0.0)), determinant(mat2(0.0, sin(0.0), 0.0, 0.0))))), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) * exp(0.0))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.2)), float(0.0), bool(true)))))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.58)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, cos(0.0), 0.0), (mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.58)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, cos(0.0), 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0), (true ? mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0) : _GLF_FUZZED((mat2(326.945, 759.339, -315.045, -372.785) + -8.9))))), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, tan(abs(0.0)), determinant(mat2(0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))))))))), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) * exp(0.0))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.2)), float(0.0), bool(true)))))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.58)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, tan(abs(0.0)), _GLF_IDENTITY(determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), max(determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), determinant(mat2(0.0, sin(0.0), 0.0, 0.0))))))), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) * exp(0.0))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.2)), float(0.0), bool(true)))))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))))) > injectionSwitch.y, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 1.0, cos(0.0), 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), min(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED((8.8 - -0.8))), bool(false))), _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 1.0, cos(0.0), 0.0)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)), mat2(1.0) * (mat2(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0), 0.0)))))))))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(exp(0.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (float(vec3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED((+ -6.4))), bvec2(false, false))).x), 0.0, exp(0.0), cos(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))) : _GLF_FUZZED(71.25))), 0.0, 0.0, log(cos(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(exp(0.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), cos(0.0), 1.0, 0.0, 0.0, log(cos(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0)), (dot(vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0))) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0)), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0)), (dot(vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0))) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0))))))), true))))))) || false)), true, false, true)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true && (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
