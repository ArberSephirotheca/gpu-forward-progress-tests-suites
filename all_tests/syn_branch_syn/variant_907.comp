#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * determinant(mat2(1.0, 0.0, 1.0, abs(1.0)))), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0, 1)), int(ivec2(int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))) >> 0)), 0, _GLF_IDENTITY(0, (0) | (0)), 1)), 0)))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97106))))), ~ (_GLF_IDENTITY(~ (int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97106)))))), (~ (int(ivec2(int(0), _GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(97106)), clamp((true ? 0 : _GLF_FUZZED(97106)), (true ? 0 : _GLF_FUZZED(97106)), (true ? 0 : _GLF_FUZZED(97106))))))))) - (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 | (1)))))))), max(_GLF_IDENTITY(int(ivec2(int(0), 0)), int(ivec2(int(ivec2(int(0), 0)), 0))), _GLF_IDENTITY(int(ivec2(int(0), 0)), 0 ^ (int(ivec2(int(0), 0))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 0 | (_GLF_IDENTITY(0, 0 ^ (0)))), 1, 1, 1)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 0 | (_GLF_IDENTITY(0, 0 ^ (0)))), 1, 1, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 0 | (_GLF_IDENTITY(0, 0 ^ (0)))), 1, 1, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 0 | (_GLF_IDENTITY(0, 0 ^ (0)))), 1, 1, 1)))))))), 0, 0, 1)), int(ivec2(int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) >> 0)), 0, 0, 1)), 0)))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97106))))), ~ (_GLF_IDENTITY(~ (int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(97106), (_GLF_IDENTITY(_GLF_FUZZED(97106), (_GLF_FUZZED(97106)) + 0)) | 0)))))), (~ (_GLF_IDENTITY(int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(97106, (_GLF_IDENTITY(97106, (false ? _GLF_FUZZED(-37557) : 97106))) >> 0)))))), max(int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(97106, (_GLF_IDENTITY(97106, (false ? _GLF_FUZZED(-37557) : 97106))) >> 0)))))), int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(97106, (_GLF_IDENTITY(97106, (false ? _GLF_FUZZED(-37557) : 97106))) >> 0)))))))))) - (0 >> _GLF_IDENTITY(int(1), int(1)))))), max(_GLF_IDENTITY(int(ivec2(int(0), 0)), int(ivec2(int(ivec2(int(0), 0)), 0))), int(ivec2(int(0), 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0, 1)), int(ivec2(int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) >> 0)), 0, 0, 1)), 0)))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97106))))), ~ (_GLF_IDENTITY(~ (int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97106)))))), (~ _GLF_IDENTITY((int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(97106), (false ? _GLF_FUZZED(99757) : _GLF_FUZZED(97106)))))))), max((int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(97106), (false ? _GLF_FUZZED(99757) : _GLF_FUZZED(97106)))))))), (int(ivec2(int(0), _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(97106), (false ? _GLF_FUZZED(99757) : _GLF_FUZZED(97106))))))))))) - (0 >> _GLF_IDENTITY(int(1), int(1)))))), max(_GLF_IDENTITY(int(ivec2(int(0), 0)), int(ivec2(int(ivec2(int(0), 0)), 0))), int(ivec2(int(0), 0)))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(int(ivec2(int(0), _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) << 0)))), 1 * (0)))), max(int(ivec2(int(0), 0)), int(ivec2(int(0), 0))))))))), int(ivec3((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(24.61)), float(injectionSwitch.y), bool(true))))), 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-20.30), _GLF_FUZZED(67.22)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), ~ (~ ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-20.30), _GLF_FUZZED(67.22)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), ~ (~ _GLF_IDENTITY(((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y)))), clamp(((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y)))), _GLF_IDENTITY(((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y)))), (((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y))))) / 1), _GLF_IDENTITY(((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y)))), int(ivec3(_GLF_IDENTITY(((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y)))), int(ivec4(((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.30, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))) || false), false || (! (true))))))), min(mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), mix(float(_GLF_FUZZED(float(false))), float(-20.30), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))))))))))), _GLF_FUZZED(67.22)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1))])) / vec2(1.0, 1.0)), bvec2(true, true))).y)))), 0, 0, 0))), 0, (0 << _GLF_IDENTITY(int(7), int(7))))))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(0, (0) - 0)))), 0)), ~ (~ (int(ivec2(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0))), 0))))), max(int(ivec2(int(0), _GLF_IDENTITY(0, int(ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ (0)))))))), int(_GLF_IDENTITY(ivec2(int(0), 0), (false ? _GLF_FUZZED(ivec2(-25500, 2853)) : ivec2(int(0), 0)))))), _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-55251) : 0))))), 0))), 0)), ~ (~ (int(ivec2(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0))), 0))))), max(int(ivec2(int(0), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), int(ivec2(int(0), _GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(0), int(0))))))))))))), 0, 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), _GLF_IDENTITY((0 ^ (_GLF_IDENTITY(0, (0) / 1))), ((0 ^ (_GLF_IDENTITY(0, (0) / 1)))) >> (0 << _GLF_IDENTITY(int(4), int(4)))) << 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6))) ^ (0)), 0 ^ (0))), (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) + 0), _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) | 0)), (_GLF_IDENTITY(0, 0 ^ (0))) * 1))) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) | (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), 1), ivec2(ivec4(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter)))) + 0))), 1), 1, 0)))), (int(_GLF_IDENTITY(ivec2(~ _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), 1), ivec2(ivec4(ivec2(~ _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter))))) | ((_injected_loop_counter))), min((_injected_loop_counter), (_injected_loop_counter))), 1), 1, 0))))) ^ 0)), 0))))))) != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0)) + (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), ~ (~ (max(_injected_loop_counter, _injected_loop_counter))))))), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))) >> (0 >> _GLF_IDENTITY(int(4), int(4)))) + (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(14702))), _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : _injected_loop_counter)))), _injected_loop_counter))))) * 1) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) | (0 & 76783))))), (7) ^ 0)), int(7))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ _GLF_IDENTITY(0, (0) | (0)))), int(7)))) ^ 0) >> _GLF_IDENTITY(int(7), int(7))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(2.1)))))), injectionSwitch.x)), ((_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(2.1)))))), injectionSwitch.x))) / 1.0) * 1.0)) + _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))), ((_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) / 1)) != ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) / 1), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) / 1, min((1 << _GLF_IDENTITY(int(7), int(7))) / 1, (1 << _GLF_IDENTITY(int(7), int(7))) / 1)))) - 0)) >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))), max(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))), clamp(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))))), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(7.3))))))) + (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.8) : 0.0)), injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) + (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.8) : 0.0)), injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) + (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), true, false), true))))))), true && (bool(bool(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) + (0.0)), injectionSwitch.x))), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) + (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 + (int(7))), int(7)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), ~ _GLF_IDENTITY((~ (1 << _GLF_IDENTITY(int(7), int(7)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-90405) : (~ (1 << _GLF_IDENTITY(int(7), int(7)))))))) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> _GLF_IDENTITY(int(7), int(7)))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), min((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / 1)), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) | (0 ^ 0)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false)), false))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : int(2), max(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), true))), false))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : int(2), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : int(2), ~ (~ (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : int(2)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec4(_injected_loop_counter, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec4(0, 0, 0, 0)))) < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))), true)))))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))).y))))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 1 * (int(7)))) - 0), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, true && (_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))))) && true)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / int(_GLF_ONE(1.0, injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(false || ((injectionSwitch.x > injectionSwitch.y))), true && (bool(false || ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))), (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))), (workgroup_base) ^ _GLF_IDENTITY(0u, uint(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), ~ (~ ((uint(uint(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))) - 0u))) >> _GLF_IDENTITY(0u, max(0u, 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 0u)), ~ (~ (uint(uvec4(subgroup_size, 1u, 0u, 0u))))))))) - 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u) * (subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 0u)), ~ (~ (uint(uvec4(subgroup_size, 1u, 0u, 0u))))))))) - 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u) * (subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 0u)), ~ (~ (uint(uvec4(subgroup_size, 1u, 0u, 0u))))))))) - 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u) * (subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 0u)), ~ (~ (uint(uvec4(subgroup_size, 1u, 0u, 0u))))))))) - 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u) * (subgroup_size)), subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0))), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), _GLF_IDENTITY((false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true)))), mix(float(_GLF_FUZZED((-7187.9132 + float(false)))), float((false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))))), bool(true))))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), _GLF_IDENTITY((false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true)))), mix(float(_GLF_FUZZED((-7187.9132 + float(false)))), float((false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))))), bool(true))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), _GLF_IDENTITY((false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true)))), mix(float(_GLF_FUZZED((-7187.9132 + float(false)))), float((false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))))), bool(true)))))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true)), (mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED((+ -33.99)) : injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))) - 0.0)))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), float(_GLF_FUZZED((- 4882.4074))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))]), float(_GLF_IDENTITY(_GLF_FUZZED(6.2), min(_GLF_FUZZED(6.2), _GLF_IDENTITY(_GLF_FUZZED(6.2), 1.0 * (_GLF_FUZZED(6.2)))))), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))) && true))), (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(-66948) : int(_GLF_IDENTITY(1, (1) / 1))))))], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(48320) : 1)), (1) << 0)], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), (false ? _GLF_FUZZED(93.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0))), (false ? _GLF_FUZZED(-45.03) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), float(_GLF_FUZZED(32.08)), bool(false))), 0.0 + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), float(mat2(injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))], _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0)))) * 1.0), 0.0, 1.0)))))))), float(_GLF_FUZZED(-27.33)), bool(false)))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), ! (! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))))))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.91)), bool(false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0), (mat4x2(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0)) * mat4(1.0)) : _GLF_FUZZED(mat4x2(4.9, -9.8, -2.0, -57.13, -8.9, 18.26, 1.6, 6966.8931))))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0), (mat4x2(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0)) * mat4(1.0)) : _GLF_FUZZED(mat4x2(4.9, -9.8, -2.0, -57.13, -8.9, 18.26, 1.6, 6966.8931)))))) + vec2(0.0, 0.0))).y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), bool(false)))), bool(true))))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-64.18, min(-64.18, -64.18))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-729.587)), bvec2(true, false)))) / exp(vec2(0.0, 0.0))).y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (bool(true)) || false))))))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.2)), bool(false))), (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))], mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)))), float(_GLF_FUZZED(-27.33)), bool(false))), (_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)), clamp(float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)), float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)), (true ? float(mat2(injectionSwitch[1], exp(0.0), 0.0, 1.0)) : _GLF_FUZZED(-73.26))))))), float(_GLF_FUZZED(-27.33)), bool(false)))) / exp(0.0))), bool(true))))))).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(307.852))), injectionSwitch.y)), injectionSwitch.y), abs(1.0) * (max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(307.852))), injectionSwitch.y)), injectionSwitch.y))))))) / 1.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.4), (_GLF_FUZZED(7.4)) / 1.0)), float(injectionSwitch[1]), bool(true))))))).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), injectionSwitch.y)) + 0.0))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch[1]), bool(true))))))).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))) + 0.0)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch[1]), bool(true))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) + 0.0), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)) + 0.0)) - 0.0)), ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(workgroup_id)) : 1))], mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch[1]), bool(true))))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(-750.486) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitCount(workgroup_id)), (true ? _GLF_FUZZED(bitCount(workgroup_id)) : _GLF_FUZZED(-89353))) : _GLF_IDENTITY(1, max(1, 1))))], mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch[1]), bool(true)))))))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7510.5020), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(346.453)), bvec2(true, false))).y), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) / 1.0)))) + 0.0)))))) && true)), true, false)))) || false)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), ! (! (! (false || (true)))))))) && (false)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_FALSE(false)), true && (false || (_GLF_WRAPPED_IF_FALSE(false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), true))), true))))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false))), false, true)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))) && true)))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
     buf[virtual_gid] = 1;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec3((! (_GLF_WRAPPED_IF_FALSE(false))), false, true)))), bool(bvec3(! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec3((! (_GLF_WRAPPED_IF_FALSE(false))), false, true)))), false, false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(34485) : int(2))), int(2))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))))) * 1, ~ (~ ((_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))))) * 1)))) != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), min(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u | ((subgroup_size) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), 0u + (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))), 1), clamp(ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 1, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), 0 ^ (_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), int(int(_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), (int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0)))))))))) >> _GLF_IDENTITY(int(3), int(3))), 1))), max(_GLF_IDENTITY(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))), 1), clamp(ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 1, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), 0 ^ (_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), int(int(_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), (int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0)))))))))) >> _GLF_IDENTITY(int(3), int(3))), 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))), 1), clamp(ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 1, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), 0 ^ (_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), int(int(_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), (int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0)))))))))) >> _GLF_IDENTITY(int(3), int(3))), 1))), (_GLF_IDENTITY(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))), 1), clamp(ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 1, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), 0 ^ (_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), int(int(_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), (int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0)))))))))) >> _GLF_IDENTITY(int(3), int(3))), 1)))) | (_GLF_IDENTITY(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))), 1), clamp(ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 1, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1), ivec4(0, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), 0 ^ (_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), int(int(_GLF_IDENTITY(int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0))))), (int(ivec3(3, 0, (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0)))))))))) >> _GLF_IDENTITY(int(3), int(3))), 1)))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   _GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1)), ~ (~ ((_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1)))))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) << 0))))), int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ~ (_GLF_IDENTITY(~ ((1) / 1), (true ? _GLF_IDENTITY(~ ((1) / 1), (~ ((1) / 1)) - 0) : _GLF_FUZZED((-87531)))))))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1)), 0, 0)), (int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(-38635) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), min((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1))))) << 0))), 0, 0))) | 0))), 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), int(ivec3(_GLF_IDENTITY(~ (2), _GLF_IDENTITY(clamp(~ (2), ~ (2), ~ (2)), int(ivec3(_GLF_IDENTITY(clamp(~ (2), ~ (2), ~ (2)), 0 + (clamp(~ (2), ~ (2), ~ (2)))), 0, 1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec4(2, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97851)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), _GLF_IDENTITY((1) / 1, ((1) / 1) ^ 0)), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1))), 1))))))) + 0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(-80566) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))) - 0))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) - (0 & (-49069 % 4462))) / 1, min(_GLF_IDENTITY((1) / 1, (false ? _GLF_FUZZED(37587) : (1) / 1)), (1) / 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(-80566) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))), min(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))), ~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))), 0 ^ ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))), min(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))), ~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))) - 0))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, (false ? _GLF_FUZZED(37587) : (1) / 1)), (1) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1)))), (false ? _GLF_FUZZED(-80566) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) / 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) | ((1))))) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 1 * (_GLF_IDENTITY(1, (1) / 1)))), int(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 1 * (_GLF_IDENTITY(1, (1) / 1)))), 1), (ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 1 * (_GLF_IDENTITY(1, (1) / 1)))), 1)) | (ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 1 * (_GLF_IDENTITY(1, (1) / 1)))), 1))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1)))) ^ 0))))) - 0))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, (false ? _GLF_FUZZED(37587) : (1) / 1)), (1) / 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(-80566) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) | ((1))))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1))) / 1)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1))) / 1)) ^ 0)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1))) / 1)) ^ 0)) : _GLF_FUZZED(-33225)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1))) / 1)) ^ 0))))))) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) + 0)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, (false ? _GLF_FUZZED(37587) : (1) / 1)), (1) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(-80566) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))), 0, 0, 0))), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), (0 >> _GLF_IDENTITY(int(2), int(2))) | ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))))))))) - 0))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(37587), (_GLF_FUZZED(37587)) >> 0) : (1) / 1)), (1) / 1))))))))), 1))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 0, 1)), 0 | (_GLF_IDENTITY(int(ivec3(2, 0, 1)), (0 ^ 0) ^ (int(ivec3(2, 0, 1))))))), int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(int(0.0)) : (1)))) - 0) / 1)) | (_GLF_IDENTITY(1, (1) / 1))), 1))), int(ivec3(_GLF_IDENTITY(2, int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1))), 1))), 1, 1))), _GLF_IDENTITY((buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(86802))), 0 ^ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(86802))))), int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, min(1, 1)))) | (_GLF_IDENTITY(1, (1) / 1))), 1)))), ((buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(86802))), 0 ^ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(86802))))), int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, min(1, 1)))) | (_GLF_IDENTITY(1, (1) / 1))), 1))))) << 0u) | _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1))), 1))), int(ivec3(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 2 : _GLF_FUZZED(24415))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 ^ (1))))), 1))), 1, 1))), (buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(86802))), int(ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1))), 1)))) | 0u)) << 0u)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
}
