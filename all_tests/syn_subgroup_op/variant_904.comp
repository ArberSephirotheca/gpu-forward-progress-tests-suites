#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))))
        {
        }
       else
        {
         return;
        }
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(6) : _GLF_FUZZED(-36366))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), ((workgroup_size)) | ((workgroup_size))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) >> 0u)) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (uint(3u))), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * 1u))) >> 0u), 0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), (1u | 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), ((workgroup_size)) | ((workgroup_size))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) >> 0u)) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (clamp(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u | (3u))), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))) * 1u))) >> 0u), 0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), uint(uvec2((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u))), ((workgroup_size)) | _GLF_IDENTITY(((workgroup_size)), max(((workgroup_size)), ((workgroup_size))))) - _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 1u * (3u))))) / 1u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | 0u)) | (3u))))), ((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | 0u)) | (3u)))))) ^ 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)), min((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> 0u, ((workgroup_size) >> 0u) >> (0u | 0u)))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))) >> 0u)) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), _GLF_IDENTITY(0u, (0u) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), max(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))))), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (true ? clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))) : _GLF_FUZZED(subgroup_local_id))), (clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 1u * (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))) << 0u))) * 1u))) >> 0u), 0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u)))))))))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))), 1u, 0u))))))), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))) * 1u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) / 1u), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_size))))), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_size))))), ~ (~ ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_size))))))))))))) + subgroup_local_id, 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) / 1u), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_size))))), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_size))))), ~ (~ ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_size))))))))))))) + subgroup_local_id, 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) / 1u), workgroup_base)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id))) / 1u)), uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id))) / 1u)), 1u, 1u, 1u))))))))) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, 0u | ((subgroup_id * subgroup_size) << 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) << 0u))), min(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) << 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) << 0u))))) >> 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u, 1u), (uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u, 1u)) + uvec2(0u, 0u))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u, 1u), (uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u, 1u)) + uvec2(0u, 0u))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u)))))) % subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), 1u * (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), uint(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))) - 0u))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u)) - 0u)) << 0u)) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED((subgroup_local_id * workgroup_size)))), uint(3u)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) : _GLF_FUZZED(clamp(22373u, workgroup_base, subgroup_id))))))) >> 0u)))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), 1u * (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), uint(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))) - 0u))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u)) - 0u)) << 0u)) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED((subgroup_local_id * workgroup_size)))), uint(3u)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) : _GLF_FUZZED(clamp(22373u, workgroup_base, subgroup_id))))))) >> 0u)))))) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), 1u * (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), uint(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))) - 0u))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u)) - 0u)) << 0u)) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED((subgroup_local_id * workgroup_size)))), uint(3u)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) : _GLF_FUZZED(clamp(22373u, workgroup_base, subgroup_id))))))) >> 0u)))))) % subgroup_size))))) << 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) - _GLF_IDENTITY(0u, 0u | (0u)))), workgroup_base), (min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) - _GLF_IDENTITY(0u, 0u | (0u)))), workgroup_base)) ^ 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) << 0u, clamp((subgroup_id * subgroup_size) << 0u, (subgroup_id * subgroup_size) << 0u, (subgroup_id * subgroup_size) << 0u))) | ((subgroup_id * subgroup_size) << 0u))), 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))), 0u)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) ^ 0u)) << 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) >> 0u))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) >> 0u))), 1u * (((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) >> 0u)))))))) << 0u) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))))))), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))) >> 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)) >> 0u))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))) + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) * 1u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) ^ 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u))))))))), uint(uint(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) ^ 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u)))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) ^ 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u))))))))), uint(uint(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) ^ 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) - 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u))))))))))))) >> 0u))) / 1u))) % subgroup_size) << 0u)), (_GLF_IDENTITY(1u ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u ^ 0u, max(1u ^ 0u, 1u ^ 0u))), clamp((_GLF_IDENTITY(1u ^ 0u, max(1u ^ 0u, _GLF_IDENTITY(1u ^ 0u, min(1u ^ 0u, 1u ^ 0u))))), (_GLF_IDENTITY(1u ^ 0u, max(1u ^ 0u, 1u ^ 0u))), (_GLF_IDENTITY(1u ^ 0u, max(1u ^ 0u, 1u ^ 0u))))) | 0u)), 1u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bool(true))), false || ((false) && _GLF_IDENTITY(true, bool(bool(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bool(true))), false || ((false) && _GLF_IDENTITY(true, bool(bool(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-236.092)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(124.617)), bool(false)))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec4(false, true, false, true))) && true))))))) || false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) || (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_IDENTITY((injectionSwitch)[1], _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, max(7.5, _GLF_IDENTITY(7.5, max(_GLF_IDENTITY(7.5, min(7.5, 7.5)), _GLF_IDENTITY(7.5, (false ? _GLF_FUZZED(28.45) : 7.5)))))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.6))), injectionSwitch.y, injectionSwitch.y))) * (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0), _injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6864.0718))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.7))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), mix(float(_GLF_FUZZED(-22.21)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-22.21)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5717.6240)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) / 1.0)))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(5717.6240)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) / 1.0)))), bool(true)), (mix(float(_GLF_FUZZED(5717.6240)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x))) / 1.0))) / 1.0)), (min(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) / 1.0)), _GLF_IDENTITY((float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9507.1595)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x))) / 1.0))), float(mat2x4((float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9507.1595)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x))) / 1.0))), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(1.0), 1.0))) / 1.0))) / exp(0.0)))), bool(true))) * 1.0)) / 1.0)), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), true, true, false)), true && (bool(bvec4(bool(true), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(_GLF_FUZZED(-22.21)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(703.658))))), bool(true))))) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) + 0.0), 1.0) * (injectionSwitch)).y) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-468.454), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false)), vec2(mat3(mix(vec2(_GLF_FUZZED(-468.454), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false)), 1.0, 1.0, abs(1.0), log(1.0), 1.0, 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(-2.2), _GLF_FUZZED(-57.68)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-468.454), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-468.454), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-468.454), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false))))[1]), bvec2(true, true))).x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), (1.0) / 1.0), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), (1.0) / 1.0) : _GLF_FUZZED((+ determinant(mat3(-22.40, 0.0, -4.8, -6.7, 176.036, -80.14, 5.6, -2.1, 3.5)))))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) + vec2(0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x))) + 0.0) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(72.93)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - tan(0.0)), 1.0, 0.0, 0.0, 1.0))))).y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))))).y) && true), (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))).y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) && true, bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) && true, false, false)))), true), false))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y)))), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y)))), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))))), bool(bvec2(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y)))), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))))), (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y)))), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))) && true), true))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, 0.0 + ((injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) / vec2(1.0, 1.0))).y) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(9.2), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))[0], _GLF_FUZZED(998.721)), bvec2(true, false)))))))).y) && true)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y) - 0.0), _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y) - 0.0))), ! (! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y) - 0.0))))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y) - 0.0), _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y) - 0.0))), ! (! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))) * (injectionSwitch)).y) - 0.0))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(abs(-5.6)) : injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) : _GLF_FUZZED(-490.301))), 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + sqrt(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2742.7746, -38.42)))))))).x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) && true)), ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) : _GLF_FUZZED(-490.301))), 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + sqrt(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2742.7746, -38.42)))))))).x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.6, float(vec4(-5.6, 0.0, 0.0, 0.0)))), _GLF_FUZZED(463.092)), bvec2(false, false))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-6696.6865, -176.281, -9.9, 4221.4558, _GLF_IDENTITY(_GLF_IDENTITY(4.8, 0.0 + (_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-44.58) : 4.8)))), mix(float(_GLF_IDENTITY(4.8, 0.0 + (_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-44.58) : 4.8))))), float(_GLF_FUZZED(-945.136)), bool(false))), 1.0)) : mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.6), _GLF_FUZZED(463.092)), bvec2(false, false))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 1.0))))))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, sqrt(0.0), sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(log(exp(0.0)), min(_GLF_IDENTITY(log(exp(0.0)), mix(float(_GLF_FUZZED(9852.5823)), float(_GLF_IDENTITY(log(exp(0.0)), max(_GLF_IDENTITY(log(exp(0.0)), clamp(_GLF_IDENTITY(log(exp(0.0)), max(log(exp(0.0)), log(exp(0.0)))), log(exp(0.0)), log(exp(0.0)))), log(exp(0.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(log(exp(0.0)), (log(exp(0.0))) / 1.0), min(log(exp(0.0)), log(exp(0.0)))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-7.5 - -93.18))), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(209.938), mix(float(_GLF_FUZZED(-158.835)), float(_GLF_FUZZED(209.938)), bool(true))))), 1.0)))) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), determinant(mat4(0.0, 0.0, 1.0, sqrt(1.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(815.912)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), abs(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0 + (1.0)), (1.0) - 0.0), 0.0, tan(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0)))).y) && true), true), false))))))))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       switch(_GLF_SWITCH(0))
        {
         case 84:
         {
          ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            break;
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
              return;
             ivec4(16087, _GLF_IDENTITY(-55252, int(int(-55252))), 35616, 17681);
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                continue;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))) || false))));
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.0) : injectionSwitch.y))))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), vec2(_GLF_FUZZED(329.421), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
                  continue;
                 return;
                }
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
            return;
           uvec3 _GLF_SWITCH_0_2v[20];
           length(vec4(-410.612, 4135.1329, _GLF_IDENTITY(-9.0, 0.0 + (-9.0)), 1.8));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false))))))))))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), false)))) || false)) && true) && true))
              return;
             return;
            }
           mat4 _GLF_SWITCH_0_3v[1];
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(81321))), _GLF_IDENTITY(1, (1) >> 0)))), int(1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0)))), int(1))) << 0)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(_GLF_IDENTITY(8, (8) - 0)))), max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)))))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, 0 | (8))) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(abs((mat4x3(-3.5, -4.5, 7648.3036, 9962.9240, -436.024, 4030.3753, 7.9, -2.9, 40.52, 85.99, 721.257, 48.91) , 95822)))))), 0 ^ (_GLF_IDENTITY(8, (8) ^ 0)))), int(8))))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))), 0 ^ (8))), int(8))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)), (false ? _GLF_FUZZED(min(92796, 52189)) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)))))))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, 0 | (8))) + 0), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) ^ 0), (_GLF_IDENTITY(8, (8) ^ 0)) ^ 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) ^ 0), (_GLF_IDENTITY(8, (8) ^ 0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) ^ 0), (_GLF_IDENTITY(8, (8) ^ 0)) ^ 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) ^ 0), (_GLF_IDENTITY(8, (8) ^ 0)) ^ 0))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) ^ 0), (_GLF_IDENTITY(8, (8) ^ 0)) ^ 0)))))), int(8))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(83001) : _injected_loop_counter)) != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY((8), max((8), (8))) + 0), 0 ^ (8))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) + 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((8) + 0, 0, 0, 1), min(ivec4((8) + 0, 0, 0, 1), ivec4((8) + 0, 0, 0, 1)))), clamp(int(_GLF_IDENTITY(ivec4((8) + 0, 0, 0, 1), min(ivec4((8) + 0, 0, 0, 1), ivec4((8) + 0, 0, 0, 1)))), int(_GLF_IDENTITY(ivec4((8) + 0, 0, 0, 1), min(ivec4((8) + 0, 0, 0, 1), ivec4((8) + 0, 0, 0, 1)))), int(_GLF_IDENTITY(ivec4((8) + 0, 0, 0, 1), min(ivec4((8) + 0, 0, 0, 1), ivec4((8) + 0, 0, 0, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-47041)))), (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-47041))))) << 0)))), (_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-47041)))), (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-47041))))) << 0))))) | 0)) - 0), 0 ^ (8))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(8, (8) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(_GLF_IDENTITY(8, _GLF_IDENTITY((8) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(480.823)), bool(false))), 0.0)), injectionSwitch.x)), ((8) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((8) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1))))), _GLF_IDENTITY(max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), (_GLF_IDENTITY(8, (8) + 0)) | 0), 0 ^ _GLF_IDENTITY((8), max((8), (8))))), int(8))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0)))), (~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))))) | (~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0)))))))) + 0), 0 ^ (8))), int(8)))), (max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), (_GLF_IDENTITY(8, (8) + 0)) | 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), (8) + 0)) | 0) : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, max(49798, _injected_loop_counter))))), 0 ^ _GLF_IDENTITY((8), max((8), (8))))), int(8))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0)))), (~ ((_GLF_IDENTITY(8, _GLF_IDENTITY((8), 0 + ((8))) ^ (0 ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0), 0))))))) | _GLF_IDENTITY((~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))))), clamp(_GLF_IDENTITY((~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))))), max((~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))))), (~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))))))), (~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0))))), (~ ((_GLF_IDENTITY(8, (8) ^ (0 ^ 0)))))))))) + 0), 0 ^ (8))), int(8))))) + 0))) | _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0) ^ (8))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)))))) >> 0), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))))), _GLF_IDENTITY(int(8), min(int(8), int(8)))))), min(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, min(0, 0)))) ^ (8))), (int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, ~ (~ (0)))), 0 ^ (8)))) >> 0), _GLF_IDENTITY(int(8), min(int(8), int(8)))))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0 ^ (8), ~ (~ (_GLF_IDENTITY(0 ^ (8), (0 ^ (8)) << (0 | 0))))))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), 1))), _GLF_IDENTITY(int(8), min(int(8), int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(8, (8) / 1), 8, _GLF_IDENTITY(8, clamp(8, 8, 8)))))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (_GLF_IDENTITY(8, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) ^ (8))))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, (8) | 0)))) | (_GLF_IDENTITY(8, min(8, 8))))) + 0), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), min(int(ivec3(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ (8))), int(8))), max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) + 0, ((8) + 0) - 0)), 0 ^ (8))), int(8))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (_GLF_IDENTITY(8, (0 | 0) ^ (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec4(_GLF_IDENTITY(8, ~ (~ (8))), 0, 0, 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), min(int(8), int(8)))) << 0)))))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)))))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, min(8, 8))) ^ 0)))), int(8))), ~ (~ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (8))), int(8)))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)))))))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)))))))), int(8))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)))))))), int(8)))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8)))))))), int(8)))))) << (0 << _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (8), ~ (~ (~ (8))))))))), (_GLF_IDENTITY(0, (0) | (0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)))))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), true)))), true && (true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(1), int(1))))), 0 ^ (8))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), int(ivec4((8), 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0))) + 0), 0 ^ (8))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), int(ivec4((8), 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0))) + 0), 0 ^ (8))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), int(ivec4((8), 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0))) + 0), 0 ^ (8))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), int(ivec4((8), 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0))) + 0), 0 ^ (8))))), int(8))), max((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY((8) + 0, ((8) + 0) + 0), ((8) + 0) - 0)), 0 ^ (8))), int(8))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(8, (0 | 0) ^ (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec4(8, 0, 0, 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(8, (0 | 0) ^ (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec4(8, 0, 0, 1)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x) : _GLF_FUZZED(-2277.5111)))), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x) : _GLF_FUZZED(-2277.5111)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x) : _GLF_FUZZED(-2277.5111)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x) : _GLF_FUZZED(-2277.5111))))) / 1), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x) : _GLF_FUZZED(-2277.5111))))))))))) | ((_GLF_IDENTITY(8, (0 | 0) ^ (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec4(8, 0, 0, 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), int(8)))))) | _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0 ^ (8), max(_GLF_IDENTITY(0 ^ (8), min(0 ^ (8), 0 ^ (8))), 0 ^ (8))))), int(8)))), int(ivec2(((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0 ^ (8), max(_GLF_IDENTITY(0 ^ (8), min(0 ^ (8), 0 ^ (8))), 0 ^ (8))))), int(8)))), 1))))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0 ^ (8), ~ (~ (0 ^ (8)))))), int(8))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0 ^ (8), clamp(0 ^ (8), 0 ^ (8), 0 ^ (8))))), int(8))), ~ (~ ((_GLF_IDENTITY(0, (0) + 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(min((_injected_loop_counter + _injected_loop_counter), _injected_loop_counter)) : 0)) ^ (8))), int(_GLF_IDENTITY(8, (8) / ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - _GLF_IDENTITY(0, (0) - 0))))))))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))), (_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) / 1), 0)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), _GLF_IDENTITY(0, min(0, 0)) ^ (8))), (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))), (_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) / 1), 0)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), _GLF_IDENTITY(0, min(0, 0)) ^ (8)))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))), (_GLF_IDENTITY(8, (8) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) / 1), 0)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), _GLF_IDENTITY(0, min(0, 0)) ^ (8))))), int(8))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), (true ? _GLF_IDENTITY(8, (8) + 0) : _GLF_FUZZED(-84349)))) >> ((1 ^ 1) | 0)), 0 ^ (8))), int(8))), max((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) + 0), 0 ^ (8))), int(8))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, (8) | (8)), 8))) + 0), 0 ^ (8))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, (8) | (8)), 8))) + 0), 0 ^ (8))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, (8) | (8)), 8))) + 0), 0 ^ (8))))), int(8)))))) | _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) + 0, ~ (~ (_GLF_IDENTITY((8) + 0, min(_GLF_IDENTITY((8) + 0, max((8) + 0, _GLF_IDENTITY((8) + 0, ~ (~ ((8) + 0))))), _GLF_IDENTITY((8) + 0, 0 | ((8) + 0)))))))), 0 ^ (8))), int(8)))), min(((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) + 0, ~ (~ (_GLF_IDENTITY((8) + 0, min(_GLF_IDENTITY((8) + 0, max((8) + 0, _GLF_IDENTITY((8) + 0, ~ (~ ((8) + 0))))), _GLF_IDENTITY((8) + 0, 0 | ((8) + 0)))))))), 0 ^ (8))), int(8)))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) + 0, ~ (~ (_GLF_IDENTITY((8) + 0, min(_GLF_IDENTITY((8) + 0, max((8) + 0, _GLF_IDENTITY((8) + 0, ~ (~ ((8) + 0))))), _GLF_IDENTITY((8) + 0, 0 | ((8) + 0)))))))), 0 ^ (8))), int(8)))))))), true, false, true)))))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                break;
               do
                {
                 uvec3(34348u, 111005u, 13285u);
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))) > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                   return;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(inversesqrt(injectionSwitch), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || (bool(bvec3(_GLF_DEAD(false), true, false)))))))))), bool(bvec4(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              return;
             }
           }
          isinf(tan(vec3(-62.00, _GLF_IDENTITY(-7.0, mix(float(_GLF_FUZZED(1.7)), float(-7.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -16.37)));
          do
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
             {
              if(_GLF_DEAD(false))
               break;
             }
            else
             {
              ;
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
          if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && true)) && true)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), true && (_GLF_WRAPPED_IF_TRUE(true)))) || false), false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), true))))
           {
            do
             {
              mat3(mat4x2(6378.6910, -171.934, -3.3, -7.5, -20.38, 4.3, 5196.2308, -4.6));
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
               continue;
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          else
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                break;
               }
              return;
             }
           }
          _GLF_SWITCH_0_1v;
          if(_GLF_DEAD(false))
           {
            do
             {
              return;
             }
            while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))));
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)), _injected_loop_counter)) > 0); _injected_loop_counter --)
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  return;
                 }
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  return;
                 }
                else
                 {
                 }
               }
             }
           }
          do
           {
            for(int _GLF_SWITCH_0_4v; true; uvec4(107988u, 136994u, 121241u, _GLF_IDENTITY(41548u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(41548u, (41548u) << 0u)), (_GLF_IDENTITY(~ (41548u), (~ (41548u)) | 0u)) - 0u)))))
             {
              if(_GLF_DEAD(false))
               {
                do
                 {
                  return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              _GLF_IDENTITY(82.56, (_GLF_IDENTITY(false ? _GLF_FUZZED((3.7 / -32.67)) : _GLF_IDENTITY(82.56, max(82.56, 82.56)), (false ? _GLF_FUZZED((3.7 / -32.67)) : _GLF_IDENTITY(82.56, max(82.56, 82.56))) + 0.0)));
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               break;
              (mat3(8.9, 8.4, 6590.2228, _GLF_IDENTITY(0.2, (true ? 0.2 : _GLF_FUZZED(746.324))), -8.8, -2.4, 1.3, -2.8, 453.701) , bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))))), false));
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))) && true)))
               continue;
              mat4x3 _GLF_SWITCH_0_5v;
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 return;
                break;
               }
              if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), true, true, true))) && true))
               return;
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(78602, _GLF_IDENTITY((1 ^ 1) | (_GLF_IDENTITY(78602, 1 * (78602))), int(_GLF_IDENTITY(ivec4((1 ^ 1) | (_GLF_IDENTITY(78602, 1 * (78602))), (1 & 1), 1, (0 << _GLF_IDENTITY(int(1), int(1)))), (ivec4((1 ^ 1) | (_GLF_IDENTITY(78602, 1 * (78602))), (1 & 1), 1, (0 << _GLF_IDENTITY(int(1), int(1))))) / ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), -51958, _GLF_IDENTITY(80558, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(97271) : 80558))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(78602, -51958, _GLF_IDENTITY(80558, (false ? _GLF_FUZZED(97271) : 80558))), ~ (~ (ivec3(78602, -51958, _GLF_IDENTITY(80558, (false ? _GLF_FUZZED(97271) : 80558)))))), (ivec3(78602, -51958, _GLF_IDENTITY(80558, (false ? _GLF_FUZZED(97271) : 80558)))) - _GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), 0 ^ ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))))))))), max(ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), 0 ^ ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))))))))), ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), 0 ^ ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))))))))))))) / ivec3(1, 1, 1)) , _GLF_IDENTITY(65.04, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(65.04, mix(float(65.04), float(_GLF_FUZZED(-478.805)), bool(false))), (true ? _GLF_IDENTITY(65.04, _GLF_IDENTITY(mix(float(65.04), float(_GLF_FUZZED(-478.805)), bool(false)), (mix(float(65.04), float(_GLF_FUZZED(-478.805)), bool(false))) * 1.0)) : _GLF_FUZZED(1.2))), round(length(normalize(1.0))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(78602, _GLF_IDENTITY((1 ^ 1) | (_GLF_IDENTITY(78602, 1 * (78602))), int(_GLF_IDENTITY(ivec4((1 ^ 1) | (_GLF_IDENTITY(78602, 1 * (78602))), (1 & 1), 1, (0 << _GLF_IDENTITY(int(1), int(1)))), (ivec4((1 ^ 1) | (_GLF_IDENTITY(78602, 1 * (78602))), (1 & 1), 1, (0 << _GLF_IDENTITY(int(1), int(1))))) / ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), -51958, _GLF_IDENTITY(80558, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(97271) : 80558))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(78602, -51958, _GLF_IDENTITY(80558, (false ? _GLF_FUZZED(97271) : 80558))), ~ (~ (ivec3(78602, -51958, _GLF_IDENTITY(80558, (false ? _GLF_FUZZED(97271) : 80558)))))), (ivec3(78602, -51958, _GLF_IDENTITY(80558, (false ? _GLF_FUZZED(97271) : 80558)))) - _GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), 0 ^ ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))))))))), max(ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), 0 ^ ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))))))))), ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), 0 ^ ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))))))))))))) / ivec3(1, 1, 1)) , _GLF_IDENTITY(65.04, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(65.04, mix(float(65.04), float(_GLF_FUZZED(-478.805)), bool(false))), (true ? _GLF_IDENTITY(65.04, _GLF_IDENTITY(mix(float(65.04), float(_GLF_FUZZED(-478.805)), bool(false)), (mix(float(65.04), float(_GLF_FUZZED(-478.805)), bool(false))) * 1.0)) : _GLF_FUZZED(1.2))), round(length(normalize(1.0))))))))))))), true))))
               return;
             }
            if(_GLF_DEAD(false))
             continue;
           }
          while(_GLF_WRAPPED_LOOP(false));
          uvec2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
          if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (false) && true)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, false)), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, false), true))))))))), false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), _GLF_IDENTITY(bool(bvec4(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || false))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)))))))))))))))
           {
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && ((_GLF_IDENTITY(true, ! (! (true)))))))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                return;
               }
              return;
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2((false), true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec2((false), true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))
             continue;
            if(_GLF_DEAD(false))
             return;
           }
          do
           {
            for(            _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3x2(-8.1, -2.9, _GLF_IDENTITY(2224.5417, max(2224.5417, 2224.5417)), -173.688, 512.686, -7.2)), (mat3(mat3x2(-8.1, -2.9, _GLF_IDENTITY(2224.5417, max(2224.5417, 2224.5417)), -173.688, 512.686, -7.2))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(mat3x2(-8.1, _GLF_IDENTITY(-2.9, float(mat4(-2.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.5)), float(0.0), bool(true))))), mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), _GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), (true ? _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))) : _GLF_FUZZED(vec4(8.0, -0.1, 2269.2826, -2565.0798)))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), min(dot(vec4(1.0, log(1.0), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, log(1.0), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))), 0.0))))))) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(atanh(-65.99)) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(_GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0)))), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)))))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)))), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((3.3 * 2435.9048))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0)))))) / 1.0), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(32.67), mix(float(_GLF_FUZZED(-1925.0910)), float(_GLF_FUZZED(32.67)), bool(true))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0)))))), max(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(32.67), mix(float(_GLF_FUZZED(-1925.0910)), float(_GLF_FUZZED(32.67)), bool(true))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(32.67), mix(float(_GLF_FUZZED(-1925.0910)), float(_GLF_FUZZED(32.67)), bool(true))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0), vec4(mat4x3(vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(32.67), mix(float(_GLF_FUZZED(-1925.0910)), float(_GLF_FUZZED(32.67)), bool(true))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(32.67), mix(float(_GLF_FUZZED(-1925.0910)), float(_GLF_FUZZED(32.67)), bool(true))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), float(vec2(float(vec2(0.0, 1.0)), 0.0)))), mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3799.4817)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) * 1.0))), 1.0, sin(0.0), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(true))), bool(false)))), cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))), 2224.5417, -173.688, _GLF_IDENTITY(512.686, (512.686) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / _GLF_ONE(1.0, injectionSwitch.y))), -7.2)), (mat3(mat3x2(-8.1, _GLF_IDENTITY(-2.9, _GLF_IDENTITY(float(mat4(-2.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0)))), (true ? _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0)))) : _GLF_FUZZED(3.3)))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83.07) : 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, abs(1.0)))), 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6403.1518, max(-6403.1518, -6403.1518)))), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (1.0) + 0.0))), min(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-263.678) : 0.0)), 0.0)))) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), _GLF_IDENTITY(float(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (_GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), transpose(transpose(mat2x4(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-95.30)))), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(8.6)), float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true))) : _GLF_FUZZED(-15.18))), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), _GLF_IDENTITY(clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))), sin(0.0) + (clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-6.9) : _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8295.5218)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.6))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(607.058) : 1.0)) : _GLF_FUZZED(6.3)))) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) * 1.0))), 1.0, sin(0.0), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(true))), bool(false)))), cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), 0.0, 1.0, 0.0)), float(vec2(float(mat4(-2.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0)))), (true ? _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0)))) : _GLF_FUZZED(3.3)))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83.07) : 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, abs(1.0)))), 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6403.1518, max(-6403.1518, -6403.1518)))), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (1.0) + 0.0))), min(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-263.678) : 0.0)), 0.0)))) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), _GLF_IDENTITY(float(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (_GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), transpose(transpose(mat2x4(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))), 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-95.30)))), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(32.67) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(8.6)), float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true))) : _GLF_FUZZED(-15.18))), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), _GLF_IDENTITY(clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))), sin(0.0) + (clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))))), 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6403.1518)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-6.9) : _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8295.5218)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.6))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(607.058) : 1.0)) : _GLF_FUZZED(6.3)))) / 1.0))))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) * 1.0))), 1.0, sin(0.0), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(true))), bool(false)))), cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), 0.0, 1.0, 0.0)), determinant(mat4(0.0, abs(0.0), tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 2224.5417, -173.688, _GLF_IDENTITY(512.686, (512.686) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / _GLF_ONE(1.0, injectionSwitch.y))), -7.2))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))));
 (_GLF_IDENTITY(true ? true : false, _GLF_IDENTITY((true ? true : _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((true ? true : _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true, ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((true ? true : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true, ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))); ivec3(-22490, -6615, -54912))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (! (true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))))))))
               break;
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))
               continue;
              mat2x3 _GLF_SWITCH_0_8v[12], _GLF_SWITCH_0_9v;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
                 continue;
                break;
               }
              if(_GLF_DEAD(false))
               break;
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7455.3205)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                _GLF_SWITCH_0_9v;
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                 continue;
               }
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 continue;
                return;
               }
              ivec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), true, false, false))), _GLF_IDENTITY((true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || false), false)))), ((true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || false), false))))) || false) || false))))))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                break;
               }
              if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 continue;
                return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_DEAD(false))
               break;
              ivec2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[22];
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               {
                if(_GLF_DEAD(false))
                 return;
                break;
               }
              transpose(mat2x4(7870.5722, _GLF_IDENTITY(7.7, (_GLF_IDENTITY(7.7, min(7.7, _GLF_IDENTITY(7.7, _GLF_IDENTITY((_GLF_IDENTITY(7.7, (7.7) + _GLF_ZERO(0.0, injectionSwitch.x))), 1.0 * ((_GLF_IDENTITY(7.7, (7.7) + _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0)))) + 0.0), -897.486, -7.9, 6.0, -0.7, _GLF_IDENTITY(-8.3, mix(float(_GLF_IDENTITY(-8.3, (true ? -8.3 : _GLF_IDENTITY(_GLF_FUZZED(-949.721), float(vec4(_GLF_FUZZED(-949.721), 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(0.8)), bool(false))), 654.161));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-361.936), _GLF_FUZZED(9313.2374)), bvec2(false, false))).y))))
                 continue;
                continue;
               }
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
               continue;
              ivec2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
             }
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))));
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_IDENTITY(false, (false) && true)))))))
            continue;
           continue;
          }
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-42.84))), 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), abs(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(526.976) : 1.0)), 0.0, 1.0, 0.0))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))));
         case 28:
         case 83:
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           subgroupAll(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false))))));
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false)), (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))), false))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(32.35, 5.5))))) + vec2(0.0, 0.0)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))) && true), false, false)))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) || false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false, false))))), false, true, true)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true))))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
            {
             for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : (int(6))), 0 + ((false ? _GLF_FUZZED(_injected_loop_counter) : (int(6)))))) | (int(6))))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? int(4) : _GLF_FUZZED(-42376))))) ^ (int(4))), _GLF_IDENTITY(int(4), 0 + (_GLF_IDENTITY(int(4), (int(4)) >> 0)))), int(ivec2(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : int(6)), min((false ? _GLF_FUZZED(_injected_loop_counter) : int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))) >> _GLF_IDENTITY(int(6), int(6))), ~ _GLF_IDENTITY((~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))), (int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))))))))), (_GLF_IDENTITY((~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))), (int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))))))))), ((~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7))))), (int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(6, (6) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))))) - 0)) - 0))) / 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), max(_GLF_IDENTITY((int(4)), ((int(4))) | ((int(4)))), (int(4)))) >> 0)), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), min(int(4), int(4)))))), (int(4)) >> 0)), (0 + (_GLF_IDENTITY(int(4), (int(4)) >> 0))) | 0)) | 0))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / ivec4(_GLF_IDENTITY(1, (1) << (1 ^ 1)), 1, 1, 1))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))))), int(int((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1))))))))) - 0)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / ivec4(_GLF_IDENTITY(1, (1) << (1 ^ 1)), 1, 1, 1))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))))), int(int((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1))))))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / ivec4(_GLF_IDENTITY(1, (1) << (1 ^ 1)), 1, 1, 1))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))))), int(int((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1))))))))) - 0), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / ivec4(_GLF_IDENTITY(1, (1) << (1 ^ 1)), 1, 1, 1))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))))), int(int((int(_GLF_IDENTITY(ivec4(int(4), 0, 1, 0), (ivec4(int(4), 0, 1, 0)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1))))))))) - 0)))) / 1))) * 1), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))); _injected_loop_counter ++)
                {
                 return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))), true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false)))))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         default:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         1;
        }
      }
     else
      {
      }
    }
  }
 else
  {
   buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, log(1.0), 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, false, true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))), false)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5849.1247) : float(mat4x3(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5849.1247) : float(mat4x3(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - _GLF_ZERO(0.0, injectionSwitch.x), max((0.0) - _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((0.0) - _GLF_ZERO(0.0, injectionSwitch.x), float(vec4((0.0) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))))), 0.0, 0.0)), injectionSwitch.x)), _GLF_IDENTITY(~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)), true && (bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false))), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), bool(bool(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), bool(bool(false))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)), _GLF_IDENTITY(true && (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (true && (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false))))))))))))
      break;
     switch(_GLF_SWITCH(0))
      {
       case 88:
       vec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
       case 0:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       case 90:
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.9), _GLF_FUZZED(1453.7306)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          return;
        }
       return;
       break;
       case 13:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       while((equal(ivec2(61136, -1455), (ivec2(-76528, -40664) % ivec2(-17900, -21154))) == _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false)))))))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false)))))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec4(bvec2(false, true), false, false)))))))), true))))))))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))))), false))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true))))), bvec2(bvec4(bvec2(bvec2(false, true)), false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), false))))), false)))))), false), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false))), false))))), false)))))), false))))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         _GLF_IDENTITY(sign(ivec3(_GLF_IDENTITY(-95893, (-95893) - 0), _GLF_IDENTITY(_GLF_IDENTITY(-60518, 0 | (_GLF_IDENTITY(-60518, (-60518) - 0))), 0 + (-60518)), 51699)), (ivec3(0, 0, 0) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (sign(ivec3(_GLF_IDENTITY(-95893, (-95893) - 0), _GLF_IDENTITY(_GLF_IDENTITY(-60518, 0 | (_GLF_IDENTITY(-60518, (-60518) - 0))), 0 + (-60518)), 51699))));
         isnan(vec2(7635.0132, 707.806));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       case 84:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       vec3 _GLF_SWITCH_1_2v[72], _GLF_SWITCH_1_3v[6], _GLF_SWITCH_1_4v;
       default:
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           break;
           if(_GLF_DEAD(false))
            return;
          }
         continue;
        }
       do
        {
         1;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-51103), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-51103)), (~ (_GLF_FUZZED(-51103))) | (~ (_GLF_FUZZED(-51103)))))) : int(6)))) >> 0))), _GLF_IDENTITY(clamp((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) / 1), int(6), int(6))), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(35605))))))) >> 0))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0)))), _GLF_IDENTITY(int(int(clamp((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : _GLF_IDENTITY(int(6), (int(6)) + 0)))) >> 0))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(false ? _GLF_FUZZED(-51103) : int(6), (false ? _GLF_FUZZED(-51103) : int(6)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))))), int(ivec2(int(int(clamp((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), _GLF_IDENTITY((false ? _GLF_FUZZED(-51103) : int(6)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * ((false ? _GLF_FUZZED(-51103) : int(6)))))) >> 0))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0), min(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))) >> 0)))))))), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) / 1), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, false)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    return;
  }
}
