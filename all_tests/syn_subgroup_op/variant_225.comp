#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2746.2627)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.1)), bool(false)))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2746.2627)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.1)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false)), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), bvec3(bvec3(bvec3(false, true, false))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * determinant(mat3(1.0, 1.0, cos(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))), gl_WorkGroupSize)).x)), 1u, 0u, 0u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u))) | ((gl_WorkGroupSize.x))))), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), _GLF_IDENTITY(uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))), 1u * (uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, max(_GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) * 1u), (0u) >> 0u)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), uint(uvec4(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (~ ((gl_WorkGroupSize.x))) - 0u)))), 1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (0u) >> 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))))))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u, 0u))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), _GLF_IDENTITY(1u, 0u | (1u)), 0u, 0u)))))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)))))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x))), min(uint(uint((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x))), min(uint(uint((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x))), uint(uint((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))) | (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))) | 0u), 0u ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x)), 1u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u)))), _GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), _GLF_IDENTITY(((gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(subgroup_size) : ((gl_WorkGroupSize.x)))), ((gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x)))))), 0u, 1u, 1u)), min(uint(uvec4(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u)).x)) | ((gl_WorkGroupSize.x)))))), 0u, 1u, 1u)), uint(uvec4(~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))).x), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))).x), max((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))).x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))).x), uint(uvec2((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))).x), 1u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (~ ((gl_WorkGroupSize.x))) ^ 0u), ~ ((gl_WorkGroupSize.x)), ~ ((gl_WorkGroupSize.x)))), uint(_GLF_IDENTITY(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u), (uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u), uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))))), (_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec3((gl_WorkGroupSize.x), 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, _GLF_IDENTITY(~ (~ ((gl_WorkGroupSize.x) ^ 0u)), 0u | (~ (~ ((gl_WorkGroupSize.x) ^ 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) - uvec3(0u, 0u, 0u)))).x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize.x)), max(((gl_WorkGroupSize.x)), (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) - 0u)))), ((gl_WorkGroupSize.x)), _GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x))))))))))), max((~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec3((gl_WorkGroupSize.x), 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))))), ~ (~ (uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x) ^ 0u), (((gl_WorkGroupSize.x) ^ 0u)) | (_GLF_IDENTITY(((gl_WorkGroupSize.x) ^ 0u), uint(uvec4(((gl_WorkGroupSize.x) ^ 0u), 1u, 1u, 0u)))))), 0u | (~ (~ ((gl_WorkGroupSize.x) ^ 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) - uvec3(0u, 0u, 0u)))).x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize.x))) >> 0u)) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u))))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize.x)), max(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)))), ((gl_WorkGroupSize.x)), _GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ _GLF_IDENTITY((~ (((gl_WorkGroupSize.x)))), min(_GLF_IDENTITY((~ (((gl_WorkGroupSize.x)))), ((~ (((gl_WorkGroupSize.x))))) | ((~ (((gl_WorkGroupSize.x)))))), (~ (((gl_WorkGroupSize.x))))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec3((gl_WorkGroupSize.x), 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) ^ 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, _GLF_IDENTITY(~ (~ ((gl_WorkGroupSize.x) ^ 0u)), 0u | (~ (~ ((gl_WorkGroupSize.x) ^ 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, 1u * (_GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u + ((gl_WorkGroupSize.x))))))) ^ 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ _GLF_IDENTITY((0u), ((0u)) | 0u)) >> 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) - uvec3(0u, 0u, 0u)))).x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize.x)), max(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)))), ((gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize.x)), min(_GLF_IDENTITY(((gl_WorkGroupSize.x)), max(((gl_WorkGroupSize.x)), _GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), ((gl_WorkGroupSize.x)))))), ((gl_WorkGroupSize.x)))), ~ (~ (((gl_WorkGroupSize.x)))))))))))))) ^ 0u), 0u, 1u, _GLF_IDENTITY(1u, (1u) - 0u))))), _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(164421u, 10690u, 164401u)))).x)), 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), _GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), (1u) >> 0u), 0u, 0u)))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) | 0u), 0u ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (((gl_WorkGroupSize.x)))), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u)))))) / 1u))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) / 1u), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(_GLF_IDENTITY(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u), ~ (~ (uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))))))) | 0u)))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))))), 0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec4(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(164421u, 10690u, 164401u)))).x)), 1u, 0u, 0u))), 0u ^ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), _GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 0u)))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) | 0u), 0u ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (((gl_WorkGroupSize.x)))), uint(uvec4(~ ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x)), 1u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u)))))) / 1u))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))) / 1u), _GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))))), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))))), ((_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(_GLF_IDENTITY(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u), ~ (~ (uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))))))) | 0u)))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))))), 0u, 1u, 1u)))), min(uint(_GLF_IDENTITY(uvec4(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x))))) : _GLF_FUZZED(subgroup_size))), 1u, 0u, 0u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x)) | ((gl_WorkGroupSize.x)))))), 0u, 1u, 1u), (true ? uvec4(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ ((_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), (gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u))))))) : _GLF_FUZZED(subgroup_size))), 1u, 0u, 0u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x)) | ((gl_WorkGroupSize.x)))))), 0u, 1u, 1u) : _GLF_FUZZED(uvec4(142218u, 181447u, 57395u, 176179u))))), uint(uvec4(~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))), (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u)), (uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u))) | (uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u))))), min(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u)), (uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u))) | (uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u)), (uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u))) | (uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), 1u, (0u ^ 1u)))))))))))) - 0u))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), clamp(clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), max(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)))), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x))))), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), min(clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | (_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))))), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), max(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) / 1u)))), 0u ^ (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), max(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) / 1u)))))))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), min(_GLF_IDENTITY(clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), clamp(~ ((gl_WorkGroupSize.x)), ~ ((gl_WorkGroupSize.x)), _GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uint(~ ((gl_WorkGroupSize.x)))))))) | (~ ((gl_WorkGroupSize.x)))), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), (clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))))) << 0u), clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupSize, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u)))), (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))) >> 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (true ? _GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(21429u, 78874u, 50038u))))))), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize))))))).x, gl_WorkGroupSize.x)))))), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (gl_WorkGroupSize.x) ^ 0u)))), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), clamp(_GLF_IDENTITY(((gl_WorkGroupSize.x)), max(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))).x), (gl_WorkGroupSize.x)))), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u)), ~ (~ (((gl_WorkGroupSize.x)))))))))))) ^ 0u), 0u, 1u, 1u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((false)) && true))) || false), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false))))))), ((false)) && true))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))) && (_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))) && (_GLF_IDENTITY(false, ! (! (false)))))))))))), false || (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((false)) && true))) || _GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-137.860) : injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))), true, true))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))))))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)))))), injectionSwitch)).y)) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))), true, true))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.91), _GLF_FUZZED(-46.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(0.3, 8.3)))))))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)))))), injectionSwitch)).y)) && true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0)), 0.0)))))), injectionSwitch)).y)) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0)), mix(float(_GLF_FUZZED(-2.6)), float(determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0))), bool(true))), length(vec3(0.0, 0.0, 0.0)), abs(1.0), 0.0, sqrt(1.0), 1.0, 1.0, 0.0), (true ? mat4x2(determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-897.237))))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), abs(1.0), 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(6933.3863, 4613.4331, -44.36, -4.1, 51.37, 609.486, 69.17, -97.85)))))), 0.0)))))), injectionSwitch)).y)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0)), 0.0)))))), injectionSwitch)).y)) && true)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.658)), bool(false))), 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), 0.0, 1.0)), 0.0)))))), injectionSwitch)).y)) && true))))))) && true)))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) - 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) / 1u))))), max(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1))))) >> 0u)) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) / (1u & 1u)), subgroup_local_id + 1)))), (((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) / (1u & 1u)), subgroup_local_id + 1))))) | (((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) / (1u & 1u)), subgroup_local_id + 1))))))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y) * (1.0), float(mat2x3(_GLF_ONE(1.0, injectionSwitch.y) * (1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9.0))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9.0))) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1)))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false), ! (! (bool(bvec3(false, true, false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3344.2786) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(234.930)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-75.33)), bool(false))))), 1.0, 1.0, 1.0))), 1.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6977.2969))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, _GLF_IDENTITY((buf[next_virtual_gid] = 2), (_GLF_IDENTITY((buf[next_virtual_gid] = 2), 0u + ((buf[next_virtual_gid] = 2)))) | 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
