#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
    {
     case 12:
     (ivec3(65024, -22191, 98372) / ivec3(-66851, -52339, -32655));
     case 0:
     case 57:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       buf[next_virtual_gid] = 2;
      }
     subgroupAll(false);
     break;
     case 81:
     (35500 + ivec3(-47704, -61811, 91931));
     case 34:
     {
      switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), int(7)))))
       {
        case 0:
        case 75:
        ivec2(-95363, -76471);
        case 19:
        case 66:
        case 6:
        case 38:
        case 95:
        for(mat3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[24]; (! false); mix(uvec2(45310u, 13578u), uvec2(173464u, 137622u), bvec2(true)))
         {
          mat4(-988.400, 515.832, -3.2, -846.972, -1144.1574, -75.85, -1.2, 7.5, 901.025, -6.5, -76.85, 42.80, 4.2, -4.5, -3937.4090, -651.841);
          bvec4(bvec2(false, false), bvec2(false, false));
          abs(faceforward(vec3(-9.7, -1.4, 9.5), vec3(-52.43, 3.7, -24.91), vec3(71.09, 9.4, -803.743)));
          vec2(-649.907, 9.9);
          ;
         }
        break;
        default:
        1;
       }
     }
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 1:
     findLSB(ivec4(-65261, -70267, -17418, -25270));
     case 0:
     buf[next_virtual_gid] = 2;
     subgroupAll(true);
     break;
     case 68:
     if((notEqual(uvec4(47185u, 147172u, 145268u, 156400u), uvec4(132664u, 42523u, 154816u, 146274u)) != bvec4(false, true, true, true)))
      {
       {
        {
         bvec2((-0.2 != -813.511), false);
         bvec4 _GLF_SWITCH_1_0v;
         ;
         vec2 _GLF_SWITCH_1_1v[27], _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[70];
         bvec4 _GLF_SWITCH_1_4v[84];
         ;
         634.718;
         ivec4 _GLF_SWITCH_1_5v[67];
         uvec3 _GLF_SWITCH_1_6v;
        }
        ((subgroup_id + workgroup_base) * uvec2(46735u, 73910u));
       }
       for(mat2x4 _GLF_SWITCH_1_7v[31], _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v; true; mat2(-5541.6970, 473.433, 9.8, -18.22))
        {
         if((ivec4(25743, 74212, 66369, 9057) != ivec4(5425, -95383, 70970, 47088)))
          {
           (mat2x3(7.6) / mat2x3(-7943.3199, 910.660, 7.9, -1.2, -88.30, 8.4));
           bvec3 _GLF_SWITCH_1_10v[52];
           vec3(6538.4617, 5971.0112, -3.4);
           ;
           step(injectionSwitch, vec2(-4.7, -788.543)).y;
          }
         else
          {
           mat2x4 _GLF_SWITCH_1_11v;
          }
         bvec3(false, true, false);
         if(true)
          {
           ;
           mat3x4 _GLF_SWITCH_1_12v[46], _GLF_SWITCH_1_13v[40], _GLF_SWITCH_1_14v;
           ;
           bool _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[29];
           ivec4(62152, -84398, -63615, 48089);
           mat4(639.822, 370.312, -5.0, -7547.6391, -20.08, 1.8, 9766.0726, -24.69, -2616.5084, -590.496, 2913.9483, 214.111, 996.823, -719.421, 87.94, 3125.3650);
          }
         ;
         (_GLF_SWITCH_1_8v --);
         bvec3((uvec2(107277u, 150072u) != uvec2(93170u, 23765u)));
         for(         (- mat2(-6.1, -663.970, -824.538, 2732.6999));
 false; vec4(-28.94, 30.92, -4489.0711, -965.121))
          {
           ivec4 _GLF_SWITCH_1_17v[52];
          }
         -25718;
        }
       (mod(smoothstep(-8.8, -589.931, 2.5), 5734.7046) / mat2(-3.6, -183.326, -87.70, 721.342));
       {
        for(        vec3(vec2(-744.810, 898.440), -5.9);
 (false || (bvec4(false, false, true, true) != bvec4(false, true, true, true))); uvec4(25614u, 26407u, 182571u, 151161u))
         {
          mat3x2(96.94, -8585.1577, 79.59, 98.11, -982.510, -375.371);
          mat4(641.935, 8790.7611, 69.81, 3395.6174, 9785.7213, -0.4, 59.44, 7.8, 90.91, 827.592, -6.8, -3565.1477, 3.7, 3.7, 96.20, -3147.6822);
          uvec4(99438u, 80470u, 38886u, 60557u).tp;
          (mat4x3(-2069.0444, 71.24, 1.3, 92.70, 8211.9063, -65.21, 5477.9088, -7.5, -3.9, -492.817, -6.3, -9.5) - (mod(1.2, 3.7) + mat4x3(9.9, 6164.2435, 5381.9262, 6.2, -2.2, -6.9, 51.40, -54.63, -130.519, 1.8, 5.2, 8338.2001)));
          ;
          mat4 _GLF_SWITCH_1_18v[77];
          bvec4 _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v[60];
          mat2x3(-8194.3277, -9.2, 6389.4535, -71.76, -701.069, 33.35);
         }
        mat2x4(-1.3, 58.59, -2621.4111, 30.81, -80.06, 5.8, 2.8, -12.61);
        (true ? mat3(9631.0809, -0.8, -4874.4427, 2536.4130, -485.904, -41.25, 2419.0003, -65.86, 560.662) : mat3(0.8, -151.762, -2.3, 8.1, 1.0, -54.86, -4953.0972, 6.6, -75.92));
       }
      }
     case 24:
     {
      reflect(vec4(5908.1523, -2.4, -1.4, 1.0), vec4(433.821, 2222.2471, -5.4, -7.0));
      mat2x3(-6.3, 93.31, 85.17, -69.70, -2906.3220, 3.8);
      abs(-84547);
      while(false)
       {
        uvec3(96032u, 53394u, 107978u);
        ;
        uint _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v;
        {
         (ivec3(23647, 80291, 57339) & -61116);
         sign(-2.9);
        }
        for(vec4 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v; (-2.7 >= 175.206); floatBitsToInt(205.202))
         {
          ivec4 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v;
          ivec2(-72950, 70283);
          greaterThanEqual(_GLF_SWITCH_1_25v, sign((mat3x4(72.00, 34.52, -8.2, 1.9, -0.7, -99.55, 179.825, 9683.2172, 1.9, 9.4, 242.326, 0.1) * vec3(-1.6, 2.4, -18.60))));
         }
        mat2x3(-4.8, 63.99, 5256.6672, 6217.2480, 7813.8956, 4709.1932);
        if(true)
         {
          _GLF_SWITCH_1_22v;
          mat2x4 _GLF_SWITCH_1_29v[41], _GLF_SWITCH_1_30v, _GLF_SWITCH_1_31v;
          vec3 _GLF_SWITCH_1_32v;
          uvec4(66909u, 33494u, 12506u, 64692u);
         }
       }
     }
     default:
     1;
    }
  }
}
