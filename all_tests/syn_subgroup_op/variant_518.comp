#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 ivec4 _f0;
 mat3 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 vec3 _f1;
 mat3x2 _f2;
 vec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 ivec3 _f3;
 bvec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 mat3x2 _f3;
 _GLF_struct_6 _f4;
 bvec4 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 uint _f1;
 _GLF_struct_8 _f2;
 bvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uint virtual_gid;
 ivec2 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 mat4 _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(gl_SubgroupSize, mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)), 1.0), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat2x4(max(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), min(float(mat2x4(max(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(max(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), min(float(mat2x4(max(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(max(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), max(1.0, 1.0)), 0.0 + (min(_GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, 1.0), float(mat2x4(max(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(max(1.0, 1.0), float(mat2x4(_GLF_IDENTITY(max(1.0, 1.0), 0.0 + (max(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), max(1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(vec4(1.0, sqrt(1.0), 1.0, 0.0))), 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(min(8.0, -8884.6748))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, exp(0.0), sqrt(0.0), 1.0, 0.0, 1.0))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1u, _GLF_struct_8(true, mat2x3(1.0), _GLF_struct_5(vec4(1.0), mat4x2(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec3(_GLF_IDENTITY(1, (1) ^ 0)), bvec2(true), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.0)), _GLF_IDENTITY(bool(false), (bool(false)) && true))))), mat3x2(1.0), _GLF_struct_6(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-66.82) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-66.82) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, abs(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-66.82) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-66.82) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false) ? _GLF_FUZZED(-66.82) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-66.82) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), 1.0, 1.0))))))), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(_GLF_IDENTITY((0.9 + -6.1), float(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(0.9, max(0.9, 0.9)) + -6.1), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, sqrt(1.0), 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(668.540)) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0)))) - 0.0)) / 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0)))) - 0.0)) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0)))) - 0.0)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0)))) - 0.0)) / 1.0), (false ? _GLF_FUZZED(-464.693) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0)))) - 0.0)) / 1.0))))), 0.0), vec3(0.0, sqrt(1.0), 0.0)))), transpose(transpose(mat3x2(_GLF_IDENTITY((0.9 + -6.1), clamp((0.9 + -6.1), (0.9 + -6.1), (0.9 + -6.1))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0))), 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec3(0.0, sqrt(1.0), 0.0)))))))))), _GLF_IDENTITY(_GLF_FUZZED(46.75), max(_GLF_FUZZED(46.75), _GLF_FUZZED(46.75))), (vec3(1.0))[_GLF_IDENTITY(2, (2) / (1 | _GLF_IDENTITY(1, max(1, 1))))]), _GLF_IDENTITY(vec3((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)))[0], _GLF_IDENTITY((vec3(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1))], (_GLF_IDENTITY(true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5), clamp(_GLF_IDENTITY(true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5), 0.0 + (true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5))), true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5), true ? (vec3(1.0))[1] : _GLF_IDENTITY(_GLF_FUZZED(-8.5), clamp(_GLF_FUZZED(-8.5), _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.5))))))), _GLF_FUZZED(vec2(34.66, 22.66).r)), min(vec3(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), (vec3(1.0))))[0], _GLF_IDENTITY((vec3(1.0))[_GLF_IDENTITY(1, (1) | (1))], (true ? (vec3(1.0))[_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-32231)))) >> 0) - 0)] : _GLF_FUZZED(-8.5))), _GLF_FUZZED(vec2(34.66, 22.66).r)), vec3((vec3(1.0))[0], _GLF_IDENTITY((vec3(1.0))[_GLF_IDENTITY(1, (1) | (1))], (true ? (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, min(1, 1))] : _GLF_FUZZED(-8.5))), _GLF_FUZZED(vec2(34.66, 22.66).r)))), _GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false)))), (true ? _GLF_IDENTITY(mix(vec3(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(0.9, clamp(_GLF_IDENTITY(0.9, max(0.9, 0.9)), _GLF_IDENTITY(0.9, (0.9) / 1.0), 0.9)) + -6.1, (true ? _GLF_IDENTITY(0.9, clamp(_GLF_IDENTITY(0.9, max(0.9, 0.9)), _GLF_IDENTITY(0.9, (0.9) / 1.0), 0.9)) + -6.1 : _GLF_FUZZED(-9236.0814))))), _GLF_FUZZED(46.75), _GLF_IDENTITY((vec3(1.0))[2], (true ? (vec3(1.0))[2] : _GLF_FUZZED(determinant(mat4(-9740.0418, -4.5, -8.5, 29.40, -6.1, -121.225, 5.9, 736.207, 7068.1322, 6.1, -56.34, 990.984, 4.0, -8.4, -42.06, 5.1)))))), vec3((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], _GLF_IDENTITY((vec3(1.0))[1], (true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5))), _GLF_FUZZED(vec2(34.66, 22.66).r)), bvec3(true, true, false)), vec3(mat4x2(mix(vec3(_GLF_FUZZED(_GLF_IDENTITY((0.9 + -6.1), float(mat3x2((0.9 + -6.1), 1.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(46.75), min(_GLF_FUZZED(46.75), _GLF_FUZZED(46.75))), (vec3(1.0))[2]), vec3(_GLF_IDENTITY((vec3(1.0))[0], min((vec3(1.0))[0], (vec3(1.0))[0])), _GLF_IDENTITY((vec3(1.0))[1], _GLF_IDENTITY((true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5)), (_GLF_IDENTITY((true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5)), clamp((true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5)), (true ? _GLF_IDENTITY((vec3(1.0))[1], float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((vec3(1.0))[1], 0.0 + (_GLF_IDENTITY((vec3(1.0))[1], clamp((vec3(1.0))[1], (vec3(1.0))[1], (vec3(1.0))[1])))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0), (mat4(_GLF_IDENTITY((vec3(1.0))[1], 0.0 + (_GLF_IDENTITY((vec3(1.0))[1], clamp((vec3(1.0))[1], (vec3(1.0))[1], (vec3(1.0))[1])))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(-8.5)), _GLF_IDENTITY((true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5)), min((true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5)), (true ? (vec3(1.0))[1] : _GLF_FUZZED(-8.5))))))) / cos(0.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(34.66, 22.66), mix(vec2(_GLF_FUZZED(-7.4), (vec2(34.66, 22.66))[1]), vec2((vec2(34.66, 22.66))[0], _GLF_FUZZED(8362.6618)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).r)), bvec3(true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), 1.0, 0.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(19.08, clamp(19.08, 19.08, _GLF_IDENTITY(19.08, cos(0.0) * _GLF_IDENTITY((19.08), mix(float((19.08)), float(_GLF_FUZZED(-3.0)), bool(false)))))), _GLF_IDENTITY(9.2, float(mat4(9.2, _GLF_IDENTITY(0.0, sqrt(tan(0.0)) + (0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, sin(0.0) + (0.0)), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(0.0 + (sin(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 + (sin(0.0)) : _GLF_FUZZED(exp2(-105.803))))), 0.0, 0.0, 1.0, 1.0))), -27.35))))), mat3x2(1.0), vec3(1.0), mat2(1.0)), bvec4(true), _GLF_struct_7(ivec4(1), mat3(1.0), gl_SubgroupInvocationID)), bvec3(true), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), 1.0))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(vec3(6946.6190, 82.97, 68.83), vec3(-3.4, 5.2, 2.8), vec3(-9.7, -9.4, 1.6), vec3(_GLF_IDENTITY(9.4, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-426.840) : 9.4)), -300.709, -7.9))) : mat4x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat2x4(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), log(1.0) + (_GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(mat3(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), dot(vec3(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(vec3(6946.6190, 82.97, 68.83), vec3(-3.4, 5.2, _GLF_IDENTITY(2.8, (false ? _GLF_FUZZED((8.3 * -556.772)) : 2.8))), vec3(-9.7, -9.4, 1.6), vec3(9.4, -300.709, -7.9))) : mat4x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(1611.6199, -50.94, -4.6, 743.099, 162.253, -2.3)) : mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(9987.7487, 633.740, 6.8, -3.0, -97.55, -589.664, -365.496, -0.0)) : mat2x4(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(vec2(1.0, 1.0)), _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(vec2(1.0, 1.0)), float(vec2(1.0, 1.0)))))))))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((948.630 / -4543.6202))), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.3) : 0.0))), bool(true))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.0)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mat4x3(vec3(6946.6190, 82.97, 68.83), vec3(-3.4, 5.2, 2.8), vec3(-9.7, -9.4, 1.6), vec3(9.4, -300.709, -7.9))) : mat4x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(14957u, 35153u, 37193u)) : gl_WorkGroupID)), uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2])), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))))) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), max(_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), (_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), ~ (~ (((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), max(_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), (_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), ~ (~ (((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), max(_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), (_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), ~ (~ (((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), max(_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), (_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), ~ (~ (((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), max(_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), (_GLF_IDENTITY(((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))), ~ (~ (((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(17912u, 151706u, 100088u)) : (gl_WorkGroupID))), (_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(17912u, 151706u, 100088u)) : (gl_WorkGroupID)))) | (_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(17912u, 151706u, 100088u)) : (gl_WorkGroupID)))))) | _GLF_IDENTITY(((gl_WorkGroupID)), clamp(_GLF_IDENTITY(((gl_WorkGroupID)), (_GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), bool(bvec2(_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false || (! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(false, false || (false)), false)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))) || false), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec4(1), mat3x4(1.0), mat3x4(1.0), _GLF_struct_3(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(154369u) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size)), workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size)))) + _GLF_struct_replacement_9._f2._f6.subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(workgroup_id, workgroup_id, 16596, _GLF_IDENTITY(27787, int(int(27787)))), (bitfieldInsert(workgroup_id, workgroup_id, 16596, _GLF_IDENTITY(27787, int(int(27787))))) | (_GLF_IDENTITY(bitfieldInsert(workgroup_id, workgroup_id, 16596, _GLF_IDENTITY(27787, int(int(27787)))), (true ? bitfieldInsert(workgroup_id, workgroup_id, 16596, _GLF_IDENTITY(27787, int(int(27787)))) : _GLF_FUZZED(workgroup_id)))))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u + (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) * 1u))), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u), 0u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))), (true ? uint(_GLF_IDENTITY(uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u + (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) * 1u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), max((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u), 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_struct_replacement_9._f2._f6.subgroup_local_id), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(759.207)))), 0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_9._f2._f6.subgroup_local_id)), 1u), (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_9._f2._f6.subgroup_local_id)), 1u)) >> uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_9._f2._f6.subgroup_local_id)), 1u), (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_9._f2._f6.subgroup_local_id)), 1u)) >> uvec2(0u, 0u))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u))))))))) / _GLF_IDENTITY(1u, (1u ^ 1u) ^ (1u))))), ivec2(1), _GLF_struct_2(mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-75.84) : 1.0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (false) || false)))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((2700.9696 / 7905.1813)), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-1346.3591)), bool(false)))) - 0.0)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 0.0, 0.0, sqrt(1.0)))))[0], _GLF_FUZZED((187.007 + -40.61))), bvec2(true, false))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.6, 263.733, -7.5, -449.120).s)), bvec2(true, false))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((2700.9696 / 7905.1813)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2777.4885)), vec2(_GLF_FUZZED(-7.2), (injectionSwitch)[1]), bvec2(false, true))))[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-1346.3591)), bool(false)))) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(187.007, clamp(187.007, 187.007, 187.007)) + -40.61))), bvec2(true, false))).x > injectionSwitch.y)))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_1._f0.subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, (_GLF_struct_replacement_9._f2._f6.subgroup_local_id) | (_GLF_struct_replacement_9._f2._f6.subgroup_local_id)) + 1, _GLF_IDENTITY(clamp(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1), (clamp(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1)) ^ 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id, (_GLF_struct_replacement_9._f2._f6.subgroup_local_id) | (_GLF_struct_replacement_9._f2._f6.subgroup_local_id)) + 1, _GLF_IDENTITY(clamp(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1), (clamp(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1)) ^ 0u)))) / 1u) % _GLF_struct_replacement_1._f0.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(1.5))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((float(-16504) * -2377.1113)), min(_GLF_FUZZED((float(-16504) * -2377.1113)), _GLF_FUZZED((float(-16504) * -2377.1113))))), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), true, false))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[_GLF_struct_replacement_4._f3.virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), false, true, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_1._f0.subgroup_size, 0u + (_GLF_struct_replacement_1._f0.subgroup_size)), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_1._f0.subgroup_size, 0u + (_GLF_struct_replacement_1._f0.subgroup_size)), (_GLF_struct_replacement_9._f2._f6.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1) - 0, 0 | (_GLF_IDENTITY((1) - 0, 0 ^ ((1) - 0)))), 1, 0)), ~ (~ (int(ivec3(_GLF_IDENTITY((1) - 0, 0 | (_GLF_IDENTITY((1) - 0, 0 ^ ((1) - 0)))), 1, 0))))))))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) - 0))), max(int(int(_GLF_IDENTITY(1, (1) - 0))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 + (_GLF_IDENTITY(1, (1) - 0))))))))) : _GLF_FUZZED(28385)))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) - 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) - 0))), max(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, max((1) - 0, (1) - 0))))), int(int(_GLF_IDENTITY(1, (1) - 0))))) : _GLF_FUZZED(28385)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), (1) - 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) - 0))), max(int(int(_GLF_IDENTITY(1, (1) - 0))), int(int(_GLF_IDENTITY(1, (1) - 0))))) : _GLF_FUZZED(28385)))))) < _GLF_IDENTITY(_GLF_struct_replacement_1._f0.subgroup_size, 0u + _GLF_IDENTITY((_GLF_struct_replacement_1._f0.subgroup_size), ((_GLF_struct_replacement_1._f0.subgroup_size)) | (0u ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2132.5325)), bool(false))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(false))))
      barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-751.058), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (injectionSwitch)[0])), _GLF_FUZZED(-37.52)), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (injectionSwitch)[0])), _GLF_FUZZED(-37.52)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (injectionSwitch)[0])), _GLF_FUZZED(-37.52)))), bvec2(true, false))).x > injectionSwitch.y)), false)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(37.66)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.5) : injectionSwitch.x))), bool(true))) > injectionSwitch.y) || false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), ! (! _GLF_IDENTITY((false), ((false)) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(1.0))) * (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))))
    barrier();
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))) || false))))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), false, true, true)))) || false), ! (! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) && true)))))), ! (! (! (_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_DEAD(false))))))))), bool(bool(! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), ! (! (! (_GLF_DEAD(false)))))))), bool(_GLF_IDENTITY(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), ! (! (! (_GLF_DEAD(false))))))))), true && (bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), ! (! (! (_GLF_DEAD(false)))))))))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(length(fma(vec4(-79.37, 3.4, 8.7, -1.8), vec4(7.0, -6.5, 873.643, -6.4), vec4(-9.7, _GLF_IDENTITY(-21.01, clamp(-21.01, -21.01, _GLF_IDENTITY(-21.01, min(-21.01, _GLF_IDENTITY(-21.01, (-21.01) / 1.0))))), 2.2, -9.3)))))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.6) : injectionSwitch.x)) < injectionSwitch.y)), true, false)))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true, false))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false))) || false) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))), true && (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, false)))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
