#version 460
struct _GLF_struct_2 {
 uint workgroup_size;
 mat4 _f0;
} ;

struct _GLF_struct_0 {
 float _f0;
} ;

struct _GLF_struct_1 {
 uint num_workgroup;
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_NumWorkGroups.x, _GLF_struct_0(1.0));
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(gl_WorkGroupSize.x, mat4(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_2.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   buf[next_virtual_gid] = 2;
   subgroupAll(false);
  }
 else
  {
   buf[next_virtual_gid] = 2;
   subgroupAll(true);
  }
}
