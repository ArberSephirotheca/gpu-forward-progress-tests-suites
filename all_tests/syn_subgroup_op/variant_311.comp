#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) | (0 | 0)) > 0)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) | (0 | 0)) > 0)), bool(bvec4(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) | (0 | 0)) > 0)), true && (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) | (0 | 0)) > 0)))), true, false, false))))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))))) || false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), ! (! ((! (_GLF_WRAPPED_IF_TRUE(true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bool((! (_GLF_WRAPPED_IF_FALSE(false))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(true, true && (true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true))))))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))), true)), true && (bool(bvec2(bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true), false)), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true), false)), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true), false)), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true), false)), true))))))), false)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_IDENTITY(true, (true) || false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true))))))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bool((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bool(bool((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), true), false, true)), true)))), true)))), true && (bool(bvec2(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), true)))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-33.63 * 73.53))), bool(false))) < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))), false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))), true))))))))))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.2)))) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + 0.0))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(bool(! _GLF_IDENTITY((false), ((false)) && true))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          break;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, true && ((false) && true)))))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -29588)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true))), true, true, false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))))) || false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (bool(bvec4(true, false, true, false))))), (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  continue;
                }
               return;
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_IDENTITY(_GLF_FUZZED(98118), min(_GLF_IDENTITY(_GLF_FUZZED(98118), int(int(_GLF_FUZZED(98118)))), _GLF_IDENTITY(_GLF_FUZZED(98118), (_GLF_FUZZED(98118)) - 0))) : int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -33622)); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true)))));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), (mat2x4(injectionSwitch.x, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))))))) && true)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), subgroup_size)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), subgroup_size)))))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u)))))), (uvec2((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))))) | (uvec2((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))))))), uint(uvec3(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u)))))), (uvec2((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))))) | (uvec2((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))))))), 0u, 0u)))), (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_id)))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + 1) << 0u)) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + 1) << 0u)) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + 1) << 0u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id)))) * 1u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0)), (subgroup_local_id + 1) << 0u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + 1) << 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + 1) << 0u)) % subgroup_size) + 0u)))) << 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x, mix(float(_GLF_FUZZED(378.503)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x, (false ? _GLF_FUZZED(-5047.8385) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x)) : _GLF_FUZZED(-3.5)))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x, mix(float(_GLF_FUZZED(378.503)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x, (false ? _GLF_FUZZED(-5047.8385) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x)) : _GLF_FUZZED(-3.5)))), bool(true))) > injectionSwitch.y))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 65.96)))).x > injectionSwitch.y)))))))) && true))))))))))))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true)))))))))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, true)))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0)), mat3x4(mat3x4(mat3x4(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0))))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    return;
  }
 else
  {
   buf[virtual_gid] = 1;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(116.680)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(793.563)), bool(false))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.5))) > injectionSwitch.y)))))))))));
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 1u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 1u)), min(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 1u)), uint(uvec4(subgroup_local_id + 1, 0u, 1u, 1u)))), uint(uvec4(subgroup_local_id + 1, 0u, 1u, 1u))))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bvec3(_GLF_IDENTITY((! (false)) && true, ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) && true) || false), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false, false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     buf[next_virtual_gid] = 2;
    }
   else
    {
    }
   subgroupAll(false);
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && true)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))) || false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y)))) || (_GLF_DEAD(false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))))))), true), false, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.9) : 1.0)), 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), (vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.9) : 1.0)), 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.7)), bool(false))), 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / sqrt(1.0), (_GLF_IDENTITY((0.0) / sqrt(1.0), 0.0 + ((0.0) / sqrt(1.0)))) / 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1021.2426))), float(0.0), bool(true))))), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-399.395) : 1.0))), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(length(0.0), 1.0 * (_GLF_IDENTITY(length(0.0), float(mat2x3(length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(62.55)), float(length(0.0)), bool(true))))), _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), log(1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))))), 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))), min(min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, abs(1.0), 0.0, abs(0.0), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-559.053)), bool(false))), 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / sqrt(1.0), float(float(_GLF_IDENTITY((0.0) / sqrt(1.0), clamp((0.0) / sqrt(1.0), (0.0) / sqrt(1.0), (0.0) / sqrt(1.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(949.161, 1663.8859)) : injectionSwitch)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)), 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-485.255)), float(1.0), bool(true)))), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) / 1.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, log(1.0), 1.0, 1.0))))), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0), ((mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0)) * mat2(1.0))))), 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-485.255)), float(1.0), bool(true)))), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), max(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) / 1.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, log(1.0), 1.0, 1.0))))), vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0), ((mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0)) * mat2(1.0))))), 0.0, 0.0)))), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0))))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(false)))) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) || false) || false)), (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y) - 0.0))) || (_GLF_DEAD(false)))) || false))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          break;
         break;
        }
       _GLF_IDENTITY(buf[next_virtual_gid] = 2, ~ (~ (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) << (0u | 0u)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   subgroupAll(true);
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).y), ! _GLF_IDENTITY((! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), ((! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
}
