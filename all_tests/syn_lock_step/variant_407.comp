#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2(true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true)))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 0.0, exp(0.0)))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0))))))))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5324.7893) : 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))))), 1.0))), 1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)))))), mix(float(_GLF_FUZZED(3.6)), float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.1)), float(0.0), bool(true))), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))), 0.0)), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y), abs(0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), exp(0.0))))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(ldexp(3782.5060, 18440)) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)))), 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0)), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.4) : 1.0)), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.4) : 1.0)), 1.0, 1.0, 0.0)), (transpose(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.4) : 1.0)), 1.0, 1.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, exp(0.0))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), true, false))))))), false, true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(vec2(-15.73, 0.3))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))) || false), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0, sin(0.0)), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), 0.0, 0.0, 0.0, 1.0, sin(0.0))) * mat2(1.0)))) > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) ^ 0u), gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | 0u), (gl_WorkGroupID[_GLF_IDENTITY(1, (1) - 0)]) ^ 0u), gl_WorkGroupID[2]))) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((gl_WorkGroupID[1]), ((gl_WorkGroupID[1])) | ((gl_WorkGroupID[1]))) ^ 0u), gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | 0u), (gl_WorkGroupID[1]) ^ 0u), gl_WorkGroupID[2]))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) * uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2])))), min(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2])))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2])))))))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))), 0u)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(2, (2) + 0)]))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))[2])))), uvec3(uvec4(((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) | (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))[2])))), 0u))))) | _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u, 0u)))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), uvec3(7u)), (_GLF_IDENTITY(uvec3(7u), uvec3(7u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), uvec3(7u)), (_GLF_IDENTITY(uvec3(7u), uvec3(7u))) | uvec3(0u, 0u, 0u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], min(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[0], (true ? gl_WorkGroupID[0] : _GLF_FUZZED(subgroup_id))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], min(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[0], (true ? gl_WorkGroupID[0] : _GLF_FUZZED(subgroup_id))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], min(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[0], (true ? gl_WorkGroupID[0] : _GLF_FUZZED(subgroup_id))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], min(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[0], (true ? gl_WorkGroupID[0] : _GLF_FUZZED(subgroup_id))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(13983u, 145027u, 44266u)) : uvec3(uvec3(gl_WorkGroupID))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x), _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))[2]))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x)) << _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), (_GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))[2]))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x)) << _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), max((max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))[2]))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x)) << _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), (max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))[2]))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)).x)) << _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))))) >> 0u)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), (bool(! (true))) || false))))), ! (! (true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), true && (_GLF_IDENTITY(! (false), true && (! (false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(5603.9569)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false, true, false)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(bool(bvec2(! ((! (false))), false)), false || (bool(bvec2(! ((! (false))), false)))))))) || false)), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), false || ((false))), false, false, false)), (bool(bvec4(! (false), false, false, false))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3754.5062)), float(injectionSwitch.y), bool(true)))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true, false))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(83.11, -35.04)))).x > injectionSwitch.y))), false))), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))), true, true)))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4011.6427), _GLF_IDENTITY(_GLF_FUZZED(-47.16), max(_GLF_FUZZED(-47.16), _GLF_FUZZED(-47.16)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)))), true, false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))), (~ ((_GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | (uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))), uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) ^ 0u))) * 1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))), 1u * ((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)))))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)), 0u | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)))))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ (~ (4u)))) >> (129170u & (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(4u))))) + uvec2(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, (4u) ^ 0u), 4u, 4u))), (uint(4u)) ^ 0u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u))))))), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY((uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u), uvec2(1u, 1u) * ((uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)))) << uvec2(0u, 0u)))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(1u, max(1u, 1u)) * (1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (179680u & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (179680u & 0u)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u)))) | (179680u & 0u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (179680u & 0u))))) >> (1u ^ 1u)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))))))))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (179680u & 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))) << 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (4u) / 1u)))))), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) + uvec2(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * (~ (1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (~ (4u)))), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), uint(4u))), (false ? _GLF_FUZZED(uvec2(150677u, 82105u).x) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), uint(4u))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), uint(4u))), 1u)))))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u)))))) + _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? _GLF_IDENTITY(4u, ~ (~ (4u))) : _GLF_FUZZED(subgroup_size))))))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) / 1u))) + uvec2(0u, _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(4u)))), (uvec2(subgroup_size, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))), clamp(uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))), uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))), uint(uint(_GLF_IDENTITY(0u, min(0u, 0u))))))), _GLF_IDENTITY(0u, min(0u, 0u)))) << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(_GLF_IDENTITY(0u, 0u | (0u)), 0u) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))), 0u), uvec2(0u, 0u)))), ((_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))), 0u), uvec2(0u, 0u))))) * uvec2(1u, 1u))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))), min(~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))), ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u))))))) | (~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))))))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))))), (uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u)))))))) - 0u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))), (uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))) / uvec2(1u, 1u))))) << uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_id))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))), uint(4u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), min(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(0u, 0u), max(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u))), uvec2(0u, 0u))))))) << uvec2(0u, 0u)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(min(workgroup_size, 168264u)) : uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (~ (1u)))))))))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (179680u & 0u)))) + 0u)), 0u, 0u))) + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-494.499), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-456.557)), bvec2(true, false))).y : _GLF_FUZZED(_GLF_IDENTITY(225.362, (true ? 225.362 : _GLF_FUZZED(vec2(4.9, 4878.9568).g)))), min(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(225.362, max(_GLF_IDENTITY(225.362, (false ? _GLF_FUZZED(-76.33) : 225.362)), _GLF_IDENTITY(225.362, float(mat4(225.362, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(225.362, (false ? _GLF_FUZZED(91.54) : 225.362))))), true ? injectionSwitch.y : _GLF_FUZZED(225.362)))))), ((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), max(true ? injectionSwitch.y : _GLF_FUZZED(225.362), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), 1.0, 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), 1.0, 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))))))))) + 0.0)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362)))))))) && true))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-494.499), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-456.557)), bvec2(true, false))).y : _GLF_FUZZED(_GLF_IDENTITY(225.362, (true ? 225.362 : _GLF_FUZZED(vec2(4.9, 4878.9568).g)))), min(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(225.362, max(_GLF_IDENTITY(225.362, (false ? _GLF_FUZZED(-76.33) : 225.362)), _GLF_IDENTITY(225.362, float(mat4(225.362, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(225.362, (false ? _GLF_FUZZED(91.54) : 225.362))))), true ? injectionSwitch.y : _GLF_FUZZED(225.362)))))), ((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), max(true ? injectionSwitch.y : _GLF_FUZZED(225.362), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), 1.0, 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))), 1.0, 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), clamp(true ? injectionSwitch.y : _GLF_FUZZED(225.362), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(225.362), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(225.362))), true ? injectionSwitch.y : _GLF_FUZZED(225.362))))))))) + 0.0)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(225.362)))))))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 _GLF_IDENTITY(buf[next_virtual_gid] = 2, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))) * (buf[next_virtual_gid] = 2));
}
