#version 460
struct _GLF_struct_2 {
 ivec4 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 uvec2 _f3;
 vec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
 uvec2 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 uint _f0;
 _GLF_struct_3 _f1;
 bool _f2;
 uint read_val;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1u, _GLF_struct_3(_GLF_struct_0(ivec3(1), ivec4(1), mat4x2(1.0), mat3(1.0), mat3x2(1.0)), mat4x3(1.0), _GLF_struct_1(mat3x2(1.0), mat4x3(1.0), mat4x2(1.0)), uvec2(1u), _GLF_struct_2(ivec4(1), uvec3(1u), mat3x4(1.0), uvec2(1u), vec4(1.0), uvec2(1u))), true, atomicLoad(write_val, 4, 64, 0));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_4.read_val));
}
