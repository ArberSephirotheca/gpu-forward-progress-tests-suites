#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && (false))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (! (_GLF_IDENTITY(false, true && (false))))))))))))), false, true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, true)))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))) + 0.0) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((false), ! (! ((false)))))))))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec2(! (! ((false))), false))))) && true), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec2(! (! ((false))), false))))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, true)))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), (_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false))), true && ((! ((false))))), ! (! ((! ((false)))))))) && true)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, true)))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), (_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false))), true && ((! ((false))))), ! (! ((! ((false)))))))) && true)) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! (_GLF_IDENTITY((! ((false))), true && ((! ((false)))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, true)))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, true)))))))), true, true, false))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), (_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! ((false))), true && ((! ((false))))), ! (! ((! ((false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! ((false))), true && ((! ((false))))), ! (! ((! ((false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! ((false))), true && ((! ((false))))), ! (! ((! ((false))))))))))))) && true)) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((_GLF_IDENTITY(false, (false) && true)))))))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))) && true)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), bool(bvec2(! (! (false || ((false)))), false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))) && true)))) && true)))) || false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY(true, ! (! (true)))), true))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))), false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.9) : injectionSwitch.y)), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(54.93), _GLF_FUZZED(-88.60)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.1)), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false))), true))), true && (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), true, false))), true)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), true, false))), true))))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), false, _GLF_IDENTITY(true, (true) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_IDENTITY(true, (true) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_IDENTITY(true, (true) || false)))))))) && true), _GLF_IDENTITY(true, (true) && true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), true)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), true))))))))))) && true, (((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(true, false || (true)))))))))) && true) && true)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x : _GLF_FUZZED(-7.7))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y = _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), min(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u)))), subgroup_local_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u), min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0)))))), float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, abs(1.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))))), true, true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))), bool(bvec4(! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ! (! ((! ((! (false)))))))))), bool(bool((! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))), true, false, false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (false)))))))), true, false, false)))), false), bvec2(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false))), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)))))))), ((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false))))))))) || false))), _GLF_IDENTITY(true, bool(bool(true))), false, false)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), (! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))) || false), ((! (false))) || false)))))))) || false), true, false, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false)))), ((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false))))) || false), true, true, false)))) || false), false)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, abs(1.0), abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), sqrt(0.0)))))), true, true))))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bool((! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, false)))), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))))))))), true, false, false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (false)))))))), true, false, false)))), false), bvec2(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false))))))), true, false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false))))))), true, false, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false)))), ((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false))))) || false), true, true, false)))) || false), false))))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, abs(1.0), abs(0.0), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, sqrt(0.0)))))), true, true))))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bool((! (_GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((false))))))))))))))))), true, false, false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (! ((! (false)))), true && (! (! ((! (false)))))))))), true, false, false)))), false), bvec2(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false)))), ((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false))))) || false), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), true, false, false))), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, false)))) && true))) || false), true, true, false)))) || false), false))))))))))))))) || false)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))))) || false) && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, true)))))) && true, true && ((false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))))), true && (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false)) || false))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false)) || false)))))))), false || (! (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false)) || false)))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(52140), clamp(float(_GLF_IDENTITY(52140, (_GLF_IDENTITY(52140, max(52140, 52140))) << 0)), float(52140), float(52140))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), false))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)), false)))))), false, false)))), true, true))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(52140), clamp(float(_GLF_IDENTITY(52140, (_GLF_IDENTITY(52140, max(52140, 52140))) << 0)), float(52140), float(52140))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), false))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)), false)))))), false, false)))), true, true))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(52140), clamp(float(_GLF_IDENTITY(52140, (_GLF_IDENTITY(52140, max(52140, 52140))) << 0)), float(52140), float(52140))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(false, (false) || false)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)), false)))))), false, false)))), true, true))))).x > injectionSwitch.y)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), (true && (false)) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) >> 0u), max(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0], 0u | (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0])), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0], 0u | (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0])), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0], 0u | (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0])), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0], 0u | (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0])))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id) >> uvec2(0u, 0u))[1])).y)), GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0], 0u | (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0])), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id) >> uvec2(0u, 0u), ~ (~ ((GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id) >> uvec2(0u, 0u)))))[1])).y)), GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0], 0u | (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id[0])), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, 1u), (uvec3(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, 1u)) * uvec3(1u, 1u, 1u))))) | uvec2(0u, 0u))) >> uvec2(0u, 0u))[1])).y)), GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y, GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3934.3369))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.8)), float(injectionSwitch.y), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(3934.3369))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, false)), true && (bool(bvec4(! (false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))), false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true, bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true, bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2((false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2((false), true))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))))))))))) && true)))))), ! (! (! (false)))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! _GLF_IDENTITY((false), false || ((false)))))))))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))) && true))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), true && (bool(bvec4(! (false), false, _GLF_IDENTITY(true, (true) || false), false)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), true && (bool(bvec4(! (false), false, _GLF_IDENTITY(true, (true) || false), false)))))))))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), true && (bool(bvec4(! (false), false, _GLF_IDENTITY(true, (true) || false), false)))))))))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (false)) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (false)) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (false)) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false || (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (false)) && true), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (false)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! (false))))))))))))))))) || false)), false || _GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(_GLF_IDENTITY(bvec2(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), false)), bvec2(bvec3(bvec2(bvec2(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), false)), true))))))))))) && true, ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || false))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))), _GLF_IDENTITY(false, (false) && true) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))))))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false)))), bool(bool(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), false || (_GLF_IDENTITY(false, ! (! (false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))))))))) && true)))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, (64) | 0), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(64, (64) | (64))) | 0)) | (_GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | 0), ~ (~ ((0))))))));
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
