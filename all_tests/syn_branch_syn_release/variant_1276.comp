#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 mat4x2 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 vec3 _f3;
 int _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_38 {
 uint subgroup_size;
 _GLF_struct_37 _f0;
} ;

struct _GLF_struct_35 {
 vec2 _f0;
 float _f1;
 mat4 _f2;
 ivec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_36 {
 _GLF_struct_35 _f0;
 vec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_33 {
 uint _f0;
 int _f1;
 mat4 _f2;
 ivec4 _f3;
 uint _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_32 {
 int _f0;
 vec2 _f1;
 uint _f2;
 mat2x3 _f3;
 mat4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_31 {
 ivec4 _f0;
 int _f1;
 mat4x2 _f2;
 mat4 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_30 {
 bvec2 _f0;
 uint _f1;
 uvec3 _f2;
 ivec3 _f3;
 vec4 _f4;
 bvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_29 {
 uvec4 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_34 {
 _GLF_struct_29 _f0;
 uint _f1;
 uint _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
 _GLF_struct_33 _f6;
} ;

struct _GLF_struct_27 {
 mat2 _f0;
 uvec3 _f1;
 mat2 _f2;
 mat2 _f3;
 uvec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_26 {
 mat3 _f0;
} ;

struct _GLF_struct_25 {
 uvec2 _f0;
 bvec3 _f1;
 uvec3 _f2;
 uvec4 _f3;
 bvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_28 {
 _GLF_struct_25 _f0;
 mat4x2 _f1;
 mat2 _f2;
 _GLF_struct_26 _f3;
 mat2x3 _f4;
 _GLF_struct_27 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_39 {
 _GLF_struct_28 _f0;
 int _f1;
 _GLF_struct_34 _f2;
 _GLF_struct_36 _f3;
 _GLF_struct_38 _f4;
} ;

struct _GLF_struct_22 {
 mat4x2 _f0;
 mat3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 uvec4 _f4;
 int _f5;
 mat3 _f6;
} ;

struct _GLF_struct_23 {
 uint virtual_gid;
 _GLF_struct_22 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
} ;

struct _GLF_struct_19 {
 uint _f0;
 ivec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
} ;

struct _GLF_struct_17 {
 mat4 _f0;
 mat2 _f1;
 mat2x3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 _GLF_struct_17 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
} ;

struct _GLF_struct_24 {
 _GLF_struct_16 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_21 _f2;
 mat2x4 _f3;
 _GLF_struct_23 _f4;
 uvec3 _f5;
 float _f6;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 bool _f1;
 mat4x3 _f2;
 uvec4 _f3;
 mat3x2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 ivec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 mat4x2 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 ivec4 _f1;
 ivec3 _f2;
 bvec2 _f3;
 mat3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_8 {
 float _f0;
 uint _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 mat2 _f1;
 ivec3 _f2;
 uvec3 _f3;
 mat2x3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 uvec2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 bvec4 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 int _f1;
 ivec4 _f2;
 ivec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 mat2x4 _f1;
 uint next_virtual_gid;
 float _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_14 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 bvec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_3 {
 uint subgroup_id;
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 uvec2 _f1;
 mat4 _f2;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), min((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))).y)) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, true && (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(47.32)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3x4(1.0), uvec2(1u), mat4(1.0), _GLF_struct_3(gl_SubgroupID, _GLF_struct_0(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (1u) << 0u))))) | (uvec3(_GLF_IDENTITY(1u, (1u) << 0u))))) + uvec3(0u, 0u, 0u))), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), mat2x4(1.0), _GLF_struct_1(mat4x3(1.0), ivec4(1)), _GLF_struct_2(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false)))))))), bool(bvec2(true, false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false)))))))), bool(bvec2(true, false)))))))))), ivec3(1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), ! (! (false))), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, true, true))), bool(bvec3(! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), true))), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(6244.5865))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(6244.5865))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(6244.5865))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(6244.5865))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(6244.5865))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, clamp((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(mat2x3((injectionSwitch.x) - 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(6244.5865))) > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_28(_GLF_struct_25(uvec2(1u), bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec4(1u), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), mat4x2(1.0)), mat4x2(1.0), mat2(1.0), _GLF_struct_26(mat3(1.0)), mat2x3(1.0), _GLF_struct_27(mat2(1.0), uvec3(1u), mat2(1.0), mat2(1.0), uvec4(1u), vec2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1))), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1)))) | (ivec2(56536, 18108) & ivec2(0, 0)))), 1, _GLF_struct_34(_GLF_struct_29(uvec4(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))), 1u)))), mat4x2(1.0), mat4x3(1.0), bvec4(true)), 1u, 1u, _GLF_struct_30(bvec2(true), 1u, uvec3(1u), ivec3(1), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(281.983), _GLF_FUZZED((0.1 + _GLF_IDENTITY(-700.580, (-700.580) + 0.0))), _GLF_FUZZED(489.722)), vec4(_GLF_FUZZED(float(80966)), (vec4(1.0))[1], (_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0))))[2], (vec4(1.0))[3]), bvec4(false, true, true, true))), bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), 1), _GLF_struct_31(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0)), clamp(ivec4(1), ivec4(1), ivec4(1))) : _GLF_FUZZED(ivec4(-59570, 75742, -93959, 40711))), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY((true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0)), clamp(ivec4(1), ivec4(1), ivec4(1))) : _GLF_FUZZED(ivec4(-59570, 75742, -93959, 40711))), ~ (~ ((true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0)), clamp(ivec4(1), ivec4(1), ivec4(1))) : _GLF_FUZZED(ivec4(-59570, 75742, -93959, 40711))))))))), 1, mat4x2(1.0), mat4(1.0), true, mat4x2(1.0)), _GLF_struct_32(1, vec2(1.0), 1u, mat2x3(1.0), mat4(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), _GLF_struct_33(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)))), ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)))), ~ (~ (1)))) | 0), mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.34)), float(1.0), bool(true)))) * 1.0)), ivec4(1), 1u, mat3x4(1.0))), _GLF_struct_36(_GLF_struct_35(vec2(1.0), 1.0, mat4(1.0), ivec4(1), 1u), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec4(1.0)), _GLF_struct_38(gl_SubgroupSize, _GLF_struct_37(mat4x2(1.0), mat3x4(1.0), uvec4(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), vec3(1.0), 1, mat4x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(92103u, 58100u, 50484u)), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(uvec3(92103u, _GLF_IDENTITY(58100u, max(58100u, 58100u)), 50484u))), min((_GLF_FUZZED(uvec3(92103u, _GLF_IDENTITY(58100u, max(58100u, 58100u)), 50484u))), (_GLF_FUZZED(uvec3(92103u, _GLF_IDENTITY(58100u, max(58100u, 58100u)), 50484u))))))) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), 0u)))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(92103u, 58100u, 50484u)), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(uvec3(92103u, _GLF_IDENTITY(58100u, max(58100u, 58100u)), 50484u))), min((_GLF_FUZZED(uvec3(92103u, _GLF_IDENTITY(58100u, max(58100u, 58100u)), 50484u))), (_GLF_FUZZED(uvec3(92103u, _GLF_IDENTITY(58100u, max(58100u, 58100u)), 50484u))))))) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), 0u))))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) + uvec3(0u, 0u, 0u)))), gl_NumWorkGroups), (clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))), gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))).x) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_16(mat3x4(1.0)), _GLF_struct_18(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (_GLF_IDENTITY(! ((true)), (! ((true))) && true)))))))))))), _GLF_struct_17(mat4(1.0), mat2(1.0), mat2x3(1.0), uvec3(1u)), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), _GLF_struct_21(_GLF_struct_19(1u, ivec3(1), bvec2(true)), _GLF_struct_20(uvec4(1u))), mat2x4(1.0), _GLF_struct_23(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_id, min(_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_id, 0u | (_GLF_struct_replacement_4._f3.subgroup_id)), _GLF_struct_replacement_4._f3.subgroup_id)) * _GLF_struct_replacement_39._f4.subgroup_size + subgroup_local_id, _GLF_struct_22(mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mat3(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), bvec2(true), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u))))) | 0u)), 1, mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4645.1388)), _GLF_IDENTITY(_GLF_IDENTITY(min(float(_GLF_FUZZED(_GLF_IDENTITY(-4645.1388, float(mat2(_GLF_IDENTITY(-4645.1388, max(-4645.1388, -4645.1388)), exp(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-4645.1388))), min(min(float(_GLF_FUZZED(_GLF_IDENTITY(-4645.1388, float(mat2(_GLF_IDENTITY(-4645.1388, max(-4645.1388, -4645.1388)), exp(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-4645.1388))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-4645.1388, float(mat2(_GLF_IDENTITY(-4645.1388, max(-4645.1388, -4645.1388)), exp(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-4645.1388))))), clamp(min(float(_GLF_FUZZED(_GLF_IDENTITY(-4645.1388, float(mat2(_GLF_IDENTITY(-4645.1388, max(-4645.1388, -4645.1388)), exp(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-4645.1388))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-4645.1388, float(mat2(_GLF_IDENTITY(-4645.1388, max(-4645.1388, -4645.1388)), exp(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-4645.1388))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-4645.1388, float(mat2(_GLF_IDENTITY(-4645.1388, max(-4645.1388, -4645.1388)), exp(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-4645.1388)))))), float(1.0), bool(true))))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(1u), 0u)), (uvec2(uvec3(uvec2(1u), 0u))) | uvec2(0u, 0u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) - 0u)), 1.0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(vec4(1.0), mat2x4(1.0), workgroup_base + _GLF_struct_replacement_4._f3.subgroup_id * _GLF_struct_replacement_39._f4.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_39._f4.subgroup_size), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(37.92)), bool(false))), _GLF_struct_6(_GLF_struct_5(bvec3(true), 1, ivec4(1), ivec4(1), vec3(1.0)), mat3x2(1.0)), _GLF_struct_11(_GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0))), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-4.5, -80.18, 29.24, -61.95, _GLF_IDENTITY(8773.5489, max(8773.5489, 8773.5489)), -36.50, -1.8, 2.6, 5.2, -32.17, -207.156, 3.1, -7.1, 2222.2291, 528.118, 882.739)))), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-4.5, -80.18, 29.24, -61.95, 8773.5489, -36.50, -1.8, 2.6, 5.2, -32.17, -207.156, 3.1, -7.1, 2222.2291, 528.118, 882.739))))))), mat2(1.0), ivec3(1), uvec3(1u), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(float(_GLF_FUZZED(584.564)), float(-8.5), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(false)))) / 1.0), 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(float(_GLF_FUZZED(584.564)), float(-8.5), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))))), bool(false)))) / 1.0), 1.0)), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(float(_GLF_FUZZED(584.564)), float(-8.5), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(false)))) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(float(_GLF_FUZZED(584.564)), float(-8.5), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(false)))) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(float(_GLF_FUZZED(584.564)), float(-8.5), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(false)))) / 1.0), 1.0)))) : _GLF_FUZZED(-83.21))))), uvec2(1u), _GLF_struct_8(1.0, 1u, ivec2(1)), _GLF_struct_9(mat3x2(1.0), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), ivec3(1), bvec2(true), mat3(1.0), bvec3(true)), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), true && (_GLF_IDENTITY(! (true), false || (! (true)))))))), _GLF_struct_10(uvec4(1u))), _GLF_struct_14(_GLF_struct_12(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.5)), clamp(float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(float(_GLF_FUZZED(3.5)), min(float(_GLF_FUZZED(3.5)), float(_GLF_FUZZED(3.5)))), float(_GLF_FUZZED(3.5)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), mix(float(_GLF_FUZZED(7923.8095)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : _GLF_FUZZED(length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) : _GLF_FUZZED(length(_GLF_IDENTITY(vec4(627.345, 1037.6309, -3522.7903, 814.873), (false ? _GLF_FUZZED(vec4(-6.8, 51.77, -66.90, -874.844)) : vec4(627.345, 1037.6309, -3522.7903, 814.873)))))))) / abs(_GLF_ONE(1.0, injectionSwitch.y))), bool(true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(_GLF_IDENTITY(3.5, (false ? _GLF_FUZZED(-103.921) : 3.5)), 3.5, 3.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0), (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)), ((false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0))) + 0.0))))) : _GLF_FUZZED(length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))), bool(_GLF_IDENTITY(true, (true) && true))))), (false ? _GLF_FUZZED(vec2(-0.9, -4.7)) : vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(514.318)), bool(false))) / 1.0)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(8926.4318, mix(float(_GLF_FUZZED(3.9)), float(8926.4318), bool(true)))) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))) / 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), max(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))))), bool(true)))))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, _GLF_IDENTITY(clamp(_GLF_IDENTITY(3.5, (false ? _GLF_FUZZED(-103.921) : 3.5)), 3.5, 3.5), _GLF_IDENTITY(float(mat2x3(clamp(_GLF_IDENTITY(3.5, (false ? _GLF_FUZZED(-103.921) : 3.5)), 3.5, 3.5), 0.0, 0.0, 1.0, cos(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(_GLF_IDENTITY(3.5, (false ? _GLF_FUZZED(-103.921) : 3.5)), 3.5, 3.5), 0.0, 0.0, 1.0, cos(0.0), 0.0)), (false ? _GLF_FUZZED(7.5) : float(mat2x3(clamp(_GLF_IDENTITY(3.5, (false ? _GLF_FUZZED(-103.921) : 3.5)), 3.5, 3.5), 0.0, 0.0, 1.0, cos(0.0), 0.0))))), float(_GLF_FUZZED(665.768)), bool(false))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0), (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) - 0.0))) + 0.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)), ((false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0))) + _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) : _GLF_FUZZED(length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))), bool(_GLF_IDENTITY(true, (true) && true))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-0.9, -4.7)) : vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8926.4318), max(_GLF_FUZZED(8926.4318), _GLF_FUZZED(8926.4318))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(514.318)), bool(false))) / 1.0)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(8926.4318, mix(float(_GLF_FUZZED(3.9)), float(8926.4318), bool(true)))) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))) / 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), max(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))))), bool(true))))), (true ? (false ? _GLF_FUZZED(vec2(-0.9, -4.7)) : vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8926.4318), max(_GLF_FUZZED(8926.4318), _GLF_FUZZED(8926.4318))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(514.318)), bool(false))) / 1.0)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (false ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(8926.4318, mix(float(_GLF_FUZZED(3.9)), float(8926.4318), bool(true)))) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))) / 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), max(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))))), bool(true))))) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(vec2(7.9, 42.72)))), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8926.4318), max(_GLF_FUZZED(8926.4318), _GLF_FUZZED(8926.4318))) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8926.4318) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min((1.0) / 1.0, (1.0) / 1.0))), mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), float(vec3((1.0), 0.0, 1.0)))) / 1.0) / 1.0, (1.0) / 1.0)))), bool(true)))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(5.6) : float(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(8926.4318, float(mat3(8926.4318, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(8926.4318), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8926.4318), (_GLF_IDENTITY(_GLF_FUZZED(8926.4318), mix(float(_GLF_FUZZED(5.4)), float(_GLF_FUZZED(8926.4318)), bool(true)))) + sin(0.0))), float(_GLF_FUZZED(1.9)), bool(false))), _GLF_FUZZED(8926.4318)), mix(float(min(_GLF_IDENTITY(_GLF_FUZZED(8926.4318), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8926.4318), (_GLF_IDENTITY(_GLF_FUZZED(8926.4318), mix(float(_GLF_FUZZED(5.4)), float(_GLF_FUZZED(8926.4318)), bool(true)))) + sin(0.0))), float(_GLF_FUZZED(1.9)), bool(false))), _GLF_FUZZED(8926.4318))), float(_GLF_FUZZED(-128.876)), bool(false)))) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), (_GLF_IDENTITY(length(vec4(627.345, _GLF_IDENTITY(1037.6309, (_GLF_IDENTITY(1037.6309, mix(float(1037.6309), float(_GLF_FUZZED(2895.3244)), bool(false)))) - 0.0), -3522.7903, 814.873)), min(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))) / abs(1.0)), (_GLF_IDENTITY(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), (_GLF_IDENTITY(_GLF_IDENTITY(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), 0.0 + (length(vec4(627.345, 1037.6309, -3522.7903, 814.873)))), min(length(vec4(627.345, 1037.6309, -3522.7903, 814.873)), length(vec4(627.345, 1037.6309, -3522.7903, 814.873))))) / abs(1.0))) - length(0.0))))), bool(true)))))), uvec3(1u), mat2x3(1.0), ivec3(1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))), int(1))))), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(ivec2(1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1)))))), int(1)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), int(1))) >> 0))), (true ? _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 | (0)) | (1)), clamp(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 | ((_GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), ((_GLF_IDENTITY(0, (0) * 1))) >> 0) | (_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, (0) / 1))) | 0))) << 0) | (1))))))), int(1)))), (ivec2(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | 0), int(1))))) / ivec2(1, 1)) : _GLF_FUZZED(ivec2(44766, -54680))))))), (false ? _GLF_FUZZED(-83805) : int(int(int(_GLF_IDENTITY(ivec2(1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1)))))), int(1)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), int(1))) >> 0))), (true ? _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 | (0)) | (1)), clamp(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 | ((_GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), ((_GLF_IDENTITY(0, (0) * 1))) >> 0) | (_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, (0) / 1))) | 0))) << 0) | (1))))))), int(1)))), (ivec2(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | 0), int(1))))) / ivec2(1, 1)) : _GLF_FUZZED(ivec2(44766, -54680)))))))))))), bvec3(true)), mat4x2(1.0), _GLF_struct_13(vec3(1.0), true, mat4x3(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(193379u, 36676u, 158698u, 178263u))))) | uvec4(0u, 0u, 0u, 0u))), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (false ? _GLF_FUZZED(outerProduct(vec2(5.0, -7.3), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0))))) : mat2(1.0))))), 1.0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), true, false, false)), false || (bool(bvec4(true && (false), true, false, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), max(1.0, 1.0)))), 1.0)), 0.0, 1.0, 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 0.0, 1.0, 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), 1.0)), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-432.075) : 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0, length(0.0) + (0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-371.190)), bool(false))), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0, length(0.0) + (0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-371.190)), bool(false))), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), max(vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0, length(0.0) + (0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-371.190)), bool(false))), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0, length(0.0) + (0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-371.190)), bool(false))), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))) : _GLF_FUZZED((mat3x2(14.89, -7.0, 2607.8718, -4.5, -310.109, 5.0) * vec3(-7.3, -6.5, 192.372)))))).y)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 0.0, 1.0, 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))) + 0.0))), 0.0, 1.0, 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, false)), ! (! (bool(bvec4(! (false), true, true, false)))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(sqrt(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 0.0, 0.0, 1.0))).y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-69.59)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false))))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), true, false, true))), true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true)))))))), false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false)))))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false))))))))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false)))))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false))))))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false)))))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false))))))))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(buf[_GLF_struct_replacement_24._f4.virtual_gid] = 1, 0u | (buf[_GLF_struct_replacement_24._f4.virtual_gid] = 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)) : _GLF_FUZZED(-48.45)))) > injectionSwitch.y)))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_39._f4.subgroup_size, (_GLF_struct_replacement_39._f4.subgroup_size) >> 0u))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((injectionSwitch - injectionSwitch)))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))) | (0), (0 >> _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))) | (0), min((_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))) | (0), (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))) | (0))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_15.next_virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_15.next_virtual_gid, (_GLF_struct_replacement_15.next_virtual_gid) * 1u)) | (_GLF_struct_replacement_15.next_virtual_gid))], _GLF_IDENTITY(uint(2), (uint(2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || ((! (_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))) && (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, true)))) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))), injectionSwitch, injectionSwitch)).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(667.144, -985.474)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), bool(bvec4(bool(bvec2(bool(bvec2(false, false)), false)), true, false, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             return;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(5.3)), bool(false))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x < injectionSwitch.y))), false, true))))), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5806.4851) : injectionSwitch.y)))))), true), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x < injectionSwitch.y))), false, true))))), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5806.4851) : injectionSwitch.y)))))), true), true))))))), false))))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_15.next_virtual_gid, (_GLF_struct_replacement_15.next_virtual_gid) | (_GLF_struct_replacement_15.next_virtual_gid))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uvec4(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)), 0u, 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(uint(2), 1u, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id)))), (uvec4(uint(2), 1u, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))) >> uvec4(0u, 0u, 0u, 0u)))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u)))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (uint(uvec4(uint(2), 1u, 0u, 1u))))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u)))))), clamp(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec4(uint(2), 1u, 0u, 1u))), min((uint(uvec4(uint(2), 1u, 0u, 1u))), (uint(uvec4(uint(2), 1u, 0u, 1u))))), 1u * (~ (uint(uvec4(uint(2), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))) / 1u), 0u, 1u)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u))))), max(_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u))))), max(_GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u))))), _GLF_IDENTITY(~ (uint(uvec4(uint(2), 1u, 0u, 1u))), 1u * (~ (uint(uvec4(uint(2), 1u, 0u, 1u)))))))))))))))), 4, _GLF_IDENTITY(64, int(ivec2(64, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-38.88)), vec2(_GLF_FUZZED(3432.5689), (injectionSwitch)[1]), bvec2(false, true))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(69.77))), injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))) || false)) || false), true, false, true))) || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(885.675, 30.86)) : injectionSwitch.x)) > injectionSwitch.y))))) || false)), false, true)))), _GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 0.0)), (float(vec3(injectionSwitch.y, 0.0, 0.0))) / 1.0)), false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(2279.4129)), float(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0)), bool(true))) + 0.0) > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
}
