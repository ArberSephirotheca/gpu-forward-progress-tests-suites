#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) || false), ((false) || false) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(6), int(6))))) | 0)])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), 1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), 1.0))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), 1.0))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), 1.0))[1]) / 1.0))))), injectionSwitch)) - vec2(0.0, 0.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat2(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4097.8982) : 1.0)))), _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), exp(0.0), 0.0, tan(0.0), round(length(normalize(1.0)))))))), tan(0.0)))), injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(176.577)), vec2((_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(atanh(5596.6060)) : injectionSwitch[0])), injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), _GLF_IDENTITY((mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(1.0), ((mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[1]), bvec2(true, true)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) + 0.0))), 1.0, 0.0, 1.0), (mat2(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) + 0.0))), 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), tan(0.0)))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)), injectionSwitch, injectionSwitch))[0], 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)), injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY(injectionSwitch[1], sin(0.0) + (injectionSwitch[1])))), injectionSwitch), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 0.0), _GLF_IDENTITY(((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - length(vec4(0.0, 0.0, 0.0, 0.0)))) / 1.0))), injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0), max((_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))])), injectionSwitch)), mix(vec2(_GLF_FUZZED(68.86), ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))])), injectionSwitch)))[1]), vec2(((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))])), injectionSwitch)))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))), (mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])), injectionSwitch)))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)) * mat2(1.0), (_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), clamp((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), clamp((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (true ? (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (true ? _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), clamp(mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), mat2(1.0) * ((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))) : _GLF_FUZZED(vec2(-6.5, 71.87)))))) - vec2(0.0, 0.0)) * mat2(1.0)))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(determinant(mat4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.3)), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (true ? determinant(mat2(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-474.659) : _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.1)), float(1.0), bool(true))) : _GLF_FUZZED(-710.022))))), 1.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.3)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / exp(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1.0) / exp(0.0), clamp((1.0) / exp(0.0), (1.0) / exp(0.0), (1.0) / exp(0.0))) : _GLF_FUZZED(((mat3x4(-8.0, -1.3, 7.6, 5.2, 3678.5343, 1.3, -6254.5040, -2643.1702, 4.0, -66.28, 4.2, -41.84) , -3.0) * 1.5))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)) : _GLF_FUZZED(-4.2)))) / 1.0), tan(0.0)))), injectionSwitch)))).x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(((77.31) / 73.78)), _GLF_FUZZED(vec2(-68.65, _GLF_IDENTITY(-632.246, mix(float(-632.246), float(_GLF_FUZZED(9.1)), bool(false)))).s)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], float(mat3((vec2(injectionSwitch[0], injectionSwitch[1]))[1], 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0))))), ((vec2(injectionSwitch[0], injectionSwitch[1]))[1]) + length(vec3(0.0, 0.0, 0.0)))), bvec2(true, true)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(((77.31) / 73.78)), _GLF_FUZZED(vec2(-68.65, _GLF_IDENTITY(-632.246, mix(float(-632.246), float(_GLF_FUZZED(9.1)), bool(false)))).s)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], float(mat3((vec2(injectionSwitch[0], injectionSwitch[1]))[1], 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0))))), ((vec2(injectionSwitch[0], injectionSwitch[1]))[1]) + length(vec3(0.0, 0.0, 0.0)))), bvec2(true, true)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(((77.31) / 73.78)), _GLF_FUZZED(vec2(-68.65, _GLF_IDENTITY(-632.246, mix(float(-632.246), float(_GLF_FUZZED(9.1)), bool(false)))).s)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], float(mat3((vec2(injectionSwitch[0], injectionSwitch[1]))[1], 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0))))), ((vec2(injectionSwitch[0], injectionSwitch[1]))[1]) + length(vec3(0.0, 0.0, 0.0)))), bvec2(true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(((77.31) / 73.78)), _GLF_FUZZED(vec2(-68.65, _GLF_IDENTITY(-632.246, mix(float(-632.246), float(_GLF_FUZZED(9.1)), bool(false)))).s)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], float(mat3((vec2(injectionSwitch[0], injectionSwitch[1]))[1], 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0))))), ((vec2(injectionSwitch[0], injectionSwitch[1]))[1]) + length(vec3(0.0, 0.0, 0.0)))), bvec2(true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(((77.31) / 73.78)), _GLF_FUZZED(vec2(-68.65, _GLF_IDENTITY(-632.246, mix(float(-632.246), float(_GLF_FUZZED(9.1)), bool(false)))).s)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], float(mat3((vec2(injectionSwitch[0], injectionSwitch[1]))[1], 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0))))), ((vec2(injectionSwitch[0], injectionSwitch[1]))[1]) + length(vec3(0.0, 0.0, 0.0)))), bvec2(true, true)))))) : _GLF_FUZZED(faceforward(mix(vec2(5.2, -775.986), vec2(65.62, 3362.9383), vec2(-1087.4428, 8.3)), injectionSwitch, vec2(694.190, -3.2))))), injectionSwitch), _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))) / vec2(1.0, 1.0)))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0), (true ? (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 1.0)), tan(0.0)))), injectionSwitch)))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))), clamp(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3(gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))), (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (workgroup_id) / 1u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) >> 0u)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / (1u & 1u), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)))))), ~ (~ (_GLF_IDENTITY((subgroup_size) / (1u & 1u), ((subgroup_size) / (1u & 1u)) | 0u))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) / (1u & 1u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))))) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u)))))) & 1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size))) / _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(atomicMax(workgroup_id, workgroup_id)) : _GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))), 0u | ((_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(atomicMax(workgroup_id, workgroup_id)) : _GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))))), ((subgroup_size) / (1u & 1u)) | 0u))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size))) / _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(atomicMax(workgroup_id, workgroup_id)) : _GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))), 0u | ((_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(atomicMax(workgroup_id, workgroup_id)) : _GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))))), ((subgroup_size) / (1u & 1u)) | 0u))) : _GLF_FUZZED(workgroup_id))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / (1u & 1u), (_GLF_IDENTITY((subgroup_size) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & 1u), ~ (~ (_GLF_IDENTITY((subgroup_size) / (1u & 1u), ((subgroup_size) / (1u & 1u)) | 0u))))) - 0u), (true ? _GLF_IDENTITY((subgroup_size) / (1u & 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & 1u), ~ (~ (_GLF_IDENTITY((subgroup_size) / (1u & 1u), ((subgroup_size) / (1u & 1u)) | 0u)))), ~ (~ (_GLF_IDENTITY((subgroup_size) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)))) | (_GLF_IDENTITY(1u, (1u) / 1u))) & 1u), ~ (~ (_GLF_IDENTITY((subgroup_size) / (_GLF_IDENTITY(1u, (1u) | (1u)) & 1u), ((subgroup_size) / (1u & 1u)) | 0u)))))))) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | 0u)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) + 0u))));
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) | 0)), _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), _GLF_IDENTITY(int(_GLF_IDENTITY(int((4)), max(int((4)), int((4))))), min(int(_GLF_IDENTITY(int((4)), max(int((4)), int((_GLF_IDENTITY(4, (4) - 0)))))), int(_GLF_IDENTITY(int((4)), max(int((4)), _GLF_IDENTITY(int((4)), ~ (~ (int((4)))))))))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(409.101))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), float(_GLF_FUZZED(-250.346)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(4, 4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(min(_GLF_IDENTITY(4, 0 | (4)), 4), min(min(4, 4), min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131))))), min(int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131))))), int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131)))))))), (_GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131))))), ~ (~ (int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131)))))))), min(int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131))))), int(int(_GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-3131))))))))) / 1)))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))), max(_GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))), _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4))))))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4))), ~ (~ (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | 0)))) << 0)))), _GLF_IDENTITY(4, min(4, 4)))), (int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))), max(_GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))), _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4))))))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4))), ~ (~ (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | 0)))) << 0)))), _GLF_IDENTITY(4, min(4, 4))))) / 1), 0 ^ (int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(int(4))))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), clamp((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(_GLF_IDENTITY(min(4, 4), int(ivec2(min(4, 4), 1))), min(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 ^ (_GLF_IDENTITY(0, min(0, 0))))) >> 0) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4))))))), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(_GLF_IDENTITY(min(4, 4), max(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), min(4, 4))), min(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(7), int(7)))), min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (false ? _GLF_FUZZED(81837) : _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4))))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), min(4, 4)))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4)))), 0 ^ (int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(34.29)), bool(false))))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(4, _GLF_IDENTITY(4, ~ (~ (4)))))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4))), (false ? _GLF_FUZZED(-48945) : _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4))), (_GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))))))), _GLF_IDENTITY(4, min(4, 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4))))))), 1)), (int(ivec2(int(_GLF_IDENTITY(int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (min(4, 4)) * 1), min(min(4, 4), min(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)), min(0, 0)) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), ~ (~ (min(_GLF_IDENTITY(4, min(4, 4)), 4)))), min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) + 0)), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4)))), 0 ^ _GLF_IDENTITY((int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, _GLF_IDENTITY(4, int(ivec2(4, 0)))), _GLF_IDENTITY(min(4, 4), max(min(4, 4), min(4, 4)))))), _GLF_IDENTITY(4, min(4, 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4))))), ((int(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), min(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), min(min(4, 4), min(4, 4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(4, 4)))), _GLF_IDENTITY(4, min(4, 4))), (max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, _GLF_IDENTITY(4, int(ivec2(4, 0)))), _GLF_IDENTITY(min(4, 4), max(min(4, 4), min(4, 4)))))), _GLF_IDENTITY(4, min(4, 4)))) << 0)))), _GLF_IDENTITY(4, min(4, 4)))))) / 1))), _GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0)))), 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
