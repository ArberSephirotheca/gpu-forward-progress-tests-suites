#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(((false) || false), ! (! (((false) || false)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), ! (! (false))), bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))))) && true)), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(true, true && (true)))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))), (injectionSwitch.x > injectionSwitch.y) || false), true)), false)))))))))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))), 0u)), uvec3(1u, 1u, 1u) * (uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))), 0u))))) / (uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (1u ^ 1u) | (_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), uint(uint(min(1u, 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) & uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (false)))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))) && true)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u), (uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u), (uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u), (uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u), (uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u), (uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * 1u), 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) << 0u))))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), max(uvec4(subgroup_id, 0u, 1u, 0u), uvec4(subgroup_id, 0u, 1u, 0u)))), min(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) * 1u, ((_GLF_IDENTITY(1u, (1u) / 1u)) * 1u) ^ 0u)), 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) << 0u), subgroup_id, subgroup_id)), 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 0u)), uint(uint(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 0u)))))) << 0u)))))) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * _GLF_IDENTITY(1u, (1u) | (1u))), 0u)), ~ (~ (uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * _GLF_IDENTITY(1u, (1u) | (1u))), 0u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 0u)), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), min(_GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), _GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), 1u * (subgroup_id))))), _GLF_IDENTITY(1u * (subgroup_id), (1u * (subgroup_id)) | (1u * (subgroup_id))))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (subgroup_id)), subgroup_id)), 0u, 1u, 0u), (true ? uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), min(_GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), _GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), 1u * (subgroup_id))))), _GLF_IDENTITY(1u * (subgroup_id), (1u * (subgroup_id)) | (1u * (subgroup_id))))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (subgroup_id)), subgroup_id)), 0u, 1u, 0u) : _GLF_FUZZED(uvec4(125117u, 66554u, 17678u, 26165u)))))) << 0u)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), clamp(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 0u, 1u, 0u)))))), min(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * _GLF_IDENTITY(1u, (1u) | (1u))), 0u)), ~ (~ (uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u)) * _GLF_IDENTITY(1u, (1u) | (1u))), 0u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), min(_GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), _GLF_IDENTITY(1u * (subgroup_id), _GLF_IDENTITY(max(1u * (subgroup_id), 1u * (subgroup_id)), (max(1u * (subgroup_id), 1u * (subgroup_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(1u * (subgroup_id), (1u * (subgroup_id)) | (1u * (subgroup_id))))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (subgroup_id)), subgroup_id)), 0u, 1u, 0u))) << 0u)))))), (((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * _GLF_IDENTITY(1u, (1u) | (1u))), 0u)), ~ (~ (uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * _GLF_IDENTITY(1u, (1u) | (1u))), 0u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), min(_GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), 1u * (subgroup_id))), ~ (~ (_GLF_IDENTITY(1u * (subgroup_id), max(1u * (subgroup_id), 1u * (subgroup_id)))))))), _GLF_IDENTITY(1u * (subgroup_id), (1u * (subgroup_id)) | (_GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_id))))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (subgroup_id)), subgroup_id)), 0u, 1u, 0u))) << 0u))))))) + 0u)) * 1u)), min(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), (uint(uvec4(subgroup_id, 0u, 1u, 0u))) | (uint(uvec4(subgroup_id, 0u, 1u, 0u)))), 0u))))), _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), (uvec4(subgroup_id, 0u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), (true ? uvec4(subgroup_id, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(10432u, 41589u, 50848u, 20152u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), (uvec4(subgroup_id, 0u, 1u, 0u)) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((false ? 107267u : subgroup_local_id)) : 0u))))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))))) << 0u)))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 0u), (false ? _GLF_FUZZED(uvec4(98911u, 51686u, 199098u, 17389u)) : _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 0u), ~ (~ (uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 0u))))))), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) - 0u))), 0u | (uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, 0u ^ (0u)))), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, 0u + (1u)), 0u)), min(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), (uvec4(subgroup_id, 0u, 1u, 0u)) | (uvec4(subgroup_id, 0u, 1u, 0u))), uvec4(subgroup_id, 0u, 1u, 0u), uvec4(subgroup_id, 0u, 1u, 0u))))))))) << 0u)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (1u)), 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 0u), (_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 0u)), min(~ (uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 0u)), ~ (uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 0u))))))) | (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u)), 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, (1u) / 1u), 0u))))))) << 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), max(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))))))))) << 0u)))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, ((48417u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (uvec3(1u, 1u, ((48417u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u)), max(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u + (uint(uint(subgroup_id))))), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u), (_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u), clamp(uvec4(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u), uvec4(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u), uvec4(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u)))) >> uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (1u ^ 1u)))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (1u ^ 1u)))), 1u)), uvec2(uvec2(~ (uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (1u ^ 1u)))), 1u))))))))), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))))))))) << 0u, 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, 0u ^ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))), clamp(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))), _GLF_IDENTITY(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))), 0u | (min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))), _GLF_IDENTITY(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))), min(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))), _GLF_IDENTITY(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))), (min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))) - 0u)))))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u)), min(uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (0u))))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))), _GLF_IDENTITY(min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 1u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u))))) / (1u ^ 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_id))), 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, 0u)))))))))) << 0u))))))) / 1u))) - 0u), ~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), min(uint(uvec4(subgroup_id, 0u, 1u, 0u)), uint(uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ~ (~ ((0u) | (0u))))), 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ~ (~ ((0u) | (0u))))))))))))))))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u | (_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, 1u)))))) | (5u)))) ^ 0u))) + (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size)), (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size))) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true))))), true && (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, tan(0.0), 0.0)), clamp(vec2(vec4(injectionSwitch, tan(0.0), 0.0)), vec2(vec4(injectionSwitch, tan(0.0), 0.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, tan(0.0), 0.0)), clamp(vec2(vec4(injectionSwitch, tan(0.0), 0.0)), vec2(vec4(injectionSwitch, tan(0.0), 0.0)), vec2(vec4(injectionSwitch, tan(0.0), 0.0))))))).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, tan(0.0), 0.0))).x, cos(0.0), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, tan(0.0), 0.0))).x, cos(0.0), 0.0)) - vec3(0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(-14.90), (injectionSwitch)[1]), bvec2(false, true))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(-14.90), (injectionSwitch)[1]), bvec2(false, true))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(-14.90), (injectionSwitch)[1]), bvec2(false, true))))).y)))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true)))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
