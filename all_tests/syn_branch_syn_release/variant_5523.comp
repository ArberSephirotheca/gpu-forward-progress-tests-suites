#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uint workgroup_base;
 mat3x2 _f0;
} ;

struct _GLF_struct_4 {
 bool _f0;
 mat4 _f1;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 bvec2 _f1;
 vec4 _f2;
 _GLF_struct_4 _f3;
 vec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint workgroup_id;
 bvec2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 vec4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > injectionSwitch.y), true)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > injectionSwitch.y), true)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6486.4096))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), true && (bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
              return;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(-8931.4201)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(-8931.4201)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))))), 1.0, length(vec2(0.0, 0.0))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((_GLF_IDENTITY(-5.9, float(mat2(-5.9, 1.0, 0.0, 0.0))) / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((- 201.617), 1.0 * ((- 201.617)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), _GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0]))), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 201.617)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((-5.9 / -4264.1304))), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-0.5)), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), 1.0, length(vec2(0.0, 0.0))))).y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))), false, true))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), false), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), false), true)))), false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), (injectionSwitch.x > injectionSwitch.y))))) || false)) && true))) || false)), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true)))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true)))), true))))))))))), (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)))))), false)))))), (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))))), false || (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))) || false)), false || (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))) || false))))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true)))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))), false, true)))), true))))))))))), (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)))))), false)))))), (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))))), false || (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))) || false)), false || (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))) || false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-344.528, -0.1, -7.5, 9.9, 7827.2790, -0.0, -52.17, 60.16, 93.72, -346.346, -6940.2455, -711.386, 540.705, 4733.4712, 2.7, -935.712)))))).y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(12.06, -696.805)) : injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), true, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), bvec2(true), vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)), (mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))) + mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0))))), _GLF_struct_4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), ! (! (! (true)))))), mat4(1.0)), vec4(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(true ? tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false))), 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)))))))) : _GLF_FUZZED(45.92), min(true ? tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false))), 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)))))))) : _GLF_FUZZED(45.92), _GLF_IDENTITY(true ? tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false))), 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)))))))) : _GLF_FUZZED(45.92), (true ? true ? tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false))), 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-89.23)), bool(false)))))))) : _GLF_FUZZED(45.92) : _GLF_FUZZED(4.3))))))))))), bool(true))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(45.92)))))), clamp(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(45.92)))))), _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(45.92)))))), _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(_GLF_IDENTITY(45.92, _GLF_IDENTITY(float(mat4x3(45.92, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0)), (float(mat4x3(45.92, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0))) * 1.0))))))))))), bool(true)))), float(_GLF_FUZZED(-198.816)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), gl_SubgroupSize);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)).x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(1, int(ivec2(1, 1))), gl_WorkGroupID.x, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, true)), false, true))))), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), clamp(clamp((1.0), (1.0), (1.0)), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) + 0.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), mix(float(_GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), min(clamp((1.0), (1.0), (1.0)), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0)))), float(_GLF_FUZZED(-2.6)), bool(false)))))) - 0.0)), _GLF_struct_1(uvec4(1u)), mat3x4(1.0)), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(asin(distance(vec2(24.97, _GLF_IDENTITY(-7444.2509, _GLF_IDENTITY(_GLF_IDENTITY(min(-7444.2509, -7444.2509), max(min(-7444.2509, -7444.2509), min(-7444.2509, -7444.2509))), mix(float(min(_GLF_IDENTITY(-7444.2509, clamp(-7444.2509, -7444.2509, _GLF_IDENTITY(-7444.2509, mix(float(-7444.2509), float(_GLF_FUZZED(4.4)), bool(false))))), -7444.2509)), float(_GLF_FUZZED(-9.4)), bool(false))))), injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-19.60) : 1.0))), (1.0))) / 1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), max(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), (float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0))))))) - 0.0)))), float(_GLF_FUZZED(-8.2)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))), mix(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-2.6, clamp(-2.6, -2.6, -2.6)))), min(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), float(_GLF_FUZZED(-2.6)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(asin(distance(vec2(24.97, _GLF_IDENTITY(-7444.2509, _GLF_IDENTITY(_GLF_IDENTITY(min(-7444.2509, -7444.2509), max(min(-7444.2509, -7444.2509), min(-7444.2509, -7444.2509))), mix(float(min(_GLF_IDENTITY(-7444.2509, clamp(-7444.2509, -7444.2509, _GLF_IDENTITY(-7444.2509, mix(float(-7444.2509), float(_GLF_FUZZED(4.4)), bool(false))))), -7444.2509)), float(_GLF_FUZZED(-9.4)), bool(false))))), injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-19.60) : 1.0))), (1.0))) / 1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), max(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), (float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0))))))) - 0.0)))), float(_GLF_FUZZED(-8.2)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))), mix(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-2.6, clamp(-2.6, -2.6, -2.6)))), min(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), float(_GLF_FUZZED(-2.6)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(asin(distance(vec2(24.97, _GLF_IDENTITY(-7444.2509, _GLF_IDENTITY(_GLF_IDENTITY(min(-7444.2509, -7444.2509), max(min(-7444.2509, -7444.2509), min(-7444.2509, -7444.2509))), mix(float(min(_GLF_IDENTITY(-7444.2509, clamp(-7444.2509, -7444.2509, _GLF_IDENTITY(-7444.2509, mix(float(-7444.2509), float(_GLF_FUZZED(4.4)), bool(false))))), -7444.2509)), float(_GLF_FUZZED(-9.4)), bool(false))))), injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-19.60) : 1.0))), (1.0))) / 1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), max(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), (float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0))))))) - 0.0)))), float(_GLF_FUZZED(-8.2)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))), mix(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-2.6, clamp(-2.6, -2.6, -2.6)))), min(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), float(_GLF_FUZZED(-2.6)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(asin(distance(vec2(24.97, _GLF_IDENTITY(-7444.2509, _GLF_IDENTITY(_GLF_IDENTITY(min(-7444.2509, -7444.2509), max(min(-7444.2509, -7444.2509), min(-7444.2509, -7444.2509))), mix(float(min(_GLF_IDENTITY(-7444.2509, clamp(-7444.2509, -7444.2509, _GLF_IDENTITY(-7444.2509, mix(float(-7444.2509), float(_GLF_FUZZED(4.4)), bool(false))))), -7444.2509)), float(_GLF_FUZZED(-9.4)), bool(false))))), injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-19.60) : 1.0))), (1.0))) / 1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), max(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), (float(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0 + (float((_GLF_IDENTITY(1.0, (1.0) / 1.0))))))) - 0.0)))), float(_GLF_FUZZED(-8.2)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))), mix(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-2.6, clamp(-2.6, -2.6, -2.6)))), min(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), float(_GLF_FUZZED(-2.6)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / 1.0)));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id))), ~ (~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id)), workgroup_size * _GLF_struct_replacement_3._f0._f0.workgroup_id))) / 1u))), mat3x2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     barrier();
    }
  }
 uint virtual_gid = _GLF_struct_replacement_7.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_6.subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), min(_GLF_IDENTITY(~ (subgroup_local_id), min(~ _GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))), ~ (subgroup_local_id))), ~ (subgroup_local_id))))))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED((_GLF_IDENTITY(56966u, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, 0u ^ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup))))) / 1u)) : 56966u)) + _GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))))) : subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6088.6079)), vec2(_GLF_FUZZED(vec4(45.11, -9520.6452, -47.40, -3.4).w), (injectionSwitch)[1]), bvec2(false, true))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1773.2422, -63.87)) : injectionSwitch)), 1.0), max(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).y)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(true, true && (true)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), (bool((! (injectionSwitch.x > injectionSwitch.y)))) || false))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), (bool((! (injectionSwitch.x > injectionSwitch.y)))) || false))))), true))), false, true))) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint next_virtual_gid = _GLF_struct_replacement_7.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, clamp(_GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 1 * (0)))), (_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), 0 | ((1))))))) | ((1))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-53859))))), ((~ _GLF_IDENTITY((1), ~ (~ ((1)))))) | ((~ (1)))) ^ 0)), 0 | ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 1 * (0)))), (_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), 0 | ((1))))))) | ((1))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-53859))))), ((~ _GLF_IDENTITY((1), ~ (~ ((1)))))) | ((~ (1)))) ^ 0)))))) | 0u)) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, 0u + (_GLF_struct_replacement_6.subgroup_size)), 0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1340.3952)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false)))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, true && ((false) || false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false)))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, true && ((false) || false)))))), false))))))), ! (! (_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), (_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), (bool(bvec2(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && true)) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u) < _GLF_struct_replacement_6.subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), false))))) || false)))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size, ! (! (subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false || (true), (false || (true)) && true))), (! (_GLF_IDENTITY(true, false || (true)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, abs(1.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 0.0, 0.0))).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, abs(1.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 0.0, 0.0))).x < injectionSwitch.y))))))), true, false))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(0u, 0u) | (uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(0u, 0u) | (uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u)))))))))) < _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, min(_GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) ^ 0u))), _GLF_struct_replacement_6.subgroup_size)), _GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(0u, 0u) | (uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(~ (min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec2(~ (min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), 1u)))))))))) < _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, min(_GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) ^ 0u))), _GLF_struct_replacement_6.subgroup_size)), _GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size))) && true), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, (true) || false), false))))), (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))) < _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false)))))))) && true)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), ! (! ((! (bool(true))))))))) ? injectionSwitch[1] : _GLF_FUZZED(6.7)), (false ? _GLF_FUZZED(mix(-0.3, 4028.2000, -74.83)) : (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) ? injectionSwitch[1] : _GLF_IDENTITY(_GLF_FUZZED(6.7), mix(float(_GLF_FUZZED(1.9)), float(_GLF_FUZZED(6.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(_GLF_IDENTITY(6.7, mix(float(6.7), float(_GLF_FUZZED(-0.0)), bool(false))))))), vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(66185))))))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((true ? injectionSwitch[1] : _GLF_FUZZED(6.7)), ((true ? injectionSwitch[1] : _GLF_FUZZED(_GLF_IDENTITY(6.7, min(6.7, _GLF_IDENTITY(6.7, (6.7) - 0.0)))))) / 1.0)))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3564.5169)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3564.5169)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3564.5169)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((! (false)), false, true, false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bool(_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(2.3))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(uvec2(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), max(_GLF_IDENTITY((2) | (2), 0 | ((2) | (2))), (2) | (2)))))) / 1)))), 0u))), (_GLF_IDENTITY(uint(2), uint(uvec2(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), _GLF_IDENTITY(0u, 0u ^ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), uint(uvec2(_GLF_IDENTITY(uint(2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(62957u) : _GLF_IDENTITY(uint(2), (uint(2)) * 1u))), 0u))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))))))))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), int(ivec2(_GLF_IDENTITY(4, (4) | 0), 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-704.783)), float(injectionSwitch.x), bool(true))), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(853.069), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), clamp((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118)))))), injectionSwitch.y), clamp(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), clamp((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118)))))), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), clamp((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118)))))), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), clamp((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118)))))), injectionSwitch.y), float(mat2x3(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), clamp((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) : _GLF_FUZZED(6941.5118)))))), injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
